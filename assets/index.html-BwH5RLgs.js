import{_ as i,c as e,e as t,o as n}from"./app-_6RECMRt.js";const o={};function r(a,l){return n(),e("div",null,l[0]||(l[0]=[t('<h1 id="四大优化算法" tabindex="-1"><a class="header-anchor" href="#四大优化算法"><span>四大优化算法</span></a></h1><h2 id="高概括总结" tabindex="-1"><a class="header-anchor" href="#高概括总结"><span>高概括总结</span></a></h2><p>说到优化算法，就不得不提四大优化算法</p><ul><li><p>遗传算法（Genetic Algorithm, GA）</p><ul><li>模拟：自然选择和遗传</li><li>核心：通过选择、交叉和变异操作在种群中产生新的解，以期在迭代过程中找到问题的最优解</li><li>应用：可调整神经网络，组合优化问题（多个独立参数找最优解组合问题）</li></ul></li><li><p>粒子群优化算法（Particle Swarm Optimization, PSO）</p><ul><li>模拟：鸟群觅食行为</li><li>核心：个体作为粒子在解空间中移动，通过个体历史最优位置和群体历史最优位置来调整自身速度和方向</li></ul></li><li><p>蚁群算法（Ant Colony Algorithm, ACA）</p><ul><li>模拟：蚂蚁觅食行为</li><li>核心：通过信息素的沉积和挥发来引导蚂蚁寻找食物，从而在迭代过程中发现最优路径</li><li>应用：旅行商问题 (TSP)</li></ul></li><li><p>模拟退火算法（Simulated Annealing, SA）</p><ul><li>模拟：物理退火过程</li><li>核心：通过模拟物质冷却过程中的随机搜索，以一定概率接受次优解，从而跳出局部最优，寻找全局最优解</li></ul></li></ul><p>相同点</p><ul><li>都是找相对最优解，核心都是最优的解群 + 随机</li><li>随机性：都有。细节可能不同，可能是变异等</li><li>最优策略： <ul><li>遗传：交叉结合</li><li>粒子群：更新个体和群体的最优位置，调整飞行路径</li><li>蚁群算法：路径信息素浓度，奖励机制</li><li>退火：（根据最低温、最高温、温度衰减控制）</li></ul></li></ul>',6)]))}const c=i(o,[["render",r],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Program_Algorithm/%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/%E5%9B%9B%E5%A4%A7%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/","title":"四大优化算法","lang":"zh-CN","frontmatter":{"description":"四大优化算法 高概括总结 说到优化算法，就不得不提四大优化算法 遗传算法（Genetic Algorithm, GA） 模拟：自然选择和遗传 核心：通过选择、交叉和变异操作在种群中产生新的解，以期在迭代过程中找到问题的最优解 应用：可调整神经网络，组合优化问题（多个独立参数找最优解组合问题） 粒子群优化算法（Particle Swarm Optimiz...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Program_Algorithm/%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/%E5%9B%9B%E5%A4%A7%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"四大优化算法"}],["meta",{"property":"og:description","content":"四大优化算法 高概括总结 说到优化算法，就不得不提四大优化算法 遗传算法（Genetic Algorithm, GA） 模拟：自然选择和遗传 核心：通过选择、交叉和变异操作在种群中产生新的解，以期在迭代过程中找到问题的最优解 应用：可调整神经网络，组合优化问题（多个独立参数找最优解组合问题） 粒子群优化算法（Particle Swarm Optimiz..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"四大优化算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"四大优化算法","slug":"四大优化算法","link":"#四大优化算法","children":[{"level":2,"title":"高概括总结","slug":"高概括总结","link":"#高概括总结","children":[]}]}],"git":{},"readingTime":{"minutes":1.32,"words":395},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/优化算法/四大优化算法专题/README.md","excerpt":"\\n<h2>高概括总结</h2>\\n<p>说到优化算法，就不得不提四大优化算法</p>\\n<ul>\\n<li>\\n<p>遗传算法（Genetic Algorithm, GA）</p>\\n<ul>\\n<li>模拟：自然选择和遗传</li>\\n<li>核心：通过选择、交叉和变异操作在种群中产生新的解，以期在迭代过程中找到问题的最优解</li>\\n<li>应用：可调整神经网络，组合优化问题（多个独立参数找最优解组合问题）</li>\\n</ul>\\n</li>\\n<li>\\n<p>粒子群优化算法（Particle Swarm Optimization, PSO）</p>\\n<ul>\\n<li>模拟：鸟群觅食行为</li>\\n<li>核心：个体作为粒子在解空间中移动，通过个体历史最优位置和群体历史最优位置来调整自身速度和方向</li>\\n</ul>\\n</li>\\n<li>\\n<p>蚁群算法（Ant Colony Algorithm, ACA）</p>\\n<ul>\\n<li>模拟：蚂蚁觅食行为</li>\\n<li>核心：通过信息素的沉积和挥发来引导蚂蚁寻找食物，从而在迭代过程中发现最优路径</li>\\n<li>应用：旅行商问题 (TSP)</li>\\n</ul>\\n</li>\\n<li>\\n<p>模拟退火算法（Simulated Annealing, SA）</p>\\n<ul>\\n<li>模拟：物理退火过程</li>\\n<li>核心：通过模拟物质冷却过程中的随机搜索，以一定概率接受次优解，从而跳出局部最优，寻找全局最优解</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/优化算法/四大优化算法专题/README.md","value":{"title":"优化算法/","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/优化算法/四大优化算法专题/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{c as comp,m as data};
