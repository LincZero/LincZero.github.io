import{_ as p,e as t,g as a,o as n}from"./app-DeGPQmv-.js";const o={};function i(r,e){return n(),t("div",null,e[0]||(e[0]=[a('<h1 id="qq通信协议" tabindex="-1"><a class="header-anchor" href="#qq通信协议"><span>QQ通信协议</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li><p>不管UDP还是TCP，最终登陆成功之后，QQ都会有一个TCP连接来保持在线状态。这个TCP连接的远程端口一般是80</p></li><li><p>采用UDP方式登陆的时候，端口是8000</p></li></ul><p>因此，假如你所在的网络开放了80端口（80端口是最常用端口，就是通常访问Web的端口，禁掉它的话，你的网络对你来说价值已经不大了）</p><p>但没有屏蔽腾讯的服务器IP，恭喜你，你是可以登陆成功QQ的。</p><h2 id="聊天消息通信" tabindex="-1"><a class="header-anchor" href="#聊天消息通信"><span>聊天消息通信</span></a></h2><p>采用UDP协议，通过服务器中转方式。因此，现在的IP侦探在你仅仅跟对方发送聊天消息的时候是无法获取到IP的。大家都知道，UDP 协议是不可靠协议，它只管发送，不管对方是否收到的，但它的传输很高效。但是，作为聊天软件，怎么可以采用这样的不可靠方式来传输消息呢？于是，腾讯采用了上层协议来保证可靠传输：如果客户端使用UDP协议发出消息后，服务器收到该包，需要使用UDP协议发回一个应答包。如此来保证消息可以无遗漏传输。之所以会发生在客户端明明看到“消息发送失败”但对方又收到了这个消息的情况，就是因为客户端发出的消息服务器已经收到并转发成功，但客户端由于网络原因没有收到服务器的应答包引起的。</p><h2 id="文件-自定义表情传送" tabindex="-1"><a class="header-anchor" href="#文件-自定义表情传送"><span>文件/自定义表情传送</span></a></h2><p>对应的表情。因此，QQ2008正式版的客户端发出的新版表情，在2007beta4及以前的版本无法找到相对应的表情，就无法解释，看到的就会是空白信息，但查聊天记录就会有[表情]字样。</p><p>自定义表情的传送是以文件传输方式进行的。</p><ul><li>下面说文件传输方式（中转方式下）</li></ul><ol><li><code>[A-&gt;服务器-&gt;B]</code>A要向B发送一个文件，于是发出一个文件传送请求</li><li><code>[B-&gt;服务器-&gt;B]</code>同时或者在B应答后，将A的IP地址同时发送给B。B这个时候就得到了A的真实IP</li><li>这里的IP是你的本机IP。也就是说，如果A处在内网，B得到的地址就是一个内网地址。B得到了A的地址之后，就会尝试去连接A。如果B也处于内网，那么，显然A跟B之间的连接是无法建立的。</li><li><code>[-&gt;服务器]</code>这个时候，客户端就会请求服务器进行文件中转。因为服务器具有公网 IP，处在内网的A跟B都是可以连接到服务器的。</li><li><code>[A-&gt;服务器-&gt;B]</code>于是，A跟B的文件传送就通过服务器中转的方式，顺利进行。（注：服务器文件中转使用443端口）</li></ol><h2 id="内网、公网的通信" tabindex="-1"><a class="header-anchor" href="#内网、公网的通信"><span>内网、公网的通信</span></a></h2><p>内网是什么</p><blockquote><p>内网、公网是两种Internet的接入方式。</p><p>内网接入方式：上网的计算机得到的IP地址是Inetnet上的保留地址，保留地址有如下3种形式：</p><p><code>10.x.x.x</code>、<code>172.16.x.x ~ 172.31.x.x</code>、<code>192.168.x.x</code></p><p>内网的计算机以NAT（网络地址转换）协议，通过一个公共的网关访问Internet</p></blockquote><p>内网通信</p><blockquote><p>内网的计算机可向Internet上的其他计算机发送连接请求，但Internet上其他的计算机无法向内网的计算机发送连接请求</p><p>公网接入方式：上网的计算机得到的IP地址是Inetnet上的非保留地址。公网的计算机和Internet上的其他计算机可随意互相访问</p><p>所以,如果一个局域网只开放80端口，QQ是可以登陆成功的，也可以进行聊天</p><p>但传送文件也是不可以的，除非你们都在同一个内网。如果局域网还同时开放443端口，那么，恭喜你，QQ的功能你都可以正常使用。</p></blockquote><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h3><h4 id="qq是不是tcp和udp一起用-如果用udp-如何做到信息的可靠发送" tabindex="-1"><a class="header-anchor" href="#qq是不是tcp和udp一起用-如果用udp-如何做到信息的可靠发送"><span>QQ是不是TCP和UDP一起用?如果用UDP,如何做到信息的可靠发送?</span></a></h4><p>答：QQ即可以使用TCP也可以使用UDP，但QQ默认是使用UDP协议，因为UDP协议消耗资源小，发送速度快</p><p>但当UDP协议不能正常转发的时候,就会采用TCP协议进行发送。而信息的可靠发送是通过各种验证机制来完成的，这一点你可以去GOOGLE之类的网站去搜索下.。</p><h4 id="qq用的是udp打洞技术还是http遂道" tabindex="-1"><a class="header-anchor" href="#qq用的是udp打洞技术还是http遂道"><span>QQ用的是UDP打洞技术还是HTTP遂道?</span></a></h4><p>答：发送消息的时候是UDP打洞，登陆的时候使用HTTP~</p><p>因为登陆服务器其实就是一个HTTP服务器，只不过不是常用的那些，那个服务器是TX自行开发的</p><h4 id="因为用户一般都是在局域网内-地址都为私有ip-im服务器是如何将信息转发到用户的" tabindex="-1"><a class="header-anchor" href="#因为用户一般都是在局域网内-地址都为私有ip-im服务器是如何将信息转发到用户的"><span>因为用户一般都是在局域网内,地址都为私有IP,IM服务器是如何将信息转发到用户的?</span></a></h4><p>答：如果使用TCP就没什么好说了~</p><p>由内网向外网连接，只要能够连接上进行握手了，消息就可以畅通无阻的进行发送了</p><p>如果使用UDP的话,就是使用的打洞技术了，只要通道打通了，发送消息基本和TCP没什么区别，要做的只是维护消息的完整性而已.。</p><h4 id="qq是一个基于tcp-udp协议的通讯软件-而msn是基于tcp协议的通讯软件。那么qq是如何通讯的呢" tabindex="-1"><a class="header-anchor" href="#qq是一个基于tcp-udp协议的通讯软件-而msn是基于tcp协议的通讯软件。那么qq是如何通讯的呢"><span>QQ是一个基于TCP/UDP协议的通讯软件，而MSN是基于TCP协议的通讯软件。那么QQ是如何通讯的呢？</span></a></h4><p>在TCP/IP协议中，唯一标识一个应用进程的是socket，它通过网络层的IP地址和传输层的端口号来实现，对与同一个IP地址的内部网络，通过不同的端口号来标识不同的QQ进程；当你登陆QQ游戏服务器的时候，服务器会保留你的保留IP地址和端口号信息，并在你的好友的QQ进程中进行列表显示，然后两个进程就可以通信了。</p><p>通常，发送文件的计算机首先要通过消息服务器将其IP地址发送给接收计算机，当接收计算机同意接收的确认消息反馈到消息服务器后，消息服务器将据此设置好文件传输对话。随即，发送计算机与接收计算机就会在确定好的端口范围内，建立起TCP或UDP连接开始文件的检索与传输。</p><p>在默认状态下，QQ优先采用了UDP（User Data Protocol，用户数据报协议）协议传送数据，而对可靠性要求高的数据通讯系统往往使用TCP协议传输数据。与TCP协议不同，UDP协议并不提供数据传送的验证机制——在整个文件传输过程中如果出现数据报的丢失，协议本身并不能作出任何的检测或提示。因此，通常人们把UDP协议称为不可靠的传输协议。</p><p>UDP协议适用于无须应答、要求时效的软件使用，这样的设计正好与QQ追求的目标相符，所以QQ优先使用了此协议进行一切功能应用。但是，由于　　UDP协议具有不可靠性，常会因种种原因导致消息或数据的发送失败（很多时候会发现发送文件给对方接收时，对方根本收不到要求接收文件的消息。或是发送聊天消息时，对方根本没有收到过消息）。显然，UDP协议由于排除了信息可靠传递机制，将安全和排序等功能移交给上层应用来完成，极大降低了执行时间，使速度得到了保证。QQ在数据传输上更注重实际性能，为了获得更好的使用效果，往往可以牺牲一定的可靠性。因此，使用QQ来传输数据，在很多时候就成了一个“不错”的选择。</p><p>一般内网传输首选QQ，速度最快，QQ的文件传输是直接个人对个人，采用P2P的传输方式，具有不需中转的优势，而且服务器都在国内，传输性能要高于外国IM软件。</p>',35)]))}const c=p(o,[["render",i],["__file","QQ通信协议.html.vue"]]),P=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E5%B8%B8%E7%94%A8%E5%8D%8F%E8%AE%AE/QQ%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE.html","title":"QQ通信协议","lang":"zh-CN","frontmatter":{"description":"QQ通信协议 概述 不管UDP还是TCP，最终登陆成功之后，QQ都会有一个TCP连接来保持在线状态。这个TCP连接的远程端口一般是80 采用UDP方式登陆的时候，端口是8000 因此，假如你所在的网络开放了80端口（80端口是最常用端口，就是通常访问Web的端口，禁掉它的话，你的网络对你来说价值已经不大了） 但没有屏蔽腾讯的服务器IP，恭喜你，你是可以...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E5%B8%B8%E7%94%A8%E5%8D%8F%E8%AE%AE/QQ%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"QQ通信协议"}],["meta",{"property":"og:description","content":"QQ通信协议 概述 不管UDP还是TCP，最终登陆成功之后，QQ都会有一个TCP连接来保持在线状态。这个TCP连接的远程端口一般是80 采用UDP方式登陆的时候，端口是8000 因此，假如你所在的网络开放了80端口（80端口是最常用端口，就是通常访问Web的端口，禁掉它的话，你的网络对你来说价值已经不大了） 但没有屏蔽腾讯的服务器IP，恭喜你，你是可以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"QQ通信协议\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":7.11,"words":2134},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/常用协议/QQ通信协议.md","excerpt":"\\n<h2>概述</h2>\\n<ul>\\n<li>\\n<p>不管UDP还是TCP，最终登陆成功之后，QQ都会有一个TCP连接来保持在线状态。这个TCP连接的远程端口一般是80</p>\\n</li>\\n<li>\\n<p>采用UDP方式登陆的时候，端口是8000</p>\\n</li>\\n</ul>\\n<p>因此，假如你所在的网络开放了80端口（80端口是最常用端口，就是通常访问Web的端口，禁掉它的话，你的网络对你来说价值已经不大了）</p>\\n<p>但没有屏蔽腾讯的服务器IP，恭喜你，你是可以登陆成功QQ的。</p>\\n<h2>聊天消息通信</h2>\\n<p>采用UDP协议，通过服务器中转方式。因此，现在的IP侦探在你仅仅跟对方发送聊天消息的时候是无法获取到IP的。大家都知道，UDP  协议是不可靠协议，它只管发送，不管对方是否收到的，但它的传输很高效。但是，作为聊天软件，怎么可以采用这样的不可靠方式来传输消息呢？于是，腾讯采用了上层协议来保证可靠传输：如果客户端使用UDP协议发出消息后，服务器收到该包，需要使用UDP协议发回一个应答包。如此来保证消息可以无遗漏传输。之所以会发生在客户端明明看到“消息发送失败”但对方又收到了这个消息的情况，就是因为客户端发出的消息服务器已经收到并转发成功，但客户端由于网络原因没有收到服务器的应答包引起的。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/常用协议/QQ通信协议.md","value":{"title":"QQ通信协议","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/常用协议/QQ通信协议.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{c as comp,P as data};
