import{_ as s,c as n,e,o as l}from"./app-DnpufS1x.js";const t={};function i(m,a){return l(),n("div",null,a[0]||(a[0]=[e('<h1 id="《数据结构与算法分析》c语言描述" tabindex="-1"><a class="header-anchor" href="#《数据结构与算法分析》c语言描述"><span>《数据结构与算法分析》C语言描述</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="排序" tabindex="-1"><a class="header-anchor" href="#排序"><span>排序</span></a></h1><h2 id="预备知识" tabindex="-1"><a class="header-anchor" href="#预备知识"><span>预备知识</span></a></h2><h2 id="插入排序" tabindex="-1"><a class="header-anchor" href="#插入排序"><span>插入排序（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>）</span></a></h2><h3 id="算法" tabindex="-1"><a class="header-anchor" href="#算法"><span>算法</span></a></h3><h3 id="插入排序的分析" tabindex="-1"><a class="header-anchor" href="#插入排序的分析"><span>插入排序的分析</span></a></h3><h2 id="一些简单排序算法的下界" tabindex="-1"><a class="header-anchor" href="#一些简单排序算法的下界"><span>一些简单排序算法的下界</span></a></h2><h2 id="希尔排序-亚二次-但可接受的" tabindex="-1"><a class="header-anchor" href="#希尔排序-亚二次-但可接受的"><span>希尔排序（亚二次，但可接受的）</span></a></h2><h2 id="堆排序-但实践中慢于希尔" tabindex="-1"><a class="header-anchor" href="#堆排序-但实践中慢于希尔"><span>堆排序（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N\\log N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，但实践中慢于希尔）</span></a></h2><h2 id="归并排序" tabindex="-1"><a class="header-anchor" href="#归并排序"><span>归并排序（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N\\log N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>）</span></a></h2><h2 id="快速排序-实践中最快" tabindex="-1"><a class="header-anchor" href="#快速排序-实践中最快"><span>快速排序（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N\\log N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，实践中最快）</span></a></h2><h3 id="选取枢纽元" tabindex="-1"><a class="header-anchor" href="#选取枢纽元"><span>选取枢纽元</span></a></h3><h3 id="分割策略" tabindex="-1"><a class="header-anchor" href="#分割策略"><span>分割策略</span></a></h3><h3 id="小数组" tabindex="-1"><a class="header-anchor" href="#小数组"><span>小数组</span></a></h3><h3 id="实际的快速排序例程" tabindex="-1"><a class="header-anchor" href="#实际的快速排序例程"><span>实际的快速排序例程</span></a></h3><h3 id="快速排序的分析" tabindex="-1"><a class="header-anchor" href="#快速排序的分析"><span>快速排序的分析</span></a></h3><h3 id="选择的线性期望时间算法" tabindex="-1"><a class="header-anchor" href="#选择的线性期望时间算法"><span>选择的线性期望时间算法</span></a></h3><h2 id="大型结构的排序" tabindex="-1"><a class="header-anchor" href="#大型结构的排序"><span>大型结构的排序</span></a></h2><h2 id="排序的一般下界-用到比较的算法" tabindex="-1"><a class="header-anchor" href="#排序的一般下界-用到比较的算法"><span>排序的一般下界 (用到比较的算法<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\Omega(N\\log N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>)</span></a></h2><h2 id="桶式排序-线性时间" tabindex="-1"><a class="header-anchor" href="#桶式排序-线性时间"><span>桶式排序（线性时间）</span></a></h2><h2 id="外部排序" tabindex="-1"><a class="header-anchor" href="#外部排序"><span>外部排序</span></a></h2><h3 id="为什么需要新的算法" tabindex="-1"><a class="header-anchor" href="#为什么需要新的算法"><span>为什么需要新的算法</span></a></h3><h3 id="外部排序模型" tabindex="-1"><a class="header-anchor" href="#外部排序模型"><span>外部排序模型</span></a></h3><h3 id="简单算法" tabindex="-1"><a class="header-anchor" href="#简单算法"><span>简单算法</span></a></h3><h3 id="多路合并" tabindex="-1"><a class="header-anchor" href="#多路合并"><span>多路合并</span></a></h3><h3 id="多相合并" tabindex="-1"><a class="header-anchor" href="#多相合并"><span>多相合并</span></a></h3><h3 id="替换选择" tabindex="-1"><a class="header-anchor" href="#替换选择"><span>替换选择</span></a></h3>',28)]))}const r=s(t,[["render",i],["__file","07. 排序.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Program_Algorithm/%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8BC%E8%AF%AD%E8%A8%80%E6%8F%8F%E8%BF%B0/07.%20%E6%8E%92%E5%BA%8F.html","title":"《数据结构与算法分析》C语言描述","lang":"zh-CN","frontmatter":{"description":"《数据结构与算法分析》C语言描述 目录 排序 预备知识 插入排序（O(N2)） 算法 插入排序的分析 一些简单排序算法的下界 希尔排序（亚二次，但可接受的） 堆排序（O(NlogN)，但实践中慢于希尔） 归并排序（O(NlogN)） 快速排序（O(NlogN)，实践中最快） 选取枢纽元 分割策略 小数组 实际的快速排序例程 快速排序的分析 选择的线性期...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Program_Algorithm/%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8BC%E8%AF%AD%E8%A8%80%E6%8F%8F%E8%BF%B0/07.%20%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"《数据结构与算法分析》C语言描述"}],["meta",{"property":"og:description","content":"《数据结构与算法分析》C语言描述 目录 排序 预备知识 插入排序（O(N2)） 算法 插入排序的分析 一些简单排序算法的下界 希尔排序（亚二次，但可接受的） 堆排序（O(NlogN)，但实践中慢于希尔） 归并排序（O(NlogN)） 快速排序（O(NlogN)，实践中最快） 选取枢纽元 分割策略 小数组 实际的快速排序例程 快速排序的分析 选择的线性期..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《数据结构与算法分析》C语言描述\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"《数据结构与算法分析》C语言描述","slug":"《数据结构与算法分析》c语言描述","link":"#《数据结构与算法分析》c语言描述","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"排序","slug":"排序","link":"#排序","children":[{"level":2,"title":"预备知识","slug":"预备知识","link":"#预备知识","children":[]},{"level":2,"title":"插入排序（）","slug":"插入排序","link":"#插入排序","children":[{"level":3,"title":"算法","slug":"算法","link":"#算法","children":[]},{"level":3,"title":"插入排序的分析","slug":"插入排序的分析","link":"#插入排序的分析","children":[]}]},{"level":2,"title":"一些简单排序算法的下界","slug":"一些简单排序算法的下界","link":"#一些简单排序算法的下界","children":[]},{"level":2,"title":"希尔排序（亚二次，但可接受的）","slug":"希尔排序-亚二次-但可接受的","link":"#希尔排序-亚二次-但可接受的","children":[]},{"level":2,"title":"堆排序（，但实践中慢于希尔）","slug":"堆排序-但实践中慢于希尔","link":"#堆排序-但实践中慢于希尔","children":[]},{"level":2,"title":"归并排序（）","slug":"归并排序","link":"#归并排序","children":[]},{"level":2,"title":"快速排序（，实践中最快）","slug":"快速排序-实践中最快","link":"#快速排序-实践中最快","children":[{"level":3,"title":"选取枢纽元","slug":"选取枢纽元","link":"#选取枢纽元","children":[]},{"level":3,"title":"分割策略","slug":"分割策略","link":"#分割策略","children":[]},{"level":3,"title":"小数组","slug":"小数组","link":"#小数组","children":[]},{"level":3,"title":"实际的快速排序例程","slug":"实际的快速排序例程","link":"#实际的快速排序例程","children":[]},{"level":3,"title":"快速排序的分析","slug":"快速排序的分析","link":"#快速排序的分析","children":[]},{"level":3,"title":"选择的线性期望时间算法","slug":"选择的线性期望时间算法","link":"#选择的线性期望时间算法","children":[]}]},{"level":2,"title":"大型结构的排序","slug":"大型结构的排序","link":"#大型结构的排序","children":[]},{"level":2,"title":"排序的一般下界 (用到比较的算法)","slug":"排序的一般下界-用到比较的算法","link":"#排序的一般下界-用到比较的算法","children":[]},{"level":2,"title":"桶式排序（线性时间）","slug":"桶式排序-线性时间","link":"#桶式排序-线性时间","children":[]},{"level":2,"title":"外部排序","slug":"外部排序","link":"#外部排序","children":[{"level":3,"title":"为什么需要新的算法","slug":"为什么需要新的算法","link":"#为什么需要新的算法","children":[]},{"level":3,"title":"外部排序模型","slug":"外部排序模型","link":"#外部排序模型","children":[]},{"level":3,"title":"简单算法","slug":"简单算法","link":"#简单算法","children":[]},{"level":3,"title":"多路合并","slug":"多路合并","link":"#多路合并","children":[]},{"level":3,"title":"多相合并","slug":"多相合并","link":"#多相合并","children":[]},{"level":3,"title":"替换选择","slug":"替换选择","link":"#替换选择","children":[]}]}]}],"git":{},"readingTime":{"minutes":0.68,"words":204},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/《数据结构与算法分析》C语言描述/07. 排序.md","excerpt":"\\n<h1>目录</h1>\\n<h1>排序</h1>\\n<h2>预备知识</h2>\\n<h2>插入排序（<span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>O</mi><mo stretchy=\\"false\\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(N^2)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1.0641em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord\\"><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10903em;\\">N</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8141em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\">2</span></span></span></span></span></span></span></span><span class=\\"mclose\\">)</span></span></span></span>）</h2>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/《数据结构与算法分析》C语言描述/07. 排序.md","value":{"title":"07. 排序","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/《数据结构与算法分析》C语言描述/07. 排序.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,p as data};
