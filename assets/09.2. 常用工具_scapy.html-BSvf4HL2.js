import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-DcHgvwx3.js";const p={},e=t(`<h1 id="常用工具-scapy" tabindex="-1"><a class="header-anchor" href="#常用工具-scapy"><span>常用工具_scapy</span></a></h1><p><code>scapy</code>是一个强大的<code>python</code>网络数据包处理库，它可以生成或解码网络协议数据包，可以用来端口扫描、探测、网络测试等。</p><h2 id="scapy安装" tabindex="-1"><a class="header-anchor" href="#scapy安装"><span>scapy安装</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ pip <span class="token function">install</span> scapy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="简单使用" tabindex="-1"><a class="header-anchor" href="#简单使用"><span>简单使用</span></a></h2><p><code>scapy</code>提供了一个简单的交互式界面，直接运行<code>scapy</code>命令即可进入。当然，也可以在<code>python</code>交互式命令行中导入<code>scapy</code>包进入</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> scapy<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看所有支持的协议和预制工具" tabindex="-1"><a class="header-anchor" href="#查看所有支持的协议和预制工具"><span>查看所有支持的协议和预制工具：</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ls<span class="token punctuation">(</span><span class="token punctuation">)</span>
lsc<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构造ip数据包" tabindex="-1"><a class="header-anchor" href="#构造ip数据包"><span>构造IP数据包</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>pkt<span class="token operator">=</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">)</span>
pkt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> pkt<span class="token punctuation">.</span>dst  <span class="token comment"># 8.8.8.8</span>
<span class="token builtin">str</span><span class="token punctuation">(</span>pkt<span class="token punctuation">)</span>       <span class="token comment"># hex string</span>
hexdump<span class="token punctuation">(</span>pkt<span class="token punctuation">)</span>   <span class="token comment"># hex dump</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="输出hex格式的数据包" tabindex="-1"><a class="header-anchor" href="#输出hex格式的数据包"><span>输出HEX格式的数据包</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> binascii
<span class="token keyword">from</span> scapy<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span>
a<span class="token operator">=</span>Ether<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;02:ac:10:ff:00:22&quot;</span><span class="token punctuation">,</span>src<span class="token operator">=</span><span class="token string">&quot;02:ac:10:ff:00:11&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;172.16.255.22&quot;</span><span class="token punctuation">,</span>src<span class="token operator">=</span><span class="token string">&quot;172.16.255.11&quot;</span><span class="token punctuation">,</span> ttl<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">/</span>ICMP<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> binascii<span class="token punctuation">.</span>hexlify<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tcp-ip协议的四层模型都可以分别构造-并通过-连接" tabindex="-1"><a class="header-anchor" href="#tcp-ip协议的四层模型都可以分别构造-并通过-连接"><span>TCP/IP协议的四层模型都可以分别构造，并通过<code>/</code>连接</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>Ether<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>IP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>TCP<span class="token punctuation">(</span><span class="token punctuation">)</span>
IP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>TCP<span class="token punctuation">(</span><span class="token punctuation">)</span>
IP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>TCP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token string">&quot;GET / HTTP/1.0\\r\\n\\r\\n&quot;</span>
Ether<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>IP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>IP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>UDP<span class="token punctuation">(</span><span class="token punctuation">)</span>
Ether<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;www.slashdot.org&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>TCP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token string">&quot;GET /index.html HTTP/1.0 \\n\\n&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从pcap文件读入数据" tabindex="-1"><a class="header-anchor" href="#从pcap文件读入数据"><span>从PCAP文件读入数据</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> rdpcap<span class="token punctuation">(</span><span class="token string">&quot;test.cap&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="发送数据包" tabindex="-1"><a class="header-anchor" href="#发送数据包"><span>发送数据包</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 三层发送，不接收</span>
send<span class="token punctuation">(</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>ICMP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
<span class="token comment"># 二层发送，不接收</span>
sendp<span class="token punctuation">(</span>Ether<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">,</span>ttl<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">/</span>ICMP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 三层发送并接收</span>
<span class="token comment"># 二层可以用srp, srp1和srploop</span>
result<span class="token punctuation">,</span> unanswered <span class="token operator">=</span> sr<span class="token punctuation">(</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>ICMP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 发送并只接收第一个包</span>
sr1<span class="token punctuation">(</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>ICMP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 发送多个数据包</span>
result<span class="token operator">=</span>srloop<span class="token punctuation">(</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>ICMP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> inter<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="嗅探数据包" tabindex="-1"><a class="header-anchor" href="#嗅探数据包"><span>嗅探数据包</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>sniff<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token operator">=</span><span class="token string">&quot;icmp&quot;</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> prn<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
a<span class="token operator">=</span>sniff<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token operator">=</span><span class="token string">&quot;tcp and ( port 25 or port 110 )&quot;</span><span class="token punctuation">,</span>
 prn<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>sprintf<span class="token punctuation">(</span><span class="token string">&quot;%IP.src%:%TCP.sport% -&gt; %IP.dst%:%TCP.dport%  %2s,TCP.flags% : %TCP.payload%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="syn扫描" tabindex="-1"><a class="header-anchor" href="#syn扫描"><span>SYN扫描</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>sr1<span class="token punctuation">(</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;172.217.24.14&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>TCP<span class="token punctuation">(</span>dport<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>flags<span class="token operator">=</span><span class="token string">&quot;S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ans<span class="token punctuation">,</span>unans <span class="token operator">=</span> sr<span class="token punctuation">(</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;192.168.1.1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;yahoo.com&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;slashdot.org&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span>TCP<span class="token punctuation">(</span>dport<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">443</span><span class="token punctuation">]</span><span class="token punctuation">,</span>flags<span class="token operator">=</span><span class="token string">&quot;S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tcp-traceroute" tabindex="-1"><a class="header-anchor" href="#tcp-traceroute"><span>TCP traceroute</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ans<span class="token punctuation">,</span>unans<span class="token operator">=</span>sr<span class="token punctuation">(</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;www.baidu.com&quot;</span><span class="token punctuation">,</span>ttl<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">id</span><span class="token operator">=</span>RandShort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>TCP<span class="token punctuation">(</span>flags<span class="token operator">=</span><span class="token number">0x2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> snd<span class="token punctuation">,</span>rcv <span class="token keyword">in</span> ans<span class="token punctuation">:</span>
    <span class="token keyword">print</span> snd<span class="token punctuation">.</span>ttl<span class="token punctuation">,</span>rcv<span class="token punctuation">.</span>src<span class="token punctuation">,</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>rcv<span class="token punctuation">.</span>payload<span class="token punctuation">,</span>TCP<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="arp-ping" tabindex="-1"><a class="header-anchor" href="#arp-ping"><span>ARP Ping</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ans<span class="token punctuation">,</span>unans<span class="token operator">=</span>srp<span class="token punctuation">(</span>Ether<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;ff:ff:ff:ff:ff:ff&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>ARP<span class="token punctuation">(</span>pdst<span class="token operator">=</span><span class="token string">&quot;192.168.1.0/24&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
ans<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token keyword">lambda</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span> r<span class="token punctuation">.</span>sprintf<span class="token punctuation">(</span><span class="token string">&quot;%Ether.src% %ARP.psrc%&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="icmp-ping" tabindex="-1"><a class="header-anchor" href="#icmp-ping"><span>ICMP Ping</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ans<span class="token punctuation">,</span>unans<span class="token operator">=</span>sr<span class="token punctuation">(</span>IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;192.168.1.1-254&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>ICMP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ans<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token keyword">lambda</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span> r<span class="token punctuation">.</span>sprintf<span class="token punctuation">(</span><span class="token string">&quot;%IP.src% is alive&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tcp-ping" tabindex="-1"><a class="header-anchor" href="#tcp-ping"><span>TCP Ping</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ans<span class="token punctuation">,</span>unans<span class="token operator">=</span>sr<span class="token punctuation">(</span> IP<span class="token punctuation">(</span>dst<span class="token operator">=</span><span class="token string">&quot;192.168.1.*&quot;</span><span class="token punctuation">)</span><span class="token operator">/</span>TCP<span class="token punctuation">(</span>dport<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>flags<span class="token operator">=</span><span class="token string">&quot;S&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
ans<span class="token punctuation">.</span>summary<span class="token punctuation">(</span> <span class="token keyword">lambda</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>r<span class="token punctuation">)</span> <span class="token punctuation">:</span> r<span class="token punctuation">.</span>sprintf<span class="token punctuation">(</span><span class="token string">&quot;%IP.src% is alive&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,31),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","09.2. 常用工具_scapy.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/03.%20Linux%E7%BD%91%E7%BB%9C/09.2.%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7_scapy.html","title":"常用工具_scapy","lang":"zh-CN","frontmatter":{"description":"常用工具_scapy scapy是一个强大的python网络数据包处理库，它可以生成或解码网络协议数据包，可以用来端口扫描、探测、网络测试等。 scapy安装 简单使用 scapy提供了一个简单的交互式界面，直接运行scapy命令即可进入。当然，也可以在python交互式命令行中导入scapy包进入 查看所有支持的协议和预制工具： 构造IP数据包 输出...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/03.%20Linux%E7%BD%91%E7%BB%9C/09.2.%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7_scapy.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"常用工具_scapy"}],["meta",{"property":"og:description","content":"常用工具_scapy scapy是一个强大的python网络数据包处理库，它可以生成或解码网络协议数据包，可以用来端口扫描、探测、网络测试等。 scapy安装 简单使用 scapy提供了一个简单的交互式界面，直接运行scapy命令即可进入。当然，也可以在python交互式命令行中导入scapy包进入 查看所有支持的协议和预制工具： 构造IP数据包 输出..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用工具_scapy\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"常用工具_scapy","slug":"常用工具-scapy","link":"#常用工具-scapy","children":[{"level":2,"title":"scapy安装","slug":"scapy安装","link":"#scapy安装","children":[]},{"level":2,"title":"简单使用","slug":"简单使用","link":"#简单使用","children":[{"level":3,"title":"查看所有支持的协议和预制工具：","slug":"查看所有支持的协议和预制工具","link":"#查看所有支持的协议和预制工具","children":[]},{"level":3,"title":"构造IP数据包","slug":"构造ip数据包","link":"#构造ip数据包","children":[]},{"level":3,"title":"输出HEX格式的数据包","slug":"输出hex格式的数据包","link":"#输出hex格式的数据包","children":[]},{"level":3,"title":"TCP/IP协议的四层模型都可以分别构造，并通过/连接","slug":"tcp-ip协议的四层模型都可以分别构造-并通过-连接","link":"#tcp-ip协议的四层模型都可以分别构造-并通过-连接","children":[]},{"level":3,"title":"从PCAP文件读入数据","slug":"从pcap文件读入数据","link":"#从pcap文件读入数据","children":[]},{"level":3,"title":"发送数据包","slug":"发送数据包","link":"#发送数据包","children":[]},{"level":3,"title":"嗅探数据包","slug":"嗅探数据包","link":"#嗅探数据包","children":[]},{"level":3,"title":"SYN扫描","slug":"syn扫描","link":"#syn扫描","children":[]},{"level":3,"title":"TCP traceroute","slug":"tcp-traceroute","link":"#tcp-traceroute","children":[]},{"level":3,"title":"ARP Ping","slug":"arp-ping","link":"#arp-ping","children":[]},{"level":3,"title":"ICMP Ping","slug":"icmp-ping","link":"#icmp-ping","children":[]},{"level":3,"title":"TCP Ping","slug":"tcp-ping","link":"#tcp-ping","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.7,"words":509},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/03. Linux网络/09.2. 常用工具_scapy.md","excerpt":"\\n<p><code>scapy</code>是一个强大的<code>python</code>网络数据包处理库，它可以生成或解码网络协议数据包，可以用来端口扫描、探测、网络测试等。</p>\\n<h2>scapy安装</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>$ pip <span class=\\"token function\\">install</span> scapy\\n</code></pre></div><h2>简单使用</h2>\\n<p><code>scapy</code>提供了一个简单的交互式界面，直接运行<code>scapy</code>命令即可进入。当然，也可以在<code>python</code>交互式命令行中导入<code>scapy</code>包进入</p>","autoDesc":true}');export{d as comp,k as data};
