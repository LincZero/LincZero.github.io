import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c as o,a as n,b as c,d as l,e as s}from"./app-BtO-7qLE.js";const i={},u=s(`<h1 id="网卡与网口" tabindex="-1"><a class="header-anchor" href="#网卡与网口"><span>网卡与网口</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h2 id="对应关系" tabindex="-1"><a class="header-anchor" href="#对应关系"><span>对应关系</span></a></h2><ul><li>一台机器上可能不只有一个网卡（如平常的笔记本电脑中，就会有无线网卡和有线网卡（网线接口）两种）</li><li>每一个网卡只有一个MAC地址</li><li>每一个网卡可能配置有多个IP地址</li></ul><h2 id="基本信息的查看-windows" tabindex="-1"><a class="header-anchor" href="#基本信息的查看-windows"><span>基本信息的查看 - Windows</span></a></h2><h3 id="常用命令行" tabindex="-1"><a class="header-anchor" href="#常用命令行"><span>常用命令行</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ipconfig
ipconfig /all

net

<span class="token comment"># Windows 端口占用和杀进程</span>
<span class="token function">netstat</span> -ano<span class="token operator">|</span>findstr <span class="token number">8090</span>
taskkill /pid <span class="token number">13420</span> <span class="token parameter variable">-t</span> <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="程序" tabindex="-1"><a class="header-anchor" href="#程序"><span>程序</span></a></h3><p>（注意cygwin和wsl输出内容不同）</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">unit_test_STNetDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取所有的网卡设备和 IP 地址</span>
    <span class="token keyword">struct</span> <span class="token class-name">ifaddrs</span> <span class="token operator">*</span>ifaddr<span class="token punctuation">,</span> <span class="token operator">*</span>ifa<span class="token punctuation">;</span>
    <span class="token keyword">int</span> family<span class="token punctuation">,</span> s<span class="token punctuation">;</span>
    <span class="token keyword">char</span> host<span class="token punctuation">[</span>NI_MAXHOST<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getifaddrs</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ifaddr<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;getifaddrs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// exit(EXIT_FAILURE);</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 遍历网卡设备，并选择合适的网口</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;检查网卡设备：\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>ifa <span class="token operator">=</span> ifaddr<span class="token punctuation">;</span> ifa <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span> ifa <span class="token operator">=</span> ifa<span class="token operator">-&gt;</span>ifa_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ifa<span class="token operator">-&gt;</span>ifa_addr <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        family <span class="token operator">=</span> ifa<span class="token operator">-&gt;</span>ifa_addr<span class="token operator">-&gt;</span>sa_family<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>family <span class="token operator">==</span> AF_INET <span class="token operator">||</span> family <span class="token operator">==</span> AF_INET6<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s <span class="token operator">=</span> <span class="token function">getnameinfo</span><span class="token punctuation">(</span>ifa<span class="token operator">-&gt;</span>ifa_addr<span class="token punctuation">,</span> <span class="token punctuation">(</span>family <span class="token operator">==</span> AF_INET<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            host<span class="token punctuation">,</span> NI_MAXHOST<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NI_NUMERICHOST<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    getnameinfo() 失败: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// exit(EXIT_FAILURE);</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    接口名: &lt;%s&gt;, 地址: &lt;%s&gt;\\n&quot;</span><span class="token punctuation">,</span> ifa<span class="token operator">-&gt;</span>ifa_name<span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">freeifaddrs</span><span class="token punctuation">(</span>ifaddr<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 在选择的网口上创建 socket</span>
    <span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> server_address<span class="token punctuation">;</span>

    sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sockfd <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;socket创建失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>server_address<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>server_address<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    server_address<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>
    server_address<span class="token punctuation">.</span>sin_port <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 使用已选择的IP地址替换 &quot;selected_ip_address&quot;</span>
    <span class="token comment">// const char* selected_ip_address = &quot;127.0.0.1&quot;;</span>
    <span class="token comment">// inet_pton(AF_INET, selected_ip_address, &amp;(server_address.sin_addr));</span>
    <span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出大概是这样的：（可能和cygwin环境有关，这里的接口名几乎不能用……wsl那边倒是正常）</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>检查网卡设备：
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>EC26D318-93D2<span class="token number">-4224</span>-A35D-00494EC2838D<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>904e<span class="token operator">:</span>adc6<span class="token operator">:</span>4c5f<span class="token operator">:</span><span class="token number">4039</span>%<span class="token number">27</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>EC26D318-93D2<span class="token number">-4224</span>-A35D-00494EC2838D<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">10.198</span>.<span class="token number">75.60</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>EC26D318-93D2<span class="token number">-4224</span>-A35D-00494EC2838D<span class="token punctuation">}</span><span class="token operator">:</span><span class="token number">1</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">169.254</span>.<span class="token number">64.57</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>772DD5EB-BE75<span class="token number">-4667</span>-87A9-F9D32AF2FEA1<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span><span class="token number">2974</span><span class="token operator">:</span><span class="token number">13e1</span><span class="token operator">:</span>dcd2<span class="token operator">:</span><span class="token number">887</span>%<span class="token number">16</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>772DD5EB-BE75<span class="token number">-4667</span>-87A9-F9D32AF2FEA1<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">169.254</span>.<span class="token number">8.135</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>1392C1BB-9CE8-4E4C-8A3B-48E7483DD0FB<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span><span class="token number">28e8</span><span class="token operator">:</span>86ab<span class="token operator">:</span><span class="token number">5640</span><span class="token operator">:</span>de44%<span class="token number">7</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>1392C1BB-9CE8-4E4C-8A3B-48E7483DD0FB<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">192.168</span>.<span class="token number">56.1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>19AA720B-BC3C-4FE0<span class="token number">-8759</span>-B953837FB785<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>98a0<span class="token operator">:</span><span class="token number">8648</span><span class="token operator">:</span>ee8a<span class="token operator">:</span>89bb%<span class="token number">8</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>19AA720B-BC3C-4FE0<span class="token number">-8759</span>-B953837FB785<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">169.254</span>.<span class="token number">137.187</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>5BB4863B-284D-4CC3-B73F-037089DA605C<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>1d7d<span class="token operator">:</span>cb85<span class="token operator">:</span>25d5<span class="token operator">:</span><span class="token number">4918</span>%<span class="token number">11</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>5BB4863B-284D-4CC3-B73F-037089DA605C<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">169.254</span>.<span class="token number">73.24</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>5BB4863B-284D-4CC3-B73F-037089DA605C<span class="token punctuation">}</span><span class="token operator">:</span><span class="token number">1</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">192.168</span>.<span class="token number">137.1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>766B55FC<span class="token number">-4808</span>-4EE4-B39F-C45C6DBC9204<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>dc96<span class="token operator">:</span>3a5f<span class="token operator">:</span>4cca<span class="token operator">:</span><span class="token number">1588</span>%<span class="token number">15</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>766B55FC<span class="token number">-4808</span>-4EE4-B39F-C45C6DBC9204<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">192.168</span>.<span class="token number">134.1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>5EDF573D-10B0-414D-85D2-377B7EC2451C<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>c1f0<span class="token operator">:</span>c30<span class="token operator">:</span><span class="token number">8295</span><span class="token operator">:</span>40b9%<span class="token number">12</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>5EDF573D-10B0-414D-85D2-377B7EC2451C<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">192.168</span>.<span class="token number">195.1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>FA194603<span class="token number">-4468</span>-4DD8-BA9E-F4DC05AA1492<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span><span class="token number">4132</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">4897</span><span class="token operator">:</span>b516%<span class="token number">28</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>FA194603<span class="token number">-4468</span>-4DD8-BA9E-F4DC05AA1492<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">192.168</span>.<span class="token number">192.1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>4068A6F2-91F2-488C-8B89-7796E708D2F1<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>843f<span class="token operator">:</span>b418<span class="token operator">:</span>1a60<span class="token operator">:</span>4bc2%<span class="token number">10</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>4068A6F2-91F2-488C-8B89-7796E708D2F1<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">169.254</span>.<span class="token number">75.194</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>E1E314CB<span class="token number">-8278</span>-11EA-B32B-806E6F6E6963<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token operator">:</span><span class="token operator">:</span><span class="token number">1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>E1E314CB<span class="token number">-8278</span>-11EA-B32B-806E6F6E6963<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">127.0</span>.<span class="token number">0.1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>B51F4294-253B<span class="token number">-4774</span>-83B5-30F997E6A596<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span><span class="token number">7842</span><span class="token operator">:</span>fb73<span class="token operator">:</span>2a1f<span class="token operator">:</span>aeb8%<span class="token number">24</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>B51F4294-253B<span class="token number">-4774</span>-83B5-30F997E6A596<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">192.168</span>.<span class="token number">220.1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>C52ECB1F-B415-4A45-B5FF-FACD70E0F629<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>1cd<span class="token operator">:</span>7a4f<span class="token operator">:</span>1cb3<span class="token operator">:</span>f9ef%<span class="token number">25</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>C52ECB1F-B415-4A45-B5FF-FACD70E0F629<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">192.168</span>.<span class="token number">0.101</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>B0BF9A64<span class="token number">-3E48</span>-49CD-8F2A-3BB5A3B39BC3<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>cd14<span class="token operator">:</span><span class="token number">2016</span><span class="token operator">:</span>471d<span class="token operator">:</span>bcb7%<span class="token number">41</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>B0BF9A64<span class="token number">-3E48</span>-49CD-8F2A-3BB5A3B39BC3<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">172.30</span>.<span class="token number">48.1</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>11F036CA<span class="token number">-5152</span><span class="token number">-42E4</span>-A706-9C7A7DE01333<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;fe80<span class="token operator">:</span><span class="token operator">:</span>dd88<span class="token operator">:</span>a34<span class="token operator">:</span>e39f<span class="token operator">:</span><span class="token number">7428</span>%<span class="token number">90</span>&gt;
    接口名<span class="token operator">:</span> &lt;<span class="token punctuation">{</span>11F036CA<span class="token number">-5152</span><span class="token number">-42E4</span>-A706-9C7A7DE01333<span class="token punctuation">}</span>&gt;<span class="token punctuation">,</span> 地址<span class="token operator">:</span> &lt;<span class="token number">172.27</span>.<span class="token number">80.1</span>&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本信息的查看-linux-ubuntu" tabindex="-1"><a class="header-anchor" href="#基本信息的查看-linux-ubuntu"><span>基本信息的查看 - Linux (ubuntu)</span></a></h2><h3 id="常用命令行-1" tabindex="-1"><a class="header-anchor" href="#常用命令行-1"><span>常用命令行</span></a></h3><h4 id="新机可能需要的设置" tabindex="-1"><a class="header-anchor" href="#新机可能需要的设置"><span>新机可能需要的设置</span></a></h4><h5 id="开机优化" tabindex="-1"><a class="header-anchor" href="#开机优化"><span>开机优化</span></a></h5>`,16),r={href:"https://www.cnblogs.com/yangzp/p/16173268.html",target:"_blank",rel:"noopener noreferrer"},k=s(`<h5 id="root账户" tabindex="-1"><a class="header-anchor" href="#root账户"><span>root账户</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">passwd</span> root <span class="token comment"># ubuntu默认没有root账户</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="给普通账户相应的权限" tabindex="-1"><a class="header-anchor" href="#给普通账户相应的权限"><span>给普通账户相应的权限</span></a></h5><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token function">chown</span> <span class="token parameter variable">-R</span> linczero:linczero /home/linczero <span class="token comment"># 更改文件夹及其内容的所有权</span>
 <span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwx /path/to/folder <span class="token comment"># (可选) 或者给用户user1设置读写执行权限 (rwx)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="静态路由的设置" tabindex="-1"><a class="header-anchor" href="#静态路由的设置"><span>静态路由的设置</span></a></h5><p>https://blog.csdn.net/yilovexing/article/details/126424086</p><h5 id="ssh的检查" tabindex="-1"><a class="header-anchor" href="#ssh的检查"><span>ssh的检查</span></a></h5><p>（如果能ping同但ssh报错：ssh: connect to host 192.168.1.208 port 22: Connection refused）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>telnet <span class="token operator">&lt;</span>ip-address<span class="token operator">&gt;</span> <span class="token number">22</span> <span class="token comment"># 如果您收到 &quot;connection refused&quot; 或 &quot;connection timeout&quot; 等错误消息，那么 SSH 服务可能未启用或防火墙阻止了连接。您还可以尝试运行以下命令：</span>
<span class="token function">ssh</span> <span class="token parameter variable">-v</span> <span class="token operator">&lt;</span>ip-address<span class="token operator">&gt;</span> <span class="token comment"># 该命令将以详细模式运行 SSH 客户端，并显示客户端与服务器之间的通信。这将使您能够检查建立 SSH 连接期间是否发生任何错误。</span>

systemctl status sshd <span class="token comment"># 本机上的检查</span>

<span class="token function">service</span> <span class="token function">ssh</span> start <span class="token comment"># wsl开启ssh服务（我电脑的wsl每次重启都需要重新运行这个）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还有一种情况是使用root账户ssh时提示连接被拒绝</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 升级到root账户并打开配置文件：</span>
<span class="token function">sudo</span> <span class="token function">nano</span> /etc/ssh/sshd_config

<span class="token comment"># 找到&quot;PermitRootLogin prohibit-password&quot;或&quot;PermitRootLogin no&quot; 这一行，将其改成 &quot;PermitRootLogin yes&quot;</span>
<span class="token comment"># 保存并退出文件</span>

<span class="token comment"># 重启SSH服务使其生效</span>
<span class="token function">service</span> <span class="token function">ssh</span> restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="自动关机与自启" tabindex="-1"><a class="header-anchor" href="#自动关机与自启"><span>自动关机与自启</span></a></h5><p>脚本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 设置关机时间，例如7:30pm</span>
<span class="token assign-left variable">shutdown_time</span><span class="token operator">=</span><span class="token string">&quot;19:30&quot;</span>

<span class="token comment"># 获取当前时间并转换为时间戳</span>
<span class="token assign-left variable">current_time</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>
<span class="token assign-left variable">shutdown_stamp</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;<span class="token variable">$shutdown_time</span>&quot;</span> +%s<span class="token variable">)</span></span>

<span class="token comment"># 计算关机时间与当前时间的时间差，并判断是否为负数</span>
<span class="token assign-left variable">time_diff</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> $shutdown_stamp <span class="token operator">-</span> $current_time <span class="token variable">))</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$time_diff</span> <span class="token parameter variable">-lt</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;关机时间不能早于当前时间！&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token comment"># 设置定时关机命令并显示信息</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;将在 <span class="token variable">$shutdown_time</span> 关机&quot;</span>
<span class="token function">sudo</span> <span class="token function">shutdown</span> <span class="token parameter variable">-h</span> <span class="token variable">$time_diff</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动。 将以上内容保存为一个名为<code>auto_shutdown.sh</code>的文件，并设置在下午7点自动执行该脚本。可以通过执行以下命令来实现：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">crontab</span> <span class="token parameter variable">-e</span>

<span class="token comment"># 然后在文件末尾添加以下一行。这将每天的下午7点自动执行/path/to/auto_shutdown.sh脚本，并关机。</span>
<span class="token number">0</span> <span class="token number">19</span> * * * /bin/bash /path/to/auto_shutdown.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自启。 最后，你需要将脚本加入到自启中。打开终端，执行以下命令以编辑<code>/etc/rc.local</code>文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /etc/rc.local

<span class="token comment"># 在exit 0行之前添加以下命令：</span>
/bin/bash /path/to/auto_shutdown.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="容器环境" tabindex="-1"><a class="header-anchor" href="#容器环境"><span>容器环境</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token comment"># 找不到就会提示你怎么安装了</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可能还会安装一个portainer.io可视化管理docker的工具</p><h4 id="查看-系统信息" tabindex="-1"><a class="header-anchor" href="#查看-系统信息"><span>查看 系统信息</span></a></h4><p>基于ubuntu来写</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>lsb_release <span class="token parameter variable">-a</span> <span class="token comment"># 查看所有版本信息</span>
<span class="token function">cat</span> /etc/issue <span class="token comment"># 查看linux发行版信息</span>
<span class="token function">cat</span> /proc/version <span class="token comment"># 查看操作系统版本信息</span>

<span class="token function">uname</span> <span class="token parameter variable">-a</span> <span class="token comment"># 查看内核版本</span>
<span class="token function">uname</span> <span class="token parameter variable">-rs</span> <span class="token comment"># 查看内核版本 (更省略的命令)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看-包管理器信息" tabindex="-1"><a class="header-anchor" href="#查看-包管理器信息"><span>查看 包管理器信息</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">apt-get</span> upgrade <span class="token comment"># 如有问题看镜像 sudo nano /etc/apt/sources.list</span>
<span class="token function">apt-get</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看-网络信息" tabindex="-1"><a class="header-anchor" href="#查看-网络信息"><span>查看 网络信息</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>lspci <span class="token comment"># 查看网卡的信息。如果显示未安装驱动，请安装对应的驱动</span>
<span class="token function">ifconfig</span> <span class="token comment"># 查看网卡的状态。如果网卡被禁用，请使用命令「ifconfig [interface] up」启用网卡。</span>
<span class="token function">ip</span> addr show <span class="token comment"># 或ip addr，查看网卡的IP地址。如果没有IP地址，请检查网络设置</span>

<span class="token comment">#Linux 端口占用和杀进程</span>
<span class="token function">lsof</span> <span class="token parameter variable">-i:8090</span>
<span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token number">13420</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="route" tabindex="-1"><a class="header-anchor" href="#route"><span>route</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看路由</span>
route <span class="token parameter variable">-n</span>
<span class="token function">sudo</span> route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token number">0.0</span>.0.0 gw <span class="token number">192.168</span>.209.1 netmask <span class="token number">0.0</span>.0.0 dev enp1s0f1 <span class="token comment"># 手动增加路由（GW是上网口）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ifconfig" tabindex="-1"><a class="header-anchor" href="#ifconfig"><span>ifconfig</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> <span class="token comment"># 查看网卡的状态。如果网卡被禁用，请使用命令「ifconfig [interface] up」启用网卡。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>无法找到ifconfig的解决方法1：有可能需要加sudo，或者直接使用root账户操作</p><p>无法找到ifconfig的解决方法2：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 安装</span>
<span class="token function">apt</span> instanll net-tools

<span class="token comment"># 如果提示已经安装了net-tools包，却无法运行ifconfig，可能的原因是ifconfig命令没有在系统的PATH变量中。您可以按照下面的方法将其添加到PATH中：</span>
<span class="token comment"># 临时，下次开机失效</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/sbin:/usr/sbin

<span class="token comment"># 永久</span>
<span class="token function">nano</span> ~/.bashrc
<span class="token comment"># 在文件末尾添加以下内容：</span>
	<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/sbin:/usr/sbin
<span class="token comment"># 按Ctrl+X，然后按Y，再按Enter键保存并退出</span>
<span class="token builtin class-name">source</span> ~/.bashrc <span class="token comment"># 使更改生效</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ethtool-亮灯-、arp" tabindex="-1"><a class="header-anchor" href="#ethtool-亮灯-、arp"><span>ethtool（亮灯）、arp</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看对应网口</span>
<span class="token function">ethtool</span> <span class="token parameter variable">-p</span> eth0 <span class="token number">30</span> <span class="token comment"># 让对应网口(eth0)亮灯30s，可能需要先安装：apt-get install ethtooli</span>

<span class="token comment"># 查看设备之间的Mac地址映射</span>
arp <span class="token parameter variable">-n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lshw" tabindex="-1"><a class="header-anchor" href="#lshw"><span>lshw</span></a></h4><p>如果 ifconfig 显示的口<mark>不全</mark>，用 lshw</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> <span class="token function">link</span> show <span class="token comment"># 这将显示系统上所有可用的网络接口，包括处于禁用状态的接口。</span>

<span class="token comment"># 另一个方法是检查 lshw 命令的输出。如果您的系统中尚未安装它，请首先安装：</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> lshw    <span class="token comment">#对于基于Debian的系统，如：Ubuntu</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> lshw        <span class="token comment">#对于基于Red Hat的系统，如：CentOS</span>
<span class="token comment"># 然后，可以运行以下命令来列出所有网络设备：</span>
<span class="token function">sudo</span> lshw <span class="token parameter variable">-class</span> network

<span class="token comment"># 如果您发现了缺失的网络接口，可能需要启用或者重新启用它们。您可以通过以下命令激活网络接口（请使用您的具体接口名替换 &lt;interface&gt;）：</span>
<span class="token function">sudo</span> <span class="token function">ifconfig</span> <span class="token operator">&lt;</span>interface<span class="token operator">&gt;</span> up
<span class="token comment"># 或者，您也可以使用 ip 命令启用接口：</span>
<span class="token function">sudo</span> <span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> <span class="token operator">&lt;</span>interface<span class="token operator">&gt;</span> up

<span class="token comment"># 如果你发现lshw显示出来的部分网口没有接口名（ifconfig能显示出来的接口名就有，不能的就没有）</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙"><span>防火墙</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 防火墙（系统可能用不同的防火墙）</span>
<span class="token function">sudo</span> systemctl stop firewalld <span class="token comment"># 可能报错 bash: firewalld: command not found</span>
<span class="token function">sudo</span> ufw disable <span class="token comment"># 也可能报错 bash: ufw: command not found</span>
<span class="token function">sudo</span> iptables <span class="token parameter variable">-L</span> <span class="token comment"># 前两个都报错再看</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iperf" tabindex="-1"><a class="header-anchor" href="#iperf"><span>iperf</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> iperf3
<span class="token comment"># 服务端</span>
iperf3 <span class="token parameter variable">-s</span> <span class="token parameter variable">-B</span> <span class="token number">192.168</span>.208.199 <span class="token parameter variable">-p</span> <span class="token number">5201</span>
<span class="token comment"># 客户端（选一）</span>
iperf3 <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.208.199 <span class="token parameter variable">-p</span> <span class="token number">5201</span> <span class="token parameter variable">--udp</span>
iperf3 <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.208.199 <span class="token parameter variable">-p</span> <span class="token number">5201</span> <span class="token parameter variable">--udp</span> <span class="token parameter variable">-l</span> <span class="token number">100</span> <span class="token parameter variable">-b</span> 1000M
iperf3 <span class="token parameter variable">-B</span> <span class="token number">192.168</span>.208.1 <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.208.199 <span class="token parameter variable">-p</span> <span class="token number">5201</span> <span class="token parameter variable">--udp</span> <span class="token parameter variable">-l</span> <span class="token number">100</span> <span class="token parameter variable">-b</span> 1000M
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编辑网口配置文件" tabindex="-1"><a class="header-anchor" href="#编辑网口配置文件"><span>编辑网口配置文件</span></a></h3><p>编辑网口配置文件1</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 安装ip命令</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> iproute2
<span class="token comment"># 编辑网口配置文件</span>
<span class="token function">sudo</span> <span class="token function">nano</span> /etc/network/interfaces 
<span class="token comment"># 参考配置</span>
<span class="token comment"># eth0 configuration</span>
auto eth0
allow-hotplug eth0
iface eth0 inet static
  address <span class="token number">192.168</span>.1.100   <span class="token comment"># 将这里的 IP 地址更改为所需的 IP 地址</span>
  netmask <span class="token number">255.255</span>.255.0   <span class="token comment"># 修改子网掩码，如有必要</span>
  gateway <span class="token number">192.168</span>.1.1     <span class="token comment"># 修改这里的网关地址，如有必要</span>
  dns-nameservers <span class="token number">8.8</span>.8.8 <span class="token comment"># 将此设置为所需的 DNS 服务器地址</span>
<span class="token comment"># 修改完成后可以重启服务</span>
<span class="token function">sudo</span> systemctl restart networking
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编辑网口配置文件2（ubuntu20.04但默认没有interfaces文件）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 在 Ubuntu 20.04 中，默认情况下使用 Netplan 作为网络配置工具，而不是传统的 /etc/network/interfaces 文件。Netplan配置文件使用 YAML 文件格式，并存储在/etc/netplan/目录下。</span>
<span class="token comment"># 要为 eth0 网口设置开机自启并分配默认 IP，遵循以下步骤：</span>
<span class="token comment"># 找到已有的 Netplan 配置文件，进入 /etc/netplan/ 目录： </span>

<span class="token builtin class-name">cd</span> /etc/netplan/

<span class="token comment"># 通常，您将看到一个以 .yaml 结尾的文件。例如，可以是 01-network-manager-all.yaml、50-cloud-init.yaml 或其它名字。每个系统可能都有一个不同的名字。</span>
<span class="token comment"># 使用文本编辑器打开现有的配置文件。以下示例中，我们将使用 nano 编辑器： </span>

<span class="token function">sudo</span> <span class="token function">nano</span> 01-netcfg.yaml

<span class="token comment"># 注意：请确保使用您看到的 YAML 文件名替换 01-netcfg.yaml。</span>
<span class="token comment">#     在此配置文件中，为 eth0 界面设置静态 IP。 </span>
<span class="token comment"># 将以下示例添加并替换 addresses、gateway4 和 nameservers 的值，以匹配您的实际配置。确保缩进与现有的内容保持一致（2缩进不是4缩进，不然后面报错）</span>

network:
  version: <span class="token number">2</span>
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: no
      addresses: <span class="token punctuation">[</span><span class="token number">192.168</span>.1.100/24<span class="token punctuation">]</span>
      gateway4: <span class="token number">192.168</span>.1.1
      nameservers:
        addresses: <span class="token punctuation">[</span><span class="token number">8.8</span>.8.8, <span class="token number">8.8</span>.4.4<span class="token punctuation">]</span>

<span class="token comment"># 保存更改并退出编辑器。按 Ctrl + X，然后按 Y，最后按 Enter 保存文件。</span>
<span class="token comment"># 应用网络配置。运行以下命令，使 Netplan 应用修改后的配置： </span>
<span class="token function">sudo</span> netplan apply

<span class="token comment"># 这样，您的 Ubuntu 20.04 系统就设置了网口 eth0 开机自启并分配静态 IP。在计算机重启时，新的网络配置将保持有效。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编辑网口配置文件3（禁用netplan启用interfaces）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 在 Ubuntu 20.04 下，虽然 /etc/network/interfaces 文件不再是首选的配置方式，但您仍然可以使用它来配置网络。要使用 interfaces 文件进行配置，请按照以下步骤操作：</span>
<span class="token comment"># 首先，确保已经安装了 ifupdown。如果未安装，请使用以下命令安装： </span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ifupdown

<span class="token comment"># 创建 /etc/network/interfaces 文件（如果不存在）并用文本编辑器打开它： </span>
<span class="token function">sudo</span> <span class="token function">touch</span> /etc/network/interfaces
<span class="token function">sudo</span> <span class="token function">nano</span> /etc/network/interfaces
<span class="token comment"># 在文件中，添加以下内容来配置 ens33 接口。请根据实际情况更改 IP、子网掩码和网关地址： </span>
auto ens33
iface ens33 inet static
    address <span class="token number">192.168</span>.208.202
    netmask <span class="token number">255.255</span>.255.0
    gateway <span class="token number">192.168</span>.208.1
<span class="token comment"># 保存文件并退出编辑器。按 Ctrl + X，然后按 Y，最后按 Enter。</span>

<span class="token comment"># 由于您之前已经尝试使用 Netplan，我们需要禁用 Netplan。要禁用 Netplan，请重命名 /etc/netplan 目录： </span>
<span class="token function">sudo</span> <span class="token function">mv</span> /etc/netplan /etc/netplan.bak

<span class="token comment"># 现在重启网络服务以应用更改： </span>
<span class="token function">sudo</span> systemctl restart networking.service
<span class="token comment"># 重新启动计算机后，静态 IP 配置应该仍然保持不变。这种方法使用 /etc/network/interfaces 文件配置网络，而不是在 Ubuntu 20.04 中默认的 Netplan。</span>

<span class="token comment"># 但好像不行……</span>
<span class="token comment"># 可能报错：Failed to restart networking.service: Unit networking.service not found.</span>
<span class="token comment"># 这个错误的原因可能是在您的系统上缺少相应的systemd服务。默认情况下，Ubuntu 18.04 及更高版本使用 netplan 进行网络管理，并且没有 networking.service 文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ioctl" tabindex="-1"><a class="header-anchor" href="#ioctl"><span>ioctl</span></a></h3><p>可以获取所有的信息，但是使用起来比较麻烦</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;net/if.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/ioctl.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h&gt;</span></span>

<span class="token comment">// 使用 ioctl 函数的版本，更详细</span>
<span class="token keyword">int</span> <span class="token function">unit_test_STNetDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 一个空socket，ioctl函数所需要的参数之一</span>
    <span class="token keyword">int</span> fd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> SOCK_DGRAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fd <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;socket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 核心，使用 ioctl 函数获取信息</span>
    <span class="token keyword">struct</span> <span class="token class-name">ifconf</span> ifc<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">ifreq</span> buf<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    ifc<span class="token punctuation">.</span>ifc_len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ifc<span class="token punctuation">.</span>ifc_buf <span class="token operator">=</span> <span class="token punctuation">(</span>caddr_t<span class="token punctuation">)</span> buf<span class="token punctuation">;</span>
    <span class="token keyword">int</span> iReturn <span class="token operator">=</span> <span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> SIOCGIFCONF<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>ifc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>iReturn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;错误 ioctl: %s [%s:%d]\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">strerror</span><span class="token punctuation">(</span>errno<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 循环</span>
    <span class="token keyword">int</span> interfaceNum <span class="token operator">=</span> ifc<span class="token punctuation">.</span>ifc_len <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">ifreq</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;接口数量: %d\\n&quot;</span><span class="token punctuation">,</span> interfaceNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">ifreq</span> ifrcopy<span class="token punctuation">;</span>
    <span class="token keyword">char</span> mac<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> ip<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> broadAddr<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> subnetMask<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>interfaceNum<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    ——————————\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    设备名: %s\\n&quot;</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_name<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 忽略未up或未运行的接口</span>
        ifrcopy <span class="token operator">=</span> buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> SIOCGIFFLAGS<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ifrcopy<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    错误 ioctl: %s [%s:%d]\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">strerror</span><span class="token punctuation">(</span>errno<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 获取接口的MAC地址</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> SIOCGIFHWADDR<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">memset</span><span class="token punctuation">(</span>mac<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>mac<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">snprintf</span><span class="token punctuation">(</span>mac<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>mac<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%02x%02x%02x%02x%02x%02x&quot;</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span> buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_hwaddr<span class="token punctuation">.</span>sa_data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span> buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_hwaddr<span class="token punctuation">.</span>sa_data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span> buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_hwaddr<span class="token punctuation">.</span>sa_data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span> buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_hwaddr<span class="token punctuation">.</span>sa_data<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span> buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_hwaddr<span class="token punctuation">.</span>sa_data<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span> buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_hwaddr<span class="token punctuation">.</span>sa_data<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    mac地址: %s\\n&quot;</span><span class="token punctuation">,</span> mac<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    错误 ioctl: %s [%s:%d]\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">strerror</span><span class="token punctuation">(</span>errno<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 获取该接口的IP地址</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> SIOCGIFADDR<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">snprintf</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    设备ip: %s\\n&quot;</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    错误 ioctl: %s [%s:%d]\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">strerror</span><span class="token punctuation">(</span>errno<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 获取该接口的广义地址/广播地址</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> SIOCGIFBRDADDR<span class="token punctuation">,</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">snprintf</span><span class="token punctuation">(</span>broadAddr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>broadAddr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_broadaddr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    广播地址: %s\\n&quot;</span><span class="token punctuation">,</span> broadAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    错误 ioctl: %s [%s:%d]\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">strerror</span><span class="token punctuation">(</span>errno<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 获取接口的子网掩码</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> SIOCGIFNETMASK<span class="token punctuation">,</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">snprintf</span><span class="token punctuation">(</span>subnetMask<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>subnetMask<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span>
                     <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>interfaceNum<span class="token punctuation">]</span><span class="token punctuation">.</span>ifr_netmask<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    子网掩码: %s\\n&quot;</span><span class="token punctuation">,</span> subnetMask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    错误 ioctl: %s [%s:%d]\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">strerror</span><span class="token punctuation">(</span>errno<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getifaddrs" tabindex="-1"><a class="header-anchor" href="#getifaddrs"><span>getifaddrs</span></a></h3><p>方便与简洁（但无MAC地址）。值得一提的是，在MacOS或iOS系统上（如iPhone程序开发），上述iotcl函数没法获得mac地址跟子网掩码，这个使用，使用getifaddrs函数便更有优势了</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ifaddrs.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">getSubnetMask</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span>sin <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">ifaddrs</span> <span class="token operator">*</span>ifa <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">*</span>ifList<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getifaddrs</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ifList<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>ifa <span class="token operator">=</span> ifList<span class="token punctuation">;</span> ifa <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> ifa <span class="token operator">=</span> ifa<span class="token operator">-&gt;</span>ifa_next<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>ifa<span class="token operator">-&gt;</span>ifa_addr<span class="token operator">-&gt;</span>sa_family <span class="token operator">==</span> AF_INET<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//printf(&quot;n&gt;&gt;&gt; interfaceName: %sn&quot;, ifa-&gt;ifa_name);</span>
            <span class="token comment">//sin = (struct sockaddr_in *)ifa-&gt;ifa_addr;</span>
            <span class="token comment">//printf(&quot;&gt;&gt;&gt; ipAddress: %sn&quot;, inet_ntoa(sin-&gt;sin_addr));</span>
            <span class="token comment">//sin = (struct sockaddr_in *)ifa-&gt;ifa_dstaddr;</span>
            <span class="token comment">//printf(&quot;&gt;&gt;&gt; broadcast: %sn&quot;, inet_ntoa(sin-&gt;sin_addr));</span>
            <span class="token comment">//sin = (struct sockaddr_in *)ifa-&gt;ifa_netmask;</span>
            <span class="token comment">//printf(&quot;&gt;&gt;&gt; subnetMask: %sn&quot;, inet_ntoa(sin-&gt;sin_addr));</span>
            
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    接口名: &lt;%s&gt;\\n&quot;</span><span class="token punctuation">,</span> ifa<span class="token operator">-&gt;</span>ifa_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    地址: &lt;%s&gt; &lt;%sn&gt;\\n&quot;</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span>ifa<span class="token operator">-&gt;</span>ifa_addr<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    广播: &lt;%sn&gt;\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span>ifa<span class="token operator">-&gt;</span>ifa_dstaddr<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    子网掩码: &lt;%sn&gt;\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span>ifa<span class="token operator">-&gt;</span>ifa_netmask<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    ——————————————————\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">freeifaddrs</span><span class="token punctuation">(</span>ifList<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或更详细：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">// 使用 getifaddrs 函数的版本，更简单，无mac地址</span>
<span class="token keyword">int</span> <span class="token function">unit_test_STNetDevice_getifaddrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取所有的网卡设备和 IP 地址</span>
    <span class="token keyword">struct</span> <span class="token class-name">ifaddrs</span> <span class="token operator">*</span>ifaddr<span class="token punctuation">,</span> <span class="token operator">*</span>ifa<span class="token punctuation">;</span>
    <span class="token keyword">char</span> host<span class="token punctuation">[</span>NI_MAXHOST<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getifaddrs</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ifaddr<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;getifaddrs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// exit(EXIT_FAILURE);</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 遍历网卡设备，并选择合适的网口</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;检查网卡设备：\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> family<span class="token punctuation">,</span> s<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>ifa <span class="token operator">=</span> ifaddr<span class="token punctuation">;</span> ifa <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span> ifa <span class="token operator">=</span> ifa<span class="token operator">-&gt;</span>ifa_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ifa<span class="token operator">-&gt;</span>ifa_addr <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        family <span class="token operator">=</span> ifa<span class="token operator">-&gt;</span>ifa_addr<span class="token operator">-&gt;</span>sa_family<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>family <span class="token operator">!=</span> AF_INET<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// || family == AF_INET6) { TODO 暂时过滤ipv6</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 基本接口信息</span>
        s <span class="token operator">=</span> <span class="token function">getnameinfo</span><span class="token punctuation">(</span>ifa<span class="token operator">-&gt;</span>ifa_addr<span class="token punctuation">,</span> <span class="token punctuation">(</span>family <span class="token operator">==</span> AF_INET<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        host<span class="token punctuation">,</span> NI_MAXHOST<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NI_NUMERICHOST<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    getnameinfo() 失败: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// exit(EXIT_FAILURE);</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    接口名: &lt;%s&gt;\\n&quot;</span><span class="token punctuation">,</span> ifa<span class="token operator">-&gt;</span>ifa_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    地址: &lt;%s&gt; &lt;%s&gt;\\n&quot;</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span> ifa<span class="token operator">-&gt;</span>ifa_addr<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    广播地址: &lt;%s&gt;\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span> ifa<span class="token operator">-&gt;</span>ifa_dstaddr<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    子网掩码: &lt;%s&gt;\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span> ifa<span class="token operator">-&gt;</span>ifa_netmask<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    ——————————————————\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">freeifaddrs</span><span class="token punctuation">(</span>ifaddr<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 在选择的网口上创建 socket</span>
    <span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> server_address<span class="token punctuation">;</span>

    sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sockfd <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;socket创建失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>server_address<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>server_address<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    server_address<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>
    server_address<span class="token punctuation">.</span>sin_port <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 使用已选择的IP地址替换 &quot;selected_ip_address&quot;</span>
    <span class="token comment">// const char* selected_ip_address = &quot;127.0.0.1&quot;;</span>
    <span class="token comment">// inet_pton(AF_INET, selected_ip_address, &amp;(server_address.sin_addr));</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参考输出" tabindex="-1"><a class="header-anchor" href="#参考输出"><span>参考输出</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>——————————————测试1开始——————————————
接口数量: 2
    ——————————
    设备名: eth0
    mac地址: 00155d51ba7d
    设备ip: 172.27.92.56
    广播地址: 172.27.95.255
    子网掩码: 255.255.240.0
    ——————————
    设备名: lo
    mac地址: 000000000000
    设备ip: 127.0.0.1
    广播地址: 0.0.0.0
    子网掩码: 255.0.0.0
——————————————测试2开始——————————————
检查网卡设备：
    接口名: &lt;lo&gt;
    地址: &lt;127.0.0.1&gt; &lt;127.0.0.1&gt;
    广播地址: &lt;127.0.0.1&gt;
    子网掩码: &lt;255.0.0.0&gt;
    ——————————————————
    接口名: &lt;eth0&gt;
    地址: &lt;172.27.92.56&gt; &lt;172.27.92.56&gt;
    广播地址: &lt;172.27.95.255&gt;
    子网掩码: &lt;255.255.240.0&gt;
    ——————————————————
——————————————测试正常结束——————————————
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他一些工作笔记" tabindex="-1"><a class="header-anchor" href="#其他一些工作笔记"><span>其他一些工作笔记</span></a></h2><h3 id="禁用本地回环" tabindex="-1"><a class="header-anchor" href="#禁用本地回环"><span>禁用本地回环</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 您可以通过设置网络配置和防火墙规则来实现这一目标。</span>
<span class="token comment"># 首先，确保你的两个网口（假设为eth0和eth1）都已经正确配置并已连接到同一台交换机。为每个网口分配不同的 IP 地址。示例：</span>

eth0: IP 地址为 <span class="token number">192.168</span>.1.10
eth1: IP 地址为 <span class="token number">192.168</span>.1.20

<span class="token comment"># 然后，确保这两个网络接口启用并且在同一个子网（例如 255.255.255.0）。</span>
<span class="token comment"># 接下来，需要设置防火墙规则，确保数据流通过正确的网口。示例防火墙规则如下：</span>
<span class="token comment"># 确保内核启用反向路由。这可防止数据包沿错误的网络接口进入或离开： </span>

<span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token operator">&gt;</span> /proc/sys/net/ipv4/conf/all/rp_filter
<span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token operator">&gt;</span> /proc/sys/net/ipv4/conf/eth0/rp_filter
<span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token operator">&gt;</span> /proc/sys/net/ipv4/conf/eth1/rp_filter

<span class="token comment"># 修改防火墙规则以便确保数据经过正确的接口。在这里，我们使用 iptables 修改： </span>

iptables <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.1.10 <span class="token parameter variable">--sport</span> <span class="token number">12345</span> <span class="token parameter variable">-d</span> <span class="token number">192.168</span>.1.20 <span class="token parameter variable">--dport</span> <span class="token number">23456</span> <span class="token parameter variable">-j</span> MARK --set-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.1.20 <span class="token parameter variable">--sport</span> <span class="token number">23456</span> <span class="token parameter variable">-d</span> <span class="token number">192.168</span>.1.10 <span class="token parameter variable">--dport</span> <span class="token number">12345</span> <span class="token parameter variable">-j</span> MARK --set-mark <span class="token number">2</span>
iptables <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.1.20 <span class="token parameter variable">--sport</span> <span class="token number">23456</span> <span class="token parameter variable">-d</span> <span class="token number">192.168</span>.1.10 <span class="token parameter variable">--dport</span> <span class="token number">12345</span> <span class="token parameter variable">-j</span> MARK --set-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.1.10 <span class="token parameter variable">--sport</span> <span class="token number">12345</span> <span class="token parameter variable">-d</span> <span class="token number">192.168</span>.1.20 <span class="token parameter variable">--dport</span> <span class="token number">23456</span> <span class="token parameter variable">-j</span> MARK --set-mark <span class="token number">2</span>

<span class="token comment"># 再使用 iproute2 工具设置与标记相关的路由规则：</span>

<span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">1</span> table <span class="token number">1</span>
<span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">2</span> table <span class="token number">2</span>
<span class="token function">ip</span> route <span class="token function">add</span> default via <span class="token number">192.168</span>.1.1 dev eth0 table <span class="token number">1</span>
<span class="token function">ip</span> route <span class="token function">add</span> default via <span class="token number">192.168</span>.1.1 dev eth1 table <span class="token number">2</span>

<span class="token comment"># 如此，流量就会正确地在两个网络接口之间往返。</span>
<span class="token comment"># 注意：确保您的操作系统中安装了 iptables 和 iproute2 并且将命令修改为符合您实际网络和端口设置。</span>
<span class="token comment"># 在设置完成后，您可以在本地发送和接收数据，并通过交换机实现网口间的真实数据传输。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,65);function d(m,v){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[n("a",r,[c("【博客园】Ubuntu20.04 TLS 开机卡在“A start job is running for wait for network to be Configured”解决"),l(a)])]),k])}const h=t(i,[["render",d],["__file","01. 基本信息的查看.html.vue"]]),g=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E5%8D%A1%E4%B8%8E%E7%BD%91%E5%8F%A3%E5%B7%A5%E5%85%B7/01.%20%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E7%9A%84%E6%9F%A5%E7%9C%8B.html","title":"网卡与网口","lang":"zh-CN","frontmatter":{"description":"网卡与网口 目录 对应关系 一台机器上可能不只有一个网卡（如平常的笔记本电脑中，就会有无线网卡和有线网卡（网线接口）两种） 每一个网卡只有一个MAC地址 每一个网卡可能配置有多个IP地址 基本信息的查看 - Windows 常用命令行 程序 （注意cygwin和wsl输出内容不同） 输出大概是这样的：（可能和cygwin环境有关，这里的接口名几乎不能用...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E5%8D%A1%E4%B8%8E%E7%BD%91%E5%8F%A3%E5%B7%A5%E5%85%B7/01.%20%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E7%9A%84%E6%9F%A5%E7%9C%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"网卡与网口"}],["meta",{"property":"og:description","content":"网卡与网口 目录 对应关系 一台机器上可能不只有一个网卡（如平常的笔记本电脑中，就会有无线网卡和有线网卡（网线接口）两种） 每一个网卡只有一个MAC地址 每一个网卡可能配置有多个IP地址 基本信息的查看 - Windows 常用命令行 程序 （注意cygwin和wsl输出内容不同） 输出大概是这样的：（可能和cygwin环境有关，这里的接口名几乎不能用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网卡与网口\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"网卡与网口","slug":"网卡与网口","link":"#网卡与网口","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[{"level":2,"title":"对应关系","slug":"对应关系","link":"#对应关系","children":[]},{"level":2,"title":"基本信息的查看 - Windows","slug":"基本信息的查看-windows","link":"#基本信息的查看-windows","children":[{"level":3,"title":"常用命令行","slug":"常用命令行","link":"#常用命令行","children":[]},{"level":3,"title":"程序","slug":"程序","link":"#程序","children":[]}]},{"level":2,"title":"基本信息的查看 - Linux (ubuntu)","slug":"基本信息的查看-linux-ubuntu","link":"#基本信息的查看-linux-ubuntu","children":[{"level":3,"title":"常用命令行","slug":"常用命令行-1","link":"#常用命令行-1","children":[{"level":4,"title":"新机可能需要的设置","slug":"新机可能需要的设置","link":"#新机可能需要的设置","children":[{"level":5,"title":"开机优化","slug":"开机优化","link":"#开机优化","children":[]},{"level":5,"title":"root账户","slug":"root账户","link":"#root账户","children":[]},{"level":5,"title":"给普通账户相应的权限","slug":"给普通账户相应的权限","link":"#给普通账户相应的权限","children":[]},{"level":5,"title":"静态路由的设置","slug":"静态路由的设置","link":"#静态路由的设置","children":[]},{"level":5,"title":"ssh的检查","slug":"ssh的检查","link":"#ssh的检查","children":[]},{"level":5,"title":"自动关机与自启","slug":"自动关机与自启","link":"#自动关机与自启","children":[]},{"level":5,"title":"容器环境","slug":"容器环境","link":"#容器环境","children":[]}]},{"level":4,"title":"查看 系统信息","slug":"查看-系统信息","link":"#查看-系统信息","children":[]},{"level":4,"title":"查看 包管理器信息","slug":"查看-包管理器信息","link":"#查看-包管理器信息","children":[]},{"level":4,"title":"查看 网络信息","slug":"查看-网络信息","link":"#查看-网络信息","children":[]},{"level":4,"title":"route","slug":"route","link":"#route","children":[]},{"level":4,"title":"ifconfig","slug":"ifconfig","link":"#ifconfig","children":[]},{"level":4,"title":"ethtool（亮灯）、arp","slug":"ethtool-亮灯-、arp","link":"#ethtool-亮灯-、arp","children":[]},{"level":4,"title":"lshw","slug":"lshw","link":"#lshw","children":[]},{"level":4,"title":"防火墙","slug":"防火墙","link":"#防火墙","children":[]}]},{"level":3,"title":"iperf","slug":"iperf","link":"#iperf","children":[]},{"level":3,"title":"编辑网口配置文件","slug":"编辑网口配置文件","link":"#编辑网口配置文件","children":[]},{"level":3,"title":"ioctl","slug":"ioctl","link":"#ioctl","children":[]},{"level":3,"title":"getifaddrs","slug":"getifaddrs","link":"#getifaddrs","children":[]},{"level":3,"title":"参考输出","slug":"参考输出","link":"#参考输出","children":[]}]},{"level":2,"title":"其他一些工作笔记","slug":"其他一些工作笔记","link":"#其他一些工作笔记","children":[{"level":3,"title":"禁用本地回环","slug":"禁用本地回环","link":"#禁用本地回环","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":15.35,"words":4606},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网卡与网口工具/01. 基本信息的查看.md","excerpt":"\\n<h1>目录</h1>\\n<h2>对应关系</h2>\\n<ul>\\n<li>一台机器上可能不只有一个网卡（如平常的笔记本电脑中，就会有无线网卡和有线网卡（网线接口）两种）</li>\\n<li>每一个网卡只有一个MAC地址</li>\\n<li>每一个网卡可能配置有多个IP地址</li>\\n</ul>\\n<h2>基本信息的查看 - Windows</h2>\\n<h3>常用命令行</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>ipconfig\\nipconfig /all\\n\\nnet\\n\\n<span class=\\"token comment\\"># Windows 端口占用和杀进程</span>\\n<span class=\\"token function\\">netstat</span> -ano<span class=\\"token operator\\">|</span>findstr <span class=\\"token number\\">8090</span>\\ntaskkill /pid <span class=\\"token number\\">13420</span> <span class=\\"token parameter variable\\">-t</span> <span class=\\"token parameter variable\\">-f</span>\\n</code></pre></div>","autoDesc":true}');export{h as comp,g as data};
