import{_ as i,e as r,g as t,f as l,j as o,h as s,i as a,r as p,o as c}from"./app-EuS-Ookm.js";const d={};function u(g,e){const n=p("RouteLink");return c(),r("div",null,[e[6]||(e[6]=t('<h1 id="nonebot-utils" tabindex="-1"><a class="header-anchor" href="#nonebot-utils"><span>nonebot.utils</span></a></h1><p>本模块包含了 NoneBot 的一些工具函数</p><h2 id="escape-tag" tabindex="-1"><a class="header-anchor" href="#escape-tag"><span><em>def</em> <code>escape_tag(s)</code></span></a></h2><ul><li><p><strong>说明</strong></p><p>用于记录带颜色日志时转义 <code>&lt;tag&gt;</code> 类型特殊标签</p><p>参考: <a href="https://loguru.readthedocs.io/en/stable/api/logger.html#color" target="_blank" rel="noopener noreferrer">loguru color 标签</a></p></li><li><p><strong>参数</strong></p><ul><li><code>s</code> (str): 需要转义的字符串</li></ul></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="deep-update" tabindex="-1"><a class="header-anchor" href="#deep-update"><span><em>def</em> <code>deep_update(mapping, *updating_mappings)</code></span></a></h2><ul><li><p><strong>说明:</strong> 深度更新合并字典</p></li><li><p><strong>参数</strong></p><ul><li><p><code>mapping</code> (dict[K, Any])</p></li><li><p><code>*updating_mappings</code> (dict[K, Any])</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>dict[K, Any]</li></ul></li></ul><h2 id="lenient-issubclass" tabindex="-1"><a class="header-anchor" href="#lenient-issubclass"><span><em>def</em> <code>lenient_issubclass(cls, class_or_tuple)</code></span></a></h2><ul><li><p><strong>说明:</strong> 检查 cls 是否是 class_or_tuple 中的一个类型子类并忽略类型错误。</p></li><li><p><strong>参数</strong></p><ul><li><p><code>cls</code> (Any)</p></li><li><p><code>class_or_tuple</code> (type[Any] | tuple[type[Any], ...])</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="generic-check-issubclass" tabindex="-1"><a class="header-anchor" href="#generic-check-issubclass"><span><em>def</em> <code>generic_check_issubclass(cls, class_or_tuple)</code></span></a></h2><ul><li><p><strong>说明</strong></p><p>检查 cls 是否是 class_or_tuple 中的一个类型子类。</p><p>特别的：</p><ul><li>如果 cls 是 <code>typing.Union</code> 或 <code>types.UnionType</code> 类型，<br> 则会检查其中的所有类型是否是 class_or_tuple 中一个类型的子类或 None。</li><li>如果 cls 是 <code>typing.Literal</code> 类型，<br> 则会检查其中的所有值是否是 class_or_tuple 中一个类型的实例。</li><li>如果 cls 是 <code>typing.TypeVar</code> 类型，<br> 则会检查其 <code>__bound__</code> 或 <code>__constraints__</code><br> 是否是 class_or_tuple 中一个类型的子类或 None。</li></ul></li><li><p><strong>参数</strong></p><ul><li><p><code>cls</code> (Any)</p></li><li><p><code>class_or_tuple</code> (type[Any] | tuple[type[Any], ...])</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="type-is-complex" tabindex="-1"><a class="header-anchor" href="#type-is-complex"><span><em>def</em> <code>type_is_complex(type_)</code></span></a></h2><ul><li><p><strong>说明:</strong> 检查 type_ 是否是复杂类型</p></li><li><p><strong>参数</strong></p><ul><li><code>type_</code> (type[Any])</li></ul></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="is-coroutine-callable" tabindex="-1"><a class="header-anchor" href="#is-coroutine-callable"><span><em>def</em> <code>is_coroutine_callable(call)</code></span></a></h2><ul><li><p><strong>说明:</strong> 检查 call 是否是一个 callable 协程函数</p></li><li><p><strong>参数</strong></p><ul><li><code>call</code> ((...) -&gt; Any)</li></ul></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="is-gen-callable" tabindex="-1"><a class="header-anchor" href="#is-gen-callable"><span><em>def</em> <code>is_gen_callable(call)</code></span></a></h2><ul><li><p><strong>说明:</strong> 检查 call 是否是一个生成器函数</p></li><li><p><strong>参数</strong></p><ul><li><code>call</code> ((...) -&gt; Any)</li></ul></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="is-async-gen-callable" tabindex="-1"><a class="header-anchor" href="#is-async-gen-callable"><span><em>def</em> <code>is_async_gen_callable(call)</code></span></a></h2><ul><li><p><strong>说明:</strong> 检查 call 是否是一个异步生成器函数</p></li><li><p><strong>参数</strong></p><ul><li><code>call</code> ((...) -&gt; Any)</li></ul></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="run-sync" tabindex="-1"><a class="header-anchor" href="#run-sync"><span><em>def</em> <code>run_sync(call)</code></span></a></h2><ul><li><p><strong>说明:</strong> 一个用于包装 sync function 为 async function 的装饰器</p></li><li><p><strong>参数</strong></p><ul><li><code>call</code> ((P) -&gt; R): 被装饰的同步函数</li></ul></li><li><p><strong>返回</strong></p><ul><li>(P) -&gt; Coroutine[None, None, R]</li></ul></li></ul><h2 id="run-sync-ctx-manager" tabindex="-1"><a class="header-anchor" href="#run-sync-ctx-manager"><span><em>def</em> <code>run_sync_ctx_manager(cm)</code></span></a></h2><ul><li><p><strong>说明:</strong> 一个用于包装 sync context manager 为 async context manager 的执行函数</p></li><li><p><strong>参数</strong></p><ul><li><code>cm</code> (AbstractContextManager[T])</li></ul></li><li><p><strong>返回</strong></p><ul><li>AsyncGenerator[T, None]</li></ul></li></ul><h2 id="run-coro-with-catch" tabindex="-1"><a class="header-anchor" href="#run-coro-with-catch"><span><em>async def</em> <code>run_coro_with_catch(coro, exc, return_on_err=None)</code></span></a></h2><ul><li><p><strong>说明:</strong> 运行协程并当遇到指定异常时返回指定值。</p></li><li><p><strong>重载</strong></p><p><strong>1.</strong> <code>(coro, exc, return_on_err=None) -&gt; T | None</code></p><ul><li><p><strong>参数</strong></p><ul><li><p><code>coro</code> (Coroutine[Any, Any, T])</p></li><li><p><code>exc</code> (tuple[type[Exception], ...])</p></li><li><p><code>return_on_err</code> (None)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>T | None</li></ul></li></ul><p><strong>2.</strong> <code>(coro, exc, return_on_err) -&gt; T | R</code></p><ul><li><p><strong>参数</strong></p><ul><li><p><code>coro</code> (Coroutine[Any, Any, T])</p></li><li><p><code>exc</code> (tuple[type[Exception], ...])</p></li><li><p><code>return_on_err</code> (R)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>T | R</li></ul></li></ul></li><li><p><strong>参数</strong></p><ul><li><p><code>coro</code>: 要运行的协程</p></li><li><p><code>exc</code>: 要捕获的异常</p></li><li><p><code>return_on_err</code>: 当发生异常时返回的值</p></li></ul></li><li><p><strong>返回</strong></p><p>协程的返回值或发生异常时的指定值</p></li></ul><h2 id="run-coro-with-shield" tabindex="-1"><a class="header-anchor" href="#run-coro-with-shield"><span><em>async def</em> <code>run_coro_with_shield(coro)</code></span></a></h2><ul><li><p><strong>说明:</strong> 运行协程并在取消时屏蔽取消异常。</p></li><li><p><strong>参数</strong></p><ul><li><code>coro</code> (Coroutine[Any, Any, T]): 要运行的协程</li></ul></li><li><p><strong>返回</strong></p><ul><li>T: 协程的返回值</li></ul></li></ul><h2 id="flatten-exception-group" tabindex="-1"><a class="header-anchor" href="#flatten-exception-group"><span><em>def</em> <code>flatten_exception_group(exc_group)</code></span></a></h2><ul><li><p><strong>参数</strong></p><ul><li><code>exc_group</code> (BaseExceptionGroup[E])</li></ul></li><li><p><strong>返回</strong></p><ul><li>Generator[E, None, None]</li></ul></li></ul><h2 id="get-name" tabindex="-1"><a class="header-anchor" href="#get-name"><span><em>def</em> <code>get_name(obj)</code></span></a></h2><ul><li><p><strong>说明:</strong> 获取对象的名称</p></li><li><p><strong>参数</strong></p><ul><li><code>obj</code> (Any)</li></ul></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="path-to-module-name" tabindex="-1"><a class="header-anchor" href="#path-to-module-name"><span><em>def</em> <code>path_to_module_name(path)</code></span></a></h2><ul><li><p><strong>说明:</strong> 转换路径为模块名</p></li><li><p><strong>参数</strong></p><ul><li><code>path</code> (Path)</li></ul></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="resolve-dot-notation" tabindex="-1"><a class="header-anchor" href="#resolve-dot-notation"><span><em>def</em> <code>resolve_dot_notation(obj_str, default_attr, default_prefix=None)</code></span></a></h2><ul><li><p><strong>说明:</strong> 解析并导入点分表示法的对象</p></li><li><p><strong>参数</strong></p><ul><li><p><code>obj_str</code> (str)</p></li><li><p><code>default_attr</code> (str)</p></li><li><p><code>default_prefix</code> (str | None)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h2 id="classproperty" tabindex="-1"><a class="header-anchor" href="#classproperty"><span><em>class</em> <code>classproperty(func)</code></span></a></h2><ul><li><p><strong>说明:</strong> 类属性装饰器</p></li><li><p><strong>参数</strong></p><ul><li><code>func</code> ((Any) -&gt; T)</li></ul></li></ul><h2 id="DataclassEncoder" tabindex="-1"><a class="header-anchor" href="#DataclassEncoder"><span><em>class</em> <code>DataclassEncoder(&lt;auto&gt;)</code></span></a></h2>',37)),l("ul",null,[l("li",null,[l("p",null,[e[1]||(e[1]=l("strong",null,"说明:",-1)),e[2]||(e[2]=o(" 可以序列化 ")),s(n,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/adapters/#Message"},{default:a(()=>e[0]||(e[0]=[o("Message")])),_:1}),e[3]||(e[3]=o("(List[Dataclass]) 的 ")),e[4]||(e[4]=l("code",null,"JSONEncoder",-1))])]),e[5]||(e[5]=l("li",null,[l("p",null,[l("strong",null,"参数")]),l("p",null,"auto")],-1))]),e[7]||(e[7]=t('<h3 id="DataclassEncoder-default" tabindex="-1"><a class="header-anchor" href="#DataclassEncoder-default"><span><em>method</em> <code>default(o)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><code>o</code></li></ul></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h2 id="logger-wrapper" tabindex="-1"><a class="header-anchor" href="#logger-wrapper"><span><em>def</em> <code>logger_wrapper(logger_name)</code></span></a></h2><ul><li><p><strong>说明:</strong> 用于打印 adapter 的日志。</p></li><li><p><strong>参数</strong></p><ul><li><code>logger_name</code> (str): adapter 的名称</li></ul></li><li><p><strong>返回</strong></p><ul><li><p>untyped: 日志记录函数</p><p>日志记录函数的参数:</p><ul><li>level: 日志等级</li><li>message: 日志信息</li><li>exception: 异常信息</li></ul></li></ul></li></ul>',4))])}const m=i(d,[["render",u],["__file","utils.html.vue"]]),_=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/utils.html","title":"nonebot.utils","lang":"zh-CN","frontmatter":{"mdx":{"format":"md"},"sidebar_position":8,"description":"nonebot.utils 模块","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/utils.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"nonebot.utils"}],["meta",{"property":"og:description","content":"nonebot.utils 模块"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nonebot.utils\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.85,"words":855},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.md","excerpt":"\\n<p>本模块包含了 NoneBot 的一些工具函数</p>\\n<h2><em>def</em> <code>escape_tag(s)</code></h2>\\n<ul>\\n<li>\\n<p><strong>说明</strong></p>\\n<p>用于记录带颜色日志时转义 <code>&lt;tag&gt;</code> 类型特殊标签</p>\\n<p>参考: <a href=\\"https://loguru.readthedocs.io/en/stable/api/logger.html#color\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">loguru color 标签</a></p>\\n</li>\\n<li>\\n<p><strong>参数</strong></p>\\n<ul>\\n<li><code>s</code> (str): 需要转义的字符串</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>返回</strong></p>\\n<ul>\\n<li>str</li>\\n</ul>\\n</li>\\n</ul>","bioChainData":{"outlink":[{"title":"index","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.html"}],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.md","value":{"title":"utils","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.md","outlink":["MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md","value":{"title":"index","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md","outlink":[],"backlink":[]}}],"links":[{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"}]}}}');export{m as comp,_ as data};
