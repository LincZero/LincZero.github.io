import{_ as s,e as a,g as l,o as e}from"./app-DeGPQmv-.js";const t={};function n(h,i){return e(),a("div",null,i[0]||(i[0]=[l(`<h1 id="sql语句" tabindex="-1"><a class="header-anchor" href="#sql语句"><span>SQL语句</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="ddl数据定义语言" tabindex="-1"><a class="header-anchor" href="#ddl数据定义语言"><span>DDL数据定义语言</span></a></h1><p>表的增删改查</p><ul><li><code>create</code></li><li><code>drop</code></li><li><code>alter</code></li><li><code>show</code>/<code>desc</code></li></ul><h2 id="create-创建" tabindex="-1"><a class="header-anchor" href="#create-创建"><span>CREATE（创建）</span></a></h2><p><code>create ...</code>，创建表语句，比较长且繁琐</p><h3 id="创建表" tabindex="-1"><a class="header-anchor" href="#创建表"><span>创建表</span></a></h3><div class="language-mysql line-numbers-mode" data-highlighter="shiki" data-ext="mysql" data-title="mysql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>create table 表名(</span></span>
<span class="line"><span>	字段名1 数据类型 [补充],</span></span>
<span class="line"><span>    字段名2 数据类型 [补充],</span></span>
<span class="line"><span>    字段名3 数据类型 [补充],</span></span>
<span class="line"><span>    ...</span></span>
<span class="line"><span>);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>补充：表名在数据库当中一般建议以：<code>t_</code>或<code>tbl_</code>开始</p><h3 id="字段数据类型" tabindex="-1"><a class="header-anchor" href="#字段数据类型"><span>字段数据类型</span></a></h3><p>数据类型</p><table><thead><tr><th style="text-align:right;">数据类型</th><th>说明</th><th>编程语言对应</th><th>应用</th></tr></thead><tbody><tr><td style="text-align:right;">int</td><td>整数型</td><td>int</td><td></td></tr><tr><td style="text-align:right;">bigint</td><td>长整型</td><td>long</td><td></td></tr><tr><td style="text-align:right;">float</td><td>浮点型</td><td>float / double</td><td></td></tr><tr><td style="text-align:right;">char</td><td>定长字符串</td><td>String</td><td></td></tr><tr><td style="text-align:right;">varchar</td><td>可变长字符串</td><td>Java中的 StringBuffer/StringBuilder</td><td></td></tr><tr><td style="text-align:right;">date</td><td>日期类型</td><td>Java中的 java.sql.Date</td><td></td></tr><tr><td style="text-align:right;">BLOB</td><td>二进制大对象</td><td>Java中的 Object</td><td>存储图片、视频等流媒体信息（Binary Large Object）</td></tr><tr><td style="text-align:right;">CLOB</td><td>字符大对象</td><td>Java中的 Object</td><td>存储较大文本，比如可以存储4G的字符串（Character Large Object）</td></tr></tbody></table><p>选用</p><ul><li>char还是varchar <ul><li>存生日定长/日期，存昵称 / 签名可以用动态长度（如1~20）</li><li><code>VARCHAR(50)</code>，不会浪费空间</li><li><code>CHAR(50)</code>，不满50字符串会填充空格至50字符串，浪费空间</li></ul></li><li>BLOB还是CLOB <ul><li>以一个电影表为例</li><li>注意：BLOB不能使用<code>INSERT</code>语句插入，需要使用IO流</li></ul></li></ul><h3 id="字段其他属性-约束" tabindex="-1"><a class="header-anchor" href="#字段其他属性-约束"><span>字段其他属性（约束）</span></a></h3><p>约束类型（Constraint）</p><table><thead><tr><th>约束类型</th><th>缩写</th><th>使用</th><th>约束说明</th></tr></thead><tbody><tr><td>非空约束</td><td>NN</td><td>not null</td><td>约束的字段不能为NULL</td></tr><tr><td>唯一约束</td><td></td><td>unique</td><td>约束的字段不能重复，但可多个NULL</td></tr><tr><td>主键</td><td>PK</td><td>primary key</td><td>约束的字段不能为NULL且不能重复</td></tr><tr><td>外键约束</td><td>FK</td><td>foreign key</td><td>...</td></tr><tr><td><s>检查约束</s></td><td></td><td><s>check</s></td><td>Oracle数据库有Check约束，但MySQL不支持</td></tr><tr><td>自动增加</td><td>AI</td><td>AUTO_Increment</td><td>可以自动维护主键值</td></tr><tr><td></td><td>Default/Expression 默认值</td><td></td><td>默认值</td></tr></tbody></table><h4 id="非空约束" tabindex="-1"><a class="header-anchor" href="#非空约束"><span>非空约束</span></a></h4><p>略</p><ul><li>列级约束 / 表级约束：只有列级约束、没有表级约束</li></ul><h4 id="唯一约束" tabindex="-1"><a class="header-anchor" href="#唯一约束"><span>唯一约束</span></a></h4><ul><li>联合唯一性：单个可重复，配对结果不重复。主键同理</li><li>列级约束 / 表级约束：有列级约束和表级约束，数量任意</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t_user;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> t_user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> unique</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,				</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 【列级约束】单个唯一性</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    usercode </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    username </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    unique</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(usercode,username)	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 【表级约束】联合唯一性</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="主键" tabindex="-1"><a class="header-anchor" href="#主键"><span>主键</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t_user;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> t_user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,			</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 【列级约束】单个唯一性（只能有一个）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    usercode </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    username </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- primary key(id,username)	-- 【表级约束】联合唯一性（不建议）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>范式规则：每个表中都应该有主键。在一些数据库图形化软件中，若没有主键甚至不允许编辑</li><li>主键作用：主键是这行记录在这张表中的唯一标识</li><li>注意要点：一张表的主键约束只能有一个</li><li>主键分类 <ul><li>根据字段数量 <ul><li>单一主键（建议使用）</li><li>复合主键 / 联合主键（不建议，复合主键违背三大范式）</li></ul></li><li>根据主键性质 <ul><li>自然主键：一个与业务没有任何关系的自然数，例如自然增长的主键id（建议）</li><li>业务主键：例如银行卡卡号、身份证号码（不推荐使用）<br> （不建议，因为以后业务一旦发生改变，主键值可能也需要发生变化，但变化可能会导致主键重复）<br> （视频里老师说不建议，但我挺有异议的）</li></ul></li></ul></li><li>列级约束 / 表级约束：有列级约束和表级约束，但一张表只能有一个主键约束</li></ul><h4 id="主键值自增【mysql特有】" tabindex="-1"><a class="header-anchor" href="#主键值自增【mysql特有】"><span>主键值自增【MySQL特有】</span></a></h4><div class="language-mysql line-numbers-mode" data-highlighter="shiki" data-ext="mysql" data-title="mysql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>create table t_user(</span></span>
<span class="line"><span>	id int primary key auto_increment</span></span>
<span class="line"><span>);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Oracle中也提供了一个自增机制，叫做：序列（Sequence）对象</p><h4 id="外键约束" tabindex="-1"><a class="header-anchor" href="#外键约束"><span>外键约束</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> t_class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(		</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 父表，班级表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	cno </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cname </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cno)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> t_student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(		</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 子表，学生表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    sno </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    sname </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    classno </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(classno) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t_calss(cno)	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 外键约束、引用</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>作用：表A的字段必须在表B的字段里</li><li>应用举例：学生表的班级号必须在班级表里面有（学生表是子表，班级表是父表）</li><li>父子表顺序：先创建父表再创建子表、添加数据先添加父表再添加子表、先删除子表再删除父表</li><li>注意：外键字段可以为NULL，被引用的字段不一定是主键但一定是有唯一性的</li></ul><h3 id="存储引擎、与默认字符集" tabindex="-1"><a class="header-anchor" href="#存储引擎、与默认字符集"><span>存储引擎、与默认字符集</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> t_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> auto_increment</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) engine</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">innodb </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> charset</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">utf8;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>简概 <ul><li><code>show create table t_table;</code>显示出来的create建表语句中：最后可能会带有<code>ENGINE = InnoDB DEFAULT CHARSET=utf8</code></li><li>即若不指定存储引擎，默认使用<code>InnoDB</code>存储引擎和<code>utd8</code>字符集</li></ul></li><li>数据库差异 <ul><li>在MySQL中该机制叫<code>存储引擎</code>，但在Oracle中为<code>表的存储方式</code></li></ul></li><li>用途 <ul><li>每一个存储引擎都有优缺点，可选择合适的存储引擎</li></ul></li><li>种类 <ul><li>查看当前mysql支持的存储引擎：<code>show engines \\G</code></li><li>mysql 5.5.36版本支持的有9个</li></ul></li><li>选用 <ul><li>一般用innoDB就行了</li></ul></li></ul><h4 id="myisam-存储引擎" tabindex="-1"><a class="header-anchor" href="#myisam-存储引擎"><span>MyISAM 存储引擎</span></a></h4><ul><li><p>简概</p><ul><li>是MySQL最常用的引擎（不是默认引擎）</li></ul></li><li><p>表的特征</p><ul><li><p>使用三个文件表示每个表</p><ul><li><table><thead><tr><th>文件</th><th>文件名</th><th>文件作用</th></tr></thead><tbody><tr><td>格式文件</td><td><code>mytable.frm</code></td><td>存储表结构的定义</td></tr><tr><td>数据文件</td><td><code>mytable.MYD</code></td><td>存储表行的内容</td></tr><tr><td>索引文件</td><td><code>mytable.MYI</code></td><td>存储表上索引，索引像是目录，能通过缩小范围来加速查询速度</td></tr></tbody></table></li></ul></li><li><p>灵活的AUTO_INCREMENT字段处理</p></li></ul></li><li><p>优点</p><ul><li>可被压缩，节省存储空间</li><li>可转换为只读表，提高检索效率</li></ul></li><li><p>缺点</p><ul><li>不支持事务</li></ul></li></ul><h4 id="innodb-存储引擎" tabindex="-1"><a class="header-anchor" href="#innodb-存储引擎"><span>InnoDB 存储引擎</span></a></h4><ul><li>简概 <ul><li>是MySQL的缺省（默认）引擎</li></ul></li><li>表的特征 <ul><li>每个InnoDB表在数据库目录中以.frm格式文件表示</li><li>InnoDB表空间tablespace被用于存储表的内容（逻辑概念，意味着无法被压缩、无法转换成只读）</li><li>提供一组用来记录事务性活动的日志文件</li><li>用COMMIT（提交）、SAVEPOINT及ROLLBACK（回滚）支持<strong>事务</strong>处理</li><li>提供全ACID兼容</li><li>在MySQL服务器<strong>崩溃后提供自动恢复</strong></li><li>多版本（MVCC）和行级锁定</li><li>支持外键及引用的完整性，包括<strong>级联删除和更新</strong></li></ul></li><li>优点 <ul><li>支持事务、行级锁、外键等。即数据安全性比较好</li></ul></li></ul><h4 id="memory-存储引擎" tabindex="-1"><a class="header-anchor" href="#memory-存储引擎"><span>MEMORY 存储引擎</span></a></h4><ul><li>表的特征 <ul><li>数据库目录内，每个表均以.frm格式的文件表示</li><li>表数据及所有被<strong>存储在内存</strong>中</li><li>表级锁机制</li><li>不能包含TEXT或BLOB字段</li></ul></li><li>优点 <ul><li>查询速度最快</li></ul></li><li>缺点 <ul><li>不支持事务、数据容易丢失。因为所有数据和索引都是存储在内存当中的</li></ul></li><li>补充 <ul><li>以前叫做HEPA引擎</li></ul></li></ul><h2 id="drop-删除" tabindex="-1"><a class="header-anchor" href="#drop-删除"><span>DROP（删除）</span></a></h2><p>写法</p><ul><li><code>drop table 表名</code>，该写法通用</li><li><code>drop table if exists demotable;</code>，当表存在则删除，Oracle不支持这种写法</li></ul><p>怎么删除大表？（几亿）</p><ul><li>删除时间非常长，因为没有释放数据所占空间</li><li><code>truncate table demotable;</code>，表的截断 <ul><li>与<code>delete from demotable</code>比较：特点是速度快，但表被截断、不可回滚（即无法恢复，需慎重，要再三问清楚）</li><li>与<code>drop table demotable;</code>比较，truncate直接截断表中的数据而非删除表</li></ul></li></ul><h2 id="alter-修改" tabindex="-1"><a class="header-anchor" href="#alter-修改"><span>ALTER（修改）</span></a></h2><p>略，使用工具完成即可</p><p>因为开发中表设计后很少会修改表结构，，除非设计得有问题</p><p>一般修改表结构语句不会出现在程序代码中，但一般可以使用可视化工具去修改。不是一定要掌握的</p><h2 id="show-查看-表数据" tabindex="-1"><a class="header-anchor" href="#show-查看-表数据"><span>SHOW（查看 - 表数据）</span></a></h2><ul><li><code>show tables form demotable;</code>，查看指定表 <ul><li><code>show tables;</code>，查看当前表</li></ul></li><li><code>show create table demotable</code>，查看表创建语句</li></ul><h2 id="desc-查看-表结构" tabindex="-1"><a class="header-anchor" href="#desc-查看-表结构"><span>DESC（查看 - 表结构）</span></a></h2><ul><li><code>desc demotable;</code>，查看表结构</li></ul><h2 id="其他表命令" tabindex="-1"><a class="header-anchor" href="#其他表命令"><span>其他表命令</span></a></h2><h3 id="index-索引" tabindex="-1"><a class="header-anchor" href="#index-索引"><span>INDEX（索引）</span></a></h3><ul><li>作用 <ul><li>相当于一本书的目录，可以快速找到对应的资源</li><li>查询一张表有两种检索方式：全面扫描和根据索引检索（效率很高）</li></ul></li><li>原理 <ul><li>作用原理：根本原理是缩小了扫描的范围</li><li>实现原理：B+树</li><li>深剖原理流程 <ul><li>添加索引时 <ul><li>给某个字段添加索引后，会先对该字段进行自动排序并保存（硬盘/内存）为一个对象（叫<code>索引对象</code>）</li><li>然后对排序过后的字段进行层层分区</li></ul></li><li>检索时 <ul><li>先看条件的字段有没有索引，若有则找到对应的索引对象</li><li>层层定位，如 “SMITH”，先定位S区，继续定位M区......然后缩小扫描的范围，直接定位到物理地址</li><li>（每一行记录都有一个对应的物理地址，该物理地址在Oracle中叫 rowid）最后想当与<code>where 物理地址 = 0x???;</code></li></ul></li></ul></li></ul></li><li>缺点 <ul><li>不能随意添加索引，因为所以也是数据库当中的对象，也需要数据库不断的维护，有维护成本</li><li>比如表中的数据经常被修改就不适合添加索引</li><li>因为数据一旦修改，索引需要重新排序、进行维护</li><li>注意：索引可能会失效：当使用模糊查询且第一个通配符为%时</li></ul></li><li>使用场景 <ul><li>数据量庞大</li><li>很少的DML操作</li><li>该字段经常出现在WHERE子句中（当该字段没有索引是进行全表扫描）</li></ul></li><li>索引分类 <ul><li>单一索引，给单个字段添加索引</li><li>复合索引，给多个字段联合起来添加1个索引</li><li>主键索引：主键上会自动添加索引（启示：根据主键查询效率较高，尽量根据主键检索）</li><li>唯一索引，有unique约束的字段上会自动添加索引（主键和具有unique约束的字段会自动添加索引）</li><li>......</li></ul></li></ul><h4 id="添加索引" tabindex="-1"><a class="header-anchor" href="#添加索引"><span>添加索引</span></a></h4><p>添加索引是给某一字段，或某些字段添加索引</p><ul><li>添加索引 <ul><li>格式：<code>create index 索引名称 on 表名(字段名);</code></li><li>举例：<code>create index emp_sal_index on emp(sal);</code></li></ul></li><li>删除索引 <ul><li>格式：<code>drop index 索引名称 on 表名;</code></li></ul></li></ul><h4 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h4><p>查看sql语句的执行计划，可以用来验证查询的范围</p><p><code>explain select</code></p><p>如<code>explain select ename,sal from emp where sal = 5000;</code></p><h3 id="view-视图" tabindex="-1"><a class="header-anchor" href="#view-视图"><span>VIEW（视图）</span></a></h3><ul><li>简概 <ul><li>站在不同的角度去看数据</li></ul></li><li>使用 <ul><li>创建视图：<code>create view myview as select empno,ename from emp;</code></li><li>删除视图：<code>drop view myview;</code></li></ul></li><li>面向视图操作 <ul><li>对视图进行增删改查，会影响到原表数据</li></ul></li><li>应用 <ul><li>可减少列数、使用别名</li><li>可隐藏表的实现细节，保密级别较高的系统，数据库只对外提供相关的视图。程序员只对视图对象进行CRUD</li></ul></li></ul><p>示例</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> emp1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> emp;				</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 创建新表（根据旧表）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> emp1;									</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 查看表</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> view</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> myview</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id,ename </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> emp1;	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 创建视图（仅显示两个字段）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> myview;								</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 查看视图</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> myview </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ename</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;hehe&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;		</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 更新视图，会影响到原表数据</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,69)]))}const r=s(t,[["render",n],["__file","04. DDL数据定义语言.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/02.%20MySQL/SQL%E8%AF%AD%E5%8F%A5/04.%20DDL%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80.html","title":"SQL语句","lang":"zh-CN","frontmatter":{"description":"SQL语句 目录 DDL数据定义语言 表的增删改查 create drop alter show/desc CREATE（创建） create ...，创建表语句，比较长且繁琐 创建表 补充：表名在数据库当中一般建议以：t_或tbl_开始 字段数据类型 数据类型 选用 char还是varchar 存生日定长/日期，存昵称 / 签名可以用动态长度（如1~...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/02.%20MySQL/SQL%E8%AF%AD%E5%8F%A5/04.%20DDL%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"SQL语句"}],["meta",{"property":"og:description","content":"SQL语句 目录 DDL数据定义语言 表的增删改查 create drop alter show/desc CREATE（创建） create ...，创建表语句，比较长且繁琐 创建表 补充：表名在数据库当中一般建议以：t_或tbl_开始 字段数据类型 数据类型 选用 char还是varchar 存生日定长/日期，存昵称 / 签名可以用动态长度（如1~..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL语句\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":8.96,"words":2688},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/02. MySQL/SQL语句/04. DDL数据定义语言.md","excerpt":"\\n<h1>目录</h1>\\n<h1>DDL数据定义语言</h1>\\n<p>表的增删改查</p>\\n<ul>\\n<li><code>create</code></li>\\n<li><code>drop</code></li>\\n<li><code>alter</code></li>\\n<li><code>show</code>/<code>desc</code></li>\\n</ul>\\n<h2>CREATE（创建）</h2>\\n<p><code>create ...</code>，创建表语句，比较长且繁琐</p>\\n<h3>创建表</h3>\\n<div class=\\"language-mysql line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"mysql\\" data-title=\\"mysql\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>create table 表名(</span></span>\\n<span class=\\"line\\"><span>\\t字段名1 数据类型 [补充],</span></span>\\n<span class=\\"line\\"><span>    字段名2 数据类型 [补充],</span></span>\\n<span class=\\"line\\"><span>    字段名3 数据类型 [补充],</span></span>\\n<span class=\\"line\\"><span>    ...</span></span>\\n<span class=\\"line\\"><span>);</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/02. MySQL/SQL语句/04. DDL数据定义语言.md","value":{"title":"04. DDL数据定义语言","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/02. MySQL/SQL语句/04. DDL数据定义语言.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,p as data};
