import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,a as s,d as n,b as p,e as a}from"./app-DtBZtuIa.js";const l={},u=a(`<h1 id="obsidian" tabindex="-1"><a class="header-anchor" href="#obsidian"><span>Obsidian</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="常用工具手册" tabindex="-1"><a class="header-anchor" href="#常用工具手册"><span>常用工具手册</span></a></h1><h2 id="plugin类" tabindex="-1"><a class="header-anchor" href="#plugin类"><span>Plugin类</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Plugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;obsidian&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ExamplePlugin</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">onload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// highlight-next-line</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;loading plugin&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">async</span> <span class="token function">onunload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// highlight-next-line</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;unloading plugin&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="codemirror5" tabindex="-1"><a class="header-anchor" href="#codemirror5"><span>CodeMirror5</span></a></h2><p>与编辑器扩展通信</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> EditorView <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@codemirror/view&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// @ts-expect-error, not typed</span>
<span class="token keyword">const</span> editorView <span class="token operator">=</span> view<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>cm <span class="token keyword">as</span> EditorView<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token string">&quot;example-editor-command&quot;</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&quot;Example editor command&quot;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">editorCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span>editor<span class="token punctuation">,</span> view<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error, not typed</span>
    <span class="token keyword">const</span> editorView <span class="token operator">=</span> view<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>cm <span class="token keyword">as</span> EditorView<span class="token punctuation">;</span>

    <span class="token keyword">const</span> plugin <span class="token operator">=</span> editorView<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span>examplePlugin<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>plugin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      plugin<span class="token punctuation">.</span><span class="token function">addPointerToSelection</span><span class="token punctuation">(</span>editorView<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),r={href:"https://luhaifeng666.github.io/obsidian-plugin-docs-zh/zh2.0/editor/extensions/state-fields.html#dispatching-state-effects",target:"_blank",rel:"noopener noreferrer"},k=a(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token string">&quot;example-editor-command&quot;</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&quot;Example editor command&quot;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">editorCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span>editor<span class="token punctuation">,</span> view<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error, not typed</span>
    <span class="token keyword">const</span> editorView <span class="token operator">=</span> view<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>cm <span class="token keyword">as</span> EditorView<span class="token punctuation">;</span>

    editorView<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      effects<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// ...</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="小部件" tabindex="-1"><a class="header-anchor" href="#小部件"><span>小部件</span></a></h4><p>小部件是您添加到编辑器中的自定义 HTML 标签。您可以在文档中的特定位置插入一个小部件，或者用一个小部件替换一段内容。</p><p>下例中定义了一个返回 <code>&lt;span&gt;👉&lt;/span&gt;</code> HTML 标签的小部件。您将在稍后使用到它。</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> EditorView<span class="token punctuation">,</span> WidgetType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@codemirror/view&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">EmojiWidget</span> <span class="token keyword">extends</span> <span class="token class-name">WidgetType</span> <span class="token punctuation">{</span>
  <span class="token function">toDOM</span><span class="token punctuation">(</span>view<span class="token operator">:</span> EditorView<span class="token punctuation">)</span><span class="token operator">:</span> HTMLElement <span class="token punctuation">{</span>
    <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&quot;👉&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> div<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),d={href:"https://codemirror.net/docs/ref/#view.Decoration%5Ereplace",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">const</span> decoration <span class="token operator">=</span> Decoration<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  widget<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">EmojiWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="插件案例剖析" tabindex="-1"><a class="header-anchor" href="#插件案例剖析"><span>插件案例剖析</span></a></h1><h2 id="纯obsidian接口" tabindex="-1"><a class="header-anchor" href="#纯obsidian接口"><span>纯Obsidian接口</span></a></h2><h3 id="list-callout" tabindex="-1"><a class="header-anchor" href="#list-callout"><span>List-Callout</span></a></h3><p>比较简单</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// 超简化版代码</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ListCalloutsPlugin</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">onload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildPostProcessorConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 后处理器的配置</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addSettingTab</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 设置</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerMarkdownPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// md后处理器（渲染模式用）</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerEditorExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 编辑器扩展（实时编辑时用）</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ad" tabindex="-1"><a class="header-anchor" href="#ad"><span>Ad</span></a></h3><p><code>import type codemirror from &quot;codemirror&quot;;</code></p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// 超简化版代码</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ObsidianAdmonition</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span>workspace<span class="token punctuation">.</span><span class="token function">onLayoutReady</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>addChild

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerEditorSuggest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 编辑建议</span>

        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>admonitions<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addSettingTab</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&quot;Collapse Admonitions in Note&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加命令</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&quot;Open Admonitions in Note&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&quot;Insert Admonition&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&quot;Insert Callout&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">registerType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        MarkdownPreviewRenderer<span class="token punctuation">.</span><span class="token function">unregisterCodeBlockPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerMarkdownCodeBlockProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 代码块处理</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerCommandsFor</span><span class="token punctuation">(</span>admonition<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这个不是原方法，自己定义的</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>捋一下调用关系</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>    <span class="token doc-comment comment">/** 【捋一下调用关系】
     * 主入口onload() 调用
     *     registerType &gt; this.registerMarkdownCodeBlockProcessor（注册代码块事件） 调用
     *         postprocessor（此函数，后处理器）调用
     *             getAdmonitionElement（获取Ad元素）
     *             renderAdmonitionContent（渲染Ad内容）调用
     *                 getAdmonitionContentElement（获取Ad内容的元素）
     */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="table-extended" tabindex="-1"><a class="header-anchor" href="#table-extended"><span>Table-Extended</span></a></h3><p><mark>（详见注释版源代码）</mark></p><p>用了Markdowm-it工具</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// 超简化版代码</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">TableExtended</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">onload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addSettingTab</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TableExtendedSettingTab</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 设置</span>
        MarkdownPreviewRenderer<span class="token punctuation">.</span><span class="token function">registerPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>processNativeTable<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// ？？？后处理器</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerMarkdownCodeBlockProcessor</span><span class="token punctuation">(</span><span class="token string">&quot;tx&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderFromMD<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 代码块处理</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerMarkdownPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>processTextSection<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// md后处理器（渲染模式用）</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后处理器：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token function-variable function">processTextSection</span> <span class="token operator">=</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span> ctx<span class="token operator">:</span> MarkdownPostProcessorContext<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// el contains only els for one block in preview;</span>
    <span class="token comment">// el contains els for all blocks in export2pdf</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> child <span class="token keyword">of</span> el<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> p<span class="token operator">:</span> HTMLParagraphElement<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token keyword">instanceof</span> <span class="token class-name">HTMLParagraphElement</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        p <span class="token operator">=</span> child<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
        child <span class="token keyword">instanceof</span> <span class="token class-name">HTMLQuoteElement</span> <span class="token operator">&amp;&amp;</span>
        child<span class="token punctuation">.</span>firstElementChild <span class="token keyword">instanceof</span> <span class="token class-name">HTMLParagraphElement</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        p <span class="token operator">=</span> child<span class="token punctuation">.</span>firstElementChild<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>

      <span class="token keyword">let</span> result<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>innerHTML<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;-tx-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> src <span class="token operator">=</span> <span class="token function">getSourceMarkdown</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;failed to get Markdown text, escaping...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>result <span class="token operator">=</span> src<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>prefixPatternInMD<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> footnoteSelector <span class="token operator">=</span> <span class="token string">&quot;sup.footnote-ref&quot;</span><span class="token punctuation">;</span>
          <span class="token comment">// save footnote refs</span>
          <span class="token keyword">const</span> footnoteRefs <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token operator">...</span>el<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span>footnoteSelector<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token comment">// footnote refs is replaced by new ones during rendering</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderFromMD</span><span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span> el<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// post process to revert footnote refs</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> newRefs <span class="token keyword">of</span> el<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span>footnoteSelector<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newRefs<span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span>footnoteRefs<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> fnSection <span class="token keyword">of</span> el<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;section.footnotes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fnSection<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用了cm接口" tabindex="-1"><a class="header-anchor" href="#使用了cm接口"><span>使用了CM接口</span></a></h2><h3 id="decoration类" tabindex="-1"><a class="header-anchor" href="#decoration类"><span>Decoration类</span></a></h3><h4 id="cm6-decoration" tabindex="-1"><a class="header-anchor" href="#cm6-decoration"><span>cm6-Decoration</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">corateView</span><span class="token punctuation">(</span>view<span class="token operator">:</span> EditorView<span class="token punctuation">)</span><span class="token operator">:</span> DecorationSet <span class="token punctuation">{</span>
    <span class="token comment">/* 注释掉这个实际上装饰将不会触发/更新，除非视口改变 */</span>
    <span class="token comment">// 只有在初始加载时，才会同时在所有窗格/叶/视图/注释上运行</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>view<span class="token punctuation">.</span>hasFocus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;This Editor does not have focus so skip...&quot;</span><span class="token punctuation">,</span> view<span class="token punctuation">,</span> view<span class="token punctuation">.</span>hasFocus<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>myPlugin<span class="token punctuation">.</span>cm6LastEditorFocus <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTFileFromView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">focused</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Decoration<span class="token punctuation">.</span>none<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">/* 现在不需要这段代码，但是保存起来可以方便地获得活动的cm编辑器 */</span>
    <span class="token keyword">const</span> cmEditor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCmEditorFromView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmEditor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> getCursor <span class="token operator">=</span> cmEditor<span class="token punctuation">.</span><span class="token function">getCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> getLine <span class="token operator">=</span> cmEditor<span class="token punctuation">.</span><span class="token function">getLine</span><span class="token punctuation">(</span>getCursor<span class="token punctuation">.</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// console.log(&quot;getCursor:&quot;, getCursor);</span>
        <span class="token comment">// console.log(&quot;getLine:&quot;, getLine);</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取一些东西 (TFile和Editor)</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> editorInfoField <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;obsidian&#39;</span><span class="token punctuation">;</span>	<span class="token comment">// 我刚开始还以为是个变量，原来是个StateField&lt;MarkdownFileInfo&gt;类型的常量</span>

<span class="token function">getTFileFromView</span><span class="token punctuation">(</span>view<span class="token operator">:</span> EditorView<span class="token punctuation">)</span><span class="token operator">:</span> TFile <span class="token punctuation">{</span>
    <span class="token comment">// 从当前的EditorView获取TFile</span>
    <span class="token keyword">const</span> myTFile <span class="token operator">=</span> view<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span>editorInfoField<span class="token punctuation">)</span><span class="token punctuation">.</span>file<span class="token punctuation">;</span>
    <span class="token keyword">return</span> myTFile<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">getCmEditorFromView</span><span class="token punctuation">(</span>view<span class="token operator">:</span> EditorView<span class="token punctuation">)</span><span class="token operator">:</span> Editor <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取CM编辑器对象，用于抓取光标、行等</span>
    <span class="token keyword">const</span> cmEditor <span class="token operator">=</span> view<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span>editorInfoField<span class="token punctuation">)</span><span class="token punctuation">.</span>editor<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmEditor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> cmEditor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>核心</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// Plugin</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">MyPlugin</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">editorExtension</span><span class="token operator">:</span> Extension<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">async</span> <span class="token function">onload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerEditorExtension</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>editorExtension<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 【启动高亮】</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>editorExtension<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">suggestionsExtension</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span>workspace<span class="token punctuation">.</span><span class="token function">updateOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// ViewPlugin</span>
<span class="token keyword">const</span> suggestionsExtension <span class="token operator">=</span> <span class="token punctuation">(</span>plugin<span class="token operator">:</span> MyPlugin<span class="token punctuation">)</span><span class="token operator">:</span> ViewPlugin<span class="token operator">&lt;</span>PluginValue<span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ViewPlugin<span class="token punctuation">.</span><span class="token function">fromClass</span><span class="token punctuation">(</span>
        <span class="token comment">// 这个类有个构造参数 view: EditorView</span>
        <span class="token keyword">class</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">decorations</span><span class="token operator">:</span> DecorationSet<span class="token punctuation">;</span>
            <span class="token literal-property property">myPlugin</span><span class="token operator">:</span> MyPlugin<span class="token punctuation">;</span>

            <span class="token comment">// 对于每个被打开的文档，都会执行一次</span>
            <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">view</span><span class="token operator">:</span> EditorView</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

            <span class="token comment">// 当前焦点文档发生变化时（包括光标位置的改变和上下滚动文档导致的visibleRanges改变）</span>
            <span class="token keyword">public</span> <span class="token function">update</span><span class="token punctuation">(</span>update<span class="token operator">:</span> ViewUpdate<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token function-variable function">decorations</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">view</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> view<span class="token punctuation">.</span>decorations<span class="token punctuation">,</span>
            <span class="token literal-property property">eventHandlers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token function-variable function">mousedown</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">e</span><span class="token operator">:</span> MouseEvent<span class="token punctuation">,</span> <span class="token literal-property property">view</span><span class="token operator">:</span> EditorView</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用调试</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> editorView <span class="token operator">=</span> view<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>cm <span class="token keyword">as</span> EditorView<span class="token punctuation">;</span>	<span class="token comment">// 此view非彼view，此view不是EditorView，不知道哪来的</span>
<span class="token comment">// 或</span>
<span class="token keyword">const</span> view <span class="token operator">=</span> ViewPlugin<span class="token punctuation">.</span>fromClass 中的 view<span class="token operator">:</span> EditorView
<span class="token keyword">const</span> <span class="token literal-property property">myFile</span><span class="token operator">:</span> TFile <span class="token operator">=</span> view<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span>editorInfoField<span class="token punctuation">)</span><span class="token punctuation">.</span>file<span class="token punctuation">;</span>
<span class="token comment">// string类</span>
view<span class="token punctuation">.</span>state<span class="token punctuation">.</span>doc<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">{</span> from<span class="token punctuation">,</span> to <span class="token punctuation">}</span> <span class="token keyword">of</span> visibleRanges<span class="token punctuation">)</span>
view<span class="token punctuation">.</span>hasFocus
view<span class="token punctuation">.</span>state<span class="token punctuation">.</span>selection
<span class="token keyword">const</span> textToHighlight <span class="token operator">=</span> view<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">sliceDoc</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> to<span class="token punctuation">)</span>
<span class="token keyword">const</span> visibleRange <span class="token operator">=</span> from<span class="token operator">-</span>to<span class="token punctuation">,</span> textToHighlight
<span class="token keyword">const</span> matchesToIgnore <span class="token operator">=</span> textToHighlight<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>regExIgnore<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> eachPart <span class="token keyword">of</span> matchesToIgnore<span class="token punctuation">)</span>
<span class="token literal-property property">update</span><span class="token operator">:</span> ViewUpdate    <span class="token comment">// 您可以在 \`update()\` 方法中添加 \`console.log(update);\` 这行代码以在控制台中打印所有的更新内容</span>
    
<span class="token keyword">const</span> cmEditor <span class="token operator">=</span> view<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span>editorInfoField<span class="token punctuation">)</span><span class="token punctuation">.</span>editor<span class="token punctuation">;</span>
<span class="token keyword">const</span> cursor <span class="token operator">=</span> cmEditor<span class="token punctuation">.</span><span class="token function">getCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="decoration-压缩版、精简版-anyblockplugin-beta" tabindex="-1"><a class="header-anchor" href="#decoration-压缩版、精简版-anyblockplugin-beta"><span>Decoration 压缩版、精简版（AnyBlockPlugin_beta）</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">AnyBlockPlugin</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>
  
	<span class="token keyword">async</span> <span class="token function">onload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerEditorExtension</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">editorExtension</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">editorExtension</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">plugin_this</span><span class="token operator">:</span> AnyBlockPlugin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> ViewPlugin<span class="token punctuation">.</span><span class="token function">fromClass</span><span class="token punctuation">(</span>
			<span class="token keyword">class</span> <span class="token punctuation">{</span>
				<span class="token literal-property property">decorations</span><span class="token operator">:</span> DecorationSet<span class="token punctuation">;</span>

				<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">view</span><span class="token operator">:</span> EditorView</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">this</span><span class="token punctuation">.</span>decorations <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildDecorations</span><span class="token punctuation">(</span><span class="token comment">/*plugin_this*/</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>

				<span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">update</span><span class="token operator">:</span> ViewUpdate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>update<span class="token punctuation">.</span>docChanged <span class="token operator">||</span> update<span class="token punctuation">.</span>viewportChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token keyword">this</span><span class="token punctuation">.</span>decorations <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildDecorations</span><span class="token punctuation">(</span><span class="token comment">/*plugin_this*/</span>update<span class="token punctuation">.</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
        		<span class="token punctuation">}</span>
        
                <span class="token comment">// @private</span>
                <span class="token function">buildDecorations</span><span class="token punctuation">(</span>view<span class="token operator">:</span> EditorView<span class="token punctuation">)</span><span class="token operator">:</span> DecorationSet <span class="token punctuation">{</span>
                  <span class="token keyword">const</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RangeSetBuilder</span><span class="token operator">&lt;</span>Decoration<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 范围生成器</span>
                  <span class="token keyword">let</span> <span class="token literal-property property">underlineDecoration</span><span class="token operator">:</span> Decoration <span class="token operator">=</span> Decoration<span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment">// 核心，装饰四个主要方法里的mark方法 —— 标记装饰</span>
                    <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;cm-suggestion-candidate&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">attributes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token string-property property">&#39;data-index-keyword&#39;</span><span class="token operator">:</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span>
                        <span class="token string-property property">&#39;data-position-start&#39;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">20</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
                        <span class="token string-property property">&#39;data-position-end&#39;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">30</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  builder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> underlineDecoration<span class="token punctuation">)</span>
                  <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token function-variable function">decorations</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>decorations<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="obsidian-手册的-viewplugin-案例" tabindex="-1"><a class="header-anchor" href="#obsidian-手册的-viewplugin-案例"><span>Obsidian 手册的 ViewPlugin 案例</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> syntaxTree <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@codemirror/language&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> RangeSetBuilder <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@codemirror/state&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  Decoration<span class="token punctuation">,</span>
  DecorationSet<span class="token punctuation">,</span>
  EditorView<span class="token punctuation">,</span>
  PluginSpec<span class="token punctuation">,</span>
  PluginValue<span class="token punctuation">,</span>
  ViewPlugin<span class="token punctuation">,</span>
  ViewUpdate<span class="token punctuation">,</span>
  WidgetType<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@codemirror/view&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> EmojiWidget <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;emoji&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 基本都是规范写法</span>
<span class="token keyword">class</span> <span class="token class-name">EmojiListPlugin</span> <span class="token keyword">implements</span> <span class="token class-name">PluginValue</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">decorations</span><span class="token operator">:</span> DecorationSet<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">view</span><span class="token operator">:</span> EditorView</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>decorations <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildDecorations</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">update</span><span class="token operator">:</span> ViewUpdate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>update<span class="token punctuation">.</span>docChanged <span class="token operator">||</span> update<span class="token punctuation">.</span>viewportChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>decorations <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildDecorations</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">// @Private</span>
  <span class="token function">buildDecorations</span><span class="token punctuation">(</span>view<span class="token operator">:</span> EditorView<span class="token punctuation">)</span><span class="token operator">:</span> DecorationSet <span class="token punctuation">{</span>
    <span class="token keyword">const</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RangeSetBuilder</span><span class="token operator">&lt;</span>Decoration<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">{</span> from<span class="token punctuation">,</span> to <span class="token punctuation">}</span> <span class="token keyword">of</span> view<span class="token punctuation">.</span>visibleRanges<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">syntaxTree</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        from<span class="token punctuation">,</span>
        to<span class="token punctuation">,</span>
        <span class="token function">enter</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Position of the &#39;-&#39; or the &#39;*&#39;.</span>
            <span class="token keyword">const</span> listCharFrom <span class="token operator">=</span> node<span class="token punctuation">.</span>from <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>

            builder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
              listCharFrom<span class="token punctuation">,</span>
              listCharFrom <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
              Decoration<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">widget</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">EmojiWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token literal-property property">pluginSpec</span><span class="token operator">:</span> PluginSpec<span class="token operator">&lt;</span>EmojiListPlugin<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">decorations</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> EmojiListPlugin</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">.</span>decorations<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> emojiListPlugin <span class="token operator">=</span> ViewPlugin<span class="token punctuation">.</span><span class="token function">fromClass</span><span class="token punctuation">(</span>
  EmojiListPlugin<span class="token punctuation">,</span>
  pluginSpec
<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31);function m(b,w){const t=o("ExternalLinkIcon");return c(),i("div",null,[u,s("p",null,[n("您可以在编辑器视图内直接派发变动以及"),s("a",r,[n("state effects"),p(t)]),n("。")]),k,s("p",null,[n("要想使用 emoji 小部件替换您文档中的一部分内容，可以使用"),s("a",d,[n("替换装饰"),p(t)]),n("。")]),v])}const f=e(l,[["render",m],["__file","09. 案例剖析.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/Obsidian/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/09.%20%E6%A1%88%E4%BE%8B%E5%89%96%E6%9E%90.html","title":"Obsidian","lang":"zh-CN","frontmatter":{"description":"Obsidian 目录 常用工具手册 Plugin类 CodeMirror5 与编辑器扩展通信 您可以在编辑器视图内直接派发变动以及state effects。 小部件 小部件是您添加到编辑器中的自定义 HTML 标签。您可以在文档中的特定位置插入一个小部件，或者用一个小部件替换一段内容。 下例中定义了一个返回 <span>👉</span> HTML...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/Obsidian/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/09.%20%E6%A1%88%E4%BE%8B%E5%89%96%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Obsidian"}],["meta",{"property":"og:description","content":"Obsidian 目录 常用工具手册 Plugin类 CodeMirror5 与编辑器扩展通信 您可以在编辑器视图内直接派发变动以及state effects。 小部件 小部件是您添加到编辑器中的自定义 HTML 标签。您可以在文档中的特定位置插入一个小部件，或者用一个小部件替换一段内容。 下例中定义了一个返回 <span>👉</span> HTML..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Obsidian\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Obsidian","slug":"obsidian","link":"#obsidian","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"常用工具手册","slug":"常用工具手册","link":"#常用工具手册","children":[{"level":2,"title":"Plugin类","slug":"plugin类","link":"#plugin类","children":[]},{"level":2,"title":"CodeMirror5","slug":"codemirror5","link":"#codemirror5","children":[{"level":4,"title":"小部件","slug":"小部件","link":"#小部件","children":[]}]}]},{"level":1,"title":"插件案例剖析","slug":"插件案例剖析","link":"#插件案例剖析","children":[{"level":2,"title":"纯Obsidian接口","slug":"纯obsidian接口","link":"#纯obsidian接口","children":[{"level":3,"title":"List-Callout","slug":"list-callout","link":"#list-callout","children":[]},{"level":3,"title":"Ad","slug":"ad","link":"#ad","children":[]},{"level":3,"title":"Table-Extended","slug":"table-extended","link":"#table-extended","children":[]}]},{"level":2,"title":"使用了CM接口","slug":"使用了cm接口","link":"#使用了cm接口","children":[{"level":3,"title":"Decoration类","slug":"decoration类","link":"#decoration类","children":[{"level":4,"title":"cm6-Decoration","slug":"cm6-decoration","link":"#cm6-decoration","children":[]},{"level":4,"title":"Decoration 压缩版、精简版（AnyBlockPlugin_beta）","slug":"decoration-压缩版、精简版-anyblockplugin-beta","link":"#decoration-压缩版、精简版-anyblockplugin-beta","children":[]},{"level":4,"title":"Obsidian 手册的 ViewPlugin 案例","slug":"obsidian-手册的-viewplugin-案例","link":"#obsidian-手册的-viewplugin-案例","children":[]}]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.78,"words":1435},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Type/Doc/MarkdwonAbout/Obsidian/插件开发/09. 案例剖析.md","autoDesc":true}');export{f as comp,h as data};
