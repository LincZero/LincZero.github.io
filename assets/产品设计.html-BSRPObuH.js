import{_ as t,c as p,a as n,o as l}from"./app-Dk2XlTVI.js";const E={};function o(i,e){return l(),p("div",null,e[0]||(e[0]=[n('<h1 id="产品设计" tabindex="-1"><a class="header-anchor" href="#产品设计"><span>产品设计</span></a></h1><p>我想要做一个，可以将任意语言语言项目轻松挂接在上面的工具箱软件</p><p>为此需要：</p><ul><li><p>多种可以同时使用的插件系统</p><ul><li><p>脚本类</p><p>多环境解决：可以指定每个插件的环境。</p><p>当然要开发的人来说会指定默认环境避免最后环境过多，但对于迁移挂载来说，也能提供一个适用的</p></li><li><p>编译类</p><p>多环境解决：这里的多环境比较复杂，最好能有源代码和CICD流程，软件会自动clone和编译</p></li><li><p>服务类</p><p>这个最好解决，不需要解决环境问题</p></li></ul></li><li><p>社区插件服务</p></li></ul>',4)]))}const a=t(E,[["render",o],["__file","产品设计.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/05.%20%E6%8F%92%E4%BB%B6%E4%BD%93%E7%B3%BB/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1.html","title":"产品设计","lang":"zh-CN","frontmatter":{"Permission":"private","description":"产品设计 我想要做一个，可以将任意语言语言项目轻松挂接在上面的工具箱软件 为此需要： 多种可以同时使用的插件系统 脚本类 多环境解决：可以指定每个插件的环境。 当然要开发的人来说会指定默认环境避免最后环境过多，但对于迁移挂载来说，也能提供一个适用的 编译类 多环境解决：这里的多环境比较复杂，最好能有源代码和CICD流程，软件会自动clone和编译 服务...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/05.%20%E6%8F%92%E4%BB%B6%E4%BD%93%E7%B3%BB/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"产品设计"}],["meta",{"property":"og:description","content":"产品设计 我想要做一个，可以将任意语言语言项目轻松挂接在上面的工具箱软件 为此需要： 多种可以同时使用的插件系统 脚本类 多环境解决：可以指定每个插件的环境。 当然要开发的人来说会指定默认环境避免最后环境过多，但对于迁移挂载来说，也能提供一个适用的 编译类 多环境解决：这里的多环境比较复杂，最好能有源代码和CICD流程，软件会自动clone和编译 服务..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"产品设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"产品设计","slug":"产品设计","link":"#产品设计","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.59,"words":176},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/03. Tools/02. 管理层/03. 多项目管理/05. 插件体系/产品设计.md","excerpt":"\\n<p>我想要做一个，可以将任意语言语言项目轻松挂接在上面的工具箱软件</p>\\n<p>为此需要：</p>\\n<ul>\\n<li>\\n<p>多种可以同时使用的插件系统</p>\\n<ul>\\n<li>\\n<p>脚本类</p>\\n<p>多环境解决：可以指定每个插件的环境。</p>\\n<p>当然要开发的人来说会指定默认环境避免最后环境过多，但对于迁移挂载来说，也能提供一个适用的</p>\\n</li>\\n<li>\\n<p>编译类</p>\\n<p>多环境解决：这里的多环境比较复杂，最好能有源代码和CICD流程，软件会自动clone和编译</p>\\n</li>\\n<li>\\n<p>服务类</p>\\n<p>这个最好解决，不需要解决环境问题</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>社区插件服务</p>\\n</li>\\n</ul>","autoDesc":true}');export{a as comp,c as data};
