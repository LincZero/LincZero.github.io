import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,e}from"./app-yixEWCFr.js";const t="/assets/01156-K5cGDUjG.jpeg",l={},i=e(`<h1 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h1><p>在Java中，一共有8种基本类型（primitive type）</p><ul><li>4种整型</li><li>2种浮点类型</li><li>1种用于表示Unicode编码的字符单元的字符类型char</li><li>1种用于表示真值的boolean类型</li></ul><h2 id="常量泛操作" tabindex="-1"><a class="header-anchor" href="#常量泛操作"><span>常量泛操作</span></a></h2><h3 id="普通常量" tabindex="-1"><a class="header-anchor" href="#普通常量"><span>普通常量</span></a></h3><p>final关键字：指示常量</p><p>关键字final表示这个变量只能被赋值一次。一旦被赋值之后，就不能够再更改了。习惯上，常量名使用全大写。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstSample</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">CM_PER_INCH</span> <span class="token operator">=</span> <span class="token number">2.54</span><span class="token punctuation">;</span>			<span class="token comment">// 定义常量</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>与C/C++的不同</mark></p><ul><li>const关键字：在C++中用于定义常量。在Java中是保留的关键字，目前并没有使用。在Java中，必须使用final定义常量</li><li>final关键字：在Java中用于定义常量。在C++11中被用于禁止继承或禁止虚函数的</li></ul><h3 id="类常量" tabindex="-1"><a class="header-anchor" href="#类常量"><span>类常量</span></a></h3><p>在Java中，经常希望某个常量可以在一个类中的多个方法中使用，通常将这些常量称为类常量。可以使用关键字static final设置一个类常量</p><p>需要注意，类常量的定义位于main方法的外部。因此，在同一个类的其他方法中也可以使用这个常量。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstSample</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">CM_PER_INCH</span> <span class="token operator">=</span> <span class="token number">2.54</span><span class="token punctuation">;</span>	<span class="token comment">// 定义类常量</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="变量泛操作" tabindex="-1"><a class="header-anchor" href="#变量泛操作"><span>变量泛操作</span></a></h2><h3 id="变量定义" tabindex="-1"><a class="header-anchor" href="#变量定义"><span>变量定义</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">double</span> d<span class="token punctuation">;</span>
<span class="token keyword">int</span> i<span class="token punctuation">;</span>
<span class="token keyword">long</span> l<span class="token punctuation">;</span>
<span class="token keyword">boolean</span> b<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>变量初始化</p><p>[省略]</p><p>在Java中可以将声明放在代码中的任何地方。在Java中，变量的声明尽可能地靠近变量第一次使用的地方，这是一种良好的程序编写风格。</p><p><mark>与C/C++区别</mark></p><ul><li>C和C++：区分变量的声明与定义</li><li>Java：不区分变量的声明与定义</li></ul><h3 id="骚操作" tabindex="-1"><a class="header-anchor" href="#骚操作"><span>骚操作</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>	<span class="token comment">// 单行定义多个变量</span>
<span class="token comment">// 不过，不提倡使用这种风格。逐一声明每一个变量可以提高程序的可读性。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换"><span>类型转换</span></a></h3><h4 id="隐式转换" tabindex="-1"><a class="header-anchor" href="#隐式转换"><span>隐式转换</span></a></h4><p>直接赋值，隐式转换即可</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>int n = 123456789;
float f = n;		// f is 1.234567892E8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h4 id="强制类型转换-cast" tabindex="-1"><a class="header-anchor" href="#强制类型转换-cast"><span>强制类型转换（cast）</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">double</span> x <span class="token operator">=</span> <span class="token number">9.997</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> nx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> x<span class="token punctuation">;</span> 				<span class="token comment">// nx is 9</span>
<span class="token keyword">int</span> nx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// nx is 10，圆整</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),p=[i];function c(o,d){return n(),s("div",null,p)}const v=a(l,[["render",c],["__file","01. 泛操作.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Java/02.%20%E6%95%B0%E6%8D%AE_%E7%AE%97%E6%B3%95/01.%20%E6%B3%9B%E6%93%8D%E4%BD%9C.html","title":"Java","lang":"zh-CN","frontmatter":{"description":"Java 目录 数据类型 在Java中，一共有8种基本类型（primitive type） 4种整型 2种浮点类型 1种用于表示Unicode编码的字符单元的字符类型char 1种用于表示真值的boolean类型 常量泛操作 普通常量 final关键字：指示常量 关键字final表示这个变量只能被赋值一次。一旦被赋值之后，就不能够再更改了。习惯上，常量...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Java/02.%20%E6%95%B0%E6%8D%AE_%E7%AE%97%E6%B3%95/01.%20%E6%B3%9B%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Java"}],["meta",{"property":"og:description","content":"Java 目录 数据类型 在Java中，一共有8种基本类型（primitive type） 4种整型 2种浮点类型 1种用于表示Unicode编码的字符单元的字符类型char 1种用于表示真值的boolean类型 常量泛操作 普通常量 final关键字：指示常量 关键字final表示这个变量只能被赋值一次。一旦被赋值之后，就不能够再更改了。习惯上，常量..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Java","slug":"java","link":"#java","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[{"level":2,"title":"常量泛操作","slug":"常量泛操作","link":"#常量泛操作","children":[{"level":3,"title":"普通常量","slug":"普通常量","link":"#普通常量","children":[]},{"level":3,"title":"类常量","slug":"类常量","link":"#类常量","children":[]}]},{"level":2,"title":"变量泛操作","slug":"变量泛操作","link":"#变量泛操作","children":[{"level":3,"title":"变量定义","slug":"变量定义","link":"#变量定义","children":[]},{"level":3,"title":"骚操作","slug":"骚操作","link":"#骚操作","children":[]},{"level":3,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[{"level":4,"title":"隐式转换","slug":"隐式转换","link":"#隐式转换","children":[]},{"level":4,"title":"强制类型转换（cast）","slug":"强制类型转换-cast","link":"#强制类型转换-cast","children":[]}]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.87,"words":562},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Java/02. 数据+算法/01. 泛操作.md","autoDesc":true}');export{v as comp,k as data};
