import{_ as e,e as i,g as t,o as a}from"./app-DPU1xou8.js";const l={};function n(o,s){return a(),i("div",null,s[0]||(s[0]=[t(`<h1 id="旧项目中使用vue" tabindex="-1"><a class="header-anchor" href="#旧项目中使用vue"><span>旧项目中使用Vue</span></a></h1><p>参考：</p><ul><li>https://blog.csdn.net/anyaoqi/article/details/87465970</li><li>https://www.cnblogs.com/konghaowei/p/15524413.html</li><li>https://www.cnblogs.com/jsonq/p/18262365 (main)</li></ul><p>使用原生 html 写 vue 项目。<strong>注意：是项目，而不是页面</strong>，此方式是不推荐的，毕竟有脚手架，但在一些及其特殊场景下，可能会需要类似的方式，因此作为一个记录。</p><blockquote><p>这种方式唯一的优点就是写完可以直接扔服务器上了－_－</p></blockquote><h2 id="对-html-写-vue-的认知" tabindex="-1"><a class="header-anchor" href="#对-html-写-vue-的认知"><span>对 html 写 vue 的认知</span></a></h2><p>很多人对 在 html 中运行 vue 项目这种内容，认知只停留在引入 vue 的 cdn 文件，然后在 html 里一顿写，就觉得 html 写 vue 不是很简单嘛，但请注意用词，是<strong>项目</strong>，而不是<strong>页面</strong>，你能写一个 <code>.vue</code> 页面引入让 html 去运行吗？显然不可以，而此文章就是说这个的。</p><hr><p><strong>正常想要在原生 html 中直接写 <code>.vue</code> 文件是不现实的</strong>，因为 html 压根就不认识 .vue 文件，只有脚手架才能识别，那如何才能让 html 识别 <code>.vue</code> 文件呢？其实也很简单，核心就是一个包 <code>vue3-sfc-loader</code></p><h2 id="vue3-sfc-loader-使用场景" tabindex="-1"><a class="header-anchor" href="#vue3-sfc-loader-使用场景"><span>vue3-sfc-loader 使用场景</span></a></h2><p>因为 <code>vue3-sfc-loader</code> 可以直接解析 <code>.vue</code> 文件，所以可以使用在页面中远程加载 vue 组件的场景中</p><h3 id="什么是-es-包和-umd-包" tabindex="-1"><a class="header-anchor" href="#什么是-es-包和-umd-包"><span>什么是 es 包和 umd 包</span></a></h3><p>es 包支持 import 导入的写法，比如这样</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;module&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">createApp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而 umd 包是直接运行在浏览器的，比如我引入了 <code>vue.global.js</code> 这就是一个 browser 包，我可以在 window 上访问到 <code>Vue</code> 实例</p><p>使用时就是这样</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">createApp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Vue</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // window.Vue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>es 包是需要 <code>script</code> 标签添加 <code>type=&quot;module&quot;</code>，导入方式为<code>import</code>。<br> 而 umd 包引入之后，会自动挂载到 window 上，导入方式为解构 <code>const {...} = Vue</code></p></blockquote><h2 id="让-html-识别-vue-文件" tabindex="-1"><a class="header-anchor" href="#让-html-识别-vue-文件"><span>让 html 识别 <code>.vue</code> 文件</span></a></h2><p><strong>需由一个前提条件，由于下载的都是生产文件，打开 html 页面时需要使用 <code>Live Server</code> 插件打开，普通打开方式无法运行</strong></p><blockquote><p>这里统一用 es 文件，模仿脚手架结构进行搭建</p></blockquote><ol><li>下载 <code>vue</code> 离线 es 文件： <a href="https://cdnjs.cloudflare.com/ajax/libs/vue/3.4.29/vue.esm-browser.prod.min.js" target="_blank" rel="noopener noreferrer">vue.esm-browser.prod.min.js</a></li><li>下载 <code>vue3-sfc-loader</code> 离线 es 文件：<a href="https://cdn.jsdelivr.net/npm/vue3-sfc-loader@0.9.5/dist/vue3-sfc-loader.esm.js" target="_blank" rel="noopener noreferrer">vue3-sfc-loader.esm.js</a></li><li>新建 <code>index.html</code>，并引入下载好的 vue 和 sfc 解析文件</li></ol><p>这种 <code>Import maps</code> 写法在 vue 官网上有 <a href="https://cn.vuejs.org/guide/quick-start.html#enabling-import-maps" target="_blank" rel="noopener noreferrer">示例</a></p><p><strong>特性：</strong> 其实就是一个路径映射，此时 <code>import {} from &quot;vue&quot;</code> 等价于 <code>import {} from &quot;./lib/es/vue.esm-browser.prod.min.js&quot;</code><br><strong>优点：</strong></p><ul><li>可以非脚手架项目中可以支持 <code>import {} from &quot;vue&quot;</code>。</li><li>如果不使用，就需要 <code>import {} from &quot;./lib/es/vue.esm-browser.prod.min.js&quot;</code> 引入相对或绝对路径，冗余且意义不大</li></ul>`,25)]))}const p=e(l,[["render",n],["__file","旧项目中使用Vue.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/02.%20%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/%E6%B8%90%E8%BF%9B%E5%BC%8F%E4%B8%8E%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6%E4%B8%93%E9%A2%98/%E6%97%A7%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8Vue.html","title":"旧项目中使用Vue","lang":"zh-CN","frontmatter":{"description":"旧项目中使用Vue 参考： https://blog.csdn.net/anyaoqi/article/details/87465970 https://www.cnblogs.com/konghaowei/p/15524413.html https://www.cnblogs.com/jsonq/p/18262365 (main) 使用原生 html...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/02.%20%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/%E6%B8%90%E8%BF%9B%E5%BC%8F%E4%B8%8E%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6%E4%B8%93%E9%A2%98/%E6%97%A7%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8Vue.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"旧项目中使用Vue"}],["meta",{"property":"og:description","content":"旧项目中使用Vue 参考： https://blog.csdn.net/anyaoqi/article/details/87465970 https://www.cnblogs.com/konghaowei/p/15524413.html https://www.cnblogs.com/jsonq/p/18262365 (main) 使用原生 html..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"旧项目中使用Vue\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.22,"words":665},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/渐进式与通用组件专题/旧项目中使用Vue.md","excerpt":"\\n<p>参考：</p>\\n<ul>\\n<li>https://blog.csdn.net/anyaoqi/article/details/87465970</li>\\n<li>https://www.cnblogs.com/konghaowei/p/15524413.html</li>\\n<li>https://www.cnblogs.com/jsonq/p/18262365 (main)</li>\\n</ul>\\n<p>使用原生 html 写 vue 项目。<strong>注意：是项目，而不是页面</strong>，此方式是不推荐的，毕竟有脚手架，但在一些及其特殊场景下，可能会需要类似的方式，因此作为一个记录。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/渐进式与通用组件专题/旧项目中使用Vue.md","value":{"title":"旧项目中使用Vue","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/渐进式与通用组件专题/旧项目中使用Vue.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,r as data};
