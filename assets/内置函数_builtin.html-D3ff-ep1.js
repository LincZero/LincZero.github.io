import{_ as s,c as a,b as e,o as t}from"./app-CcLagq2a.js";const p={};function i(o,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="内置函数-builtin" tabindex="-1"><a class="header-anchor" href="#内置函数-builtin"><span>内置函数_builtin</span></a></h1><p>特点：无需导包，或者说默认强制导包。如果需要查文档，对应的包是 <code>builtin</code></p><h2 id="常用" tabindex="-1"><a class="header-anchor" href="#常用"><span>常用</span></a></h2><ul><li>len</li><li>new</li><li>make</li></ul><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// 返回v的长度，取决于类型</span>
<span class="token comment">// - 数组：v中元素数量</span>
<span class="token comment">// - 数组指针:*v中元素的数量</span>
<span class="token comment">// - 切片、映射：v中元素的数量，若v为nil则len(v)为0</span>
<span class="token comment">// - 字符串：v中字节数量 (按字节)</span>
<span class="token comment">// - 通道：通道缓存中队列(未读取)元素的数量</span>
<span class="token keyword">func</span> <span class="token function">len</span><span class="token punctuation">(</span>v Type<span class="token punctuation">)</span> <span class="token builtin">int</span>
count <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>

<span class="token comment">// 分配内存，第一个参数是类型而非值，返回指针</span>
<span class="token keyword">func</span> <span class="token function">new</span><span class="token punctuation">(</span>Type<span class="token punctuation">)</span> <span class="token operator">*</span>Type
num <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>			<span class="token comment">//     返回int*</span>

<span class="token comment">// 分配内存，主要用来分配引用类型 (指针、slice切片、map、管道chan、interface 等)</span>
<span class="token comment">// - 切片：size长度，切片容量等于长度。make([]int, 0, 10) 会分配一个长度0容量10的切片</span>
<span class="token comment">// - 映射：初始大小取决于size，若长度为0可省略size</span>
<span class="token comment">// - 通道</span>
<span class="token keyword">func</span> <span class="token function">make</span><span class="token punctuation">(</span>Type<span class="token punctuation">,</span> size IntegerType<span class="token punctuation">)</span> Type
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const c=s(p,[["render",i],["__file","内置函数_builtin.html.vue"]]),u=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Go/07_%E6%A8%A1%E5%9D%97%E5%BA%93/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0_builtin.html","title":"内置函数_builtin","lang":"zh-CN","frontmatter":{"description":"内置函数_builtin 特点：无需导包，或者说默认强制导包。如果需要查文档，对应的包是 builtin 常用 len new make","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Go/07_%E6%A8%A1%E5%9D%97%E5%BA%93/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0_builtin.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"内置函数_builtin"}],["meta",{"property":"og:description","content":"内置函数_builtin 特点：无需导包，或者说默认强制导包。如果需要查文档，对应的包是 builtin 常用 len new make"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内置函数_builtin\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"内置函数_builtin","slug":"内置函数-builtin","link":"#内置函数-builtin","children":[{"level":2,"title":"常用","slug":"常用","link":"#常用","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.83,"words":250},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Go/07_模块库/内置函数_builtin.md","excerpt":"\\n<p>特点：无需导包，或者说默认强制导包。如果需要查文档，对应的包是 <code>builtin</code></p>\\n<h2>常用</h2>\\n<ul>\\n<li>len</li>\\n<li>new</li>\\n<li>make</li>\\n</ul>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// 返回v的长度，取决于类型</span>\\n<span class=\\"token comment\\">// - 数组：v中元素数量</span>\\n<span class=\\"token comment\\">// - 数组指针:*v中元素的数量</span>\\n<span class=\\"token comment\\">// - 切片、映射：v中元素的数量，若v为nil则len(v)为0</span>\\n<span class=\\"token comment\\">// - 字符串：v中字节数量 (按字节)</span>\\n<span class=\\"token comment\\">// - 通道：通道缓存中队列(未读取)元素的数量</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">len</span><span class=\\"token punctuation\\">(</span>v Type<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">int</span>\\ncount <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">len</span><span class=\\"token punctuation\\">(</span>str<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 分配内存，第一个参数是类型而非值，返回指针</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span>Type<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span>Type\\nnum <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span>\\t\\t\\t<span class=\\"token comment\\">//     返回int*</span>\\n\\n<span class=\\"token comment\\">// 分配内存，主要用来分配引用类型 (指针、slice切片、map、管道chan、interface 等)</span>\\n<span class=\\"token comment\\">// - 切片：size长度，切片容量等于长度。make([]int, 0, 10) 会分配一个长度0容量10的切片</span>\\n<span class=\\"token comment\\">// - 映射：初始大小取决于size，若长度为0可省略size</span>\\n<span class=\\"token comment\\">// - 通道</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span>Type<span class=\\"token punctuation\\">,</span> size IntegerType<span class=\\"token punctuation\\">)</span> Type\\n</code></pre></div>","autoDesc":true}');export{c as comp,u as data};
