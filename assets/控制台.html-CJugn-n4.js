import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-FiwKXEJX.js";const e={},o=t(`<h1 id="控制台" tabindex="-1"><a class="header-anchor" href="#控制台"><span>控制台</span></a></h1><p>核心：fmt包。详见 studygolang.com/pkgdoc</p><h2 id="控制台输出-打印" tabindex="-1"><a class="header-anchor" href="#控制台输出-打印"><span>控制台输出 (打印)</span></a></h2><h3 id="格式化打印" tabindex="-1"><a class="header-anchor" href="#格式化打印"><span>格式化打印</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;普通的带换行打印&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 格式化打印</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;对应字符：%c&quot;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">)</span>		 <span class="token comment">// A</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;对应字符：%T&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span>		 <span class="token comment">// int</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span>num3<span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment">// 8 (Byte)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>格式化打印字符（详见 studygolang.com/pkgdoc中fmt 部分的文档）</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// 通用</span>
<span class="token operator">%</span>v	值的默认格式表示
<span class="token operator">%</span><span class="token operator">+</span>v	类似<span class="token operator">%</span>v，但输出结构倜时会添加字段名
<span class="token operator">%</span>#v	值的Go语法表示
<span class="token operator">%</span>T	值的类型的Go语法表示
<span class="token operator">%</span><span class="token operator">%</span>	百分号

<span class="token comment">// 布尔</span>
<span class="token operator">%</span>t	单词<span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span>

<span class="token comment">// 整数</span>
<span class="token operator">%</span>b	二进制
<span class="token operator">%</span>c	unicode码值
<span class="token operator">%</span>d	十进制
<span class="token operator">%</span>o	八进制
<span class="token operator">%</span>q	单引号括起来的<span class="token keyword">go</span>语法字符字面值，必要时用转义符号。即打印出来的结果是带引号的：<span class="token string">&quot;hello\\tworld&quot;</span>
<span class="token operator">%</span>x	十六进制<span class="token punctuation">(</span>小写<span class="token punctuation">)</span>
<span class="token operator">%</span>X	十六进制<span class="token punctuation">(</span>大写<span class="token punctuation">)</span>
<span class="token operator">%</span>U	Unicode码值<span class="token punctuation">(</span>U<span class="token operator">+</span><span class="token number">1234</span>表示法<span class="token punctuation">)</span>

<span class="token comment">// 浮点与复数</span>
<span class="token operator">%</span>b
<span class="token operator">%</span>e
<span class="token operator">%</span>E
<span class="token operator">%</span>f
<span class="token operator">%</span>F
<span class="token operator">%</span>g
<span class="token operator">%</span>G

<span class="token comment">// 字符串和[]byte</span>
<span class="token operator">%</span>s
<span class="token operator">%</span>q
<span class="token operator">%</span>x
<span class="token operator">%</span>X

<span class="token comment">// 指针</span>
<span class="token operator">%</span>p	表示为0x加十六进制
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="转义字符" tabindex="-1"><a class="header-anchor" href="#转义字符"><span>转义字符</span></a></h3><p>与其他语言基本一样的</p><table><thead><tr><th>转义符</th><th>含义</th><th>补充</th><th>Unicode</th></tr></thead><tbody><tr><td><code>\\b</code></td><td>退格</td><td>backspace</td><td>\\u0008</td></tr><tr><td><code>\\n</code></td><td>换行</td><td></td><td>\\u000a</td></tr><tr><td><code>\\r</code></td><td>回车</td><td>将光标指针返回本行的开头，后续输出会替换原有字符</td><td>\\u000d</td></tr><tr><td><code>\\t</code></td><td>制表符</td><td>tab</td><td>\\u0009</td></tr><tr><td><code>\\&quot;</code></td><td>双引号</td><td></td><td>\\u0022</td></tr><tr><td><code>\\&#39;</code></td><td>单引号</td><td></td><td>\\u0027</td></tr><tr><td><code>\\\\</code></td><td>反斜杠</td><td></td><td>\\u005c</td></tr></tbody></table><h2 id="控制台输入" tabindex="-1"><a class="header-anchor" href="#控制台输入"><span>控制台输入</span></a></h2><h3 id="fmt-scan函数" tabindex="-1"><a class="header-anchor" href="#fmt-scan函数"><span>fmt Scan函数</span></a></h3><p>和打印一样同样是fmt库，里面的 Scanln 函数</p><p>原型</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// 常用的两个：</span>
<span class="token comment">// 这里的 \`a ...interface{}\` 类似与C++中的泛型函数</span>
<span class="token keyword">func</span> <span class="token function">Scan</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>	<span class="token comment">// 从str扫描文本，空白符分割</span>
<span class="token keyword">func</span> <span class="token function">Scanln</span><span class="token punctuation">(</span>a <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>				<span class="token comment">// 从str扫描文本，换行符分割</span>

<span class="token comment">// 其他类似的：</span>
<span class="token keyword">func</span> Sscanln
<span class="token keyword">func</span> Fscan														<span class="token comment">// 从r扫描文本</span>
<span class="token keyword">func</span> Fscanln
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 (Scanln)</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> age <span class="token builtin">int</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;录入年龄：&quot;</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Scanln</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>age<span class="token punctuation">)</span>	    <span class="token comment">// 传入age地址，这里有点类似于字符串转数值类型的使用，也会有可能出错</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;年龄:%v&quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 (Scan)</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> age <span class="token builtin">int</span>
    <span class="token keyword">var</span> name <span class="token builtin">string</span>
    <span class="token keyword">var</span> score <span class="token builtin">float32</span>
    <span class="token keyword">var</span> isVIP <span class="token builtin">bool</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;录入年龄, 姓名, 成绩, 是否VIP, 空格分割&quot;</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s %f %t&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>age<span class="token punctuation">,</span> <span class="token operator">&amp;</span>name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>score<span class="token punctuation">,</span> <span class="token operator">&amp;</span>isVIP<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),p=[o];function c(l,i){return s(),a("div",null,p)}const u=n(e,[["render",c],["__file","控制台.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Go/03_%E4%BA%A4%E4%BA%92/%E6%8E%A7%E5%88%B6%E5%8F%B0.html","title":"控制台","lang":"zh-CN","frontmatter":{"description":"控制台 核心：fmt包。详见 studygolang.com/pkgdoc 控制台输出 (打印) 格式化打印 格式化打印字符（详见 studygolang.com/pkgdoc中fmt 部分的文档） 转义字符 与其他语言基本一样的 控制台输入 fmt Scan函数 和打印一样同样是fmt库，里面的 Scanln 函数 原型 使用 (Scanln) 使用...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Go/03_%E4%BA%A4%E4%BA%92/%E6%8E%A7%E5%88%B6%E5%8F%B0.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"控制台"}],["meta",{"property":"og:description","content":"控制台 核心：fmt包。详见 studygolang.com/pkgdoc 控制台输出 (打印) 格式化打印 格式化打印字符（详见 studygolang.com/pkgdoc中fmt 部分的文档） 转义字符 与其他语言基本一样的 控制台输入 fmt Scan函数 和打印一样同样是fmt库，里面的 Scanln 函数 原型 使用 (Scanln) 使用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"控制台\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"控制台","slug":"控制台","link":"#控制台","children":[{"level":2,"title":"控制台输出 (打印)","slug":"控制台输出-打印","link":"#控制台输出-打印","children":[{"level":3,"title":"格式化打印","slug":"格式化打印","link":"#格式化打印","children":[]},{"level":3,"title":"转义字符","slug":"转义字符","link":"#转义字符","children":[]}]},{"level":2,"title":"控制台输入","slug":"控制台输入","link":"#控制台输入","children":[{"level":3,"title":"fmt Scan函数","slug":"fmt-scan函数","link":"#fmt-scan函数","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.82,"words":545},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Go/03_交互/控制台.md","autoDesc":true}');export{u as comp,k as data};
