import{_ as e,c as a,e as l,o as n}from"./app-_6RECMRt.js";const r="/assets/image-20211109001007011-drF0slP6.png",i="/assets/image-20211109001524403-CL1ZwQCh.png",d="/assets/image-20211109152305606-Bzr8htok.png",s="/assets/image-20211109164753008-DkQgL3zD.png",o="/assets/image-20211109155338472-D6CofcQx.png",p="/assets/image-20211109160436190-ihS8XYee.png",h={};function c(g,t){return n(),a("div",null,t[0]||(t[0]=[l('<h1 id="computersystems" tabindex="-1"><a class="header-anchor" href="#computersystems"><span>ComputerSystems</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="磁盘的软件分析" tabindex="-1"><a class="header-anchor" href="#磁盘的软件分析"><span>磁盘的软件分析</span></a></h1><h2 id="用winhex分析磁盘" tabindex="-1"><a class="header-anchor" href="#用winhex分析磁盘"><span>用WinHex分析磁盘</span></a></h2><p>话说这东西的速度快得有点不可思议</p><h3 id="打开磁盘" tabindex="-1"><a class="header-anchor" href="#打开磁盘"><span>打开磁盘</span></a></h3><p>打开WinHex &gt; 菜单 &gt; Tool 工具 &gt; OpenDisk 打开磁盘 &gt; 选择U盘 (注意要选择Physical Storage Drivers物理驱动器，而不要选Logical Volume/Partition逻辑驱动器，区别是看你有几块硬盘还是几个分区)</p><h3 id="分析u盘大小" tabindex="-1"><a class="header-anchor" href="#分析u盘大小"><span>分析U盘大小</span></a></h3><p>打开后一堆密密麻麻的16进制，从000000000到E6E7FFFE0行，每行32个字节， 即显示了一共E6E800000个字节 = E6E800000字节 = 61,983,424,512 字节 = 60530688 千字节 = 59112 兆字节 = 57.7265625 吉字节 而我这U盘恰好就是57.7G的或61,983,424,512字节的 (属性中可看一共多少个字节的容量，软件右侧的总容量中也可看到)，完全吻合</p><h3 id="分析u盘扇区" tabindex="-1"><a class="header-anchor" href="#分析u盘扇区"><span>分析U盘扇区</span></a></h3><p>总扇区：</p><p>右侧可以看到总容量57.7G，每扇区字节数是512，一行是32字节，即16行一个扇区，也就是软件中的每一条横线是一个扇区 000000000是第一个扇区、000000200是第二个扇区、000000400第三个扇区，以此类推 最后是第 (E6E7FFE/2) 个扇区 = 61,983,424,512 / 512 = 121,061,376 个扇区 (1.2亿左右)</p><p>分区中的扇区：</p><p>当然是有分区信息存在的，可以在右侧看到内存的分区和相对扇区号 <code>相对扇区号</code>是指该分区的第几个扇区，也可以叫做<code>逻辑扇区号</code>，区别于<code>物理扇区号</code> （图见后）</p><ul><li>初始扇区是128KB（刚好为该U盘中的1个簇），占用256个扇区，第一扇区的扇区号为0（分区不显示0，而是显示 &quot;&lt;0&quot;）</li><li>第一扇区是总内存减去128KB的全部内存，占用121,061,376 - 256个的其余扇区，第一扇区的扇区号为256，扇区号为1 最后一个扇区：分区为1、相对扇区号为121,,061,119 = 121,061,376 - 256 -1（序列要减一），结果符合</li></ul><h3 id="分析u盘内容-快速格式化" tabindex="-1"><a class="header-anchor" href="#分析u盘内容-快速格式化"><span>分析U盘内容（快速格式化）</span></a></h3><p>快速格式化：虽然我这里已经格式化了，但使用的是<code>快速格式化</code>功能，可以看到数据依然是存在的，这也就是数据恢复的基本原理。底格式化是很耗费时间的</p><p>补充：如果是Windows XP和以前的版本，去掉快速格式化的勾执行的慢速格式化只是在快速格式化之后增加了一个扫描坏扇区的过程，也就是说即使慢速格式化一百遍，数据都有可能百分之百恢复</p><p>关于底格的补充</p><blockquote><p>参考：</p><ul><li><a href="https://en.wikipedia.org/wiki/Gutmann_method" target="_blank" rel="noopener noreferrer">【维基百科】古特曼方法</a></li><li><a href="https://www.zhihu.com/question/29790560" target="_blank" rel="noopener noreferrer">【知乎】全部填0 数据还能恢复吗？_見崎未咲的回答</a></li></ul><p>坊间相传，由于传统的机械硬盘（HDD）是通过磁性记录数据的，即使你对硬盘进行了一次擦除（比如全盘填 0）也是可以通过特殊的设备恢复其中数据的，需要重复使用 0、1 以及随机数据填充才能确保安全删除。甚至还有「硬盘数据需要 35 次反复擦除才不能被恢复」这种说法。</p><p>然而事实是这样吗？</p><ul><li>Gutmann 35 pass - the Gutmann method，即古特曼方法，覆写 35 次不同的数据来保证无法恢复。Peter Gutmann 本人就已经辟谣过</li><li>填 0，填 1，还是随机数据？</li></ul></blockquote><p><img src="'+r+'" alt="image-20211109001007011" loading="lazy"></p><p><img src="'+i+'" alt="image-20211109001524403" loading="lazy"></p><h3 id="分析u盘内容-填零格式化" tabindex="-1"><a class="header-anchor" href="#分析u盘内容-填零格式化"><span>分析U盘内容（填零格式化）</span></a></h3><p>取勾快速格式化后 格式化</p><p>文件夹（隐藏的系统文件夹）</p><table><thead><tr><th>路径</th><th>大小</th><th>占用</th><th>补充</th></tr></thead><tbody><tr><td>./System Volume Information</td><td>88B</td><td>256KB (262144B)</td><td>系统卷信息</td></tr><tr><td>././IndexerVolumeGuid</td><td>76B</td><td>128KB (131072B)</td><td></td></tr><tr><td>././WPSettings.dat</td><td>12B</td><td>128KB (131072B)</td><td></td></tr></tbody></table><p><img src="'+d+'" alt="image-20211109152305606" loading="lazy"></p><h4 id="蔟" tabindex="-1"><a class="header-anchor" href="#蔟"><span>蔟</span></a></h4><p><img src="'+s+'" alt="image-20211109164753008" loading="lazy"></p><p>微软操作系统（DOS、WINDOWS等）中磁盘文件存储管理的最小单位叫做“簇”。在格式化中的<code>分配单元大小</code>选项应该就是指定簇的大小</p><p>磁盘右击属性中的已用空间应该是占用空间的意思，最小单位为簇，显示已经用空间768KB = 128KB x 6，即已经占用了6个簇 （后来我又格式化了一遍，这次不是右键格式化，而是在管理界面中重新创建简单卷，这次为640/128=5个簇，少了一个簇：IndexerVolumeGuid文件不见了）</p><p>初始扇区占1个簇，分区1的起始位置应该也是1个簇，默认的System Volume Information文件夹中有2个簇，共计4个簇。还缺了2个簇在哪呢？</p><h4 id="起始扇区" tabindex="-1"><a class="header-anchor" href="#起始扇区"><span>起始扇区</span></a></h4><p>只有第一个扇区存在内容，初始扇区中的其他扇区都被填0了，共计512个字节。注意：起始扇区的大小是128KB，即前256个扇区</p><p>特别注意扇区末尾为<code>55AA</code></p><p><img src="'+o+'" alt="image-20211109155338472" loading="lazy"></p><h4 id="分区1" tabindex="-1"><a class="header-anchor" href="#分区1"><span>分区1</span></a></h4><p>双击分区1可单独显示逻辑硬盘中的分区1部分</p><p>下图中这里占用了3个扇区 = 3*512B = 1536B</p><p>特别注意扇区末尾为<code>55AA</code></p><p><img src="'+p+'" alt="image-20211109160436190" loading="lazy"></p><h4 id="创建个文本文件" tabindex="-1"><a class="header-anchor" href="#创建个文本文件"><span>创建个文本文件</span></a></h4><table><thead><tr><th>内容</th><th>所在分区</th><th>物理扇区号</th><th>逻辑扇区号</th><th>内存</th></tr></thead><tbody><tr><td>文本文件名：654321.txt</td><td>分区1</td><td>(找不到?)</td><td>(找不到?)</td><td>(找不到?)</td></tr><tr><td>文本内容：123456</td><td>分区1</td><td>7936</td><td>7680</td><td>0003C0000</td></tr></tbody></table><p>文本搜索速度：大概每0.7s跑100,000个扇区，即大概每0.7s跑50MB，70MBps左右的速度，也比较符合我U盘的速度 就是我这64G的U盘还是太大了，搜索起来和做起研究起来不方便</p><h3 id="分析分区类型-mbr-master-boot-recode-主引导记录" tabindex="-1"><a class="header-anchor" href="#分析分区类型-mbr-master-boot-recode-主引导记录"><span>分析分区类型（MBR，Master Boot Recode，主引导记录）</span></a></h3><p>WinHex 软件左上角中可以看到<code>分区类型为：MBR</code></p><h4 id="标准mbr结构-mbr总大小-446-64-2-512kb" tabindex="-1"><a class="header-anchor" href="#标准mbr结构-mbr总大小-446-64-2-512kb"><span>标准MBR结构（MBR总大小：446+64+2 = 512KB）</span></a></h4><table><thead><tr><th style="text-align:center;">Hex地址</th><th style="text-align:center;">Oct地址</th><th style="text-align:center;">Dec地址</th><th>描述</th><th style="text-align:center;">长度 (字节)</th></tr></thead><tbody><tr><td style="text-align:center;">0000</td><td style="text-align:center;">0000</td><td style="text-align:center;">0</td><td>代码区</td><td style="text-align:center;">440 (最大446)</td></tr><tr><td style="text-align:center;">01B8</td><td style="text-align:center;">0670</td><td style="text-align:center;">440</td><td>选用磁盘标志</td><td style="text-align:center;">4</td></tr><tr><td style="text-align:center;">01BC</td><td style="text-align:center;">0674</td><td style="text-align:center;">444</td><td>一般为空值，0x000</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;">01BE</td><td style="text-align:center;">0676</td><td style="text-align:center;">446</td><td>标准MBR分区表规划<br>(4个16byte的主分区表入口)</td><td style="text-align:center;">64</td></tr><tr><td style="text-align:center;">01FE<br>01FF</td><td style="text-align:center;">0776<br>0777</td><td style="text-align:center;">510<br>511</td><td>55AA h MBR有效标志：0x55AA<br>(二进制0101010101，可检验硬盘和磁头有效性)</td><td style="text-align:center;">2</td></tr></tbody></table><h4 id="操作过程" tabindex="-1"><a class="header-anchor" href="#操作过程"><span>操作过程</span></a></h4><p>MBR分区存储在物理磁盘中的第0面第0道 (柱面) 1扇区，也就是初始扇区所在的位置，占用512KB字节 (应该)</p><p>每台计算机都会有一个BIOS程序，它会从硬盘的0面0道1扇区来寻找MBR</p><h4 id="启示和bug" tabindex="-1"><a class="header-anchor" href="#启示和bug"><span>启示和bug</span></a></h4><p>写入代码时不要破坏MBR结构！只能动前面的446个字节的代码区</p><p>如果破坏了需要重新格式化，这里有个奇怪的点：<strong>格式化并不会清除代码区里的内容</strong></p><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><h3 id="固态硬盘用mbr-guid-gpt" tabindex="-1"><a class="header-anchor" href="#固态硬盘用mbr-guid-gpt"><span>固态硬盘用mbr guid gpt？</span></a></h3><p>MBR的优势，兼容性较好。</p><p>MBR局限性，易损坏，支持硬盘容量不足，支持主分区仅为4个，当然通过其他途径可以增多。</p><p>GPT，GUID Partition Table，含义为“全局唯一标识磁盘分区表”，是一个实体硬盘的分区表的结构布局的标准，是可扩展固件接口（EFI）标准（被Intel用于替代个人计算机的BIOS）的一部分，被用于替代（MBR）分区表。</p><p>GPT的优势,相比MBR更安全，支持硬盘容量更大，支持主分区更多。</p><p>GPT劣势，由于是新技术，所以对于一些旧的储存设备和技术的兼容性还比较差</p>',61)]))}const u=e(h,[["render",c],["__file","03.1 磁盘的软件分析.html.vue"]]),B=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Storage/03.1%20%E7%A3%81%E7%9B%98%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90.html","title":"ComputerSystems","lang":"zh-CN","frontmatter":{"description":"ComputerSystems 目录 磁盘的软件分析 用WinHex分析磁盘 话说这东西的速度快得有点不可思议 打开磁盘 打开WinHex > 菜单 > Tool 工具 > OpenDisk 打开磁盘 > 选择U盘 (注意要选择Physical Storage Drivers物理驱动器，而不要选Logical Volume/Partition逻辑驱动器...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Storage/03.1%20%E7%A3%81%E7%9B%98%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"ComputerSystems"}],["meta",{"property":"og:description","content":"ComputerSystems 目录 磁盘的软件分析 用WinHex分析磁盘 话说这东西的速度快得有点不可思议 打开磁盘 打开WinHex > 菜单 > Tool 工具 > OpenDisk 打开磁盘 > 选择U盘 (注意要选择Physical Storage Drivers物理驱动器，而不要选Logical Volume/Partition逻辑驱动器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ComputerSystems\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"ComputerSystems","slug":"computersystems","link":"#computersystems","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"磁盘的软件分析","slug":"磁盘的软件分析","link":"#磁盘的软件分析","children":[{"level":2,"title":"用WinHex分析磁盘","slug":"用winhex分析磁盘","link":"#用winhex分析磁盘","children":[{"level":3,"title":"打开磁盘","slug":"打开磁盘","link":"#打开磁盘","children":[]},{"level":3,"title":"分析U盘大小","slug":"分析u盘大小","link":"#分析u盘大小","children":[]},{"level":3,"title":"分析U盘扇区","slug":"分析u盘扇区","link":"#分析u盘扇区","children":[]},{"level":3,"title":"分析U盘内容（快速格式化）","slug":"分析u盘内容-快速格式化","link":"#分析u盘内容-快速格式化","children":[]},{"level":3,"title":"分析U盘内容（填零格式化）","slug":"分析u盘内容-填零格式化","link":"#分析u盘内容-填零格式化","children":[{"level":4,"title":"蔟","slug":"蔟","link":"#蔟","children":[]},{"level":4,"title":"起始扇区","slug":"起始扇区","link":"#起始扇区","children":[]},{"level":4,"title":"分区1","slug":"分区1","link":"#分区1","children":[]},{"level":4,"title":"创建个文本文件","slug":"创建个文本文件","link":"#创建个文本文件","children":[]}]},{"level":3,"title":"分析分区类型（MBR，Master Boot Recode，主引导记录）","slug":"分析分区类型-mbr-master-boot-recode-主引导记录","link":"#分析分区类型-mbr-master-boot-recode-主引导记录","children":[{"level":4,"title":"标准MBR结构（MBR总大小：446+64+2 = 512KB）","slug":"标准mbr结构-mbr总大小-446-64-2-512kb","link":"#标准mbr结构-mbr总大小-446-64-2-512kb","children":[]},{"level":4,"title":"操作过程","slug":"操作过程","link":"#操作过程","children":[]},{"level":4,"title":"启示和bug","slug":"启示和bug","link":"#启示和bug","children":[]}]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"固态硬盘用mbr guid gpt？","slug":"固态硬盘用mbr-guid-gpt","link":"#固态硬盘用mbr-guid-gpt","children":[]}]}]}],"git":{},"readingTime":{"minutes":6.39,"words":1918},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Storage/03.1 磁盘的软件分析.md","excerpt":"\\n<h1>目录</h1>\\n<h1>磁盘的软件分析</h1>\\n<h2>用WinHex分析磁盘</h2>\\n<p>话说这东西的速度快得有点不可思议</p>\\n<h3>打开磁盘</h3>\\n<p>打开WinHex &gt; 菜单 &gt; Tool 工具 &gt; OpenDisk 打开磁盘 &gt; 选择U盘\\n(注意要选择Physical Storage Drivers物理驱动器，而不要选Logical Volume/Partition逻辑驱动器，区别是看你有几块硬盘还是几个分区)</p>\\n<h3>分析U盘大小</h3>\\n<p>打开后一堆密密麻麻的16进制，从000000000到E6E7FFFE0行，每行32个字节，\\n即显示了一共E6E800000个字节 = E6E800000字节 = 61,983,424,512 字节 = 60530688  千字节 = 59112 兆字节 = 57.7265625 吉字节\\n而我这U盘恰好就是57.7G的或61,983,424,512字节的 (属性中可看一共多少个字节的容量，软件右侧的总容量中也可看到)，完全吻合</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Storage/03.1 磁盘的软件分析.md","value":{"title":"03.1 磁盘的软件分析","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Storage/03.1 磁盘的软件分析.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{u as comp,B as data};
