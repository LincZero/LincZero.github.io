import{_ as t,c as h,e as l,a as s,b as e,f as n,o as k,r as p}from"./app-CZqDObZ4.js";const d={};function r(A,i){const a=p("Mermaid");return k(),h("div",null,[i[5]||(i[5]=l('<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>Qt</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="qt5模型或视图结构" tabindex="-1"><a class="header-anchor" href="#qt5模型或视图结构"><span>Qt5模型或视图结构</span></a></h1><p>（参自《Qt5开发及实例》（第4版）第8章 - P214）</p><h2 id="mvc设计模式-与-interview" tabindex="-1"><a class="header-anchor" href="#mvc设计模式-与-interview"><span>MVC设计模式 与 InterView</span></a></h2><h3 id="mvc设计模式" tabindex="-1"><a class="header-anchor" href="#mvc设计模式"><span>MVC设计模式</span></a></h3><ul><li><p>简概：是起源于Smalltalk的一种与用户界面相关的设计模式，可以有效分离数据和用户界面（类似于Vue框架？）</p></li><li><p>构成：<code>MVC设计模式</code>包括三个元素</p><ul><li>表示数据的模型（<em>Model</em>）</li><li>表示用户界面的视图（<em>View</em>）</li><li>用户在界面上操作的控制器（<em>Controller</em>）</li></ul></li></ul><h3 id="模型-视图结构" tabindex="-1"><a class="header-anchor" href="#模型-视图结构"><span>模型/视图结构</span></a></h3>',8)),s("ul",null,[i[4]||(i[4]=l("<li><p>简概：与MVC设计模式类似，Qt引入了模型/视图结构用于完成数据与界面的分离，即<code>InterView框架</code></p></li><li><p>区别</p><ul><li>Qt的InterView框架把视图和控制器部件结合在一起，使得框架更加简洁</li><li>同时引入了代理，通过代理，能自定义数据条目的显示和编辑方式</li></ul></li><li><p>构成：<code>模型/视图结构</code>分为三个部分</p><ul><li>模型（<em>Model</em>）</li><li>视图（<em>View</em>）</li><li>代理（<em>Delegate</em>）</li></ul></li>",3)),s("li",null,[i[3]||(i[3]=s("p",null,"模型/视图结构与关系",-1)),s("ul",null,[i[1]||(i[1]=s("li",null,[s("p",null,"数据发生改变时，模型发出信号通知视图")],-1)),i[2]||(i[2]=s("li",null,[s("p",null,"用户对界面进行操作，视图发出信号")],-1)),s("li",null,[i[0]||(i[0]=s("p",null,"代理发出信号告知模型和视图编辑器目前的状态",-1)),e(a,{id:"mermaid-114",code:"eJxLL0osyFDwCeJ6NnXDs951urq6z1YsfDqvW1c3KDUltSgzL13haX/vy2Udurp2L5a3PZ29jwum4PmeaS/2TQTqSNR4snvx8wltmiBNeRBdQGGocgBDey/9"})])])])]),i[6]||(i[6]=l('<h2 id="简概" tabindex="-1"><a class="header-anchor" href="#简概"><span>简概</span></a></h2><h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h3><blockquote><h4 id="模型-model" tabindex="-1"><a class="header-anchor" href="#模型-model"><span>模型（<em>Model</em>）</span></a></h4></blockquote><p>InterView框架中所有模型都基于抽象基类<code>QAbstractItemModel</code></p><p>Inherited By: QAbstractListModel, QAbstractProxyModel, QAbstractTableModel, QConcatenateTablesProxyModel, QDirModel, QFileSystemModel, QStandardItemModel</p><p>继承树</p>',6)),e(a,{id:"mermaid-139",code:"eJxLL0osyFDwCeIqiA50TCouKUpMLvEsSc31zU9JzYnlKtDVtQsMKMqvqAQLaCCxNSGSME0+mcUlYHGg4NOO6S8Wrni2YuHTed26urpPlzUFBpcUZealwxWh6g1JTMpJhWkG6VywB1VzYU5gaWoRxF5UrQj3ANU+2b34+YQ2iNZnXXtfbFz4fONuiHqXzCKYqmfT2p/s3vZ0Us/z2eue7p36fFbL07UznjZB3QtR7paZkxpcWQwLCLiu55t3P989H1mlR2pOgXN+XklqHsRnGhgi0IAKLknMS0ksSoGHLhcAFa+nlA=="}),i[7]||(i[7]=s("blockquote",null,[s("h4",{id:"视图-view",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#视图-view"},[s("span",null,[n("视图（"),s("em",null,"View"),n("）")])])])],-1)),i[8]||(i[8]=s("p",null,[n("InterView框架中所有视图都基于抽象基类"),s("code",null,"QAbstractItemView")],-1)),i[9]||(i[9]=s("p",null,"Inherited By：QColumnView, QHeaderView, QListView, QTableView, QTreeView",-1)),e(a,{id:"mermaid-151",code:"eJxLL0osyFAIceIqiA50TCouKUpMLvEsSc0Ny0wtj+Uq0NW1C3TOzynNzQMJWCfnJBYXKyCJKBSlpkBUeaQmpqQWgcQgfJ/M4hJkPTA+WAcnnAtSGpqXko+sFMbHohTEDs9MSU8t0dXTrUI2GyKqkJRTmgpxQEhiUk4qTB+Yg6kRrgZkFYogpnFFqQjTgGwshkFVoJgFVwkxqkrj6bp5L2e2Pt2+6fnu/qc9rc+61zzZ1fZs6oZnvevi45/NWP9sxcKn87r1Xyxvezp73/Pdy5917n86Z8WTHQ0vtm5/Pqvl+cbdmlDDqyBGcoF5LqlpIHsV0jJzcqyU0yzTdIBxmZ+daqVsbGwMZeuWZ6aUZFiZFFRYIzSBzIDqMktMMk8zJaARAFhp2YM="}),i[10]||(i[10]=l('<p>图例：红色表示<code>项目视图 Item Views(Model-Based)</code>，蓝色表示<code>项目控件 Item Widgets(Item-Based)</code></p><blockquote><h4 id="代理-delegate" tabindex="-1"><a class="header-anchor" href="#代理-delegate"><span>代理（<em>Delegate</em>）</span></a></h4></blockquote><p>InterView框架中所有代理都基于抽象类<code>QAbstractItemDelegate</code></p><p>Inherited By：QItemDelegate、QStyledItemDelegate</p>',4)),e(a,{id:"mermaid-166",code:"eJxLL0osyFAIceIqiA50TCouKUpMLvEsSc11Sc1JTU8sSY3lKtDVtQtEFgLxgwtzglJzEksy8/MScxASui8Wrni+ZNezqRue9a57umvykx1rn7Zufr5595Pdi59PaIOYFVxSmZOagmwiFwBKzTp3"}),i[11]||(i[11]=l(`<blockquote><h4 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h4></blockquote><p>QStandardItemModel、QDirModel、QStringListModel、QColumnView、QHeaderView、QListView、QTableView、QTreeView</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;mainwindow.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QApplication&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QAbstractItemModel&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QAbstractItemView&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QItemSelectionModel&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QDirModel&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QTreeView&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QListView&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QTableView&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QSplitter&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QApplication </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(argc, argv);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QDirModel model;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">											// 新建一个QDirModel对象，还可以设置过滤器</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // QDirModel类继承自QAbstractItemModel类，为访问本地文件系统提供数据模型提供新建、删除、创建目录等一系列与文件操作相关的函数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 新建三种不同的View对象，以便文件目录可以以三种不同的方式显示 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QTreeView tree;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QListView list;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QTableView table;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 设置视图/模型 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    tree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">model);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">										// 设置View对象的Model</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">model);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">model);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 设置视图的选择方式 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    tree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setSelectionMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(QAbstractItemView::MultiSelection);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 调用setModel(QAbstracItemView::MultiSelection)设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setSelectionModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">tree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">selectionModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">				// 设置QListView对象与QTreeView对象使用相同的选择模型</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setSelectionModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">tree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">selectionModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">				// 设置TableView对象与QTreeView对象使用相同的选择模型</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* QTreeView对象的选择方式为多选，提供了五种选择模式。媒体值：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    - QAbstractItemView::SingleSelection</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    - QAbstractItemView::ContiguousSelection</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    - QAbstractItemView::ExtendedSelection</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    - QAbstractItemView::MultiSelection</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    - QAbstractItemView::NoSelection</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 信号和槽 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QObject::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tree,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIGNAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">doubleClicked</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(QModelIndex)),</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">list,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                           SLOT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setRootIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(QModelIndex)));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QObject::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tree,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIGNAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">doubleClicked</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(QModelIndex)),</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">table,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                           SLOT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setRootIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(QModelIndex)));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 为实现双击QTreeView对象的某个目录时，QLestView对象和QTableView对象中显示此选定目录下的所有文件和目录</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 布局 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QSplitter </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">splitter </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> QSplitter;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    splitter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addWidget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tree);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    splitter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addWidget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">list);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    splitter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addWidget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">table);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    splitter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setWindowTitle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">QObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Model/View&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    splitter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //MainWindow w;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //w.show();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模型-model-1" tabindex="-1"><a class="header-anchor" href="#模型-model-1"><span>模型（<em>Model</em>）</span></a></h2><p>自定义模型：可以通过继承<code>QAbstractItemModel</code>或<code>QAbstractListModel</code>和<code>QAbstractTableModel</code>实现</p><h2 id="视图-view-1" tabindex="-1"><a class="header-anchor" href="#视图-view-1"><span>视图（<em>View</em>）</span></a></h2><h2 id="代理-delegate-1" tabindex="-1"><a class="header-anchor" href="#代理-delegate-1"><span>代理（<em>Delegate</em>）</span></a></h2>`,7))])}const o=t(d,[["render",r],["__file","03. Qt5模型或视图结构.html.vue"]]),g=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/01.%20Widget/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB/03.%20Qt5%E6%A8%A1%E5%9E%8B%E6%88%96%E8%A7%86%E5%9B%BE%E7%BB%93%E6%9E%84.html","title":"Qt","lang":"zh-CN","frontmatter":{"description":"Qt 目录 Qt5模型或视图结构 （参自《Qt5开发及实例》（第4版）第8章 - P214） MVC设计模式 与 InterView MVC设计模式 简概：是起源于Smalltalk的一种与用户界面相关的设计模式，可以有效分离数据和用户界面（类似于Vue框架？） 构成：MVC设计模式包括三个元素 表示数据的模型（Model） 表示用户界面的视图（Vie...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/01.%20Widget/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB/03.%20Qt5%E6%A8%A1%E5%9E%8B%E6%88%96%E8%A7%86%E5%9B%BE%E7%BB%93%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Qt"}],["meta",{"property":"og:description","content":"Qt 目录 Qt5模型或视图结构 （参自《Qt5开发及实例》（第4版）第8章 - P214） MVC设计模式 与 InterView MVC设计模式 简概：是起源于Smalltalk的一种与用户界面相关的设计模式，可以有效分离数据和用户界面（类似于Vue框架？） 构成：MVC设计模式包括三个元素 表示数据的模型（Model） 表示用户界面的视图（Vie..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Qt","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"Qt5模型或视图结构","slug":"qt5模型或视图结构","link":"#qt5模型或视图结构","children":[{"level":2,"title":"MVC设计模式 与 InterView","slug":"mvc设计模式-与-interview","link":"#mvc设计模式-与-interview","children":[{"level":3,"title":"MVC设计模式","slug":"mvc设计模式","link":"#mvc设计模式","children":[]},{"level":3,"title":"模型/视图结构","slug":"模型-视图结构","link":"#模型-视图结构","children":[]}]},{"level":2,"title":"简概","slug":"简概","link":"#简概","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]}]},{"level":2,"title":"模型（Model）","slug":"模型-model-1","link":"#模型-model-1","children":[]},{"level":2,"title":"视图（View）","slug":"视图-view-1","link":"#视图-view-1","children":[]},{"level":2,"title":"代理（Delegate）","slug":"代理-delegate-1","link":"#代理-delegate-1","children":[]}]}],"git":{},"readingTime":{"minutes":3.34,"words":1001},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/03. Qt5模型或视图结构.md","excerpt":"\\n<h1>目录</h1>\\n<h1>Qt5模型或视图结构</h1>\\n<p>（参自《Qt5开发及实例》（第4版）第8章 - P214）</p>\\n<h2>MVC设计模式 与 InterView</h2>\\n<h3>MVC设计模式</h3>\\n<ul>\\n<li>\\n<p>简概：是起源于Smalltalk的一种与用户界面相关的设计模式，可以有效分离数据和用户界面（类似于Vue框架？）</p>\\n</li>\\n<li>\\n<p>构成：<code>MVC设计模式</code>包括三个元素</p>\\n<ul>\\n<li>表示数据的模型（<em>Model</em>）</li>\\n<li>表示用户界面的视图（<em>View</em>）</li>\\n<li>用户在界面上操作的控制器（<em>Controller</em>）</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/03. Qt5模型或视图结构.md","value":{"title":"03. Qt5模型或视图结构","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/03. Qt5模型或视图结构.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{o as comp,g as data};
