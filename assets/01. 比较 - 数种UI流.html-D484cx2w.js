import{_ as s,c as a,e as n,o as t}from"./app-BDGujT_T.js";const l="/assets/02177e62822fe5164012e9e980583feb-mmKCmljN.png",e={};function p(h,i){return t(),a("div",null,i[0]||(i[0]=[n(`<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>QT</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="比较-数种ui流" tabindex="-1"><a class="header-anchor" href="#比较-数种ui流"><span>比较 - 数种UI流</span></a></h1><p>数种UI开发流，分别是</p><ul><li>widget、widget的可视化 —— ui（qt designer）</li><li>qml、qml的可视化 —— qml设计器？</li><li>（画布、浏览器 这种）</li></ul><p>这里是指工作流，开发上的流程不同。</p><p>事实上ui和widget更相似，ui文件可以看成是一种简化的widget（ui编译后其实就是cpp文件）。<br> 我个人倾向于认为ui是widget的一种类似 “超集” 的关系（实际不是），会更好理解</p><h2 id="比较一览" tabindex="-1"><a class="header-anchor" href="#比较一览"><span>比较一览</span></a></h2><p>Qt Widgets Application &amp;&amp; Qt Quick Application</p><table><thead><tr><th>流</th><th>可选的附加工具</th><th>核心</th><th>开发的产品</th></tr></thead><tbody><tr><td>Qt Widgets Application</td><td>.ui (可选)<br>qt designer</td><td>.pro <code>QT += core gui (widgets)</code><br>main.cpp <code>#include</code>包含各种头文件，使用QWidget对象<br>main.cpp 使用 <code>&lt;QApplication&gt;</code> 库</td><td>@皮卡丘不皮 Qt版的仿网易云<br>@SilverFox PyQt版的仿网易云</td></tr><tr><td>Qt Quick Application</td><td>.qml (必选)<br>qt quick designer</td><td>.pro <code>QT += quick (qml)</code><br>.qml <code>import QtQuick 2.0</code>导入库使用各种QQuick对象<br>main.cpp 使用 <code>&lt;QQmlApplicationEngine&gt;</code> 库</td><td>很多都是Qt工具：<br>Qt Creator<br>Qt Designe Studio<br>QML Debugger<br>Profiler (Timeline等)<br>优秀Example：<br>Qt Quick Controls：musicplayer<br>Qt Quick Controls：automotive</td></tr></tbody></table><p>在使用 Qt Widgets Application 时，会推荐使用.ui附加文件，最大的优点是 UI与逻辑 分离</p><p>Qt Widget Application又有多种不同组件</p><ul><li>QWidget系列，常用控件如 QWidget、QPushButton、QFlame 等、QWebEngineView 也属于这类</li><li>QGraphics系列， 常用控件如 QGraphicsScene、QGraphicsItem 、<s>QGraphicsView (这个是QWidget)</s> 等。开发产品如NodeEditor</li></ul><p>Qt Quick Application</p><ul><li>实际会编译成 QQuick对象，如 QQuickRectangle (Rectangle)、 QQuickText (Text)、QQuickMouseArea (MouseArea) 等<br> 但是这些类一般不手动操作，<strong>你去查文档也查不到这些类</strong></li></ul><h2 id="比较-qt-quick-app-qt-widgets-app" tabindex="-1"><a class="header-anchor" href="#比较-qt-quick-app-qt-widgets-app"><span>比较 Qt Quick App &amp; Qt Widgets App</span></a></h2><h3 id="功能比较" tabindex="-1"><a class="header-anchor" href="#功能比较"><span>功能比较</span></a></h3><ul><li>参考 <ul><li><a href="https://blog.csdn.net/u011086209/article/details/92826108" target="_blank" rel="noopener noreferrer">【CSDN】QT Widgets和QML区别</a></li><li>https://www.youtube.com/watch?v=FzyvziQf4JQ</li></ul></li></ul><table><thead><tr><th><mark>不同点</mark></th><th>Qt Widget</th><th>Qt Quick</th></tr></thead><tbody><tr><td></td><td>适合传统的桌面程序开发</td><td>Qt 4.7 主推的技术</td></tr><tr><td>新旧程度</td><td><strong>更“老”、更成熟</strong></td><td><strong>更“新”、更“现代”</strong></td></tr><tr><td>桌面开发</td><td><strong>传统的桌面程序来说，优先考虑使用 Qt Widgets</strong></td><td><strong>更“现代”的 UI 与高级应用</strong>，建议使用 Qt5.x + QML 2.x + QtQuick 2.x</td></tr><tr><td>移动开发</td><td>不建议使用 Qt Widgets，其显示效果、适应性都不好</td><td><strong>建议使用 QML</strong>。协同 JavaScript，简单快捷、渲染效果更佳、界面更炫酷</td></tr><tr><td>拖拽</td><td>Widgets要使用Drag对象</td><td><strong>更简单快捷</strong>。在MouseArea对象中设置drag.target属性即可</td></tr><tr><td>交互代码</td><td>C++</td><td><strong>除了C++，还能嵌入JavaScript</strong></td></tr><tr><td>使用元素</td><td>Widgets对象，例如QWidget、QPushButton、QFlame 等</td><td>QQuick对象，例如QQuickRectangle (Rectangle)、 QQuickText (Text)、<br>QQuickMouseArea (MouseArea) 等</td></tr><tr><td>2D</td><td>——</td><td>可能更方便？</td></tr><tr><td>3D</td><td>——</td><td><strong>更方便</strong>。可以使用Quick 3D，有相应的3D组建</td></tr><tr><td>窗口自适应</td><td><strong>好</strong></td><td>不好（你可以把他理解成游戏，游戏一般都只给几个固定分辨率你选）</td></tr><tr><td><mark>相同点</mark></td><td></td><td></td></tr><tr><td>跨平台</td><td>🟩</td><td>🟩</td></tr></tbody></table><p>其他补充</p><p><code>text: qsTr(&quot;hello&quot;)</code>中的<code>qsTr</code>和Widgets中的<code>Tr</code>效果应该是类似的</p><h3 id="初始项目包含文件" tabindex="-1"><a class="header-anchor" href="#初始项目包含文件"><span>初始项目包含文件</span></a></h3><p>（Qt Quick App 不愧是快速开发，真的很简洁）</p><table><thead><tr><th>Qt Quick Application 初始项目</th><th>Qt Widgets Application 初始项目</th></tr></thead><tbody><tr><td>- QtQuickTest.pro<br>- main.cpp<br>- qml.qrc/main.qml</td><td>- QtWidgetTest.pro<br>- mainwindow.h<br>- main.cpp<br>- mainwindow.cpp<br>- mainwindow.ui (可选)</td></tr></tbody></table><h3 id="初始项目文件内容-pro" tabindex="-1"><a class="header-anchor" href="#初始项目文件内容-pro"><span>初始项目文件内容 - .pro</span></a></h3><p>（相同的地方我删掉了）</p><p>Qt Quick Application</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">QT += quick</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">CONFIG += c++11</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">SOURCES += \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">        main.cpp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">RESOURCES += qml.qrc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Additional import path used to resolve QML modules in Qt Creator&#39;s code model</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">QML_IMPORT_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Additional import path used to resolve QML modules just for Qt Quick Designer</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">QML_DESIGNER_IMPORT_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">……</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Qt Widgets Application</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">QT       += core gui</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">greaterThan(QT_MAJOR_VERSION, 4): QT += widgets</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">CONFIG += c++11</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">SOURCES += \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    main.cpp \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    mainwindow.cpp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">HEADERS += \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    mainwindow.h</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">FORMS += \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    mainwindow.ui</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">……</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="初始项目文件内容-main-cpp" tabindex="-1"><a class="header-anchor" href="#初始项目文件内容-main-cpp"><span>初始项目文件内容 - main.cpp</span></a></h3><p>Qt Quick Application</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QGuiApplication&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QQmlApplicationEngine&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#if</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> QT_VERSION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> QT_VERSION_CHECK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QCoreApplication::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Qt::AA_EnableHighDpiScaling);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QGuiApplication </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(argc, argv);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QQmlApplicationEngine engine;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> QUrl </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QStringLiteral</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;qrc:/main.qml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QObject::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">engine, </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QQmlApplicationEngine::objectCreated,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">                     &amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">app, [</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">](</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">QObject</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> QUrl</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">objUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">obj </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> url </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> objUrl)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            QCoreApplication::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }, Qt::QueuedConnection);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    engine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(url);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Qt Widgets Application</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;mainwindow.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QApplication&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    QApplication </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(argc, argv);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    MainWindow w;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="比较-qml-ui" tabindex="-1"><a class="header-anchor" href="#比较-qml-ui"><span>比较 .qml &amp; .ui</span></a></h2><table><thead><tr><th></th><th>.qml</th><th>.ui</th></tr></thead><tbody><tr><td>语法</td><td>更类似于json / python字典</td><td>更类似于xml</td></tr><tr><td>可读性</td><td><strong>好</strong></td><td>较差</td></tr><tr><td>界面可文本编辑</td><td>🟩可以直接编辑</td><td>🟥不可以直接编辑</td></tr><tr><td>界面可视化编辑</td><td>🟩体验较好</td><td>🟩体验较好</td></tr><tr><td>交互逻辑的可视化编辑</td><td></td><td></td></tr></tbody></table><p>相同点</p><ul><li><mark>本质上都是解析并生成C++对象</mark><ul><li>QML引擎在加载QML文件时，会为文件中的所有元素以某种方式创建相应的C++对象</li><li>UI文件被构建后，会生成.h文件，UI文件中的空间会被创建为相应的C++对象</li></ul></li></ul><h2 id="比较-qml引擎-v8引擎" tabindex="-1"><a class="header-anchor" href="#比较-qml引擎-v8引擎"><span>比较 QML引擎 &amp; V8引擎</span></a></h2><p>V8编译流水线</p><p><img src="`+l+'" alt="img" loading="lazy"></p><h1 id="跨领域对比" tabindex="-1"><a class="header-anchor" href="#跨领域对比"><span>跨领域对比</span></a></h1><p>前面的是Qt下各种工具的对比，那么如果包括Qt以外的工具呢，像HTML这种</p><h2 id="比较-qml-html-css" tabindex="-1"><a class="header-anchor" href="#比较-qml-html-css"><span>比较 QML &amp; HTML+CSS</span></a></h2><p>QML优点：</p><ul><li>QML的可读性更好，他更类似于HTML和CSS的结合</li><li>QML能通过id筛选使用其他元素的属性这点很方便</li><li>套娃方便、组件方便，HTML要通过Vue等框架才能实现这一点</li></ul><p>HTML+CSS优点：</p><ul><li>HTML 内容与样式分离，界面与逻辑分离</li><li>CSS样式更丰富</li></ul>',49)]))}const r=s(e,[["render",p],["__file","01. 比较 - 数种UI流.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/00.%20%E6%95%B0%E7%A7%8DUI%E6%B5%81/01.%20%E6%AF%94%E8%BE%83%20-%20%E6%95%B0%E7%A7%8DUI%E6%B5%81.html","title":"QT","lang":"zh-CN","frontmatter":{"description":"QT 目录 比较 - 数种UI流 数种UI开发流，分别是 widget、widget的可视化 —— ui（qt designer） qml、qml的可视化 —— qml设计器？ （画布、浏览器 这种） 这里是指工作流，开发上的流程不同。 事实上ui和widget更相似，ui文件可以看成是一种简化的widget（ui编译后其实就是cpp文件）。 我个人倾...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/00.%20%E6%95%B0%E7%A7%8DUI%E6%B5%81/01.%20%E6%AF%94%E8%BE%83%20-%20%E6%95%B0%E7%A7%8DUI%E6%B5%81.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"QT"}],["meta",{"property":"og:description","content":"QT 目录 比较 - 数种UI流 数种UI开发流，分别是 widget、widget的可视化 —— ui（qt designer） qml、qml的可视化 —— qml设计器？ （画布、浏览器 这种） 这里是指工作流，开发上的流程不同。 事实上ui和widget更相似，ui文件可以看成是一种简化的widget（ui编译后其实就是cpp文件）。 我个人倾..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"QT\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"QT","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"比较 - 数种UI流","slug":"比较-数种ui流","link":"#比较-数种ui流","children":[{"level":2,"title":"比较一览","slug":"比较一览","link":"#比较一览","children":[]},{"level":2,"title":"比较 Qt Quick App & Qt Widgets App","slug":"比较-qt-quick-app-qt-widgets-app","link":"#比较-qt-quick-app-qt-widgets-app","children":[{"level":3,"title":"功能比较","slug":"功能比较","link":"#功能比较","children":[]},{"level":3,"title":"初始项目包含文件","slug":"初始项目包含文件","link":"#初始项目包含文件","children":[]},{"level":3,"title":"初始项目文件内容 - .pro","slug":"初始项目文件内容-pro","link":"#初始项目文件内容-pro","children":[]},{"level":3,"title":"初始项目文件内容 - main.cpp","slug":"初始项目文件内容-main-cpp","link":"#初始项目文件内容-main-cpp","children":[]}]},{"level":2,"title":"比较 .qml & .ui","slug":"比较-qml-ui","link":"#比较-qml-ui","children":[]},{"level":2,"title":"比较 QML引擎 & V8引擎","slug":"比较-qml引擎-v8引擎","link":"#比较-qml引擎-v8引擎","children":[]}]},{"level":1,"title":"跨领域对比","slug":"跨领域对比","link":"#跨领域对比","children":[{"level":2,"title":"比较 QML & HTML+CSS","slug":"比较-qml-html-css","link":"#比较-qml-html-css","children":[]}]}],"git":{},"readingTime":{"minutes":4.18,"words":1254},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/00. 数种UI流/01. 比较 - 数种UI流.md","excerpt":"\\n<h1>目录</h1>\\n<h1>比较 - 数种UI流</h1>\\n<p>数种UI开发流，分别是</p>\\n<ul>\\n<li>widget、widget的可视化 —— ui（qt designer）</li>\\n<li>qml、qml的可视化 —— qml设计器？</li>\\n<li>（画布、浏览器 这种）</li>\\n</ul>\\n<p>这里是指工作流，开发上的流程不同。</p>\\n<p>事实上ui和widget更相似，ui文件可以看成是一种简化的widget（ui编译后其实就是cpp文件）。<br>\\n我个人倾向于认为ui是widget的一种类似 “超集” 的关系（实际不是），会更好理解</p>\\n<h2>比较一览</h2>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/00. 数种UI流/01. 比较 - 数种UI流.md","value":{"title":"01. 比较 - 数种UI流","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/00. 数种UI流/01. 比较 - 数种UI流.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,k as data};
