import{_ as o,c as l,e as p,a,d as s,b as t,o as i,r}from"./app-DqOgzRet.js";const u={},d={href:"https://play.vuejs.org/#eNo9jcEKwjAMhl/lt5fpQYfXUQfefAMvvRQbddC1pUuHUPrudg4HIcmXjyRZXEM4zYlEJ+T0iEPgXjn6BB8Zhp46WUZWDjCa9f6w9kAkTtH9CRinV4fmRtZ63H20Ztesqiylphqy3R5UYBqD1UyVAPk+9zkvV1CKbCv9poMLiTEfR2/IXpSoXomqZLtti/IFwVtA9A==",target:"_blank",rel:"noopener noreferrer"},c={href:"https://jsfiddle.net/yyx990803/2ke1ab0z/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://vite.new/vue",target:"_blank",rel:"noopener noreferrer"},k={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://cn.vuejs.org/guide/extras/ways-of-using-vue.html#single-page-application-spa",target:"_blank",rel:"noopener noreferrer"},g={href:"https://vitejs.dev",target:"_blank",rel:"noopener noreferrer"},b={href:"https://cn.vuejs.org/guide/scaling-up/sfc.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/vuejs/create-vue",target:"_blank",rel:"noopener noreferrer"},j={href:"https://cn.vuejs.org/guide/introduction.html#composition-api",target:"_blank",rel:"noopener noreferrer"},A={href:"https://cn.vuejs.org/guide/introduction.html#options-api",target:"_blank",rel:"noopener noreferrer"},y={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://marketplace.visualstudio.com/items?itemName=Vue.volar",target:"_blank",rel:"noopener noreferrer"},E={href:"https://cn.vuejs.org/guide/scaling-up/tooling.html#ide-support",target:"_blank",rel:"noopener noreferrer"},N={href:"https://cn.vuejs.org/guide/scaling-up/tooling.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://cn.vitejs.dev",target:"_blank",rel:"noopener noreferrer"},x={href:"https://cn.vuejs.org/guide/typescript/overview.html",target:"_blank",rel:"noopener noreferrer"},D={href:"https://cn.vuejs.org/guide/best-practices/production-deployment.html",target:"_blank",rel:"noopener noreferrer"},P={href:"https://unpkg.com/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://www.jsdelivr.com/package/npm/vue",target:"_blank",rel:"noopener noreferrer"},B={href:"https://cdnjs.com/libraries/vue",target:"_blank",rel:"noopener noreferrer"},S={href:"https://cn.vuejs.org/api/application.html#createapp",target:"_blank",rel:"noopener noreferrer"},C={href:"https://cn.vuejs.org/api/application.html",target:"_blank",rel:"noopener noreferrer"};function M(q,n){const e=r("ExternalLinkIcon");return i(),l("div",null,[n[71]||(n[71]=p('<h1 id="vue" tabindex="-1"><a class="header-anchor" href="#vue"><span>Vue</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手"><span>快速上手</span></a></h1><h2 id="快速上手-1" tabindex="-1"><a class="header-anchor" href="#快速上手-1"><span>快速上手</span></a></h2><h3 id="线上尝试vue" tabindex="-1"><a class="header-anchor" href="#线上尝试vue"><span>线上尝试Vue</span></a></h3>',5)),a("ul",null,[a("li",null,[n[1]||(n[1]=s("想要快速体验 Vue，你可以直接试试我们的")),a("a",d,[n[0]||(n[0]=s("演练场")),t(e)]),n[2]||(n[2]=s("。"))]),a("li",null,[n[4]||(n[4]=s("如果你更喜欢不用任何构建的原始 HTML，可以使用 ")),a("a",c,[n[3]||(n[3]=s("JSFiddle")),t(e)]),n[5]||(n[5]=s(" 入门。"))]),a("li",null,[n[7]||(n[7]=s("如果你已经比较熟悉 Node.js 和构建工具等概念，还可以直接在浏览器中打开 ")),a("a",v,[n[6]||(n[6]=s("StackBlitz")),t(e)]),n[8]||(n[8]=s(" 来尝试完整的构建设置。"))])]),n[72]||(n[72]=a("h3",{id:"创建一个vue应用",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#创建一个vue应用"},[a("span",null,"创建一个Vue应用")])],-1)),n[73]||(n[73]=a("p",null,"前提条件",-1)),a("ul",null,[n[11]||(n[11]=a("li",null,"熟悉命令行",-1)),a("li",null,[n[10]||(n[10]=s("已安装 16.0 或更高版本的 ")),a("a",k,[n[9]||(n[9]=s("Node.js")),t(e)])])]),a("p",null,[n[15]||(n[15]=s("在本节中，我们将介绍如何在本地搭建 Vue ")),a("a",m,[n[12]||(n[12]=s("单页应用")),t(e)]),n[16]||(n[16]=s("。创建的项目将使用基于 ")),a("a",g,[n[13]||(n[13]=s("Vite")),t(e)]),n[17]||(n[17]=s(" 的构建设置，并允许我们使用 Vue 的")),a("a",b,[n[14]||(n[14]=s("单文件组件")),t(e)]),n[18]||(n[18]=s(" (SFC)。"))]),a("p",null,[n[20]||(n[20]=s("确保你安装了最新版本的 ")),a("a",f,[n[19]||(n[19]=s("Node.js")),t(e)]),n[21]||(n[21]=s("，并且你的当前工作目录正是打算创建项目的目录。在命令行中运行以下命令 (不要带上 ")),n[22]||(n[22]=a("code",null,">",-1)),n[23]||(n[23]=s(" 符号)："))]),n[74]||(n[74]=p(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> init vue@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1)),a("p",null,[n[25]||(n[25]=s("这一指令将会安装并执行 ")),a("a",h,[n[24]||(n[24]=s("create-vue")),t(e)]),n[26]||(n[26]=s("，它是 Vue 官方的项目脚手架工具。你将会看到一些诸如 TypeScript 和测试支持之类的可选功能提示："))]),n[75]||(n[75]=p(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>✔ Project name: … <span class="token operator">&lt;</span>your-project-name<span class="token operator">&gt;</span>
✔ Add TypeScript? … No / Yes
✔ Add JSX Support? … No / Yes
✔ Add Vue Router <span class="token keyword">for</span> Single Page Application development? … No / Yes
✔ Add Pinia <span class="token keyword">for</span> state management? … No / Yes
✔ Add Vitest <span class="token keyword">for</span> Unit testing? … No / Yes
✔ Add an End-to-End Testing Solution? … No / Cypress / Playwright
✔ Add ESLint <span class="token keyword">for</span> code quality? … No / Yes
✔ Add Prettier <span class="token keyword">for</span> code formatting? … No / Yes

Scaffolding project <span class="token keyword">in</span> ./<span class="token operator">&lt;</span>your-project-name<span class="token operator">&gt;</span><span class="token punctuation">..</span>.
Done.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是我个人常用的选项，但不一定适合你：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>√ Project name: <span class="token punctuation">..</span>. markdown-it-test
√ Add TypeScript? <span class="token punctuation">..</span>. No / <span class="token punctuation">[</span>Yes<span class="token punctuation">]</span>
√ Add JSX Support? <span class="token punctuation">..</span>. <span class="token punctuation">[</span>No<span class="token punctuation">]</span> / Yes
√ Add Vue Router <span class="token keyword">for</span> Single Page Application development? <span class="token punctuation">..</span>. No / <span class="token punctuation">[</span>Yes<span class="token punctuation">]</span>
√ Add Pinia <span class="token keyword">for</span> state management? <span class="token punctuation">..</span>. <span class="token punctuation">[</span>No<span class="token punctuation">]</span> / Yes
√ Add Vitest <span class="token keyword">for</span> Unit Testing? <span class="token punctuation">..</span>. <span class="token punctuation">[</span>No<span class="token punctuation">]</span> / Yes
√ Add an End-to-End Testing Solution? » <span class="token punctuation">[</span>No<span class="token punctuation">]</span>
√ Add ESLint <span class="token keyword">for</span> code quality? <span class="token punctuation">..</span>. No / <span class="token punctuation">[</span>Yes<span class="token punctuation">]</span>
√ Add Prettier <span class="token keyword">for</span> code formatting? <span class="token punctuation">..</span>. No / <span class="token punctuation">[</span>Yes<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不确定是否要开启某个功能，你可以直接按下回车键选择 <code>No</code>。在项目被创建后，通过以下步骤安装依赖并启动开发服务器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>your-project-name<span class="token operator">&gt;</span>
<span class="token operator">&gt;</span> <span class="token function">npm</span> <span class="token function">install</span>
<span class="token operator">&gt;</span> <span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)),a("p",null,[n[29]||(n[29]=s("你现在应该已经运行起来了你的第一个 Vue 项目！请注意，生成的项目中的示例组件使用的是")),a("a",j,[n[27]||(n[27]=s("组合式 API")),t(e)]),n[30]||(n[30]=s(" 和 ")),n[31]||(n[31]=a("code",null,"<script setup>",-1)),n[32]||(n[32]=s("，而非")),a("a",A,[n[28]||(n[28]=s("选项式 API")),t(e)]),n[33]||(n[33]=s("。下面是一些补充提示："))]),a("ul",null,[a("li",null,[n[37]||(n[37]=s("推荐的 IDE 配置是 ")),a("a",y,[n[34]||(n[34]=s("Visual Studio Code")),t(e)]),n[38]||(n[38]=s(" + ")),a("a",V,[n[35]||(n[35]=s("Volar 扩展")),t(e)]),n[39]||(n[39]=s("。如果使用其他编辑器，参考 ")),a("a",E,[n[36]||(n[36]=s("IDE 支持章节")),t(e)]),n[40]||(n[40]=s("。"))]),a("li",null,[n[42]||(n[42]=s("更多工具细节，包括与后端框架的整合，我们会在")),a("a",N,[n[41]||(n[41]=s("工具链指南")),t(e)]),n[43]||(n[43]=s("进行讨论。"))]),a("li",null,[n[45]||(n[45]=s("要了解构建工具 Vite 更多背后的细节，请查看 ")),a("a",w,[n[44]||(n[44]=s("Vite 文档")),t(e)]),n[46]||(n[46]=s("。"))]),a("li",null,[n[48]||(n[48]=s("如果你选择使用 TypeScript，请阅读 ")),a("a",x,[n[47]||(n[47]=s("TypeScript 使用指南")),t(e)]),n[49]||(n[49]=s("。"))])]),n[76]||(n[76]=p(`<p>当你准备将应用发布到生产环境时，请运行：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2)),a("p",null,[n[51]||(n[51]=s("此命令会在 ")),n[52]||(n[52]=a("code",null,"./dist",-1)),n[53]||(n[53]=s(" 文件夹中为你的应用创建一个生产环境的构建版本。关于将应用上线生产环境的更多内容，请阅读")),a("a",D,[n[50]||(n[50]=s("生产环境部署指南")),t(e)]),n[54]||(n[54]=s("。"))]),n[77]||(n[77]=p(`<h3 id="通过cdn使用vue" tabindex="-1"><a class="header-anchor" href="#通过cdn使用vue"><span>通过CDN使用Vue</span></a></h3><p>你可以借助 script 标签直接通过 CDN 来使用 Vue：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>/script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3)),a("p",null,[n[58]||(n[58]=s("这里我们使用了 ")),a("a",P,[n[55]||(n[55]=s("unpkg")),t(e)]),n[59]||(n[59]=s("，但你也可以使用任何提供 npm 包服务的 CDN，例如 ")),a("a",T,[n[56]||(n[56]=s("jsdelivr")),t(e)]),n[60]||(n[60]=s(" 或 ")),a("a",B,[n[57]||(n[57]=s("cdnjs")),t(e)]),n[61]||(n[61]=s("。当然，你也可以下载此文件并自行提供服务。"))]),n[78]||(n[78]=a("p",null,"通过 CDN 使用 Vue 时，不涉及“构建步骤”。这使得设置更加简单，并且可以用于增强静态的 HTML 或与后端框架集成。但是，你将无法使用单文件组件 (SFC) 语法。",-1)),n[79]||(n[79]=a("p",null,"……（更多的略，详见原文档）",-1)),n[80]||(n[80]=a("h2",{id:"创建一个应用",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#创建一个应用"},[a("span",null,"创建一个应用")])],-1)),n[81]||(n[81]=a("h3",{id:"根组件-createapp",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#根组件-createapp"},[a("span",null,"根组件（createApp）")])],-1)),a("p",null,[n[63]||(n[63]=s("每个 Vue 应用都是通过 ")),a("a",S,[n[62]||(n[62]=a("code",null,"createApp",-1)),t(e)]),n[64]||(n[64]=s(" 函数创建一个新的 ")),n[65]||(n[65]=a("strong",null,"应用实例",-1))]),n[82]||(n[82]=p(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">/* 根组件选项 */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们传入 <code>createApp</code> 的对象实际上是一个组件，每个应用都需要一个“根组件”，其他组件将作为其子组件。</p><p>如果你使用的是单文件组件，我们可以直接从另一个文件中导入根组件。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token comment">// 从一个单文件组件中导入根组件</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="组件树" tabindex="-1"><a class="header-anchor" href="#组件树"><span>组件树</span></a></h3><p>虽然本指南中的许多示例只需要一个组件，但大多数真实的应用都是由一棵嵌套的、可重用的组件树组成的。 例如，一个待办事项 (Todos) 应用的组件树可能是这样的：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">App</span> <span class="token punctuation">(</span>root component<span class="token punctuation">)</span>
├─ TodoList
│  └─ TodoItem
│     ├─ TodoDeleteButton
│     └─ TodoEditButton
└─ TodoFooter
   ├─ TodoClearButton
   └─ TodoStatistics

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="挂载应用-mount" tabindex="-1"><a class="header-anchor" href="#挂载应用-mount"><span>挂载应用（mount）</span></a></h3><p>应用实例必须在调用了 <code>.mount()</code> 方法后才会渲染出来。该方法接收一个“容器”参数，可以是一个实际的 DOM 元素或是一个 CSS 选择器字符串：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>应用根组件的内容将会被渲染在容器元素里面。容器元素自己将<strong>不会</strong>被视为应用的一部分。</p><p><code>.mount()</code> 方法应该始终在整个应用配置和资源注册完成后被调用。同时请注意，不同于其他资源注册方法，它的返回值是根组件实例而非应用实例。</p><h3 id="dom-中的根组件模板" tabindex="-1"><a class="header-anchor" href="#dom-中的根组件模板"><span>DOM 中的根组件模板</span></a></h3><p>当在未采用构建流程的情况下使用 Vue 时，我们可以在挂载容器中直接书写根组件模板：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当根组件没有设置 <code>template</code> 选项时，Vue 将自动使用容器的 <code>innerHTML</code> 作为模板。</p><h3 id="应用配置-app-config" tabindex="-1"><a class="header-anchor" href="#应用配置-app-config"><span>应用配置（app.config）</span></a></h3><p>应用实例会暴露一个 <code>.config</code> 对象允许我们配置一些应用级的选项。 例如定义一个应用级的错误处理器，用来捕获所有子组件上的错误：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function-variable function">errorHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 处理错误 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用实例还提供了一些方法来注册应用范围内可用的资源，例如注册一个组件：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;TodoDeleteButton&#39;</span><span class="token punctuation">,</span> TodoDeleteButton<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,23)),a("p",null,[n[67]||(n[67]=s("这使得 ")),n[68]||(n[68]=a("code",null,"TodoDeleteButton",-1)),n[69]||(n[69]=s(" 在应用的任何地方都是可用的。我们会在指南的后续章节中讨论关于组件和其他资源的注册。你也可以在 ")),a("a",C,[n[66]||(n[66]=s("API 参考")),t(e)]),n[70]||(n[70]=s("中浏览应用实例 API 的完整列表。"))]),n[83]||(n[83]=p(`<p>确保在挂载应用实例之前完成所有应用配置！</p><h3 id="多个应用实例" tabindex="-1"><a class="header-anchor" href="#多个应用实例"><span>多个应用实例</span></a></h3><p>应用实例并不只限于一个。<code>createApp</code> API 允许你在同一个页面中创建多个共存的 Vue 应用，而且每个应用都拥有自己的用于配置和全局资源的作用域。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> app1 <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app1<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#container-1&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> app2 <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app2<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#container-2&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你正在使用 Vue 来增强服务端渲染 HTML，并且只想要 Vue 去控制一个大型页面中特殊的一小部分，应避免将一个单独的 Vue 应用实例挂载到整个页面上，而是应该创建多个小的应用实例，将它们分别挂载到所需的元素上去。</p>`,5))])}const Y=o(u,[["render",M],["__file","02. 快速上手.html.vue"]]),H=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/02.%20%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/Vue3/01.%20%E5%BC%80%E5%A7%8B/02.%20%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html","title":"Vue","lang":"zh-CN","frontmatter":{"description":"Vue 目录 快速上手 快速上手 线上尝试Vue 想要快速体验 Vue，你可以直接试试我们的演练场。 如果你更喜欢不用任何构建的原始 HTML，可以使用 JSFiddle 入门。 如果你已经比较熟悉 Node.js 和构建工具等概念，还可以直接在浏览器中打开 StackBlitz 来尝试完整的构建设置。 创建一个Vue应用 前提条件 熟悉命令行 已安装...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/02.%20%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/Vue3/01.%20%E5%BC%80%E5%A7%8B/02.%20%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Vue"}],["meta",{"property":"og:description","content":"Vue 目录 快速上手 快速上手 线上尝试Vue 想要快速体验 Vue，你可以直接试试我们的演练场。 如果你更喜欢不用任何构建的原始 HTML，可以使用 JSFiddle 入门。 如果你已经比较熟悉 Node.js 和构建工具等概念，还可以直接在浏览器中打开 StackBlitz 来尝试完整的构建设置。 创建一个Vue应用 前提条件 熟悉命令行 已安装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Vue","slug":"vue","link":"#vue","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[{"level":2,"title":"快速上手","slug":"快速上手-1","link":"#快速上手-1","children":[{"level":3,"title":"线上尝试Vue","slug":"线上尝试vue","link":"#线上尝试vue","children":[]},{"level":3,"title":"创建一个Vue应用","slug":"创建一个vue应用","link":"#创建一个vue应用","children":[]},{"level":3,"title":"通过CDN使用Vue","slug":"通过cdn使用vue","link":"#通过cdn使用vue","children":[]}]},{"level":2,"title":"创建一个应用","slug":"创建一个应用","link":"#创建一个应用","children":[{"level":3,"title":"根组件（createApp）","slug":"根组件-createapp","link":"#根组件-createapp","children":[]},{"level":3,"title":"组件树","slug":"组件树","link":"#组件树","children":[]},{"level":3,"title":"挂载应用（mount）","slug":"挂载应用-mount","link":"#挂载应用-mount","children":[]},{"level":3,"title":"DOM 中的根组件模板","slug":"dom-中的根组件模板","link":"#dom-中的根组件模板","children":[]},{"level":3,"title":"应用配置（app.config）","slug":"应用配置-app-config","link":"#应用配置-app-config","children":[]},{"level":3,"title":"多个应用实例","slug":"多个应用实例","link":"#多个应用实例","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":6.03,"words":1809},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/Vue/Vue3/01. 开始/02. 快速上手.md","excerpt":"\\n<h1>目录</h1>\\n<h1>快速上手</h1>\\n<h2>快速上手</h2>\\n<h3>线上尝试Vue</h3>\\n<ul>\\n<li>想要快速体验 Vue，你可以直接试试我们的<a href=\\"https://play.vuejs.org/#eNo9jcEKwjAMhl/lt5fpQYfXUQfefAMvvRQbddC1pUuHUPrudg4HIcmXjyRZXEM4zYlEJ+T0iEPgXjn6BB8Zhp46WUZWDjCa9f6w9kAkTtH9CRinV4fmRtZ63H20Ztesqiylphqy3R5UYBqD1UyVAPk+9zkvV1CKbCv9poMLiTEfR2/IXpSoXomqZLtti/IFwVtA9A==\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">演练场</a>。</li>\\n<li>如果你更喜欢不用任何构建的原始 HTML，可以使用 <a href=\\"https://jsfiddle.net/yyx990803/2ke1ab0z/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JSFiddle</a> 入门。</li>\\n<li>如果你已经比较熟悉 Node.js 和构建工具等概念，还可以直接在浏览器中打开 <a href=\\"https://vite.new/vue\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">StackBlitz</a> 来尝试完整的构建设置。</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/Vue/Vue3/01. 开始/02. 快速上手.md","value":{"title":"02. 快速上手","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/Vue/Vue3/01. 开始/02. 快速上手.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{Y as comp,H as data};
