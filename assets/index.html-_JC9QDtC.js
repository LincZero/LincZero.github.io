import{_ as o,c as i,e,o as t}from"./app-Dwsnbiv5.js";const n={};function r(s,l){return t(),i("div",null,l[0]||(l[0]=[e('<h1 id="_03-管理层" tabindex="-1"><a class="header-anchor" href="#_03-管理层"><span>03. 管理层</span></a></h1><p>所在目录</p><ul><li>Theory， 项目有关代码有关</li><li>Language， 项目无关代码有关</li><li>Project， 项目有关代码有关</li><li><strong>Tools</strong>， 项目有关代码无关。有时会使用具体的代码来说明特性，但这些特性与具体的某个语言无关，更多的是一种使用编程语言架构代码的优化体系，不同语言都有类似的工具。</li></ul><p>Tools再细分，主要包括：</p><ul><li>项目发布的管理</li><li>项目组织的管理</li><li>代码组织的管理</li></ul><p>目录解释</p><ol><li><p>知识层</p></li><li><p>开发层</p><ul><li><p>代码管理： 只要有代码就能使用</p><ul><li>注释管理</li><li>调试工具</li><li>优化</li></ul></li><li><p>多类管理： 一份文件里有 <mark><strong>多个对象</strong></mark> (类/函数等)，即可使用</p><ul><li>设计模式</li><li>面向对象</li></ul></li><li><p>多文件多目录管理： 项目中有 <mark><strong>多个文件</strong></mark>，即可使用</p><ul><li><p>目录管理</p></li><li><p>复制文件</p></li></ul></li><li><p>多项目管理： 项目中有多个子项目，即可使用 解耦/高解耦/高独立的 <mark><strong>多个文件/项目/编译产物</strong></mark> 进行依赖和组织的方式，必须要有多文件/项目才可以使用的技术</p><ul><li>构建系统： 构建系统，组织多个文件/多个项目一同进行<strong>编译</strong>，强调<strong>多文件</strong></li><li>子项目： 如名，其实就是构建系统。这里强调是<strong>多项目</strong></li><li>包管理： 更进一步地将 <strong>更易通用</strong>、<strong>更高复用</strong>、<strong>更高解耦</strong> 的模块，封装成更易于复用的包，且往往可以通过包管理器进行管理。强调<strong>多个编译库</strong></li><li>多exe/启动器： 强<strong>调多个可执行项</strong></li></ul></li><li><p>部署管理： 同一项目拥有的 <mark><strong>多个状态</strong></mark>，即可管理，可细分为不同类型</p><ul><li>版本与分支管理： 同一项目的不同<strong>版本与分支</strong></li><li>部署管理： 同一项目的 <strong>开发与部署</strong> ，包括：DevOps、环境、多平台 等</li></ul></li><li><p>其他管理： 同一项目的更多不同的特征，更抽象的管理</p><ul><li>多语言管理</li><li>开发协同</li></ul></li></ul></li><li><p>管理层</p></li><li><p>优化层</p></li></ol>',7)]))}const a=o(n,[["render",r],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/03.%20%E7%AE%A1%E7%90%86%E5%B1%82/","title":"03. 管理层","lang":"zh-CN","frontmatter":{"description":"03. 管理层 所在目录 Theory， 项目有关代码有关 Language， 项目无关代码有关 Project， 项目有关代码有关 Tools， 项目有关代码无关。有时会使用具体的代码来说明特性，但这些特性与具体的某个语言无关，更多的是一种使用编程语言架构代码的优化体系，不同语言都有类似的工具。 Tools再细分，主要包括： 项目发布的管理 项目组织...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/03.%20%E7%AE%A1%E7%90%86%E5%B1%82/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"03. 管理层"}],["meta",{"property":"og:description","content":"03. 管理层 所在目录 Theory， 项目有关代码有关 Language， 项目无关代码有关 Project， 项目有关代码有关 Tools， 项目有关代码无关。有时会使用具体的代码来说明特性，但这些特性与具体的某个语言无关，更多的是一种使用编程语言架构代码的优化体系，不同语言都有类似的工具。 Tools再细分，主要包括： 项目发布的管理 项目组织..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03. 管理层\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"03. 管理层","slug":"_03-管理层","link":"#_03-管理层","children":[]}],"git":{},"readingTime":{"minutes":1.75,"words":526},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/README.md","excerpt":"\\n<p>所在目录</p>\\n<ul>\\n<li>Theory， 项目有关代码有关</li>\\n<li>Language， 项目无关代码有关</li>\\n<li>Project， 项目有关代码有关</li>\\n<li><strong>Tools</strong>， 项目有关代码无关。有时会使用具体的代码来说明特性，但这些特性与具体的某个语言无关，更多的是一种使用编程语言架构代码的优化体系，不同语言都有类似的工具。</li>\\n</ul>\\n<p>Tools再细分，主要包括：</p>\\n<ul>\\n<li>项目发布的管理</li>\\n<li>项目组织的管理</li>\\n<li>代码组织的管理</li>\\n</ul>\\n<p>目录解释</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/README.md","value":{"title":"03. Tools/","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{a as comp,g as data};
