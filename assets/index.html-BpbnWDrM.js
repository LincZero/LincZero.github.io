import{_ as e,c as s,e as a,a as i,b as n,o as r,r as p}from"./app-DQC9V0Al.js";const o={};function d(h,l){const t=p("Mermaid");return r(),s("div",null,[l[2]||(l[2]=a('<h1 id="嵌入式" tabindex="-1"><a class="header-anchor" href="#嵌入式"><span>嵌入式</span></a></h1><h2 id="入门" tabindex="-1"><a class="header-anchor" href="#入门"><span>入门</span></a></h2><p>参考：<a href="https://www.bilibili.com/video/BV1BV41197rY" target="_blank" rel="noopener noreferrer">收藏向！零基础10分钟入门嵌入式！</a></p><h3 id="嵌入式处理器" tabindex="-1"><a class="header-anchor" href="#嵌入式处理器"><span>嵌入式处理器</span></a></h3><h4 id="mcu-micro-controller-unit-小控制单元-单片机" tabindex="-1"><a class="header-anchor" href="#mcu-micro-controller-unit-小控制单元-单片机"><span>MCU (Micro-Controller Unit，小控制单元，单片机)</span></a></h4><ul><li>定义：处理器、内存、输入输出接口等的单一芯片</li><li>特点：<strong>资源有限</strong>、逻辑简单、特定任务</li><li>场景：控制汽车、智能家电、物联网设备</li><li>常见设备 <ul><li>经典MCU：89C51、STM32、ESP32，他们有各自配套的开发工具</li><li>入门MCU <ul><li>Arduino (开源嵌入式硬件平台)：语言简单、硬件开源库丰富是它的最大特点</li><li>树莓派 Raspberry Pi：可称为微型电脑，芯片中包含了arm架构的处理器核心，相较一般单片机，具有更高的计算能力和更大的存储容量，支持运行复杂的操作系统和应用程序</li></ul></li></ul></li></ul><h4 id="dsp-digital-signal-processor-数字信号处理器" tabindex="-1"><a class="header-anchor" href="#dsp-digital-signal-processor-数字信号处理器"><span>DSP (Digital Signal Processor，数字信号处理器)</span></a></h4><ul><li>定义：由德州仪器公司专门设计，用于处理<strong>数字信号</strong>的处理器</li><li>特点：机器指令对数字信号中的卷积傅列变换、乘法除法等运算非常快速</li><li>场景：无线通信、音视频处理、雷达系统等。涉及数字信号处理的场景</li></ul><h4 id="fpga-field-programmable-gate-array-可编程门阵列" tabindex="-1"><a class="header-anchor" href="#fpga-field-programmable-gate-array-可编程门阵列"><span>FPGA (Field-Programmable Gate Array，可编程门阵列)</span></a></h4><ul><li>定义：它是一种可在实际使用前，由用户编程的集成电路，利用 <strong>可编程互联 (verilog/VHDL)</strong> 将 <strong>可编程逻辑块（大量零散的与、或、非门电路块）</strong> 按特定功能相连，形成复杂的组合逻辑或时序逻辑</li><li>特点：较为复杂。灵活性、可重构性高、实时性</li><li>场景：原型设计、加速计算、仪器测控 包括最近火爆的FPS硬件外挂，就是使用FPGA作为内存的DMA桥梁实现的</li></ul><h3 id="硬件、软件、固件" tabindex="-1"><a class="header-anchor" href="#硬件、软件、固件"><span>硬件、软件、固件</span></a></h3><h4 id="硬件" tabindex="-1"><a class="header-anchor" href="#硬件"><span>硬件</span></a></h4><p>硬件是嵌入式系统中的物理组件。包括：</p><ul><li>处理器：相当于人的大脑，负责思考和支配身体</li><li>传感器：帮助人获取知觉</li><li>执行器：执行大脑指定的动作</li><li>存储器：负责记忆知识</li></ul><p><strong>是嵌入式系统的物理基础</strong>。开发者需要设计和布局硬件电路 选择适当的处理器和外围设备 以满足系统需求</p><h4 id="软件" tabindex="-1"><a class="header-anchor" href="#软件"><span>软件</span></a></h4><p>软件是在嵌入式系统上运行的 可执行代码和数据的结合，包括：</p><ul><li>应用程序</li><li>驱动程序</li><li>算法</li><li>等软件</li></ul><p>就像人的思维进入数据时 人已知的知识 可执行代码是人的行为 逻辑操作系统就像人的神经系统 既具备物质基础 又调控思维</p><p><strong>是嵌入式系统的核心</strong>。开发者根据系统的计算和控制任务 开发相应的操作系统与程序</p><h4 id="固件" tabindex="-1"><a class="header-anchor" href="#固件"><span>固件</span></a></h4><p>把以上两者联系起来的是固件，它是介于硬件和软件之间的一类软件，是存储在非易失性存储器中的代码和数据，用于控制硬件设备的操作和功能</p><p><strong>是嵌入式系统的桥梁</strong>。用于初始化硬件、加载操作系统或直接执行控制功能</p><h3 id="典型mcu结构与功能" tabindex="-1"><a class="header-anchor" href="#典型mcu结构与功能"><span>典型MCU结构与功能</span></a></h3><h4 id="处理器" tabindex="-1"><a class="header-anchor" href="#处理器"><span>处理器</span></a></h4>',25)),i("ul",null,[l[1]||(l[1]=i("li",null,[i("p",null,"CPU：运算、控制、寄存")],-1)),i("li",null,[l[0]||(l[0]=i("p",null,"时钟 -> 定时器 -> 中断 -> 看门狗",-1)),n(t,{id:"mermaid-194",code:"eJwtjEEKwjAURPc9hRf4PUJP4MobuNKleILqqrZirYsGbSEUwWTTIghBjOQ0+T/pLUzB3czjzay2y816Nl9ExNR44QBUnq1pQkP+AUhwuE35KgG8MZg9/WACw/TrxQPLKij23VPdA2AlqeWUisDoIHx3xEwF12qNeQfx/6reu4LFkLi2GJnE8g7gmopO08y9tNPc5YrSXfQDMUhdrA=="})])]),l[3]||(l[3]=a('<p>一些概念解释</p><ul><li>时钟：当定时器达到预先设定的时间后，触发中断流水线得到命令，进行新的生产周而复始</li><li>看门狗：名字也很形象，一只负责监视工厂安全的狗，如果你不按时喂给它食物，它就会判断系统出现了问题，需要复位重启</li></ul><h4 id="存储器" tabindex="-1"><a class="header-anchor" href="#存储器"><span>存储器</span></a></h4><ul><li>片上存储</li></ul><p>一些概念解释</p><ul><li>存储：流水线能正常工作，供给其生产的仓库也要足够给力。经验证明，分级存储是一个高效的存储方案 <ul><li>ROM (只读存储器)：只读，出厂前写定内容，无法修改。用于程序启动和内核功能调用</li><li>SRAM (静态随机存储器)：读写快，但断电数据会丢失，存储运行时临时性数据</li><li>Flash (闪存)：读写速度适中，断电后数据不会丢失。用于存储程序代码、数据、烧录的固件</li></ul></li></ul><h4 id="i-o" tabindex="-1"><a class="header-anchor" href="#i-o"><span>I/O</span></a></h4><ul><li>外设接口</li><li>无线通信</li></ul><h5 id="模拟量与数字量" tabindex="-1"><a class="header-anchor" href="#模拟量与数字量"><span>模拟量与数字量</span></a></h5><ul><li>模拟量： <ul><li>连续变化的信号，计算机不能直接处理</li><li>它可以在一定范围内取任何数值 且可以无限细分 现实中绝大多数的概念也都是模拟的。</li><li>例如：语音信号、温度速度、电压变化</li></ul></li><li>数字量 <ul><li>离散的信号，这是计算机所能处理的数据</li><li>它在一系列离散的数值中取值与模拟量不同 数字量只能取有限的特定的数值 通常使用二进制来表示。</li><li>例如：电灯的开关、数字图像、时钟等</li></ul></li><li>模拟量-&gt;数字量：采用一段时间取一个值的方式 将其转化为数字量再进行处理 这就是所谓的<strong>采样</strong>、量化</li><li>数字量-&gt;模拟量：当单片机处理完这些数字量后 再通过平滑转化为模拟量进行输出 这就是所谓的<strong>滤波</strong>、逆量化</li></ul><h5 id="【交互】单片机-外部-4" tabindex="-1"><a class="header-anchor" href="#【交互】单片机-外部-4"><span>【交互】单片机 -- 外部 (4)</span></a></h5><ul><li>GPIO (通用输入/输出)：<strong>输入数字输出数字</strong><ul><li>是连接外设与传感器的通用接口</li></ul></li><li>PWM (脉冲宽度调制)：产生模拟信号。它通过<strong>输出</strong>快速切换的数字量，高低电平会被电机平均为<strong>比较平滑的模拟信号</strong><ul><li>如控制电机速度 调光led等</li></ul></li><li>ADC (模/数转换器)：<strong>输入模拟输出数字</strong>。将模拟量转化为数字量，用于从传感器中读取模拟数据 <ul><li>比如获取外界温度</li></ul></li><li>DAC (数/模转换器)：<strong>输入数字输出模拟</strong><ul><li>用于向执行器生成模拟输出，比如播放音频</li></ul></li></ul><h5 id="【交互】芯片-芯片-3" tabindex="-1"><a class="header-anchor" href="#【交互】芯片-芯片-3"><span>【交互】芯片 -- 芯片 (3)</span></a></h5><ul><li>UART (通用异步收发器)：异步、全双工、20Kbps-10Mbps <ul><li>通常应用于与计算机连接 烧录调试程序</li></ul></li><li>SPI：同步、全双工、&lt;=10Mbps <ul><li>SPI通常用于存储器 屏幕等要求较快传输速度的设备相</li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mn>2</mn></msup><mi>C</mi><mo>−</mo><msup><mi>I</mi><mn>2</mn></msup><mi>C</mi><mtext>总线</mtext></mrow><annotation encoding="application/x-tex">I^2C-I^2C总线</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">总线</span></span></span></span>：同步、半双工、100Kbps-3.4Mbps <ul><li>由于其接线简单 常用于各种传感器连接单片机</li></ul></li><li>区别： <ul><li>第一种是向两个部门之间发邮件 扁平化管理 假部门表达 我希望你们快点弄出一个策划案 而乙部门可以抱怨时间不够 人手不足 各说各的不必同时</li><li>后两种则向公司年会 大家统一坐在礼堂 CEO向各个分部门领导传达新一年的规划</li><li>两者的差异在于 IPHONEC总线通过更复杂的协议 省去了两条线 代价是更慢的速度和领导发言时不能插嘴</li></ul></li></ul><h5 id="【交互】单片机-单片机" tabindex="-1"><a class="header-anchor" href="#【交互】单片机-单片机"><span>【交互】单片机 -- 单片机</span></a></h5><ul><li><p>就像工厂与上下游企业有合作 布料厂的成品要售给制衣厂，目前的嵌入式设备上使用较多的协议是：</p><ul><li><table><thead><tr><th></th><th>通信范围</th><th>功耗要求</th><th>数据速率</th><th>设备密度</th></tr></thead><tbody><tr><td>WIFI</td><td>受限</td><td>高</td><td>10Mbps-1Gbps</td><td>高</td></tr><tr><td>Zigbee</td><td>受限</td><td>高</td><td>&lt;=250Kbps</td><td>高</td></tr><tr><td>NB-IoT</td><td>广</td><td>低</td><td>&lt;=250Kbps</td><td>低</td></tr><tr><td>Bluetooth</td><td>受限</td><td>低</td><td>&lt;=100Mbps</td><td>低</td></tr><tr><td>LoRa</td><td>广</td><td>低</td><td>100bps-10Kbps</td><td>低</td></tr></tbody></table></li></ul></li></ul>',16))])}const u=e(o,[["render",d],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E5%B0%8F%E5%9E%8B%E6%9C%BA/%E5%B5%8C%E5%85%A5%E5%BC%8F/","title":"嵌入式","lang":"zh-CN","frontmatter":{"description":"嵌入式 入门 参考：收藏向！零基础10分钟入门嵌入式！ 嵌入式处理器 MCU (Micro-Controller Unit，小控制单元，单片机) 定义：处理器、内存、输入输出接口等的单一芯片 特点：资源有限、逻辑简单、特定任务 场景：控制汽车、智能家电、物联网设备 常见设备 经典MCU：89C51、STM32、ESP32，他们有各自配套的开发工具 入门...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E5%B0%8F%E5%9E%8B%E6%9C%BA/%E5%B5%8C%E5%85%A5%E5%BC%8F/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"嵌入式"}],["meta",{"property":"og:description","content":"嵌入式 入门 参考：收藏向！零基础10分钟入门嵌入式！ 嵌入式处理器 MCU (Micro-Controller Unit，小控制单元，单片机) 定义：处理器、内存、输入输出接口等的单一芯片 特点：资源有限、逻辑简单、特定任务 场景：控制汽车、智能家电、物联网设备 常见设备 经典MCU：89C51、STM32、ESP32，他们有各自配套的开发工具 入门..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"嵌入式\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"嵌入式","slug":"嵌入式","link":"#嵌入式","children":[{"level":2,"title":"入门","slug":"入门","link":"#入门","children":[{"level":3,"title":"嵌入式处理器","slug":"嵌入式处理器","link":"#嵌入式处理器","children":[{"level":4,"title":"MCU (Micro-Controller Unit，小控制单元，单片机)","slug":"mcu-micro-controller-unit-小控制单元-单片机","link":"#mcu-micro-controller-unit-小控制单元-单片机","children":[]},{"level":4,"title":"DSP (Digital Signal Processor，数字信号处理器)","slug":"dsp-digital-signal-processor-数字信号处理器","link":"#dsp-digital-signal-processor-数字信号处理器","children":[]},{"level":4,"title":"FPGA (Field-Programmable Gate Array，可编程门阵列)","slug":"fpga-field-programmable-gate-array-可编程门阵列","link":"#fpga-field-programmable-gate-array-可编程门阵列","children":[]}]},{"level":3,"title":"硬件、软件、固件","slug":"硬件、软件、固件","link":"#硬件、软件、固件","children":[{"level":4,"title":"硬件","slug":"硬件","link":"#硬件","children":[]},{"level":4,"title":"软件","slug":"软件","link":"#软件","children":[]},{"level":4,"title":"固件","slug":"固件","link":"#固件","children":[]}]},{"level":3,"title":"典型MCU结构与功能","slug":"典型mcu结构与功能","link":"#典型mcu结构与功能","children":[{"level":4,"title":"处理器","slug":"处理器","link":"#处理器","children":[]},{"level":4,"title":"存储器","slug":"存储器","link":"#存储器","children":[]},{"level":4,"title":"I/O","slug":"i-o","link":"#i-o","children":[{"level":5,"title":"模拟量与数字量","slug":"模拟量与数字量","link":"#模拟量与数字量","children":[]},{"level":5,"title":"【交互】单片机 -- 外部 (4)","slug":"【交互】单片机-外部-4","link":"#【交互】单片机-外部-4","children":[]},{"level":5,"title":"【交互】芯片 -- 芯片 (3)","slug":"【交互】芯片-芯片-3","link":"#【交互】芯片-芯片-3","children":[]},{"level":5,"title":"【交互】单片机 -- 单片机","slug":"【交互】单片机-单片机","link":"#【交互】单片机-单片机","children":[]}]}]}]}]}],"git":{},"readingTime":{"minutes":6.21,"words":1864},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Virtual/小型机/嵌入式/README.md","excerpt":"\\n<h2>入门</h2>\\n<p>参考：<a href=\\"https://www.bilibili.com/video/BV1BV41197rY\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">收藏向！零基础10分钟入门嵌入式！</a></p>\\n<h3>嵌入式处理器</h3>\\n<h4>MCU (Micro-Controller Unit，小控制单元，单片机)</h4>\\n<ul>\\n<li>定义：处理器、内存、输入输出接口等的单一芯片</li>\\n<li>特点：<strong>资源有限</strong>、逻辑简单、特定任务</li>\\n<li>场景：控制汽车、智能家电、物联网设备</li>\\n<li>常见设备\\n<ul>\\n<li>经典MCU：89C51、STM32、ESP32，他们有各自配套的开发工具</li>\\n<li>入门MCU\\n<ul>\\n<li>Arduino (开源嵌入式硬件平台)：语言简单、硬件开源库丰富是它的最大特点</li>\\n<li>树莓派 Raspberry Pi：可称为微型电脑，芯片中包含了arm架构的处理器核心，相较一般单片机，具有更高的计算能力和更大的存储容量，支持运行复杂的操作系统和应用程序</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Virtual/小型机/嵌入式/README.md","value":{"title":"小型机/","path":"MdNote_Public/01. DesignAndDevelop/Virtual/小型机/嵌入式/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{u as comp,m as data};
