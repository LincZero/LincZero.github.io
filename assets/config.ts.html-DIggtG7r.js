import{_ as s,c as a,e as t,o as p}from"./app-T3I-xDym.js";const e={};function o(c,n){return p(),a("div",null,n[0]||(n[0]=[t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@file</span> config.ts
 * 
 * study:
 * - https://vuepress.github.io/zh/reference/plugin-api.html
 * - https://vuepress.github.io/zh/reference/node-api.html
 * 
 * 比较
 * deineUserConfig的输出都是在编译期，在终端窗口
 * defineClientConfig的输出都在客户端，在浏览器控制台
 */</span>

<span class="token comment">/// VuePress 相关的设置</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress&quot;</span><span class="token punctuation">;</span>                  <span class="token comment">// vuepress</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createPage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/core&#39;</span>

<span class="token keyword">import</span> theme <span class="token keyword">from</span> <span class="token string">&quot;./theme.ts&quot;</span><span class="token punctuation">;</span>                               <span class="token comment">// hope主题 - 默认部分</span>
<span class="token keyword">import</span> alias <span class="token keyword">from</span> <span class="token string">&quot;./config_alias.ts&quot;</span><span class="token punctuation">;</span>                        <span class="token comment">// hope主题 - 别名扩展</span>
<span class="token keyword">import</span> extendsMarkdown <span class="token keyword">from</span> <span class="token string">&quot;./config_extendsMarkdown.ts&quot;</span><span class="token punctuation">;</span>    <span class="token comment">// hope主题 - mdit扩展</span>
<span class="token keyword">import</span> plugins <span class="token keyword">from</span> <span class="token string">&quot;./config_plugins.ts&quot;</span><span class="token punctuation">;</span>                    <span class="token comment">// hope主题 - 插件扩展</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  
  <span class="token comment">// ------------------ 导航类 ------------------</span>
  base<span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
  locales<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&quot;zh-CN&quot;</span><span class="token punctuation">,</span>
      title<span class="token operator">:</span> <span class="token string">&quot;Linc 的小站&quot;</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token string">&quot;Linc 的个人小站&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  markdown<span class="token operator">:</span> <span class="token punctuation">{</span>
    headers<span class="token operator">:</span> <span class="token punctuation">{</span>
      level<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token comment">// 不然的话toc会受限</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// ------------------ 扩展类 ------------------</span>
  theme<span class="token punctuation">,</span>
  alias<span class="token punctuation">,</span>
  extendsMarkdown<span class="token punctuation">,</span>
  plugins<span class="token punctuation">,</span>

  <span class="token comment">// ------------------ 扩展类 - 钩子 ------------</span>
  <span class="token doc-comment comment">/**
   * 插件API
   * 这里是在config.ts文件的defineUserConfig里写
   * 
   * - 插件需要在初始化之前使用。基础配置项会在使用插件时立即被处理：
   *   - name
   *   - multiple
   * - 下列 Hooks 会在初始化 App 时处理：
   *   - extendsMarkdownOptions
   *   - extendsMarkdown
   *   - extendsPageOptions
   *   - extendsPage
   *   - onInitialized
   * - 下列 Hooks 会在准备文件时处理：
   *   - clientConfigFile
   *   - onPrepared
   * - 下列 Hooks 会在 dev / build 时处理：
   *   - extendsBundlerOptions
   *   - alias
   *   - define
   *   - onWatched
   *   - onGenerated
   * 
   * 调试：注释第一个字符表示输出顺序
   */</span>
  <span class="token function">onInitialized</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;=====onInitialized&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token comment">// 1 VuePress App 初始化后被立即调用</span>
  <span class="token function">onPrepared</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;=====onPrepared&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment">// 2 VuePress App 完成文件准备后被立即调用</span>
  <span class="token function">onGenerated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;=====onGenerated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token comment">// x VuePress App 完成静态文件生成后被立即调用</span>
  <span class="token function">onWatched</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;=====onWatched&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>       <span class="token comment">// 3 VuePress App 启动开发服务器并开始监听文件修改后被调用</span>

  <span class="token comment">// ------------------ 其他 ---------------------</span>
  <span class="token comment">// 使网页成为PWA</span>
  <span class="token comment">// shouldPrefetch: false, // 是否预获取</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接支持json</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">onInitialized</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * 可以在这里创建没有对应md的页面
   */</span>
  <span class="token comment">// if (app.pages.every((page) =&gt; page.path !== &#39;/MdNote_Public/FLUX.json&#39;)) {</span>
  <span class="token comment">//   const newPage = await createPage(app, {</span>
  <span class="token comment">//     path: &#39;/MdNote_Public/FLUX/&#39;,</span>
  <span class="token comment">//     frontmatter: {</span>
  <span class="token comment">//       layout: &#39;Layout&#39;,</span>
  <span class="token comment">//     },</span>
  <span class="token comment">//     content: \`# 欢迎来到 FLUX\`,</span>
  <span class="token comment">//   })</span>
  <span class="token comment">//   app.pages.push(newPage)</span>
  <span class="token comment">// }</span>
  <span class="token doc-comment comment">/**
   * 也可以在这里对符合条件的页面做一些处理
   * 例如这里我对.json后缀进行处理 (需要先设置pagePatterns允许解析json，否则找不到json文件)
   * 甚至可以不修改，而用一个新页面替换掉
   */</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> app<span class="token punctuation">.</span>pages<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> page <span class="token operator">=</span> app<span class="token punctuation">.</span>pages<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>page<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span>
    <span class="token comment">// console.log(&quot;旧页面信息----------------------------------------\\n&quot;, page)</span>
    <span class="token comment">// console.log(&quot;新页面信息----------------------------------------\\n&quot;, newPage)</span>
    <span class="token punctuation">{</span>
      page<span class="token punctuation">.</span>path <span class="token operator">=</span> page<span class="token punctuation">.</span>path<span class="token operator">+</span><span class="token string">&quot;/&quot;</span>
      <span class="token comment">// page.frontmatter = newPage.frontmatter    // 保证能够打开</span>
      page<span class="token punctuation">.</span>frontmatter<span class="token punctuation">.</span>layout <span class="token operator">=</span> <span class="token string">&#39;Layout&#39;</span>
      page<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">&quot;\`\`\`nodeflow-comfyui\\n&quot;</span> <span class="token operator">+</span> page<span class="token punctuation">.</span>content <span class="token operator">+</span> <span class="token string">&quot;\\n\`\`\`&quot;</span>
      <span class="token comment">// page.routeMeta.e = &quot;&lt;p&gt;7890&lt;/p&gt;&quot;</span>
      <span class="token comment">// page.contentRendered = &quot;&lt;p&gt;0090lk&lt;/p&gt;&quot;</span>
      <span class="token comment">// page.filePath                          // 不能换，否则侧边栏不正常</span>
      <span class="token comment">// page.filePathRelative                  // 不能换，否则侧边栏不正常</span>
      <span class="token comment">// if(page.sfcBlocks.template?.content) page.sfcBlocks.template.content = &quot;&quot;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>sfcBlocks<span class="token punctuation">.</span>template<span class="token operator">?.</span>contentStripped<span class="token punctuation">)</span> page<span class="token punctuation">.</span>sfcBlocks<span class="token punctuation">.</span>template<span class="token punctuation">.</span>contentStripped <span class="token operator">=</span> <span class="token comment">// HTML内容以这个为准</span>
        app<span class="token punctuation">.</span>markdown<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>content<span class="token punctuation">)</span>       <span class="token comment">// 重渲染了</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接支持pdf</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">onInitialized</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>app<span class="token punctuation">.</span>pages<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> page <span class="token operator">=</span> app<span class="token punctuation">.</span>pages<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// console.log(&quot;旧页面信息---\\n&quot;, page)</span>
        <span class="token comment">// console.log(&quot;新页面信息---\\n&quot;, newPage)</span>
        page<span class="token punctuation">.</span>path <span class="token operator">=</span> page<span class="token punctuation">.</span>path<span class="token operator">+</span><span class="token string">&quot;/&quot;</span>
        page<span class="token punctuation">.</span>frontmatter<span class="token punctuation">.</span>layout <span class="token operator">=</span> <span class="token string">&#39;Layout&#39;</span>
        page<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">&quot;\`\`\`nodeflow-comfyui\\n&quot;</span> <span class="token operator">+</span> page<span class="token punctuation">.</span>content <span class="token operator">+</span> <span class="token string">&quot;\\n\`\`\`&quot;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>sfcBlocks<span class="token punctuation">.</span>template<span class="token operator">?.</span>contentStripped<span class="token punctuation">)</span> page<span class="token punctuation">.</span>sfcBlocks<span class="token punctuation">.</span>template<span class="token punctuation">.</span>contentStripped <span class="token operator">=</span> <span class="token comment">// HTML内容以这个为准</span>
          app<span class="token punctuation">.</span>markdown<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token comment">// 重新渲染该页</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> newPage <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createPage</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          path<span class="token operator">:</span> page<span class="token punctuation">.</span>path<span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
          frontmatter<span class="token operator">:</span> <span class="token punctuation">{</span>
            layout<span class="token operator">:</span> <span class="token string">&#39;Layout&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"># PDF测试</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        app<span class="token punctuation">.</span>pages<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> newPage <span class="token comment">// 即删掉旧的pdf页，更换成一个引用pdf内容的md页</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const l=s(e,[["render",o],["__file","config.ts.html.vue"]]),u=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/ProjectNote/config.ts.html","title":"","lang":"zh-CN","frontmatter":{"description":"直接支持json 直接支持pdf","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/ProjectNote/config.ts.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:description","content":"直接支持json 直接支持pdf"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.47,"words":741},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/ProjectNote/config.ts.md","excerpt":"<div class=\\"language-typescript\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token doc-comment comment\\">/**\\n * <span class=\\"token keyword\\">@file</span> config.ts\\n * \\n * study:\\n * - https://vuepress.github.io/zh/reference/plugin-api.html\\n * - https://vuepress.github.io/zh/reference/node-api.html\\n * \\n * 比较\\n * deineUserConfig的输出都是在编译期，在终端窗口\\n * defineClientConfig的输出都在客户端，在浏览器控制台\\n */</span>\\n\\n<span class=\\"token comment\\">/// VuePress 相关的设置</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> defineUserConfig <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"vuepress\\"</span><span class=\\"token punctuation\\">;</span>                  <span class=\\"token comment\\">// vuepress</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> createPage <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vuepress/core'</span>\\n\\n<span class=\\"token keyword\\">import</span> theme <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"./theme.ts\\"</span><span class=\\"token punctuation\\">;</span>                               <span class=\\"token comment\\">// hope主题 - 默认部分</span>\\n<span class=\\"token keyword\\">import</span> alias <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"./config_alias.ts\\"</span><span class=\\"token punctuation\\">;</span>                        <span class=\\"token comment\\">// hope主题 - 别名扩展</span>\\n<span class=\\"token keyword\\">import</span> extendsMarkdown <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"./config_extendsMarkdown.ts\\"</span><span class=\\"token punctuation\\">;</span>    <span class=\\"token comment\\">// hope主题 - mdit扩展</span>\\n<span class=\\"token keyword\\">import</span> plugins <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"./config_plugins.ts\\"</span><span class=\\"token punctuation\\">;</span>                    <span class=\\"token comment\\">// hope主题 - 插件扩展</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token function\\">defineUserConfig</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  \\n  <span class=\\"token comment\\">// ------------------ 导航类 ------------------</span>\\n  base<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"/\\"</span><span class=\\"token punctuation\\">,</span>\\n  locales<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token string-property property\\">\\"/\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      lang<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"zh-CN\\"</span><span class=\\"token punctuation\\">,</span>\\n      title<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Linc 的小站\\"</span><span class=\\"token punctuation\\">,</span>\\n      description<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Linc 的个人小站\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  markdown<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    headers<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      level<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">// 不然的话toc会受限</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n\\n  <span class=\\"token comment\\">// ------------------ 扩展类 ------------------</span>\\n  theme<span class=\\"token punctuation\\">,</span>\\n  alias<span class=\\"token punctuation\\">,</span>\\n  extendsMarkdown<span class=\\"token punctuation\\">,</span>\\n  plugins<span class=\\"token punctuation\\">,</span>\\n\\n  <span class=\\"token comment\\">// ------------------ 扩展类 - 钩子 ------------</span>\\n  <span class=\\"token doc-comment comment\\">/**\\n   * 插件API\\n   * 这里是在config.ts文件的defineUserConfig里写\\n   * \\n   * - 插件需要在初始化之前使用。基础配置项会在使用插件时立即被处理：\\n   *   - name\\n   *   - multiple\\n   * - 下列 Hooks 会在初始化 App 时处理：\\n   *   - extendsMarkdownOptions\\n   *   - extendsMarkdown\\n   *   - extendsPageOptions\\n   *   - extendsPage\\n   *   - onInitialized\\n   * - 下列 Hooks 会在准备文件时处理：\\n   *   - clientConfigFile\\n   *   - onPrepared\\n   * - 下列 Hooks 会在 dev / build 时处理：\\n   *   - extendsBundlerOptions\\n   *   - alias\\n   *   - define\\n   *   - onWatched\\n   *   - onGenerated\\n   * \\n   * 调试：注释第一个字符表示输出顺序\\n   */</span>\\n  <span class=\\"token function\\">onInitialized</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"=====onInitialized\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// 1 VuePress App 初始化后被立即调用</span>\\n  <span class=\\"token function\\">onPrepared</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"=====onPrepared\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>     <span class=\\"token comment\\">// 2 VuePress App 完成文件准备后被立即调用</span>\\n  <span class=\\"token function\\">onGenerated</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"=====onGenerated\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>   <span class=\\"token comment\\">// x VuePress App 完成静态文件生成后被立即调用</span>\\n  <span class=\\"token function\\">onWatched</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"=====onWatched\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>       <span class=\\"token comment\\">// 3 VuePress App 启动开发服务器并开始监听文件修改后被调用</span>\\n\\n  <span class=\\"token comment\\">// ------------------ 其他 ---------------------</span>\\n  <span class=\\"token comment\\">// 使网页成为PWA</span>\\n  <span class=\\"token comment\\">// shouldPrefetch: false, // 是否预获取</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/ProjectNote/config.ts.md","value":{"title":"config.ts","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/ProjectNote/config.ts.md","outlink":[],"backlink":[]}}],"links":[]}}}`);export{l as comp,u as data};
