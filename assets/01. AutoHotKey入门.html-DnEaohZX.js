import{_ as n,e as a,g as e,o as i}from"./app-OgO1lqgf.js";const l={};function t(p,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="autohotkey" tabindex="-1"><a class="header-anchor" href="#autohotkey"><span>AutoHotKey</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="入门" tabindex="-1"><a class="header-anchor" href="#入门"><span>入门</span></a></h1><h2 id="autohotkey介绍" tabindex="-1"><a class="header-anchor" href="#autohotkey介绍"><span>AutoHotKey介绍</span></a></h2><p>这个软件也叫AHK，需要用脚本语言来写</p><ul><li><a href="https://wyagd001.github.io/v2/docs/Tutorial.htm" target="_blank" rel="noopener noreferrer">官网V2</a> / <a href="https://www.autohotkey.com/" target="_blank" rel="noopener noreferrer">官网V1</a></li><li><a href="https://wyagd001.github.io/zh-cn/docs/AutoHotkey.htm" target="_blank" rel="noopener noreferrer">官网文档</a>（自身支持中文，<mark>主要参考</mark>）</li><li><a href="https://www.autohotkey.com/boards/" target="_blank" rel="noopener noreferrer">官网论坛</a></li><li><a href="https://github.com/Lexikos/AutoHotkey_L/" target="_blank" rel="noopener noreferrer">【Github】AutoHotkey_L（主要分支）</a></li><li>软件安装后自带chm帮助手册，缺点是只支持英文，而网页版的支持中文</li></ul><p>脚本</p><ul><li>是个体积小巧，语法简单的语言</li></ul><p>作用</p><ul><li>随心所欲创建快捷键</li><li>也可以创建游戏脚本</li></ul><h3 id="使用流程" tabindex="-1"><a class="header-anchor" href="#使用流程"><span>使用流程</span></a></h3><h4 id="创建脚本" tabindex="-1"><a class="header-anchor" href="#创建脚本"><span>创建脚本</span></a></h4><p>用记事本即可，文件扩展名为.ahk</p><h4 id="编辑脚本" tabindex="-1"><a class="header-anchor" href="#编辑脚本"><span>编辑脚本</span></a></h4><p>编辑技巧：AutoHotKey提供了右键菜单，编辑.ahk时右键单击脚本文件, 然后选择 <strong>Edit Script(编辑脚本)</strong> 即可在记事本中打开，<br> 而无需在打开方式中选择记事本</p><h4 id="运行脚本" tabindex="-1"><a class="header-anchor" href="#运行脚本"><span>运行脚本</span></a></h4><p>安装了 AutoHotkey 后, 有几种运行脚本的方法:</p><ul><li>双击资源管理器中的脚本文件(或脚本文件的快捷方式).</li><li>在命令行中调用 AutoHotkey.exe, 并将该脚本的文件名(路径) 作为<a href="https://wyagd001.github.io/zh-cn/docs/Scripts.htm#cmd" target="_blank" rel="noopener noreferrer">命令行参数</a>.</li><li>创建 <a href="https://wyagd001.github.io/zh-cn/docs/Scripts.htm#defaultfile" target="_blank" rel="noopener noreferrer">the default script(默认脚本)</a> 后, 通过 &quot;开始&quot; 菜单中的快捷方式启动 AutoHotkey 以运行它.</li><li>如果 AutoHotkey 固定在 Windows 7 或更高版本系统的任务栏或 &quot;开始&quot; 菜单上, 则可以通过程序跳转列表打开最近的或已固定的脚本.</li></ul><p>大多数脚本只有在运行时才会起作用. 使用<a href="https://wyagd001.github.io/zh-cn/docs/Program.htm#tray-icon" target="_blank" rel="noopener noreferrer">托盘菜单</a>或 <a href="https://wyagd001.github.io/zh-cn/docs/commands/ExitApp.htm" target="_blank" rel="noopener noreferrer">ExitApp</a> 命令退出脚本. 当 Windows 关闭时, 脚本也被迫退出. 要将脚本配置为在用户登录后自动启动, 最简单的方法是在 <a href="https://wyagd001.github.io/zh-cn/docs/Variables.htm#Startup" target="_blank" rel="noopener noreferrer">Startup(启动)</a> 文件夹中放置脚本文件的快捷方式.</p><p>脚本也可以<a href="https://wyagd001.github.io/zh-cn/docs/Scripts.htm#ahk2exe" target="_blank" rel="noopener noreferrer">编译</a>; 即与 AutoHotkey 二进制文件结合在一起, 形成一个独立的可执行(.exe) 文件</p><h3 id="部件" tabindex="-1"><a class="header-anchor" href="#部件"><span>部件</span></a></h3><h4 id="托盘图标" tabindex="-1"><a class="header-anchor" href="#托盘图标"><span>托盘图标</span></a></h4><p>默认情况下, 每个脚本都将自己的图标添加到任务栏通知区域(通常称为托盘)</p><h4 id="主窗口" tabindex="-1"><a class="header-anchor" href="#主窗口"><span>主窗口</span></a></h4><p>最小化主窗口会使其自动隐藏. 这样做是为了防止将所有拥有的窗口(如 GUI 窗口或某些对话框窗口) 自动最小化, 但也有隐藏主窗口任务栏按钮的效果. 要让主窗口正常最小化, 可以用 <a href="https://wyagd001.github.io/zh-cn/docs/commands/OnMessage.htm" target="_blank" rel="noopener noreferrer">OnMessage</a> 覆盖默认的处理方式. 例如:</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>; 这样可以防止主窗口在最小化时隐藏:</span></span>
<span class="line"><span>OnMessage(0x0112, Func(&quot;PreventAutoMinimize&quot;)) ; WM_SYSCOMMAND = 0x0112</span></span>
<span class="line"><span>OnMessage(0x0005, Func(&quot;PreventAutoMinimize&quot;)) ; WM_SIZE = 0x0005</span></span>
<span class="line"><span>; 这样可以防止拥有的 GUI 窗口(但不包括对话框) 自动最小化:</span></span>
<span class="line"><span>OnMessage(0x0018, Func(&quot;PreventAutoMinimize&quot;))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PreventAutoMinimize(wParam, lParam, uMsg, hwnd) {</span></span>
<span class="line"><span>    if (uMsg = 0x0112 &amp;&amp; wParam = 0xF020 &amp;&amp; hwnd = A_ScriptHwnd) { ; SC_MINIMIZE = 0xF020</span></span>
<span class="line"><span>        WinMinimize</span></span>
<span class="line"><span>        return 0 ; 防止主窗口隐藏.</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    if (uMsg = 0x0005 &amp;&amp; wParam = 1 &amp;&amp; hwnd = A_ScriptHwnd) ; SIZE_MINIMIZED = 1</span></span>
<span class="line"><span>        return 0 ; 防止主窗口隐藏.</span></span>
<span class="line"><span>    if (uMsg = 0x0018 &amp;&amp; lParam = 1) ; SW_PARENTCLOSING = 1</span></span>
<span class="line"><span>        return 0 ; 防止最小化拥有的窗口.</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装和使用" tabindex="-1"><a class="header-anchor" href="#安装和使用"><span>安装和使用</span></a></h3><h4 id="嵌入脚本" tabindex="-1"><a class="header-anchor" href="#嵌入脚本"><span>嵌入脚本</span></a></h4><p>脚本可以被嵌入到一个标准的 AutoHotkey .exe 文件中, 方法是将它们作为 Win32(RCDATA) 资源来添加</p><h4 id="命令行用法" tabindex="-1"><a class="header-anchor" href="#命令行用法"><span>命令行用法</span></a></h4><p>略</p><h4 id="安装选项" tabindex="-1"><a class="header-anchor" href="#安装选项"><span>安装选项</span></a></h4><p>略</p><h2 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门"><span>快速入门</span></a></h2><p>官网文档教程：https://wyagd001.github.io/zh-cn/docs/Tutorial.htm</p><h3 id="热键-热字串" tabindex="-1"><a class="header-anchor" href="#热键-热字串"><span>热键 &amp; 热字串</span></a></h3><ul><li>热键：是用来触发某些动作的按键或组合按键<br> 热键是通过一对 <code>::</code> 创建的。按键名或组合按键名必须在 <code>::</code> 左边</li></ul><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>^j::</span></span>
<span class="line"><span>	Send, My First Script</span></span>
<span class="line"><span>Return</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>热字串：当你键入它们时, 热字串主要用于扩展缩写(自动替换)<br> 热字串在要触发文本替换的文本两边各有一对冒号 <code>::</code></p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>::ftw::Free the whales</span></span>
<span class="line"><span></span></span>
<span class="line"><span>::btw::</span></span>
<span class="line"><span>   MsgBox You typed &quot;btw&quot;.</span></span>
<span class="line"><span>Return</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这两个例子的区别在于, 当你按下 <code>Ctrl+J</code> 时, 热键将会触发, 而热字串会将你输入的 &quot;ftw&quot; 转换为 &quot;Free the whales&quot;</p></li></ul><h3 id="热键修饰符" tabindex="-1"><a class="header-anchor" href="#热键修饰符"><span>热键修饰符</span></a></h3><p>表。详见：https://wyagd001.github.io/zh-cn/docs/Hotkeys.htm</p><table><thead><tr><th>符号</th><th>描述</th></tr></thead><tbody><tr><td>#</td><td>Win(Windows 徽标键)</td></tr><tr><td>!</td><td>Alt</td></tr><tr><td>^</td><td>Ctrl</td></tr><tr><td>+</td><td>Shift</td></tr><tr><td>&amp;</td><td>用于连接两个按键(含鼠标按键) 合并成一个自定义热键.</td></tr><tr><td>&lt;</td><td>使用成对按键中左边的那个。例如 &lt;!a 相当于 !a, 只是使用左边的 Alt 才可以触发</td></tr><tr><td>&gt;</td><td>使用成对按键中右边的那个</td></tr><tr><td>————</td><td>————————（下面的不常用）————————</td></tr><tr><td>&lt;^&gt;!</td><td><code>AltGr</code>键（标准键盘上没有该键）</td></tr><tr><td>*</td><td>通配符: 即使附加的修饰键被按住也能激发热键</td></tr><tr><td>~</td><td>触发热键时, 热键中按键原有的功能不会被屏蔽(对操作系统隐藏)</td></tr><tr><td>$</td><td>通常只在脚本使用 <a href="https://wyagd001.github.io/zh-cn/docs/commands/Send.htm" target="_blank" rel="noopener noreferrer">Send</a> 命令发送包含了热键自身的按键时才需要使用此符号, 否则可能会导致热键触发自己</td></tr><tr><td>UP</td><td>单词 UP 可以跟在热键名后面使得在释放按键时触发热键, 而不是按下时</td></tr></tbody></table><p>例如：</p><p>使用 <code>&amp;</code> 来定义一个组合热键. 在下面的例子中, 你要按下 Numpad0, 再按下 Numpad1 或 Numpad2, 才能触发热键</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Numpad0 &amp; Numpad1::</span></span>
<span class="line"><span>	MsgBox You pressed Numpad1 while holding down Numpad0.</span></span>
<span class="line"><span>Return</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Numpad0 &amp; Numpad2::</span></span>
<span class="line"><span>	Run Notepad</span></span>
<span class="line"><span>Return</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>热字串也有修饰符，例如</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>:*:ftw::Free the whales</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="窗口特定的热键-热字串" tabindex="-1"><a class="header-anchor" href="#窗口特定的热键-热字串"><span>窗口特定的热键/热字串</span></a></h3><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#IfWinActive</span></span>
<span class="line"><span>#IfWinExist</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：#IfWin 指令相互排斥，只有一个有效</p><p>例如</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>; 无标题 - 记事本</span></span>
<span class="line"><span>#IfWinActive Untitled - Notepad</span></span>
<span class="line"><span>!q::</span></span>
<span class="line"><span>	MsgBox, You pressed Alt+Q in Notepad.</span></span>
<span class="line"><span>Return</span></span>
<span class="line"><span></span></span>
<span class="line"><span>; 任何不是无标题 - 记事本的窗口</span></span>
<span class="line"><span>#IfWinActive</span></span>
<span class="line"><span>!q::</span></span>
<span class="line"><span>	MsgBox, You pressed Alt+Q in any window.</span></span>
<span class="line"><span>Return</span></span>
<span class="line"><span></span></span>
<span class="line"><span>; 记事本</span></span>
<span class="line"><span>#IfWinActive ahk_class Notepad</span></span>
<span class="line"><span>#space::</span></span>
<span class="line"><span>	MsgBox, You pressed Win+Spacebar in Notepad.</span></span>
<span class="line"><span>Return</span></span>
<span class="line"><span>::msg::You typed msg in Notepad</span></span>
<span class="line"><span></span></span>
<span class="line"><span>; 画图</span></span>
<span class="line"><span>#IfWinActive Untitled - Paint  ; 无标题 - 画图</span></span>
<span class="line"><span>#space::</span></span>
<span class="line"><span>	MsgBox, You pressed Win+Spacebar in MSPaint!</span></span>
<span class="line"><span>Return</span></span>
<span class="line"><span>::msg::You typed msg in MSPaint!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="一些示例" tabindex="-1"><a class="header-anchor" href="#一些示例"><span>一些示例</span></a></h3><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>::btw::By the way  ; 替换 &quot;btw&quot; 为 &quot;By the way&quot;, 当你按下默认的终止符的时候（包括各种符号，空格换行tab等）</span></span>
<span class="line"><span> By the way</span></span>
<span class="line"><span>:*:hlw::Hellow World  ; 替换 &quot;btw&quot; 为 &quot;By the way&quot; 而不需要按下终止符.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#n::  ; Ctrl+N 热键.</span></span>
<span class="line"><span>	Run, notepad.exe  ; 当你按下 Ctrl+N, 将启动记事本.</span></span>
<span class="line"><span>Return   ; 热键内容结束. 当按下热键时, 下面的代码不会被执行.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#b::  ; Ctrl+B 热键</span></span>
<span class="line"><span>    Send, {ctrl down}c{ctrl up}  ; 复制选定的文本. 也可以使用 ^c, 但这种方法更加可靠.</span></span>
<span class="line"><span>    SendInput, [b]{ctrl down}v{ctrl up}[/b] ; 粘贴所复制的文本, 并在文本前后加上加粗标签.</span></span>
<span class="line"><span>Return  ; 热键内容结束, 这之后的内容将不会触发.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="花括号-转义和事件" tabindex="-1"><a class="header-anchor" href="#花括号-转义和事件"><span>花括号 转义和事件</span></a></h3><p>用花括号。它将告诉 AutoHotkey <code>{!}</code> 表示 &quot;感叹号&quot;, 而不是要 &quot;按下 Alt&quot;.</p><p>例如</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Send, This text has been typed{!}</span></span>
<span class="line"><span>; 注意 {} 中的 !(感叹号)? 这是因为, 如果没有 {}, AHK 将按下 Alt 键</span></span>
<span class="line"><span></span></span>
<span class="line"><span>; 跟上面的例子类似, 只是这次是 Enter 键. AHK 将会输出 &quot;Enter&quot;</span></span>
<span class="line"><span>; 如果 Enter 没有加上 {} 的话.</span></span>
<span class="line"><span>Send, Multiple Enter lines have Enter been sent. ; 错误</span></span>
<span class="line"><span>Send, Multiple{Enter}lines have{Enter}been sent. ; 正确</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想要表示按住或松开某个按键, 可以将这个键用花括号围起来, 同时加上单词 UP 或 DOWN</p><p>例如</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>; 下面这个例子表示按下一个键的时候再按下另一个键(或多个键).</span></span>
<span class="line"><span>; 如果其中一个方法不奏效, 试试另一个.</span></span>
<span class="line"><span>Send, ^s                     ; 都表示发送 CTRL+s 键击</span></span>
<span class="line"><span>Send, {ctrl down}s{ctrl up}  ; 都表示发送 CTRL+s 键击</span></span>
<span class="line"><span>Send, {ctrl down}c{ctrl up}</span></span>
<span class="line"><span>Send, {b down}{b up}</span></span>
<span class="line"><span>Send, {Tab down}{Tab up}</span></span>
<span class="line"><span>Send, {Up down}  ; 按下向上键.</span></span>
<span class="line"><span>Sleep, 1000      ; 保持 1 秒.</span></span>
<span class="line"><span>Send, {Up up}    ; 然后松开向上键.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="弧括号" tabindex="-1"><a class="header-anchor" href="#弧括号"><span>弧括号</span></a></h3><p>怎样才能让我在发送超长文本时保证文本的可读性?*. 很简单. 使用我们所说的延续片段. 只需要在新行指定一个开括号, 然后是内容, 最后在它自己的行上加上一个闭括号</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Send,</span></span>
<span class="line"><span>(</span></span>
<span class="line"><span>Line 1</span></span>
<span class="line"><span>Line 2</span></span>
<span class="line"><span>Apples are a fruit.</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,64)]))}const r=n(l,[["render",t],["__file","01. AutoHotKey入门.html.vue"]]),o=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/AutoHotKey/01.%20AutoHotKey%E5%85%A5%E9%97%A8.html","title":"AutoHotKey","lang":"zh-CN","frontmatter":{"description":"AutoHotKey 目录 入门 AutoHotKey介绍 这个软件也叫AHK，需要用脚本语言来写 官网V2 / 官网V1 官网文档（自身支持中文，主要参考） 官网论坛 【Github】AutoHotkey_L（主要分支） 软件安装后自带chm帮助手册，缺点是只支持英文，而网页版的支持中文 脚本 是个体积小巧，语法简单的语言 作用 随心所欲创建快捷键 ...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/AutoHotKey/01.%20AutoHotKey%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"AutoHotKey"}],["meta",{"property":"og:description","content":"AutoHotKey 目录 入门 AutoHotKey介绍 这个软件也叫AHK，需要用脚本语言来写 官网V2 / 官网V1 官网文档（自身支持中文，主要参考） 官网论坛 【Github】AutoHotkey_L（主要分支） 软件安装后自带chm帮助手册，缺点是只支持英文，而网页版的支持中文 脚本 是个体积小巧，语法简单的语言 作用 随心所欲创建快捷键 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AutoHotKey\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":6.5,"words":1949},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/AutoHotKey/01. AutoHotKey入门.md","excerpt":"\\n<h1>目录</h1>\\n<h1>入门</h1>\\n<h2>AutoHotKey介绍</h2>\\n<p>这个软件也叫AHK，需要用脚本语言来写</p>\\n<ul>\\n<li><a href=\\"https://wyagd001.github.io/v2/docs/Tutorial.htm\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网V2</a> / <a href=\\"https://www.autohotkey.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网V1</a></li>\\n<li><a href=\\"https://wyagd001.github.io/zh-cn/docs/AutoHotkey.htm\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网文档</a>（自身支持中文，<mark>主要参考</mark>）</li>\\n<li><a href=\\"https://www.autohotkey.com/boards/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网论坛</a></li>\\n<li><a href=\\"https://github.com/Lexikos/AutoHotkey_L/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【Github】AutoHotkey_L（主要分支）</a></li>\\n<li>软件安装后自带chm帮助手册，缺点是只支持英文，而网页版的支持中文</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/AutoHotKey/01. AutoHotKey入门.md","value":{"title":"01. AutoHotKey入门","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/AutoHotKey/01. AutoHotKey入门.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,o as data};
