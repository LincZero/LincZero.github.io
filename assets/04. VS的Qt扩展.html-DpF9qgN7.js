import{_ as e,e as o,g as l,o as n}from"./app-BapqMaOt.js";const i={};function a(r,t){return n(),o("div",null,t[0]||(t[0]=[l('<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>QT</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="vs的qt扩展" tabindex="-1"><a class="header-anchor" href="#vs的qt扩展"><span>VS的Qt扩展</span></a></h1><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法"><span>使用方法</span></a></h2><p>菜单扩展 &gt; 管理扩展 &gt; 搜索“Qt” &gt; 使用扩展 “Qt Visual Studio Tools”</p><p>配置：</p><ul><li>扩展 &gt; QT VS Tools &gt; Option &gt; Qt &gt; <ul><li>General</li><li>Versions <ul><li>该配置中可以使用QT中安装好了的构建器，选择构建器的路径即可，如<code>QT安装路径\\QT\\5.15.2\\msvc2019_64</code></li></ul></li><li>Legacy Project Format</li></ul></li></ul><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h2><p>和QtCreator中的有所不同，最显著的一点区别是没有.pro&amp;.pro.user文件，转而使用.sln文件</p>',9)]))}const s=e(i,[["render",a],["__file","04. VS的Qt扩展.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/01.%20%E7%AE%80%E6%A6%82/01.%20%E7%AE%80%E6%A6%82/04.%20VS%E7%9A%84Qt%E6%89%A9%E5%B1%95.html","title":"QT","lang":"zh-CN","frontmatter":{"description":"QT 目录 VS的Qt扩展 使用方法 菜单扩展 > 管理扩展 > 搜索“Qt” > 使用扩展 “Qt Visual Studio Tools” 配置： 扩展 > QT VS Tools > Option > Qt > General Versions 该配置中可以使用QT中安装好了的构建器，选择构建器的路径即可，如QT安装路径\\\\QT\\\\5.15.2\\\\ms...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/01.%20%E7%AE%80%E6%A6%82/01.%20%E7%AE%80%E6%A6%82/04.%20VS%E7%9A%84Qt%E6%89%A9%E5%B1%95.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"QT"}],["meta",{"property":"og:description","content":"QT 目录 VS的Qt扩展 使用方法 菜单扩展 > 管理扩展 > 搜索“Qt” > 使用扩展 “Qt Visual Studio Tools” 配置： 扩展 > QT VS Tools > Option > Qt > General Versions 该配置中可以使用QT中安装好了的构建器，选择构建器的路径即可，如QT安装路径\\\\QT\\\\5.15.2\\\\ms..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"QT\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.39,"words":116},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/01. 简概/01. 简概/04. VS的Qt扩展.md","excerpt":"\\n<h1>目录</h1>\\n<h1>VS的Qt扩展</h1>\\n<h2>使用方法</h2>\\n<p>菜单扩展 &gt; 管理扩展 &gt; 搜索“Qt” &gt; 使用扩展 “Qt Visual Studio Tools”</p>\\n<p>配置：</p>\\n<ul>\\n<li>扩展 &gt; QT VS Tools &gt; Option &gt; Qt &gt;\\n<ul>\\n<li>General</li>\\n<li>Versions\\n<ul>\\n<li>该配置中可以使用QT中安装好了的构建器，选择构建器的路径即可，如<code>QT安装路径\\\\QT\\\\5.15.2\\\\msvc2019_64</code></li>\\n</ul>\\n</li>\\n<li>Legacy Project Format</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/01. 简概/01. 简概/04. VS的Qt扩展.md","value":{"title":"04. VS的Qt扩展","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/01. 简概/01. 简概/04. VS的Qt扩展.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{s as comp,c as data};
