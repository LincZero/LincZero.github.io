import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,e as n}from"./app-Df0PcTb6.js";const i={},r=n(`<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>QT</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="正则" tabindex="-1"><a class="header-anchor" href="#正则"><span>正则</span></a></h1><h2 id="qregexp类" tabindex="-1"><a class="header-anchor" href="#qregexp类"><span>QRegExp类</span></a></h2><p>Qt6只有兼容版本，不用</p><h2 id="qregularexpression类" tabindex="-1"><a class="header-anchor" href="#qregularexpression类"><span>QRegularExpression类</span></a></h2><p>参考：https://doc-snapshots.qt.io/qt6-dev/qregularexpression.html</p><h3 id="构造" tabindex="-1"><a class="header-anchor" href="#构造"><span>构造</span></a></h3><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>#include &lt;QRegularExpression&gt;

// 匹配两个数字后跟一个空格和一个单词 
QRegularExpression re ( &quot;\\\\d\\\\d \\\\w+&quot; );	// 转义
QRegularExpression re ( R &quot;(\\d\\d \\w+)&quot; ); 	// 原始字符串（和js的有点不同，引号里面还要加个括号）
// 匹配一个反斜杠 
QRegularExpression re2 ( &quot;\\\\\\\\&quot; );			// 四个反斜杠才等于一个反斜杠

re.setPattern(&quot;another pattern&quot;);			// 重新设置规则

// 规则转字符串
//pattern () 函数返回当前为 QRegularExpression 对象设置的模式 
QRegularExpression re(&quot;a third pattern&quot;);
QString pattern = re.pattern(); // pattern == &quot;a third pattern&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模式选项" tabindex="-1"><a class="header-anchor" href="#模式选项"><span>模式选项</span></a></h3><p>略</p><h3 id="匹配" tabindex="-1"><a class="header-anchor" href="#匹配"><span>匹配</span></a></h3><p>正常匹配</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>// 匹配两个数字后跟一个空格和一个单词
QRegularExpression re(&quot;\\\\d\\\\d \\\\w+&quot;);
QRegularExpressionMatch match = re.match(&quot;abc123 def&quot;);
bool hasMatch = match.hasMatch(); // true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配的子字符串" tabindex="-1"><a class="header-anchor" href="#匹配的子字符串"><span>匹配的子字符串</span></a></h3><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>QRegularExpression re(&quot;\\\\d\\\\d \\\\w+&quot;);
QRegularExpressionMatch match = re.match(&quot;abc123 def&quot;);
if (match.hasMatch()) {
    QString matched = match.captured(0); // matched == &quot;23 def&quot;
    // ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>QRegularExpression re(&quot;^(\\\\d\\\\d)/(\\\\d\\\\d)/(\\\\d\\\\d\\\\d\\\\d)$&quot;);
QRegularExpressionMatch match = re.match(&quot;08/12/1985&quot;);
if (match.hasMatch()) {
    QString day = match.captured(1); // day == &quot;08&quot;
    QString month = match.captured(2); // month == &quot;12&quot;
    QString year = match.captured(3); // year == &quot;1985&quot;
    // ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),s=[r];function l(d,c){return t(),a("div",null,s)}const p=e(i,[["render",l],["__file","正则.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/05.%20%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E7%B1%BB/%E6%AD%A3%E5%88%99.html","title":"QT","lang":"zh-CN","frontmatter":{"description":"QT 目录 正则 QRegExp类 Qt6只有兼容版本，不用 QRegularExpression类 参考：https://doc-snapshots.qt.io/qt6-dev/qregularexpression.html 构造 模式选项 略 匹配 正常匹配 匹配的子字符串 或","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/05.%20%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E7%B1%BB/%E6%AD%A3%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"QT"}],["meta",{"property":"og:description","content":"QT 目录 正则 QRegExp类 Qt6只有兼容版本，不用 QRegularExpression类 参考：https://doc-snapshots.qt.io/qt6-dev/qregularexpression.html 构造 模式选项 略 匹配 正常匹配 匹配的子字符串 或"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"QT\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"QT","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"正则","slug":"正则","link":"#正则","children":[{"level":2,"title":"QRegExp类","slug":"qregexp类","link":"#qregexp类","children":[]},{"level":2,"title":"QRegularExpression类","slug":"qregularexpression类","link":"#qregularexpression类","children":[{"level":3,"title":"构造","slug":"构造","link":"#构造","children":[]},{"level":3,"title":"模式选项","slug":"模式选项","link":"#模式选项","children":[]},{"level":3,"title":"匹配","slug":"匹配","link":"#匹配","children":[]},{"level":3,"title":"匹配的子字符串","slug":"匹配的子字符串","link":"#匹配的子字符串","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.91,"words":272},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Platform/Multi/QT（Cpp）/05. 功能实现类/正则.md","autoDesc":true}');export{p as comp,h as data};
