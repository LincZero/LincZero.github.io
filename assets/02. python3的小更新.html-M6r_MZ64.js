import{_ as i,c as t,e as s,o as n}from"./app-Dnpl954R.js";const l={};function a(h,e){return n(),t("div",null,e[0]||(e[0]=[s(`<h1 id="python的小更新" tabindex="-1"><a class="header-anchor" href="#python的小更新"><span>Python的小更新</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h2 id="with-keyword-by-python-2-5" tabindex="-1"><a class="header-anchor" href="#with-keyword-by-python-2-5"><span>&quot;with&quot; Keyword By Python 2.5</span></a></h2><p>https://blog.csdn.net/weixin_45738641/article/details/102836071</p><p>else和with是Python中两个重要的关键字</p><h3 id="else" tabindex="-1"><a class="header-anchor" href="#else"><span>Else</span></a></h3><p>1.if…else…（判断语句） 如果if语句中的条件不满足，则执行else中的语句</p><p>2.while\\for…else…（循环语句） 如果while和for循环正常结束，则执行else中的语句 要特别注意的是，如果循环是通过break语句跳出来或者出现异常，那么else语句将不再进行</p><p>3.try…except…else…finally（捕捉异常）</p><p>关于try….except1…except2…else…finally的执行顺序：是try执行完没有任何问题（即各个except语句均没有捕获到异常）时，再去执行else语句，最后执行finally首尾工作，若执行过程中只要有except捕获到异常，就跳过else直接执行finally；</p><h3 id="with" tabindex="-1"><a class="header-anchor" href="#with"><span>With</span></a></h3><p>在 Python 2.5 中， with 关键字被加入。它将常用的 try … except … finally … 模式很方便的被复用。看一个最经典的例子：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;file.txt&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在这段代码中，无论 with 中的代码块在执行的过程中发生任何情况，文件最终都会被关闭。如果代码块在执行的过程中发生了一个异常，那么在这个异常被抛出前，程序会先将被打开的文件关闭。</p><p>with 的一般执行过程：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> EXPR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> VAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">    BLOCK</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中： EXPR 可以是任意表达式； as VAR 是可选的。其一般的执行过程是这样的：</p><p>计算 EXPR ，并获取一个上下文管理器。 上下文管理器的 exit() 方法被保存起来用于之后的调用。 调用上下文管理器的 enter() 方法。 如果 with 表达式包含 as VAR ，那么 EXPR 的返回值被赋值给 VAR 。 执行 BLOCK 中的表达式。 调用上下文管理器的 exit() 方法。如果 BLOCK 的执行过程中发生了一个异常导致程序退出，那么异常的 type 、 value 和 traceback (即 sys.exc_info()的返回值 )将作为参数传递给 exit() 方法。否则，将传递三个 None 。</p>`,18)]))}const o=i(l,[["render",a],["__file","02. python3的小更新.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/08.%20%E6%96%B0%E7%89%B9%E6%80%A7/02.%20python3%E7%9A%84%E5%B0%8F%E6%9B%B4%E6%96%B0.html","title":"Python的小更新","lang":"zh-CN","frontmatter":{"description":"Python的小更新 目录 \\"with\\" Keyword By Python 2.5 https://blog.csdn.net/weixin_45738641/article/details/102836071 else和with是Python中两个重要的关键字 Else 1.if…else…（判断语句） 如果if语句中的条件不满足，则执行else中...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/08.%20%E6%96%B0%E7%89%B9%E6%80%A7/02.%20python3%E7%9A%84%E5%B0%8F%E6%9B%B4%E6%96%B0.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python的小更新"}],["meta",{"property":"og:description","content":"Python的小更新 目录 \\"with\\" Keyword By Python 2.5 https://blog.csdn.net/weixin_45738641/article/details/102836071 else和with是Python中两个重要的关键字 Else 1.if…else…（判断语句） 如果if语句中的条件不满足，则执行else中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python的小更新\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python的小更新","slug":"python的小更新","link":"#python的小更新","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[{"level":2,"title":"\\"with\\" Keyword By Python 2.5","slug":"with-keyword-by-python-2-5","link":"#with-keyword-by-python-2-5","children":[{"level":3,"title":"Else","slug":"else","link":"#else","children":[]},{"level":3,"title":"With","slug":"with","link":"#with","children":[]}]}]}],"git":{},"readingTime":{"minutes":1.72,"words":517},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/08. 新特性/02. python3的小更新.md","excerpt":"\\n<h1>目录</h1>\\n<h2>\\"with\\" Keyword By Python 2.5</h2>\\n<p>https://blog.csdn.net/weixin_45738641/article/details/102836071</p>\\n<p>else和with是Python中两个重要的关键字</p>\\n<h3>Else</h3>\\n<p>1.if…else…（判断语句）\\n如果if语句中的条件不满足，则执行else中的语句</p>\\n<p>2.while\\\\for…else…（循环语句）\\n如果while和for循环正常结束，则执行else中的语句\\n要特别注意的是，如果循环是通过break语句跳出来或者出现异常，那么else语句将不再进行</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/08. 新特性/02. python3的小更新.md","value":{"title":"02. python3的小更新","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/08. 新特性/02. python3的小更新.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{o as comp,r as data};
