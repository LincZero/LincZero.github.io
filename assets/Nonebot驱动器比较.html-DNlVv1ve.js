import{_ as i,e as t,g as a,o as n}from"./app-EuS-Ookm.js";const e={};function l(h,s){return n(),t("div",null,s[0]||(s[0]=[a(`<h1 id="nonebot驱动器比较" tabindex="-1"><a class="header-anchor" href="#nonebot驱动器比较"><span>Nonebot驱动器比较</span></a></h1><p>Nonebot驱动器有：fastapi httpx websockets aiohttp quart</p><h2 id="比较-from-nonebot驱动器" tabindex="-1"><a class="header-anchor" href="#比较-from-nonebot驱动器"><span>比较 - from Nonebot驱动器</span></a></h2><p>take from Deepseek</p><p>以下是针对 Python 中 <code>FastAPI</code>、<code>HTTPX</code>、<code>WebSockets</code>、<code>aiohttp</code> 和 <code>Quart</code> 的对比分析，按用途和功能分类整理：</p><h3 id="_1-fastapi" tabindex="-1"><a class="header-anchor" href="#_1-fastapi"><span>1. FastAPI</span></a></h3><ul><li>用途：高性能 Web 框架（API 开发）。</li><li>特点： <ul><li>基于 <code>Starlette</code>（异步支持）和 <code>Pydantic</code>（数据验证）。</li><li>自动生成 OpenAPI/Swagger 文档。</li><li>支持同步和异步请求处理。</li><li>适用于构建 RESTful API 或微服务。</li></ul></li><li>适用场景： <ul><li>快速开发高性能 API。</li><li>需要严格数据验证和文档生成的场景。</li></ul></li></ul><h3 id="_2-httpx" tabindex="-1"><a class="header-anchor" href="#_2-httpx"><span>2. HTTPX</span></a></h3><ul><li>用途：异步 HTTP 客户端（类似 <code>requests</code> 的替代品）。</li><li>特点： <ul><li>支持同步和异步请求。</li><li>兼容 <code>requests</code> 的 API 设计，学习成本低。</li><li>支持 HTTP/2 和 WebSocket（实验性）。</li></ul></li><li>适用场景： <ul><li>需要 <strong>异步发送 HTTP</strong> 请求（如调用外部 API）。</li><li>替代 <code>requests</code> 并兼容异步生态。</li></ul></li></ul><h3 id="_3-websockets" tabindex="-1"><a class="header-anchor" href="#_3-websockets"><span>3. websockets</span></a></h3><ul><li>用途：WebSocket 协议实现（客户端和服务器）。</li><li>特点： <ul><li>纯 Python 实现，轻量级。</li><li>专注于 WebSocket 通信（非 HTTP）。</li><li>需要手动处理底层协议。</li></ul></li><li>适用场景： <ul><li>需要低层级 <strong>WebSocket</strong> 双向通信。</li><li>与其他框架（如 FastAPI、Quart）结合使用。</li></ul></li></ul><h3 id="_4-aiohttp" tabindex="-1"><a class="header-anchor" href="#_4-aiohttp"><span>4. aiohttp</span></a></h3><ul><li>用途：异步 HTTP 客户端/服务器 + WebSocket 支持。</li><li>特点： <ul><li>完整的异步 HTTP 生态（客户端和服务器）。</li><li>内置 WebSocket 服务器和客户端。</li><li>适用于小型到中型 Web 服务。</li></ul></li><li>适用场景： <ul><li>需要 <strong>同时处理 HTTP 和 WebSocket</strong> 的服务。</li><li>替代 <code>HTTPX</code> 或 <code>websockets</code> 的集成方案。</li></ul></li></ul><h3 id="_5-quart" tabindex="-1"><a class="header-anchor" href="#_5-quart"><span>5. Quart</span></a></h3><ul><li>用途：异步 Web 框架（类似 Flask）。</li><li>特点： <ul><li>Flask 的异步版本，API 设计几乎一致。</li><li>支持 HTTP 和 WebSocket。</li><li>兼容 Flask 扩展（需适配异步）。</li></ul></li><li>适用场景： <ul><li>需要异步能力的 <strong>Flask</strong> 风格项目。</li><li>渐进式迁移 Flask 项目到异步。</li></ul></li></ul><h3 id="对比总结" tabindex="-1"><a class="header-anchor" href="#对比总结"><span>对比总结</span></a></h3><table><thead><tr><th>库</th><th>类型</th><th>异步支持</th><th>关键功能</th><th>典型用例</th></tr></thead><tbody><tr><td>FastAPI</td><td>Web 框架</td><td>✅</td><td>API 开发、数据验证、自动文档</td><td>高性能 REST API</td></tr><tr><td>HTTPX</td><td>HTTP 客户端</td><td>✅</td><td>发送 HTTP 请求（替代 requests）</td><td>异步调用外部 API</td></tr><tr><td>websockets</td><td>WebSocket 库</td><td>✅</td><td>低层级 WebSocket 通信</td><td>纯 WebSocket 服务/客户端</td></tr><tr><td>aiohttp</td><td>HTTP 客户端/服务端</td><td>✅</td><td>HTTP + WebSocket 集成</td><td>小型异步服务或客户端</td></tr><tr><td>Quart</td><td>Web 框架</td><td>✅</td><td>Flask 风格异步 Web 开发</td><td>异步 Web 应用（如实时功能）</td></tr></tbody></table><p>如何选择？</p><ul><li>构建 API：优先选 <code>FastAPI</code>（功能丰富）或 <code>Quart</code>（Flask 风格）。</li><li>发送 HTTP 请求：用 <code>HTTPX</code>（更现代）或 <code>aiohttp</code>（需要服务器功能时）。</li><li>WebSocket 通信： <ul><li>简单场景：<code>websockets</code> 库。</li><li>集成 HTTP + WebSocket：<code>aiohttp</code> 或 <code>Quart</code>/<code>FastAPI</code>（需搭配其他库）。</li></ul></li><li>兼容 Flask：选 <code>Quart</code>。</li></ul><p>组合使用示例</p><ul><li>FastAPI + HTTPX + websockets： <ul><li>用 FastAPI 处理 HTTP API，HTTPX 调用外部服务，websockets 处理独立 WebSocket 服务。</li></ul></li><li>Quart + aiohttp： <ul><li>用 Quart 构建异步 Web 应用，aiohttp 作为客户端或补充 WebSocket 功能。</li></ul></li></ul><p>根据项目需求灵活搭配，优先选择生态兼容性好的组合（如 FastAPI 基于 Starlette，天然兼容 <code>HTTPX</code>）。</p><h2 id="比较-python-http" tabindex="-1"><a class="header-anchor" href="#比较-python-http"><span>比较 - python http</span></a></h2><p>以下是 Python 中支持 <strong>HTTP、SSE（Server-Sent Events）</strong> 和 <strong>WebSocket</strong> 的常用客户端/服务端库分类表格，标注协议支持、异步能力和适用方向：</p><p>库表</p><table><thead><tr><th>库名称</th><th>协议支持</th><th>异步支持</th><th>客户端/服务端</th><th>备注</th></tr></thead><tbody><tr><td><strong>HTTP 相关</strong></td><td></td><td></td><td></td><td></td></tr><tr><td><code>requests</code></td><td>HTTP/HTTPS</td><td>❌ 同步</td><td>客户端</td><td>经典同步客户端</td></tr><tr><td><code>httpx</code></td><td>HTTP/HTTPS/HTTP2</td><td>✅ 同步/异步</td><td>客户端</td><td>现代 HTTP 客户端，支持异步</td></tr><tr><td><code>aiohttp</code></td><td>HTTP/HTTPS/WebSocket</td><td>✅ 异步</td><td>客户端 &amp; 服务端</td><td>全功能异步库</td></tr><tr><td><code>urllib3</code></td><td>HTTP/HTTPS</td><td>❌ 同步</td><td>客户端</td><td>底层 HTTP 客户端</td></tr><tr><td><code>FastAPI</code></td><td>HTTP/WebSocket</td><td>✅ 异步</td><td>服务端</td><td>基于 Starlette 的现代框架</td></tr><tr><td><code>Flask</code></td><td>HTTP</td><td>❌ 同步</td><td>服务端</td><td>传统同步服务端框架</td></tr><tr><td><code>Django</code></td><td>HTTP</td><td>❌ 同步</td><td>服务端</td><td>全功能 Web 框架</td></tr><tr><td><code>Tornado</code></td><td>HTTP/WebSocket</td><td>✅ 异步</td><td>客户端 &amp; 服务端</td><td>异步网络库，支持长连接</td></tr><tr><td><code>Sanic</code></td><td>HTTP</td><td>✅ 异步</td><td>服务端</td><td>高性能异步框架</td></tr><tr><td><strong>SSE 相关</strong></td><td></td><td></td><td></td><td></td></tr><tr><td><code>sseclient-py</code></td><td>SSE</td><td>❌ 同步</td><td>客户端</td><td>简单 SSE 客户端</td></tr><tr><td><code>sse-starlette</code></td><td>SSE</td><td>✅ 异步</td><td>服务端</td><td>FastAPI/Starlette 的 SSE 中间件</td></tr><tr><td><code>aiohttp</code></td><td>SSE</td><td>✅ 异步</td><td>服务端</td><td>需手动实现 SSE 响应流</td></tr><tr><td><strong>WebSocket 相关</strong></td><td></td><td></td><td></td><td></td></tr><tr><td><code>websockets</code></td><td>WebSocket</td><td>✅ 异步</td><td>客户端 &amp; 服务端</td><td>轻量级纯 WebSocket 库</td></tr><tr><td><code>aiohttp</code></td><td>WebSocket</td><td>✅ 异步</td><td>客户端 &amp; 服务端</td><td>集成在 aiohttp 中</td></tr><tr><td><code>FastAPI</code></td><td>WebSocket</td><td>✅ 异步</td><td>服务端</td><td>通过 WebSocket 路由支持</td></tr><tr><td><code>Tornado</code></td><td>WebSocket</td><td>✅ 异步</td><td>服务端</td><td>内置 WebSocketHandler</td></tr><tr><td><code>websocket-client</code></td><td>WebSocket</td><td>❌ 同步</td><td>客户端</td><td>纯客户端，不支持服务端</td></tr></tbody></table><h3 id="关键说明" tabindex="-1"><a class="header-anchor" href="#关键说明"><span>关键说明</span></a></h3><ul><li>HTTP 服务端： <ul><li><code>FastAPI</code>、<code>Flask</code>、<code>Django</code> 等框架主要用于构建 HTTP 服务端。</li><li>若需高性能异步，优先选择 <code>FastAPI</code> 或 <code>aiohttp</code>。</li></ul></li><li>SSE 服务端： <ul><li><code>sse-starlette</code> 是 FastAPI/Starlette 生态的轻量级 SSE 实现。</li><li><code>aiohttp</code> 可通过手动发送 <code>text/event-stream</code> 响应实现 SSE。</li></ul></li><li>WebSocket 客户端/服务端： <ul><li><code>websockets</code> 是纯 WebSocket 库，适合需要精细控制的场景。</li><li><code>aiohttp</code> 和 <code>FastAPI</code> 提供更集成的 WebSocket 支持。</li></ul></li><li>同步 vs 异步： <ul><li>异步库（如 <code>aiohttp</code>、<code>httpx</code>、<code>websockets</code>）适合高并发场景。</li><li>同步库（如 <code>requests</code>）适合简单脚本或低并发需求。</li></ul></li></ul><h3 id="推荐组合" tabindex="-1"><a class="header-anchor" href="#推荐组合"><span>推荐组合</span></a></h3><table><thead><tr><th>场景</th><th>推荐库</th></tr></thead><tbody><tr><td>异步 HTTP 客户端</td><td><code>httpx</code>（异步模式）或 <code>aiohttp</code></td></tr><tr><td>异步 WebSocket 服务端</td><td><code>FastAPI</code> 或 <code>aiohttp</code></td></tr><tr><td>SSE 服务端</td><td><code>sse-starlette</code>（FastAPI 项目首选）</td></tr><tr><td>轻量级 WebSocket 客户端</td><td><code>websockets</code></td></tr></tbody></table><p>客户端方案对比</p><table><thead><tr><th>方案</th><th>优点</th><th>缺点</th><th>适用场景</th></tr></thead><tbody><tr><td><code>requests</code></td><td>简单易用，功能丰富</td><td>不支持异步</td><td>大多数同步 HTTP 请求</td></tr><tr><td><code>urllib</code></td><td>无需安装</td><td>语法复杂</td><td>无第三方库依赖的场景</td></tr><tr><td><code>httpx</code></td><td>支持同步/异步，兼容性强</td><td>需安装第三方库</td><td>现代 HTTP 请求需求</td></tr><tr><td><code>aiohttp</code></td><td>高性能异步支持</td><td>仅限异步</td><td>异步高并发场景</td></tr><tr><td><code>http.client</code></td><td>无需安装，底层控制</td><td>代码冗长</td><td>需要底层控制的场景</td></tr></tbody></table><p>推荐优先使用 <code>requests</code> 或 <code>httpx</code>（根据同步/异步需求选择）。</p><p>可根据具体需求选择合适的库！</p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2><p>以下是几个常用的 Python 向外发送 HTTP 请求的简单示例，涵盖同步和异步方案：</p><h3 id="_1-使用-requests-同步-最常用" tabindex="-1"><a class="header-anchor" href="#_1-使用-requests-同步-最常用"><span>1. 使用 <code>requests</code>（同步，最常用）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 发送 GET 请求</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> get_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    url </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://httpbin.org/get&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    params </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Alice&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;age&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查询参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        response </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> requests.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(url, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">params</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">params, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        response.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">raise_for_status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查 HTTP 错误</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> response.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解析 JSON 响应</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;GET 响应:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, data)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    except</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> requests.exceptions.RequestException </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> e:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;请求失败: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 发送 POST 请求（JSON 数据）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> post_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    url </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://httpbin.org/post&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        response </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> requests.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(url, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">json</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;POST 响应:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, response.text)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    except</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> requests.exceptions.RequestException </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> e:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;请求失败: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    get_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    post_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GET 响应: {</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;args&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;age&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;name&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;Alice&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}, </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;headers&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }, </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;url&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;...&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">POST 响应: {</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;headers&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }, </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;json&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;key&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;value&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}, </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-使用-httpx-支持异步" tabindex="-1"><a class="header-anchor" href="#_2-使用-httpx-支持异步"><span>2. 使用 <code>httpx</code>（支持异步）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> httpx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 同步请求</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sync_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    response </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> httpx.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://httpbin.org/get&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;同步响应:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, response.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 异步请求</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> async_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> httpx.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">AsyncClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> client:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        response </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> client.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://httpbin.org/get&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;异步响应:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, response.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    sync_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asyncio</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    asyncio.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">async_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-使用-aiohttp-纯异步" tabindex="-1"><a class="header-anchor" href="#_3-使用-aiohttp-纯异步"><span>3. 使用 <code>aiohttp</code>（纯异步）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> aiohttp</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asyncio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fetch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> aiohttp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">ClientSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> session:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> session.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://httpbin.org/get&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> response:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> response.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;aiohttp 响应:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, data)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    asyncio.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">fetch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-使用标准库-urllib-无需安装" tabindex="-1"><a class="header-anchor" href="#_4-使用标准库-urllib-无需安装"><span>4. 使用标准库 <code>urllib</code>（无需安装）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> urllib </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> request, parse</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># GET 请求</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> get_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    url </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://httpbin.org/get?name=Bob&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> request.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">urlopen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(url) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> response:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;urllib 响应:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, response.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> Exception</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> e:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;请求失败: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># POST 请求</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> post_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    url </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://httpbin.org/post&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> parse.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">urlencode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    req </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> request.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(url, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">method</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;POST&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> request.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">urlopen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(req) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> response:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;POST 响应:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, response.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> Exception</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> e:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;请求失败: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    get_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    post_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 requests 和 httpx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requests</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> httpx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aiohttp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><ul><li><strong>简单场景</strong>：优先使用 <code>requests</code>（同步）或 <code>httpx</code>（异步）。</li><li><strong>高性能异步</strong>：选择 <code>aiohttp</code> 或 <code>httpx.AsyncClient</code>。</li><li><strong>无依赖要求</strong>：使用标准库 <code>urllib</code>（但代码较冗长）。</li></ul>`,50)]))}const d=i(e,[["render",l],["__file","Nonebot驱动器比较.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/%E5%AE%9E%E6%88%98/Nonebot%E9%A9%B1%E5%8A%A8%E5%99%A8%E6%AF%94%E8%BE%83.html","title":"Nonebot驱动器比较","lang":"zh-CN","frontmatter":{"description":"Nonebot驱动器比较 Nonebot驱动器有：fastapi httpx websockets aiohttp quart 比较 - from Nonebot驱动器 take from Deepseek 以下是针对 Python 中 FastAPI、HTTPX、WebSockets、aiohttp 和 Quart 的对比分析，按用途和功能分类整理：...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/%E5%AE%9E%E6%88%98/Nonebot%E9%A9%B1%E5%8A%A8%E5%99%A8%E6%AF%94%E8%BE%83.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Nonebot驱动器比较"}],["meta",{"property":"og:description","content":"Nonebot驱动器比较 Nonebot驱动器有：fastapi httpx websockets aiohttp quart 比较 - from Nonebot驱动器 take from Deepseek 以下是针对 Python 中 FastAPI、HTTPX、WebSockets、aiohttp 和 Quart 的对比分析，按用途和功能分类整理：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nonebot驱动器比较\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":6.08,"words":1824},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/实战/Nonebot驱动器比较.md","excerpt":"\\n<p>Nonebot驱动器有：fastapi httpx websockets aiohttp quart</p>\\n<h2>比较 - from Nonebot驱动器</h2>\\n<p>take from Deepseek</p>\\n<p>以下是针对 Python 中 <code>FastAPI</code>、<code>HTTPX</code>、<code>WebSockets</code>、<code>aiohttp</code> 和 <code>Quart</code> 的对比分析，按用途和功能分类整理：</p>\\n<h3>1. FastAPI</h3>\\n<ul>\\n<li>用途：高性能 Web 框架（API 开发）。</li>\\n<li>特点：\\n<ul>\\n<li>基于 <code>Starlette</code>（异步支持）和 <code>Pydantic</code>（数据验证）。</li>\\n<li>自动生成 OpenAPI/Swagger 文档。</li>\\n<li>支持同步和异步请求处理。</li>\\n<li>适用于构建 RESTful API 或微服务。</li>\\n</ul>\\n</li>\\n<li>适用场景：\\n<ul>\\n<li>快速开发高性能 API。</li>\\n<li>需要严格数据验证和文档生成的场景。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/实战/Nonebot驱动器比较.md","value":{"title":"Nonebot驱动器比较","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/实战/Nonebot驱动器比较.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,p as data};
