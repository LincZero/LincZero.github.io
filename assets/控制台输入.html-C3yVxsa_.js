import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-IRYUHD7s.js";const e={},p=t(`<h1 id="控制台输入" tabindex="-1"><a class="header-anchor" href="#控制台输入"><span>控制台输入</span></a></h1><h2 id="fmt-scan函数" tabindex="-1"><a class="header-anchor" href="#fmt-scan函数"><span>fmt Scan函数</span></a></h2><p>和打印一样同样是fmt库，里面的 Scanln 函数</p><p>原型</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// 常用的两个：</span>
<span class="token comment">// 这里的 \`a ...interface{}\` 类似与C++中的泛型函数</span>
<span class="token keyword">func</span> <span class="token function">Scan</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> a <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>	<span class="token comment">// 从str扫描文本，空白符分割</span>
<span class="token keyword">func</span> <span class="token function">Scanln</span><span class="token punctuation">(</span>a <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>				<span class="token comment">// 从str扫描文本，换行符分割</span>

<span class="token comment">// 其他类似的：</span>
<span class="token keyword">func</span> Sscanln
<span class="token keyword">func</span> Fscan														<span class="token comment">// 从r扫描文本</span>
<span class="token keyword">func</span> Fscanln
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 (Scanln)</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> age <span class="token builtin">int</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;录入年龄：&quot;</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Scanln</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>age<span class="token punctuation">)</span>	    <span class="token comment">// 传入age地址，这里有点类似于字符串转数值类型的使用，也会有可能出错</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;年龄:%v&quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 (Scan)</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> age <span class="token builtin">int</span>
    <span class="token keyword">var</span> name <span class="token builtin">string</span>
    <span class="token keyword">var</span> score <span class="token builtin">float32</span>
    <span class="token keyword">var</span> isVIP <span class="token builtin">bool</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;录入年龄, 姓名, 成绩, 是否VIP, 空格分割&quot;</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s %f %t&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>age<span class="token punctuation">,</span> <span class="token operator">&amp;</span>name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>score<span class="token punctuation">,</span> <span class="token operator">&amp;</span>isVIP<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","控制台输入.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Go/03_%E4%BA%A4%E4%BA%92/%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%85%A5.html","title":"控制台输入","lang":"zh-CN","frontmatter":{"description":"控制台输入 fmt Scan函数 和打印一样同样是fmt库，里面的 Scanln 函数 原型 使用 (Scanln) 使用 (Scan)","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Go/03_%E4%BA%A4%E4%BA%92/%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%85%A5.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"控制台输入"}],["meta",{"property":"og:description","content":"控制台输入 fmt Scan函数 和打印一样同样是fmt库，里面的 Scanln 函数 原型 使用 (Scanln) 使用 (Scan)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"控制台输入\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"控制台输入","slug":"控制台输入","link":"#控制台输入","children":[{"level":2,"title":"fmt Scan函数","slug":"fmt-scan函数","link":"#fmt-scan函数","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.71,"words":214},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Go/03_交互/控制台输入.md","autoDesc":true}');export{d as comp,k as data};
