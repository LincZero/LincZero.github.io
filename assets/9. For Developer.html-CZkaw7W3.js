import{_ as s,e as a,g as l,o as n}from"./app-BapqMaOt.js";const e={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[l(`<h1 id="插件接入二次开发-文档编写中" tabindex="-1"><a class="header-anchor" href="#插件接入二次开发-文档编写中"><span>插件接入二次开发（文档编写中）</span></a></h1><p>因为AnyBlock做了一件Obsidian标准接口里没有提供的功能 ———— 真正地将 “特殊语法” 从块里释放了出来。<br> 得益于OB接口允许插件之间的通信，其他开发者如果想要将使用一种类似的功能，可以接入AB插件进行快速开发。</p><p>为了方便接入二次开发，这里<br> 如果你并非程序员，也可以看一下第一节（Tree-Level）的内容，会让你对插件的设计和使用更加熟悉。</p><h2 id="tree-level" tabindex="-1"><a class="header-anchor" href="#tree-level"><span>Tree-Level</span></a></h2><p>注意：这里的level数越小，代表父层次越高，level表示的其实是 <code>indent-level</code> 。并且这里允许level为非正数或非整数</p><p>tree-level<br> [2table]</p><ul><li>list的level | <code>-</code> 前的空格数量+1（范围[1,n]）</li><li>位于根部正文的level | 0 （哪怕缩进，但注意列表下的缩进会被视为列表项）</li><li>负级列表的level（实验功能） | <code>&lt;</code> 的数量的负数（范围 [-3,-1]）</li><li>标题的level | <code>#</code> 的数量减去十（范围 [-9,-4]）</li><li>特殊规则 - QA层的level | 0.5</li></ul><p>此外，<br> 列表选择器只会选择列表层级。<br> 负列表选择器能选择负列表、正文、列表层级。<br> 而标题或首尾选择器能选择全部的标题、负列表、正文、列表层级。</p><h1 id="接口" tabindex="-1"><a class="header-anchor" href="#接口"><span>接口</span></a></h1><h2 id="注册新的处理器" tabindex="-1"><a class="header-anchor" href="#注册新的处理器"><span>注册新的处理器</span></a></h2><p>&lt;&lt; 这是一种类似于 <code>registerMarkdownPostProcessor()</code> 的方法，主要区别：</p><ol><li>要处理的文本不会局限于代码块中，而是基于 <code>Range</code>。<br><code>Range</code> 可以通过各种局部或全局选择器进行选择，它会告诉你你要处理的是哪一部分的文本内容，你也可以在设置中打开 <code>线装饰</code> 功能，来查看被选择的文本范围。<br> 然后，你可以使用新的注册器对该区域进行处理。</li><li>该新的注册器还允许你使用正则等方式去匹配识别符</li><li>你可以注册两种处理器：文本处理器和渲染处理器<br> 文本处理器可以叠加多个，渲染处理器之后不能再使用处理器</li></ol><h2 id="处理器接口" tabindex="-1"><a class="header-anchor" href="#处理器接口"><span>处理器接口</span></a></h2><p>接口（v1.2旧版）</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> registerABProcessor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">sim</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ABProcessorSpecSimp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/** ab处理器接口 - 语法糖版 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ABProcessorSpecSimp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  id</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 唯一标识</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // 处理器名字</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  match</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> RegExp</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 处理器匹配正则（不填则为id，而不是name！name可以被翻译或是重复的）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  detail</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 处理器描述</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  is_render</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   // 是否渲染处理器，默认为true。false则为文本处理器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HTMLDivElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">header</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">content</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HTMLElement</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                        // 处理器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>v1.3调整：扩展了处理器类型，以前仅支持文本处理器/渲染处理器两种，现在支持：</p><ul><li>文本处理器| 文本-&gt;文本</li><li>文本渲染器| 文本-&gt;界面</li><li>渲染修饰器| 界面-&gt;界面（一般通过被包含到一个div实现）</li><li>文本解析器| 文本-&gt;数据（现在只有列表解析器一种）</li><li>数据转化器| 数据-&gt;数据</li><li>数据渲染器| 数据-&gt;界面</li></ul><p>我用个树形来解释<br> [list2mermaid]</p><ul><li>文本| 文本| 界面</li><li>文本 <ul><li>数据1| 数据1| 界面</li><li>数据2| 数据2| 界面</li><li>数据3| 数据3| 界面</li></ul></li><li>界面| 界面</li></ul><p>所以，新版接口为</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> registerABProcessor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">sim</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ABProcessorSpecSimp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/** ab处理器接口 - 语法糖版 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ABProcessorSpecSimp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  id</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 唯一标识</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // 处理器名字</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  match</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> RegExp</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 处理器匹配正则（不填则为id，而不是name！name可以被翻译或是重复的）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  detail</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 处理器描述</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // type_from: TypeProcessorData   // （自动识别）处理器输入类型</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // type_to: TypeProcessorData     // （自动识别）处理器输出类型</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  is_show</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 是否在推荐栏进行推荐（若否，则只能通过查表发现该处理器）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HTMLDivElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">header</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">content</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HTMLElement</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                        // 处理器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只有当两个处理器的from-to接口相匹配时，才能串联他们<br> 你可能会看到的常见数据：List_TableItem、List_ListItem、Tree</p><h3 id="树格式" tabindex="-1"><a class="header-anchor" href="#树格式"><span>树格式</span></a></h3><p>知识前置：<a href="#Tree-Level">Tree-Level</a><br> AB插件会自动将局部的列表选择器或全局选择器里的大纲，转化为树形格式<br> （用列表格式存储，相较于抽象语法树AST更类似于md-it的Tokens，但语法会简单得多）</p><p>有多种不同格式的树，根据content的类型来判断</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">str</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Dom</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Chat</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">any</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}[]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以直接使用这个树形格式快速开发</p><h3 id="处理器冲突问题" tabindex="-1"><a class="header-anchor" href="#处理器冲突问题"><span>处理器冲突问题</span></a></h3><p>同种范围管理器的处理器，由于存在注册的先后问题并不会冲突。<br> 不同范围管理器，则可能进行冲突。</p><p>如果他们的范围是真包含关系，范围更大的有可能影响范围更小的，也可能不影响（例如大范围的使用md方式）。<br> 如果他们的范围是交错关系，则可能会产生bug。<br> 一般而言不会发生后者这种情况，除非使用自由度较高的首尾范围选择器，这也是为什么我会说要谨慎使用首尾范围选择器，最好能用标题选择器来代替之</p><h2 id="范围选择器" tabindex="-1"><a class="header-anchor" href="#范围选择器"><span>范围选择器</span></a></h2><p>有两个范围选择器：Md范围选择器、HTML范围选择器</p><p>Md范围选择器接口：</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MdSelectorSpec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  from</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 替换范围</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  to</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  header</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 头不是信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  selector</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 范围选择方式</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  content</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   // 内容信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HTML范围选择器接口：</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">sub_el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">mdSrc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">mdSrc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">content</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="一些内部处理器" tabindex="-1"><a class="header-anchor" href="#一些内部处理器"><span>一些内部处理器</span></a></h1><p>这些内部处理器对于</p><h1 id="beta-生命周期" tabindex="-1"><a class="header-anchor" href="#beta-生命周期"><span>（beta）生命周期</span></a></h1><h1 id="beta-用到的一些工具" tabindex="-1"><a class="header-anchor" href="#beta-用到的一些工具"><span>（beta）用到的一些工具</span></a></h1><p>Obsidian、CodeMirror、Mermaid 自不用多提。<br> Doxygen是一个可以根据代码注释生成文档的工具，支持HTML、CHM、<a href="https://so.csdn.net/so/search?q=LaTex&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">LaTex</a>等格式。主要支持C语言、Python语言，还支持C++、Java、C#等语言。</p>`,41)]))}const p=s(e,[["render",t],["__file","9. For Developer.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/ProductDoc/AnyBlock/v2%20old%20docs/docs/en/9.%20For%20Developer.html","title":"插件接入二次开发（文档编写中）","lang":"zh-CN","frontmatter":{"description":"插件接入二次开发（文档编写中） 因为AnyBlock做了一件Obsidian标准接口里没有提供的功能 ———— 真正地将 “特殊语法” 从块里释放了出来。 得益于OB接口允许插件之间的通信，其他开发者如果想要将使用一种类似的功能，可以接入AB插件进行快速开发。 为了方便接入二次开发，这里 如果你并非程序员，也可以看一下第一节（Tree-Level）的内...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/ProductDoc/AnyBlock/v2%20old%20docs/docs/en/9.%20For%20Developer.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"插件接入二次开发（文档编写中）"}],["meta",{"property":"og:description","content":"插件接入二次开发（文档编写中） 因为AnyBlock做了一件Obsidian标准接口里没有提供的功能 ———— 真正地将 “特殊语法” 从块里释放了出来。 得益于OB接口允许插件之间的通信，其他开发者如果想要将使用一种类似的功能，可以接入AB插件进行快速开发。 为了方便接入二次开发，这里 如果你并非程序员，也可以看一下第一节（Tree-Level）的内..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"插件接入二次开发（文档编写中）\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":4.89,"words":1468},"filePathRelative":"MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/9. For Developer.md","excerpt":"\\n<p>因为AnyBlock做了一件Obsidian标准接口里没有提供的功能 ———— 真正地将 “特殊语法” 从块里释放了出来。<br>\\n得益于OB接口允许插件之间的通信，其他开发者如果想要将使用一种类似的功能，可以接入AB插件进行快速开发。</p>\\n<p>为了方便接入二次开发，这里<br>\\n如果你并非程序员，也可以看一下第一节（Tree-Level）的内容，会让你对插件的设计和使用更加熟悉。</p>\\n<h2>Tree-Level</h2>\\n<p>注意：这里的level数越小，代表父层次越高，level表示的其实是 <code>indent-level</code> 。并且这里允许level为非正数或非整数</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"5. Plug-in design concept","link":"MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/5. Plug-in design concept.html"}],"localMap":{"nodes":[{"id":"MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/9. For Developer.md","value":{"title":"9. For Developer","path":"MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/9. For Developer.md","outlink":[],"backlink":["MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/5. Plug-in design concept.md"]}},{"id":"MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/5. Plug-in design concept.md","value":{"title":"5. Plug-in design concept","path":"MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/5. Plug-in design concept.md","outlink":[],"backlink":[]}}],"links":[{"source":"MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/5. Plug-in design concept.md","target":"MdNote_Public/ProductDoc/AnyBlock/v2 old docs/docs/en/9. For Developer.md"}]}}}');export{p as comp,r as data};
