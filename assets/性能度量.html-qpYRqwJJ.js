import{_ as s,c as t,e,o as a}from"./app-BDGujT_T.js";const n={};function l(h,i){return a(),t("div",null,i[0]||(i[0]=[e(`<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="性能度量" tabindex="-1"><a class="header-anchor" href="#性能度量"><span>性能度量</span></a></h1><p>有些用户对了解解决同一问题的不同方法之间的性能差异很感兴趣。Python 提供了一个度量工具，为这些问题提供了直接答案</p><p>例如，使用元组封装和拆封来交换元素看起来要比使用传统的方法要诱人的多</p><p><a href="https://docs.python.org/3/library/timeit.html#module-timeit" target="_blank" rel="noopener noreferrer">timeit</a> 证明了后者更快一些：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> timeit </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Timer</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;t=a; a=b; b=t&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a=1; b=2&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">timeit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.57535828626024577</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a,b = b,a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a=1; b=2&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">timeit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.54962537085770791</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相对于 <a href="https://docs.python.org/3/library/timeit.html#module-timeit" target="_blank" rel="noopener noreferrer">timeit</a> 的细粒度，<a href="https://docs.python.org/3/library/profile.html#module-profile" target="_blank" rel="noopener noreferrer">profile</a> 和 <a href="https://docs.python.org/3/library/profile.html#module-pstats" target="_blank" rel="noopener noreferrer">pstats</a> 模块提供了针对更大代码块的时间度量工具</p>`,8)]))}const r=s(n,[["render",l],["__file","性能度量.html.vue"]]),k=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/%E6%A0%87%E5%87%86%E5%BA%93/%E6%80%A7%E8%83%BD%E5%BA%A6%E9%87%8F.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 性能度量 有些用户对了解解决同一问题的不同方法之间的性能差异很感兴趣。Python 提供了一个度量工具，为这些问题提供了直接答案 例如，使用元组封装和拆封来交换元素看起来要比使用传统的方法要诱人的多 timeit 证明了后者更快一些： 相对于 timeit 的细粒度，profile 和 pstats 模块提供了针对更大代码块的时间度量工具","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/%E6%A0%87%E5%87%86%E5%BA%93/%E6%80%A7%E8%83%BD%E5%BA%A6%E9%87%8F.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 性能度量 有些用户对了解解决同一问题的不同方法之间的性能差异很感兴趣。Python 提供了一个度量工具，为这些问题提供了直接答案 例如，使用元组封装和拆封来交换元素看起来要比使用传统的方法要诱人的多 timeit 证明了后者更快一些： 相对于 timeit 的细粒度，profile 和 pstats 模块提供了针对更大代码块的时间度量工具"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"性能度量","slug":"性能度量","link":"#性能度量","children":[]}],"git":{},"readingTime":{"minutes":0.59,"words":176},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/07. 模块库/标准库/性能度量.md","excerpt":"\\n<h1>目录</h1>\\n<h1>性能度量</h1>\\n<p>有些用户对了解解决同一问题的不同方法之间的性能差异很感兴趣。Python 提供了一个度量工具，为这些问题提供了直接答案</p>\\n<p>例如，使用元组封装和拆封来交换元素看起来要比使用传统的方法要诱人的多</p>\\n<p><a href=\\"https://docs.python.org/3/library/timeit.html#module-timeit\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">timeit</a> 证明了后者更快一些：</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> from</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> timeit </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">import</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> Timer</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\"> Timer</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'t=a; a=b; b=t'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'a=1; b=2'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">timeit</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0.57535828626024577</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\"> Timer</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'a,b = b,a'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'a=1; b=2'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">timeit</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0.54962537085770791</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/07. 模块库/标准库/性能度量.md","value":{"title":"性能度量","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/07. 模块库/标准库/性能度量.md","outlink":[],"backlink":[]}}],"links":[]}}}`);export{r as comp,k as data};
