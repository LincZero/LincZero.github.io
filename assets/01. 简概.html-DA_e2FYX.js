import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as i,c as l,b as n,e as a,d as p,a as o}from"./app-BAt33Ddg.js";const c={},r=n("h1",{id:"pyqt",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pyqt"},[n("span",null,"PyQt")])],-1),d=n("p",null,"参考：",-1),u={href:"https://www.bilibili.com/video/BV1cJ411R7bP",target:"_blank",rel:"noopener noreferrer"},m=n("li",null,"文档：要么看上面那个，要么看的还是QT原版的文档",-1),h=o(`<h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="入门" tabindex="-1"><a class="header-anchor" href="#入门"><span>入门</span></a></h1><h2 id="简概" tabindex="-1"><a class="header-anchor" href="#简概"><span>简概</span></a></h2><h3 id="gui程序" tabindex="-1"><a class="header-anchor" href="#gui程序"><span>GUI程序</span></a></h3><p>Python语言开发的跨平台图形界面程序</p><ul><li>Tkinter <ul><li>描述：Python官方采用的标准库</li><li>优点：开源、稳定、发布程序较小</li><li>缺点：控件相对较少</li></ul></li><li>wxPython <ul><li>描述：基于wxWidgets</li><li>优点：开源、控件丰富</li><li>缺点：稳定性相对差点、文档少、用户少</li></ul></li><li>PySide2、PyQt5 <ul><li>描述：基于Qt的Python库</li><li>优点：控件比较丰富、跨平台体验好、文档完善、用户多</li><li>缺点：库比较大，发布出来的程序比较大</li></ul></li></ul><h3 id="pyside2、pyqt5-区别与选择" tabindex="-1"><a class="header-anchor" href="#pyside2、pyqt5-区别与选择"><span>PySide2、PyQt5 区别与选择</span></a></h3><p>是两个库，PySide2官方的（亲儿子，但比较晚出来的。18年才出现），PyQt5（第三方的，但出现得比较早），两个库非常相似</p><p>一般选择PySide2，毕竟是新的也是Qt官方的，后续发展好。而且PyQt5转PySide2相对简单（需要换类名）</p><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR
Python程序<span class="token arrow operator">--&gt;</span>PyQt5<span class="token arrow operator">--&gt;</span>Qt
Python程序<span class="token arrow operator">--&gt;</span>PySide2<span class="token arrow operator">--&gt;</span>Qt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用流程" tabindex="-1"><a class="header-anchor" href="#使用流程"><span>使用流程</span></a></h2><h3 id="软件安装-安装与配置" tabindex="-1"><a class="header-anchor" href="#软件安装-安装与配置"><span>软件安装（安装与配置）</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pyside2
<span class="token comment"># 这个库大概有100M左右，安装简单</span>

pip <span class="token function">install</span> pyside2 <span class="token parameter variable">-i</span> https://pypi.douban.com/simple
<span class="token comment"># 或，豆瓣镜像加速</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>老师说如果程序要发布给客户使用，建议使用32位Python解释器 但不听不听，让客户换电脑去，不能惯着。我不喜欢使用32位的Python，很麻烦</p><h3 id="项目创建" tabindex="-1"><a class="header-anchor" href="#项目创建"><span>项目创建</span></a></h3><p>一个py文件即可，不用什么项目结构</p><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># PySide2.QtWidgets，库里控件窗口的部分，大概相当于QT里的QT+=widgets</span>
<span class="token comment"># 后面import的几个类大概相当于QT里的#include类</span>
<span class="token keyword">from</span> PySide2<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication<span class="token punctuation">,</span> QMainWindow<span class="token punctuation">,</span> QPushButton<span class="token punctuation">,</span>  QPlainTextEdit

app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>						<span class="token comment"># 相当于 QApplication a(argc, argv);	</span>

window <span class="token operator">=</span> QMainWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>						<span class="token comment"># 相当于 Core core;</span>
window<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>							<span class="token comment"># Core类里的操作，设置大小</span>
window<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">310</span><span class="token punctuation">)</span>							<span class="token comment"># 设置出现在[显示器]的什么地方</span>
window<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;薪资统计&#39;</span><span class="token punctuation">)</span>				  <span class="token comment"># 标题</span>

textEdit <span class="token operator">=</span> QPlainTextEdit<span class="token punctuation">(</span>window<span class="token punctuation">)</span>				<span class="token comment"># 文本输入框。还有对象树</span>
textEdit<span class="token punctuation">.</span>setPlaceholderText<span class="token punctuation">(</span><span class="token string">&quot;请输入薪资表&quot;</span><span class="token punctuation">)</span>		 <span class="token comment"># 提示文本</span>
textEdit<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span>							<span class="token comment"># 相对于[父对象]的位置</span>
textEdit<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">)</span>

button <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span><span class="token string">&#39;统计&#39;</span><span class="token punctuation">,</span> window<span class="token punctuation">)</span>			   <span class="token comment"># 按钮</span>
button<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">380</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span>

window<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>								<span class="token comment"># 相当于 core.show();</span>
app<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>									<span class="token comment"># 相当于 return a.exec();</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="对比原版qt" tabindex="-1"><a class="header-anchor" href="#对比原版qt"><span><mark>对比原版QT</mark></span></a></h4><p>main.cpp</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>#include &quot;core.h&quot;
#include &lt;QApplication&gt;

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);	
    Core core;
    core.show();
    return a.exec();
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>core.cpp</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>Core::Core(QWidget *parent)
    : QMainWindow(parent)
{
    resize( 700, 500 );
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="软件运行" tabindex="-1"><a class="header-anchor" href="#软件运行"><span>软件运行</span></a></h3><p>一般用PyCharm</p><ul><li>Setting窗口，选择项目，加入Project Interpreter</li><li>右上角配置好运行的 入口.py 后，直接点运行</li></ul><h3 id="打包" tabindex="-1"><a class="header-anchor" href="#打包"><span>打包</span></a></h3><p>未</p><p>未</p><p>未</p><p>未</p><p>未</p><p>未</p><p>未</p><p>未</p><p>未</p>`,36);function v(k,b){const s=e("ExternalLinkIcon");return i(),l("div",null,[r,d,n("ul",null,[n("li",null,[n("a",u,[a("【Bilibili】Python Qt 图形界面编程 - PySide2 PyQt5 PyQt PySide"),p(s)]),a("，进度P3 end 教程配套网站，https://www.byhy.net/tut/py/gui/qt_01/，含笔记，学习时不用记太多笔记倒是轻松点")]),m]),h])}const P=t(c,[["render",v],["__file","01. 简概.html.vue"]]),Q=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/PyQt%EF%BC%88Python%EF%BC%89/01.%20%E7%AE%80%E6%A6%82.html","title":"PyQt","lang":"zh-CN","frontmatter":{"description":"PyQt 参考： 【Bilibili】Python Qt 图形界面编程 - PySide2 PyQt5 PyQt PySide，进度P3 end 教程配套网站，https://www.byhy.net/tut/py/gui/qt_01/，含笔记，学习时不用记太多笔记倒是轻松点 文档：要么看上面那个，要么看的还是QT原版的文档 目录 入门 简概 GUI程...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/PyQt%EF%BC%88Python%EF%BC%89/01.%20%E7%AE%80%E6%A6%82.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"PyQt"}],["meta",{"property":"og:description","content":"PyQt 参考： 【Bilibili】Python Qt 图形界面编程 - PySide2 PyQt5 PyQt PySide，进度P3 end 教程配套网站，https://www.byhy.net/tut/py/gui/qt_01/，含笔记，学习时不用记太多笔记倒是轻松点 文档：要么看上面那个，要么看的还是QT原版的文档 目录 入门 简概 GUI程..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PyQt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"PyQt","slug":"pyqt","link":"#pyqt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"入门","slug":"入门","link":"#入门","children":[{"level":2,"title":"简概","slug":"简概","link":"#简概","children":[{"level":3,"title":"GUI程序","slug":"gui程序","link":"#gui程序","children":[]},{"level":3,"title":"PySide2、PyQt5 区别与选择","slug":"pyside2、pyqt5-区别与选择","link":"#pyside2、pyqt5-区别与选择","children":[]}]},{"level":2,"title":"使用流程","slug":"使用流程","link":"#使用流程","children":[{"level":3,"title":"软件安装（安装与配置）","slug":"软件安装-安装与配置","link":"#软件安装-安装与配置","children":[]},{"level":3,"title":"项目创建","slug":"项目创建","link":"#项目创建","children":[]},{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[{"level":4,"title":"对比原版QT","slug":"对比原版qt","link":"#对比原版qt","children":[]}]},{"level":3,"title":"软件运行","slug":"软件运行","link":"#软件运行","children":[]},{"level":3,"title":"打包","slug":"打包","link":"#打包","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.19,"words":658},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Platform/Multi/PyQt（Python）/01. 简概.md","autoDesc":true}');export{P as comp,Q as data};
