import{_ as o,c as n,e as l,o as t}from"./app-7Hf1q1UN.js";const r={};function c(a,e){return t(),n("div",null,e[0]||(e[0]=[l('<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="数值类型" tabindex="-1"><a class="header-anchor" href="#数值类型"><span>数值类型</span></a></h1><h2 id="基本类型-数字" tabindex="-1"><a class="header-anchor" href="#基本类型-数字"><span>基本类型 &gt; 数字</span></a></h2><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><ul><li>子类型（一般父类称<code>Number</code>） <ul><li><code>int</code></li><li><code>float</code></li><li><code>bool</code></li><li><code>complex</code>（使用内置函数<code>complex()</code>创建）</li></ul></li><li>字面量方式 <ul><li><strong>运算</strong>：运算符 <code>+</code>，<code>-</code>，<code>*</code> 和 <code>/</code> 与其它语言一样，括号 (<code>()</code>) 用于分组 除法(<code>/</code>)永远返回一个浮点数， <code>//</code> 运算符为<code>floor除法</code>， <code>%</code>计算余数 <code>**</code> 运算符计算幂乘方</li></ul></li><li>其他 <ul><li><strong>交互模式</strong>：交互模式中，最近一个表达式的值赋给变量 <code>_</code>。这样我们就可以把它当作一个桌面计算器，很方便的用于连续计算</li><li><strong>Python2区别</strong>：python2跟c一样，<code>/</code>为<code>floor除法</code></li></ul></li><li>类型 <ul><li>除了 <a href="https://docs.python.org/3/library/functions.html#int" target="_blank" rel="noopener noreferrer">int</a> 和 <a href="https://docs.python.org/3/library/functions.html#float" target="_blank" rel="noopener noreferrer">float</a>，Python 还支持其它数字类型，例如 <a href="https://docs.python.org/3/library/decimal.html#decimal.Decimal" target="_blank" rel="noopener noreferrer">Decimal</a> 和 <a href="https://docs.python.org/3/library/fractions.html#fractions.Fraction" target="_blank" rel="noopener noreferrer">Fraction</a>（十进制和分数，都是模块来的，不是内置类型）</li></ul></li></ul><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h2>',7)]))}const d=o(r,[["render",c],["__file","02. 数值类型_低占用类型.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/02.%20%E6%95%B0%E6%8D%AE_%E7%AE%97%E6%B3%95/02.%20%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B_%E4%BD%8E%E5%8D%A0%E7%94%A8%E7%B1%BB%E5%9E%8B.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 数值类型 基本类型 > 数字 使用 子类型（一般父类称Number） int float bool complex（使用内置函数complex()创建） 字面量方式 运算：运算符 +，-，* 和 / 与其它语言一样，括号 (()) 用于分组 除法(/)永远返回一个浮点数， // 运算符为floor除法， %计算余数 ** 运算符计算...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/02.%20%E6%95%B0%E6%8D%AE_%E7%AE%97%E6%B3%95/02.%20%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B_%E4%BD%8E%E5%8D%A0%E7%94%A8%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 数值类型 基本类型 > 数字 使用 子类型（一般父类称Number） int float bool complex（使用内置函数complex()创建） 字面量方式 运算：运算符 +，-，* 和 / 与其它语言一样，括号 (()) 用于分组 除法(/)永远返回一个浮点数， // 运算符为floor除法， %计算余数 ** 运算符计算..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"数值类型","slug":"数值类型","link":"#数值类型","children":[{"level":2,"title":"基本类型 > 数字","slug":"基本类型-数字","link":"#基本类型-数字","children":[{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]}]},{"level":2,"title":"","slug":"","link":"#","children":[]}]}],"git":{},"readingTime":{"minutes":0.71,"words":212},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/02. 数据+算法/02. 数值类型+低占用类型.md","excerpt":"\\n<h1>目录</h1>\\n<h1>数值类型</h1>\\n<h2>基本类型 &gt; 数字</h2>\\n<h3>使用</h3>\\n<ul>\\n<li>子类型（一般父类称<code>Number</code>）\\n<ul>\\n<li><code>int</code></li>\\n<li><code>float</code></li>\\n<li><code>bool</code></li>\\n<li><code>complex</code>（使用内置函数<code>complex()</code>创建）</li>\\n</ul>\\n</li>\\n<li>字面量方式\\n<ul>\\n<li><strong>运算</strong>：运算符 <code>+</code>，<code>-</code>，<code>*</code> 和 <code>/</code> 与其它语言一样，括号 (<code>()</code>) 用于分组\\n除法(<code>/</code>)永远返回一个浮点数， <code>//</code> 运算符为<code>floor除法</code>， <code>%</code>计算余数\\n<code>**</code> 运算符计算幂乘方</li>\\n</ul>\\n</li>\\n<li>其他\\n<ul>\\n<li><strong>交互模式</strong>：交互模式中，最近一个表达式的值赋给变量 <code>_</code>。这样我们就可以把它当作一个桌面计算器，很方便的用于连续计算</li>\\n<li><strong>Python2区别</strong>：python2跟c一样，<code>/</code>为<code>floor除法</code></li>\\n</ul>\\n</li>\\n<li>类型\\n<ul>\\n<li>除了 <a href=\\"https://docs.python.org/3/library/functions.html#int\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">int</a> 和 <a href=\\"https://docs.python.org/3/library/functions.html#float\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">float</a>，Python 还支持其它数字类型，例如 <a href=\\"https://docs.python.org/3/library/decimal.html#decimal.Decimal\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Decimal</a> 和 <a href=\\"https://docs.python.org/3/library/fractions.html#fractions.Fraction\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Fraction</a>（十进制和分数，都是模块来的，不是内置类型）</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/02. 数据+算法/02. 数值类型+低占用类型.md","value":{"title":"02. 数值类型+低占用类型","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/02. 数据+算法/02. 数值类型+低占用类型.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,h as data};
