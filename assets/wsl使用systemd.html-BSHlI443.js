import{_ as i,c as l,d as n,e,a as t,b as o,o as r,r as d}from"./app-DyeLIyox.js";const p={},m={href:"https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.cnblogs.com/wswind/p/wsl2-official-systemd.html",target:"_blank",rel:"noopener noreferrer"},c={href:"https://github.com/arkane-systems/genie",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/nullpo-head/wsl-distrod",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/arkane-systems/genie/wiki/Command-%22code%22-not-found-for-VScode-remote-in-bottle%3F-Here's-a-solution",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/arkane-systems/genie/wiki/Running-VS-Code-server-for-WSL-inside-genie-bottle",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/arkane-systems/genie/issues/297",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/arkane-systems/genie/wiki",target:"_blank",rel:"noopener noreferrer"};function y(h,s){const a=d("ExternalLinkIcon");return r(),l("div",null,[s[29]||(s[29]=n("h1",{id:"wsl使用systemd",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#wsl使用systemd"},[n("span",null,"wsl使用systemd")])],-1)),s[30]||(s[30]=n("h2",{id:"资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#资料"},[n("span",null,"资料")])],-1)),n("ul",null,[n("li",null,[s[1]||(s[1]=e("这里直接找官方的方案：")),n("a",m,[s[0]||(s[0]=e("WSL 现已提供 Systemd 支持！")),t(a)]),s[2]||(s[2]=e("（")),s[3]||(s[3]=n("s",null,"仅win11，原文没说这点，但评论和笔记下面的链接都会提到这点",-1)),s[4]||(s[4]=e("。upDate 2023：后来又更新了，win10也支持了）"))]),n("li",null,[s[6]||(s[6]=e("里面的细节比较多，觉得太干了就看国内博文：")),n("a",u,[s[5]||(s[5]=e("WSL 2 上启用微软官方支持的 systemd")),t(a)]),s[7]||(s[7]=e("，倒不如说这篇反而更全面，更推荐"))])]),s[31]||(s[31]=n("h2",{id:"方案类型",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方案类型"},[n("span",null,"方案类型")])],-1)),n("p",null,[s[10]||(s[10]=e("本文首先会介绍如何安装和配置 wsl systemd，并用两个小节去拿它去对比现有的 wsl systemd 解决方案：")),n("a",c,[s[8]||(s[8]=e("genie")),t(a)]),s[11]||(s[11]=e(" 和 ")),n("a",b,[s[9]||(s[9]=e("distrod")),t(a)]),s[12]||(s[12]=e("。 如果你是win 10用户，目前(2022/9/30)官方支持的systemd特性还不支持此系统。你仍旧可以使用这两个开源解决方案。"))]),s[32]||(s[32]=n("h3",{id:"三种方式的比较",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#三种方式的比较"},[n("span",null,"三种方式的比较")])],-1)),s[33]||(s[33]=n("h4",{id:"和genie的对比",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#和genie的对比"},[n("span",null,"和genie的对比")])],-1)),n("p",null,[s[15]||(s[15]=e("genie的使用通过")),s[16]||(s[16]=n("code",null,"genie -s",-1)),s[17]||(s[17]=e("进入运行着systemd的bottle环境，通过")),s[18]||(s[18]=n("code",null,"genie -u",-1)),s[19]||(s[19]=e("退出，此处需要手动处理或额外配置")),s[20]||(s[20]=n("code",null,"~/.bashrc",-1)),s[21]||(s[21]=e("。但通过wsl直接运行的shell命令默认又不是位于systemd的bottle之中，这为vscode使用带来了一些问题，需要额外处理: ")),n("a",v,[s[13]||(s[13]=e("1. code命令找不到")),t(a)]),s[22]||(s[22]=e(" ，")),n("a",k,[s[14]||(s[14]=e("2. vscode server 未运行在bottle中")),t(a)])]),n("p",null,[s[24]||(s[24]=e("此外genie首次运行时，会需要等待240秒并显示出无法启动的service，用户需要手动禁用这些有问题的service，才能再下次运行时正常使用。试图")),n("a",g,[s[23]||(s[23]=e("通过配置缩短等待时间，发现只是徒劳")),t(a)]),s[25]||(s[25]=e("。"))]),n("p",null,[s[27]||(s[27]=e("总体而言genie的使用还是较为复杂的，使用前需要完整")),n("a",w,[s[26]||(s[26]=e("阅读wiki")),t(a)]),s[28]||(s[28]=e("。相比之下官方支持的systemd的使用更为简单。通过简单配置后，是开箱即用，用户无感的。这一点genie无法媲美。"))]),s[34]||(s[34]=o(`<h4 id="和distrod的对比" tabindex="-1"><a class="header-anchor" href="#和distrod的对比"><span>和distrod的对比</span></a></h4><p>和官方systemd一样，distrod systemd也是开箱即用的。</p><p>distrod通过修改你的默认shell，来实现运行触发。安装启用distrod时，它自动处理了需要不支持的service。这些都无需用户进行任何额外配置。</p><p>distrod基于ruby编写运行性能很好，运行也很稳定。它还支持基于lxc社区镜像安装多个发行版，且都经过了测试，如：centos / arch / fedora / debian / ubuntu 等等。</p><p>而官方支持的systemd还是有一点是优于distrod的，那就是启用了官方systemd的wsl2实例，在用户停止操作后，会自动关闭，和未启用 systemd 时的特性一样，这有利于节约电脑的计算资源。</p><h3 id="win10-genie" tabindex="-1"><a class="header-anchor" href="#win10-genie"><span>win10 genie</span></a></h3><p>wsl</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> snapd

<span class="token function">sudo</span> snap <span class="token function">install</span> <span class="token parameter variable">--edge</span> <span class="token parameter variable">--classic</span> <span class="token parameter variable">--channel</span><span class="token operator">=</span>edge/classic systemd-genie
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>windows</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>wsl <span class="token parameter variable">--shutdown</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>wsl</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>genie <span class="token parameter variable">-s</span> <span class="token comment"># 启动genie守护进程</span>
genie <span class="token parameter variable">-c</span> <span class="token function">bash</span> <span class="token comment"># 进入genie bottle</span>
<span class="token function">ps</span> --no-headers <span class="token parameter variable">-o</span> <span class="token function">comm</span> <span class="token number">1</span> <span class="token comment"># 再次运行以下命令，检查systemd是否已启动为PID 1。此时输出的结果应该是systemd</span>
systemctl list-units <span class="token comment"># 接下来，检查您是否可以与systemd后端通信。这应该会列出systemd管理的所有单元</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>补丁：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># snap安装报错：error: Please specify a single channel</span>
<span class="token comment"># 解决方法：用apt安装</span>
<span class="token function">wget</span> -O- https://packages.arkane-systems.net/arkane.key <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /usr/share/keyrings/arkane-keyring.gpg
<span class="token builtin class-name">echo</span> <span class="token string">&quot;deb [signed-by=/usr/share/keyrings/arkane-keyring.gpg arch=<span class="token variable"><span class="token variable">$(</span>dpkg --print-architecture<span class="token variable">)</span></span> components=main] https://packages.arkane-systems.net/ubuntu/ <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> main&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/arkane-systems.list <span class="token operator">&gt;</span> /dev/null
<span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> systemd-genie
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="win10-distrod" tabindex="-1"><a class="header-anchor" href="#win10-distrod"><span>win10 distrod</span></a></h3><p>……</p><h3 id="原生支持方案-wsl-systemd-需要window11" tabindex="-1"><a class="header-anchor" href="#原生支持方案-wsl-systemd-需要window11"><span>原生支持方案 (wsl systemd，需要window11)</span></a></h3><p>启用最新的wsl systemd特性前，可先阅读微软和Canonical提供的文档： https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/ https://ubuntu.com/blog/ubuntu-wsl-enable-systemd https://devblogs.microsoft.com/commandline/a-preview-of-wsl-in-the-microsoft-store-is-now-available</p><p>如果需要使用微软官方支持的systmed，在目前来说你需要满足这些前置条件：</p><ol><li><s>操作系统为windows 11</s> Update：Win10最新版也支持了</li><li>wsl 版本为 0.67.6 或以上（目前均为预览版本）</li></ol><p>先查看WSL版本，Windows命令行：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ wsl.exe <span class="token parameter variable">--list</span>
适用于 Linux 的 Windows 子系统分发版:
Ubuntu-20.04 <span class="token punctuation">(</span>默认<span class="token punctuation">)</span>

$ wsl.exe <span class="token parameter variable">--distribution</span> Ubuntu-20.04
Welcome to Ubuntu <span class="token number">20.04</span>.6 LTS <span class="token punctuation">(</span>GNU/Linux <span class="token number">5.10</span>.16.3-microsoft-standard-WSL2 x86_64<span class="token punctuation">)</span>

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Mon Jul <span class="token number">31</span> <span class="token number">21</span>:23:03 CST <span class="token number">2023</span>

  System load:  <span class="token number">0.0</span>                 Processes:             <span class="token number">96</span>
  Usage of /:   <span class="token number">14.5</span>% of <span class="token number">250</span>.98GB   Users logged in:       <span class="token number">0</span>
  Memory usage: <span class="token number">9</span>%                  IPv4 address <span class="token keyword">for</span> eth0: <span class="token number">172.28</span>.82.115
  Swap usage:   <span class="token number">0</span>%

  <span class="token operator">=</span><span class="token operator">&gt;</span> There is <span class="token number">1</span> zombie process.


Expanded Security Maintenance <span class="token keyword">for</span> Applications is not enabled.

<span class="token number">0</span> updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: <span class="token function">sudo</span> pro status



This message is shown once a day. To disable it please create the
/home/linczero/.hushlogin file.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 检查 是否启用了systemd。输出 systemd=true 表示成功</span>
$ <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;[boot]<span class="token entity" title="\\n">\\n</span>systemd=true&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token parameter variable">-a</span> /etc/wsl.conf
<span class="token punctuation">[</span>boot<span class="token punctuation">]</span>
<span class="token assign-left variable">systemd</span><span class="token operator">=</span>true

<span class="token comment"># 如果命令返回的是init说明systemd未启用，如果是systemd那么你的systemd已启用成功了</span>
$ <span class="token function">ps</span> --no-headers <span class="token parameter variable">-o</span> <span class="token function">comm</span> <span class="token number">1</span>
init

$ systemd
Trying to run as user instance, but the system has not been booted with systemd.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23))])}const S=i(p,[["render",y],["__file","wsl使用systemd.html.vue"]]),x=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E8%99%9A%E6%8B%9F%E6%9C%BA/WSL/wsl%E4%BD%BF%E7%94%A8systemd.html","title":"wsl使用systemd","lang":"zh-CN","frontmatter":{"description":"wsl使用systemd 资料 这里直接找官方的方案：WSL 现已提供 Systemd 支持！（。upDate 2023：后来又更新了，win10也支持了） 里面的细节比较多，觉得太干了就看国内博文：WSL 2 上启用微软官方支持的 systemd，倒不如说这篇反而更全面，更推荐 方案类型 本文首先会介绍如何安装和配置 wsl systemd，并用两个...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E8%99%9A%E6%8B%9F%E6%9C%BA/WSL/wsl%E4%BD%BF%E7%94%A8systemd.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"wsl使用systemd"}],["meta",{"property":"og:description","content":"wsl使用systemd 资料 这里直接找官方的方案：WSL 现已提供 Systemd 支持！（。upDate 2023：后来又更新了，win10也支持了） 里面的细节比较多，觉得太干了就看国内博文：WSL 2 上启用微软官方支持的 systemd，倒不如说这篇反而更全面，更推荐 方案类型 本文首先会介绍如何安装和配置 wsl systemd，并用两个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"wsl使用systemd\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"wsl使用systemd","slug":"wsl使用systemd","link":"#wsl使用systemd","children":[{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]},{"level":2,"title":"方案类型","slug":"方案类型","link":"#方案类型","children":[{"level":3,"title":"三种方式的比较","slug":"三种方式的比较","link":"#三种方式的比较","children":[{"level":4,"title":"和genie的对比","slug":"和genie的对比","link":"#和genie的对比","children":[]},{"level":4,"title":"和distrod的对比","slug":"和distrod的对比","link":"#和distrod的对比","children":[]}]},{"level":3,"title":"win10 genie","slug":"win10-genie","link":"#win10-genie","children":[]},{"level":3,"title":"win10 distrod","slug":"win10-distrod","link":"#win10-distrod","children":[]},{"level":3,"title":"原生支持方案 (wsl systemd，需要window11)","slug":"原生支持方案-wsl-systemd-需要window11","link":"#原生支持方案-wsl-systemd-需要window11","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.03,"words":1209},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Virtual/虚拟机/WSL/wsl使用systemd.md","excerpt":"\\n<h2>资料</h2>\\n<ul>\\n<li>这里直接找官方的方案：<a href=\\"https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">WSL 现已提供 Systemd 支持！</a>（<s>仅win11，原文没说这点，但评论和笔记下面的链接都会提到这点</s>。upDate 2023：后来又更新了，win10也支持了）</li>\\n<li>里面的细节比较多，觉得太干了就看国内博文：<a href=\\"https://www.cnblogs.com/wswind/p/wsl2-official-systemd.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">WSL 2 上启用微软官方支持的 systemd</a>，倒不如说这篇反而更全面，更推荐</li>\\n</ul>","autoDesc":true}');export{S as comp,x as data};
