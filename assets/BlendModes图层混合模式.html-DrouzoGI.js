import{_ as d,c as e,e as a,o as r}from"./app-Dnpl954R.js";const n={};function o(b,t){return r(),e("div",null,t[0]||(t[0]=[a('<h1 id="blend-modes-图层混合模式" tabindex="-1"><a class="header-anchor" href="#blend-modes-图层混合模式"><span>Blend modes 图层混合模式</span></a></h1><p>我有个叫 《20200218_图层混合模式的研究_Matlab》 的Matlab项目，甚至画了图，那个也值得参考</p><p><strong>Blend modes（27-8bit&amp;&amp;15-32bit）</strong></p><p>公式改-简化：(r,g,b)=(R,G,B)/255，（r,g,b)反相=1-(r,g,b)，(R,G,B)反相=255-(R,G,B)，D为该层透明度 <strong>注意的是，简化版公式是方便理解，真实运算中直接使用(R,G,B)数据进行运算</strong> A为下图层-基色，B为上图层-混合色，C为结果色。【A=R/**G/B，a=r/g/b】</p><table><thead><tr><th>图层混合模式</th><th>作用</th><th>公式</th><th>图层混合模式</th><th>作用</th><th>公式</th></tr></thead><tbody><tr><td>正常模式（Normal）【组合模式】</td><td>补充：与不透明度有关补充：图层的默认模式体现：混合色层以Alpha状盖住了基色层</td><td>c=F(a,b,d)【支持32bit】</td><td>溶解（Dissolve）【组合模式】</td><td>补充：与不透明度有关补充：图像的色彩不产生影响体现：混合色层以散点状盖住基色层边缘处效果明显</td><td>c=F(a,b,d)【支持32bit】</td></tr><tr><td>正片叠底（Multiply）【加深模式】</td><td>应用：扣白留黑补充：与滤色模式相反体现：压暗中间调</td><td>c=aXb【支持32bit】</td><td>滤色（Screen）【减淡模式】</td><td>应用：扣黑留白补充：与正片叠底相反体现：提亮中间调</td><td>c反=a反xb反</td></tr><tr><td>变暗（Darken）【加深模式】</td><td>应用：截取剖面补充：与变亮模式相反体现：谁暗就保留谁</td><td>c=Min(a,b)【支持32bit】</td><td>变亮（Lighten）【减淡模式】</td><td>应用：水漫石头补充：与变暗模式相反体现：谁亮就保留谁</td><td>c=Max(a,b)【支持32bit】</td></tr><tr><td>深色（Darker Color）【加深模式】</td><td>补充：与变暗相似，但计算复合通道体现：会导致过渡生硬</td><td>∑c=Min(∑a,∑b)【支持32bit】</td><td>浅色（Lighter Color）【减淡模式】</td><td>补充：与变亮相似，但计算复合通道体现：会导致过渡生硬</td><td>∑c=Max(∑a,∑b)【支持32bit】</td></tr><tr><td>颜色加深（Color Burn）【加深模式】</td><td>类似于正片叠底但会根据叠加的颜色相应增加对比度和白色混合没有效果</td><td>c=1-(1-b)/a</td><td>颜色减淡（Color Dodge）【减淡模式】</td><td>补充：与颜色加深相反补充：极易过曝</td><td>c=b/(1-a)【支持32bit】</td></tr><tr><td>线性加深（Linear Burn）【加深模式】</td><td>体现：都白才白，否则变暗</td><td>c=a+b-1=b-反相a=a-反相b</td><td>线性减淡（Linear Dodge）【减淡模式】</td><td>也称为线性减淡添加应用：迭代HDRI图物理亮度猜想：压暗一半再用，调和体现：亮度更亮，饱和低</td><td>c=a+b</td></tr><tr><td>叠加（Overlay）【对比模式】</td><td><strong>下图层</strong>混合色遵循中性灰原理<strong>二分段</strong>函数，叠底和滤色的混合**体现：**提亮白色压暗阴影，加对比</td><td>a&lt;=0.5: c=2abca&gt;0.5: c反=2a反b反与强光同算法</td><td>强光（Hard Light）【对比模式】</td><td>上图层混合色遵循中性灰原理二分段函数，叠底和滤色的混合体现：提亮白色压暗阴影，加对比</td><td>b&lt;=0.5: c=2abb&gt;0.5: c反=2a反b反与叠加同算法</td></tr><tr><td>柔光（Soft Light）【对比模式】</td><td>上图层混合色遵循中性灰原理二分段函数，叠加和强光的柔和版体现：柔化地加对比</td><td>b&lt;=0.5:c=2ab+(a^2)(1-2B)b&gt;0.5:c=2a(1-b)+根a*(2b-1)</td><td>点光（Pin Light）【对比模式】</td><td>上图层混合色遵循中性灰原理二分段函数，变暗和变亮的混合体现：会产生明显分界线</td><td>b&gt;0.5:Max(a,b)b&lt;0.5:Min(a,b)</td></tr><tr><td>线性光（Linear Light）【对比模式】</td><td>上图层混合色遵循中性灰原理不分段，类似线性减淡和线性加深体现：提亮高光压暗黑色，丢细节</td><td>c=(2a-1)+b</td><td>实色混合（Hard Mix）【对比模式】</td><td><strong>不遵循</strong>中性灰原理<strong>二分段</strong>函数，分通道的阈值**体现：**会得到纯度非常高的颜色</td><td>a+b&gt;=1：c=1a+b&lt;1：c=0</td></tr><tr><td>亮光（Vivid Light）【对比模式】</td><td></td><td></td><td></td><td></td><td>a&lt;2b-1：c=2b-1a=(2b-1,2b)：c=aa&gt;2b：c=2b</td></tr><tr><td>差值（Difference）【比较模式】</td><td>与排除作用类似，结果色对比度更强体现：白色混合变反色，黑色混合不变色体现：能得到反色条纹/边缘应用：能用于用水印去除透明水印</td><td>c=abs(a-b)【支持32bit】</td><td>色相（Hue）【色彩模式】</td><td>体现：基色图层的色相被替换</td><td>c色相值=b色相值c饱和度=a饱和度c亮度=a亮度　【支持32bit】</td></tr><tr><td>排除（Exclusion）【比较模式】</td><td>与插值作用类似，结果色对比度很弱(灰)体现：白色混合变反色，黑色混合不变色体现：能得到反色条纹/边缘</td><td>c=a+b-2ab</td><td>饱和度（Saturation）【色彩模式】</td><td>体现：基色图层的饱和度被替换</td><td>c色相值=a色相值c饱和度=b饱和度c亮度=a亮度　【支持32bit】</td></tr><tr><td>减去（Subtract）【比较模式】</td><td>体现：白色混合得黑色，黑色混合不变色</td><td>c=b-a=(b-a)/收缩+补偿【支持32bit】</td><td>颜色（Color）【色彩模式】</td><td>体现：基色图层仅亮度不被替换作用：黑白图片上色的绝佳模式</td><td>c色相值=b色相值c饱和度=b饱和度c亮度=a亮度　【支持32bit】</td></tr><tr><td>划分（Divide）【比较模式】</td><td>体现：白色混合不变色，黑色混合得白色体现：基色更亮得白色</td><td>c=b/a*1【支持32bit】</td><td>明度（Luminosity）【色彩模式】</td><td>体现：基色图层的亮度被替换</td><td>c色相值=a色相值c饱和度=a饱和度c亮度=b亮度　【支持32bit】</td></tr></tbody></table>',5)]))}const l=d(n,[["render",o],["__file","BlendModes图层混合模式.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/3D/Render/Graphics/3.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/BlendModes%E5%9B%BE%E5%B1%82%E6%B7%B7%E5%90%88%E6%A8%A1%E5%BC%8F.html","title":"Blend modes 图层混合模式","lang":"zh-CN","frontmatter":{"last_time":"2020.04.28","tag":"有道云","description":"Blend modes 图层混合模式 我有个叫 《20200218_图层混合模式的研究_Matlab》 的Matlab项目，甚至画了图，那个也值得参考 Blend modes（27-8bit&&15-32bit） 公式改-简化：(r,g,b)=(R,G,B)/255，（r,g,b)反相=1-(r,g,b)，(R,G,B)反相=255-(R,G,B)，D...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/3D/Render/Graphics/3.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/BlendModes%E5%9B%BE%E5%B1%82%E6%B7%B7%E5%90%88%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Blend modes 图层混合模式"}],["meta",{"property":"og:description","content":"Blend modes 图层混合模式 我有个叫 《20200218_图层混合模式的研究_Matlab》 的Matlab项目，甚至画了图，那个也值得参考 Blend modes（27-8bit&&15-32bit） 公式改-简化：(r,g,b)=(R,G,B)/255，（r,g,b)反相=1-(r,g,b)，(R,G,B)反相=255-(R,G,B)，D..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"有道云"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Blend modes 图层混合模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Blend modes 图层混合模式","slug":"blend-modes-图层混合模式","link":"#blend-modes-图层混合模式","children":[]}],"git":{},"readingTime":{"minutes":4.72,"words":1416},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/3D/Render/Graphics/3. 计算机图形学/BlendModes图层混合模式.md","excerpt":"\\n<p>我有个叫 《20200218_图层混合模式的研究_Matlab》 的Matlab项目，甚至画了图，那个也值得参考</p>\\n<p><strong>Blend modes（27-8bit&amp;&amp;15-32bit）</strong></p>\\n<p>公式改-简化：(r,g,b)=(R,G,B)/255，（r,g,b)反相=1-(r,g,b)，(R,G,B)反相=255-(R,G,B)，D为该层透明度\\n<strong>注意的是，简化版公式是方便理解，真实运算中直接使用(R,G,B)数据进行运算</strong>\\nA为下图层-基色，B为上图层-混合色，C为结果色。【A=R/**G/B，a=r/g/b】</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/3D/Render/Graphics/3. 计算机图形学/BlendModes图层混合模式.md","value":{"title":"BlendModes图层混合模式","path":"MdNote_Public/01. DesignAndDevelop/3D/Render/Graphics/3. 计算机图形学/BlendModes图层混合模式.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{l as comp,c as data};
