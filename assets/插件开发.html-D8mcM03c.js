import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,b as n,e as s,d as t,a as e}from"./app-OHhlwNoJ.js";const l={},u=e('<h1 id="markdown-it" tabindex="-1"><a class="header-anchor" href="#markdown-it"><span>Markdown-it</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="markdown-it-插件如何写" tabindex="-1"><a class="header-anchor" href="#markdown-it-插件如何写"><span>markdown-it 插件如何写</span></a></h1><p>然后官方资料说了半天，还是没给出一个具体的入门教程流程。用网上的其他资料来代替这一部分：</p><p>参考：</p>',5),r={href:"https://juejin.cn/post/7055238938092371975",target:"_blank",rel:"noopener noreferrer"},k={href:"https://xie.infoq.cn/article/16c70bb0f0bfb972d1e5867f6",target:"_blank",rel:"noopener noreferrer"},d={href:"https://xie.infoq.cn/article/7db8be15aa5161a8f36eec348",target:"_blank",rel:"noopener noreferrer"},v={href:"https://xie.infoq.cn/article/e36b2ff51c9520688be2581a7",target:"_blank",rel:"noopener noreferrer"},m=n("li",null,"最终效果网站：https://ts.yayujs.com/",-1),b=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言"},[n("span",null,"前言")])],-1),g={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmqyqingfeng%2FBlog%2Fissues%2F235",target:"_blank",rel:"noopener noreferrer"},h={href:"https://link.juejin.cn?target=http%3A%2F%2Fts.yayujs.com%2F",target:"_blank",rel:"noopener noreferrer"},f={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmqyqingfeng%2FBlog%2Fissues%2F251",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"markdown-it",-1),_={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmqyqingfeng%2FBlog%2Fissues%2F252",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"markdown-it",-1),F=e('<h2 id="renderer" tabindex="-1"><a class="header-anchor" href="#renderer"><span>renderer</span></a></h2><p><code>markdown-it</code> 的渲染过程分为两部分</p><ul><li><p><code>Parse</code></p></li><li><p><code>Render</code></p><p>如果我们要更改渲染的效果，就比如在外层包裹一层 <code>div</code>，或者修改 HTML 元素的属性、添加 <code>class</code> 等，就可以从 <code>Render</code> 过程入手。</p></li></ul>',3),q={href:"https://link.juejin.cn?target=https%3A%2F%2Fmarkdown-it.github.io%2Fmarkdown-it%2F%23MarkdownIt.prototype.renderer",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"Render",-1),j={href:"https://link.juejin.cn?target=https%3A%2F%2Fmarkdown-it.github.io%2Fmarkdown-it%2F%23Renderer",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,"译：Renderer的实例。使用它来修改输出外观。或者为插件生成的新令牌类型添加呈现规则。",-1),B=e(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> md <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;markdown-it&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">myToken</span><span class="token punctuation">(</span><span class="token parameter">tokens<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">,</span> self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">[</span><span class="token string">&#39;my_token&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> myToken
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=n("code",null,"markdown-it",-1),P=n("code",null,"rules",-1),I={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmarkdown-it%2Fmarkdown-it%2Fblob%2Fmaster%2Flib%2Frenderer.js",target:"_blank",rel:"noopener noreferrer"},M=e('<ul><li>code_inline</li><li>code_block</li><li>fence</li><li>image</li><li>hardbreak</li><li>softbreak</li><li>text</li><li>html_block</li><li>html_inline</li></ul><h3 id="实例一-vuepress实现" tabindex="-1"><a class="header-anchor" href="#实例一-vuepress实现"><span>实例一，VuePress实现</span></a></h3><p>如果我们查看 VuePress 中代码块的渲染结果，我们会发现每一个代码块外层都包了一层带 <code>extra-class</code> 类名的 <code>div</code>:</p><p>（图略）</p>',4),R={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fvuejs%2Fvuepress%2Fblob%2Fmaster%2Fpackages%2F%40vuepress%2Fmarkdown%2Flib%2FpreWrapper.js",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token parameter">md</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fence <span class="token operator">=</span> md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">.</span>fence
  md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">.</span><span class="token function-variable function">fence</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>tokens<span class="token punctuation">,</span> idx<span class="token punctuation">]</span> <span class="token operator">=</span> args
    <span class="token keyword">const</span> token <span class="token operator">=</span> tokens<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>
    <span class="token keyword">const</span> rawCode <span class="token operator">=</span> <span class="token function">fence</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;!--beforebegin--&gt;&lt;div class=&quot;language-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token punctuation">.</span>info<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> extra-class&quot;&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;!--afterbegin--&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rawCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;!--beforeend--&gt;&lt;/div&gt;&lt;!--afterend--&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看到这里非常巧妙的避开了处理 token，直接使用渲染后的结果，在外层包了一层 div。</p><h3 id="实例二" tabindex="-1"><a class="header-anchor" href="#实例二"><span>实例二</span></a></h3>`,3),C={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmqyqingfeng%2FBlog%2Fissues%2F251",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"rules.fence",-1),D=e(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>md<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">md</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fence <span class="token operator">=</span> md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">.</span>fence
  md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">.</span><span class="token function-variable function">fence</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> rawCode <span class="token operator">=</span> <span class="token function">fence</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    rawCode <span class="token operator">=</span> rawCode<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;span class=&quot;token comment&quot;&gt;\\/\\/ try-link https:\\/\\/(.*)&lt;\\/span&gt;\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;a href=&quot;$1&quot; class=&quot;try-button&quot; target=&quot;_blank&quot;&gt;Try&lt;/a&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rawCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例三" tabindex="-1"><a class="header-anchor" href="#实例三"><span>实例三</span></a></h3>`,2),N={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmarkdown-it%2Fmarkdown-it%2Fblob%2Fmaster%2Fdocs%2Farchitecture.md",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"/^https?:\\/\\/(www\\.)?vimeo.com\\/(\\d+)($|\\/)/",-1),$=n("code",null,"iframe",-1),G=e(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> md <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;markdown-it&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> defaultRender <span class="token operator">=</span> md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">.</span>image<span class="token punctuation">,</span>
    vimeoRE       <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?:\\/\\/(www\\.)?vimeo.com\\/(\\d+)($|\\/)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">.</span><span class="token function-variable function">image</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">tokens<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">,</span> self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> token <span class="token operator">=</span> tokens<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">,</span>
      aIndex <span class="token operator">=</span> token<span class="token punctuation">.</span><span class="token function">attrIndex</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>vimeoRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span>aIndex<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">var</span> id <span class="token operator">=</span> token<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span>aIndex<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>vimeoRE<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token string">&#39;&lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;\\n&#39;</span> <span class="token operator">+</span>
           <span class="token string">&#39;  &lt;iframe class=&quot;embed-responsive-item&quot; src=&quot;//player.vimeo.com/video/&#39;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;&lt;/iframe&gt;\\n&#39;</span> <span class="token operator">+</span>
           <span class="token string">&#39;&lt;/div&gt;\\n&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// pass token to default renderer.</span>
  <span class="token keyword">return</span> <span class="token function">defaultRender</span><span class="token punctuation">(</span>tokens<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>rules.image</code> 传入的函数参数可以查看 <code>renderer.js</code> 的源码：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token class-name">Renderer</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">tokens<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> i<span class="token punctuation">,</span> len<span class="token punctuation">,</span> type<span class="token punctuation">,</span>
      result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      rules <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rules<span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> tokens<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    type <span class="token operator">=</span> tokens<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>type<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;inline&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderInline</span><span class="token punctuation">(</span>tokens<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> rules<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">+=</span> rules<span class="token punctuation">[</span>tokens<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>type<span class="token punctuation">]</span><span class="token punctuation">(</span>tokens<span class="token punctuation">,</span> i<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      result <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderToken</span><span class="token punctuation">(</span>tokens<span class="token punctuation">,</span> i<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看到 rules 传入的参数，其中 tokens 就是指 tokens 列表，idx 则是指要渲染的 token 索引，所以在代码里才可以通过 <code>tokens[index]</code>获取目标 token。</p>`,4),S=n("code",null,"tokens.attrIndex",-1),Z={href:"https://link.juejin.cn?target=https%3A%2F%2Fmarkdown-it.github.io%2Fmarkdown-it%2F%23Token",target:"_blank",rel:"noopener noreferrer"},z={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmarkdown-it%2Fmarkdown-it%2Fblob%2Fmaster%2Flib%2Ftoken.js",target:"_blank",rel:"noopener noreferrer"},H=e(`<p>我们解释一下这个示例里用到的一些方法，先从 token 开始说起，我们举个例子，看下<code>![video link]([https://www.vimeo.com/123)](https://www.vimeo.com/123))</code>这句 markdown 语法产生的 token（这里进行了简化）：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;img&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;attrs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>
            <span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;https://www.vimeo.com/123&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>
            <span class="token string">&quot;alt&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;&quot;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;attrs&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;video link&quot;</span><span class="token punctuation">,</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;video link&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到 token 是有一个 <code>attr</code> 属性的，表明了要渲染的 img 标签的属性有哪些，<code>token.attrIndex</code> 就是通过名字获取属性索引，然后再通过 <code>token.attrs[aIndex][1]</code>获取具体的属性值。</p><h3 id="实例四" tabindex="-1"><a class="header-anchor" href="#实例四"><span>实例四</span></a></h3>`,4),O={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmarkdown-it%2Fmarkdown-it%2Fblob%2Fmaster%2Fdocs%2Farchitecture.md",target:"_blank",rel:"noopener noreferrer"},J=n("code",null,'target="_blank"',-1),U=e(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// Remember old renderer, if overridden, or proxy to default renderer</span>
<span class="token keyword">var</span> defaultRender <span class="token operator">=</span> md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">.</span>link_open <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">tokens<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">,</span> self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> self<span class="token punctuation">.</span><span class="token function">renderToken</span><span class="token punctuation">(</span>tokens<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

md<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>rules<span class="token punctuation">.</span><span class="token function-variable function">link_open</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">tokens<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">,</span> self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// If you are sure other plugins can&#39;t add \`target\` - drop check below</span>
  <span class="token keyword">var</span> aIndex <span class="token operator">=</span> tokens<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attrIndex</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>aIndex <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    tokens<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attrPush</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_blank&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// add new attribute</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    tokens<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>attrs<span class="token punctuation">[</span>aIndex<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;_blank&#39;</span><span class="token punctuation">;</span>    <span class="token comment">// replace value of existing attr</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// pass token to default renderer.</span>
  <span class="token keyword">return</span> <span class="token function">defaultRender</span><span class="token punctuation">(</span>tokens<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也许你会奇怪，为什么会有 <code>rules.link_open</code>？这个并不在默认规则里呀，可以直接使用吗？</p><p>还真是可以的，其实这里的 <code>link_open</code> 和之前的 <code>image</code>、<code>fence</code> 等都是 token 的 type，所以只要是 token 的 type 就可以，那 token 有哪些 type 呢？有具体的说明文档吗？</p><p>关于这个问题， <code>markdown-it </code> 也有 issues 里提出：</p><p>（略，见#822）</p><p>作者的意思就是，没有，如果你想写插件，你就去看源码……</p>`,6),W={href:"https://link.juejin.cn?target=https%3A%2F%2Fmarkdown-it.github.io%2F",target:"_blank",rel:"noopener noreferrer"},K=e(`<p>（图略）</p><p>当然就这个例子里的需求，作者还提供了 <code>markdown-it-for-inline</code> 插件用于简化代码书写：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> iterator <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;markdown-it-for-inline&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> md <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;markdown-it&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>iterator<span class="token punctuation">,</span> <span class="token string">&#39;url_new_win&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;link_open&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">tokens<span class="token punctuation">,</span> idx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">var</span> aIndex <span class="token operator">=</span> tokens<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attrIndex</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

              <span class="token keyword">if</span> <span class="token punctuation">(</span>aIndex <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                tokens<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attrPush</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_blank&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                tokens<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>attrs<span class="token punctuation">[</span>aIndex<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;_blank&#39;</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于 <code>markdown-it-for-inline</code>就在以后的文章里介绍了。</p><h2 id="系列文章" tabindex="-1"><a class="header-anchor" href="#系列文章"><span>系列文章</span></a></h2>`,5),Q={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmqyqingfeng%2FBlog",target:"_blank",rel:"noopener noreferrer"},X=n("p",null,"微信：「mqyqingfeng」，加我进冴羽唯一的读者群。",-1),Y=n("p",null,"如果有错误或者不严谨的地方，请务必给予指正，十分感谢。如果喜欢或者有所启发，欢迎 star，对作者也是一种鼓励。",-1);function nn(sn,an){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[s("markdown-it 插件如何写（一）"),t(a)])]),n("li",null,[s("https://www.infoq.cn/u/yayujs/publish "),n("ul",null,[n("li",null,[n("a",k,[s("markdown-it 插件如何写（一）"),t(a)])]),n("li",null,[n("a",d,[s("markdown-it 插件如何写（二）"),t(a)])]),n("li",null,[n("a",v,[s("markdown-it 插件如何写（三）"),t(a)])]),m])])]),b,n("p",null,[s("在 "),n("a",g,[s("《一篇带你用 VuePress + Github Pages 搭建博客》"),t(a)]),s("中，我们使用 VuePress 搭建了一个博客，最终的效果查看："),n("a",h,[s("TypeScript 中文文档"),t(a)]),s("。（已经上不了了）")]),n("p",null,[s("在搭建博客的过程中，我们出于实际的需求，在"),n("a",f,[s("《VuePress 博客优化之拓展 Markdown 语法》"),t(a)]),s("中讲解了如何写一个 "),w,s("插件，又在 "),n("a",_,[s("《markdown-it 原理解析》"),t(a)]),s("中讲解了 "),y,s("的执行原理，本篇我们将讲解具体的实战代码，帮助大家更好的写插件。")]),F,n("p",null,[s("在 "),n("a",q,[s("markdown-it 的官方文档"),t(a)]),s("里就可以找到自定义 "),x,s(" 渲染规则的方式：")]),n("blockquote",null,[n("p",null,[s("Instance of "),n("a",j,[s("Renderer"),t(a)]),s(". Use it to modify output look. Or to add rendering rules for new token types, generated by plugins.")]),E]),B,n("p",null,[A,s(" 内置了一些默认的 "),P,s("，你可以直接修改它们，具体有哪些以及渲染方式可以查看 "),n("a",I,[s("renderer.js 的源码"),t(a)]),s("，这里直接列出来：")]),M,n("p",null,[s("其实，这就是 VuePress 修改了渲染规则产生的，查看 "),n("a",R,[s("VuePress 源码"),t(a)]),s("：")]),T,n("p",null,[s("类似于 VuePress 的这种方式，我们也可以在获取默认渲染内容后，再使用 replace 替换掉一些内容，比如在"),n("a",C,[s("《VuePress 博客优化之拓展 Markdown 语法》"),t(a)]),s("这篇中，我们自定义了一个代码块语法，就是在 "),V,s("中修改了渲染的内容：")]),D,n("p",null,[s("但不可能总是可以这么取巧，有的时候就是需要处理 token，这里我们参考 markdown-it "),n("a",N,[s("官方提供的设计准则"),t(a)]),s("中的例子，当渲染一个图片的时候，如果链接匹配 "),L,s("，我们就将其渲染为一个 "),$,s(" ，其他的则保持默认渲染方式：")]),G,n("p",null,[s("然后我们又使用了 "),S,s("，tokens 提供了哪些方法可以查看"),n("a",Z,[s("官方 API"),t(a)]),s("，或者直接查看 "),n("a",z,[s("Token 源码"),t(a)]),s("。")]),H,n("p",null,[s("同样是来自 markdown-it "),n("a",O,[s("官方提供的设计准则"),t(a)]),s("中的例子，给所有的链接添加 "),J,s("：")]),U,n("p",null,[s("那成吧，其实在我们的实际开发中，如果你想要知道某一个 token type，其实完全可以打印出 token 看一下，官方的 "),n("a",W,[s("Live Demo"),t(a)]),s(" 提供了 debug 模式用于查看 token：")]),K,n("p",null,[s("博客搭建系列是我至今写的唯一一个偏实战的系列教程，预计 20 篇左右，讲解如何使用 VuePress 搭建、优化博客，并部署到 GitHub、Gitee、私有服务器等平台。全系列文章地址："),n("a",Q,[s("github.com/mqyqingfeng…"),t(a)])]),X,Y])}const pn=p(l,[["render",nn],["__file","插件开发.html.vue"]]),on=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/Markdown-it/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html","title":"Markdown-it","lang":"zh-CN","frontmatter":{"description":"Markdown-it 目录 markdown-it 插件如何写 然后官方资料说了半天，还是没给出一个具体的入门教程流程。用网上的其他资料来代替这一部分： 参考： markdown-it 插件如何写（一） https://www.infoq.cn/u/yayujs/publish markdown-it 插件如何写（一） markdown-it 插件如...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/Markdown-it/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Markdown-it"}],["meta",{"property":"og:description","content":"Markdown-it 目录 markdown-it 插件如何写 然后官方资料说了半天，还是没给出一个具体的入门教程流程。用网上的其他资料来代替这一部分： 参考： markdown-it 插件如何写（一） https://www.infoq.cn/u/yayujs/publish markdown-it 插件如何写（一） markdown-it 插件如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Markdown-it\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Markdown-it","slug":"markdown-it","link":"#markdown-it","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"markdown-it 插件如何写","slug":"markdown-it-插件如何写","link":"#markdown-it-插件如何写","children":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"renderer","slug":"renderer","link":"#renderer","children":[{"level":3,"title":"实例一，VuePress实现","slug":"实例一-vuepress实现","link":"#实例一-vuepress实现","children":[]},{"level":3,"title":"实例二","slug":"实例二","link":"#实例二","children":[]},{"level":3,"title":"实例三","slug":"实例三","link":"#实例三","children":[]},{"level":3,"title":"实例四","slug":"实例四","link":"#实例四","children":[]}]},{"level":2,"title":"系列文章","slug":"系列文章","link":"#系列文章","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":6.31,"words":1892},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Type/Doc/MarkdwonAbout/Markdown-it/插件开发/插件开发.md","autoDesc":true}');export{pn as comp,on as data};
