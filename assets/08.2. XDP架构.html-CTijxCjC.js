import{_ as i,c as t,e as n,o as l}from"./app-Dwsnbiv5.js";const o={};function a(p,e){return l(),t("div",null,e[0]||(e[0]=[n('<h1 id="xdp架构" tabindex="-1"><a class="header-anchor" href="#xdp架构"><span>XDP架构</span></a></h1><p>XDP基于一系列的技术来实现高性能和可编程性，包括</p><ul><li>基于eBPF</li><li>Capabilities negotiation：通过协商确定网卡驱动支持的特性，XDP尽量利用新特性，但网卡驱动不需要支持所有的特性</li><li>在网络协议栈前处理</li><li>无锁设计</li><li>批量I/O操作</li><li>轮询式</li><li>直接队列访问</li><li>不需要分配skbuff</li><li>支持网络卸载</li><li>DDIO</li><li>XDP程序快速执行并结束，没有循环</li><li>Packeting steering</li></ul><h2 id="包处理逻辑" tabindex="-1"><a class="header-anchor" href="#包处理逻辑"><span>包处理逻辑</span></a></h2><p>如下图所示，基于内核的eBPF程序处理包，每个RX队列分配一个CPU，且以每个网络包一个Page（packet-page）的方式避免分配skbuff。</p><p>![xdp-packet-processor](08.2. XDP架构.assets/packet-processor.png)</p>',6)]))}const s=i(o,[["render",a],["__file","08.2. XDP架构.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/03.%20Linux%E7%BD%91%E7%BB%9C/08.2.%20XDP%E6%9E%B6%E6%9E%84.html","title":"XDP架构","lang":"zh-CN","frontmatter":{"description":"XDP架构 XDP基于一系列的技术来实现高性能和可编程性，包括 基于eBPF Capabilities negotiation：通过协商确定网卡驱动支持的特性，XDP尽量利用新特性，但网卡驱动不需要支持所有的特性 在网络协议栈前处理 无锁设计 批量I/O操作 轮询式 直接队列访问 不需要分配skbuff 支持网络卸载 DDIO XDP程序快速执行并结束...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/03.%20Linux%E7%BD%91%E7%BB%9C/08.2.%20XDP%E6%9E%B6%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"XDP架构"}],["meta",{"property":"og:description","content":"XDP架构 XDP基于一系列的技术来实现高性能和可编程性，包括 基于eBPF Capabilities negotiation：通过协商确定网卡驱动支持的特性，XDP尽量利用新特性，但网卡驱动不需要支持所有的特性 在网络协议栈前处理 无锁设计 批量I/O操作 轮询式 直接队列访问 不需要分配skbuff 支持网络卸载 DDIO XDP程序快速执行并结束..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"XDP架构\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"XDP架构","slug":"xdp架构","link":"#xdp架构","children":[{"level":2,"title":"包处理逻辑","slug":"包处理逻辑","link":"#包处理逻辑","children":[]}]}],"git":{},"readingTime":{"minutes":0.61,"words":184},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/03. Linux网络/08.2. XDP架构.md","excerpt":"\\n<p>XDP基于一系列的技术来实现高性能和可编程性，包括</p>\\n<ul>\\n<li>基于eBPF</li>\\n<li>Capabilities negotiation：通过协商确定网卡驱动支持的特性，XDP尽量利用新特性，但网卡驱动不需要支持所有的特性</li>\\n<li>在网络协议栈前处理</li>\\n<li>无锁设计</li>\\n<li>批量I/O操作</li>\\n<li>轮询式</li>\\n<li>直接队列访问</li>\\n<li>不需要分配skbuff</li>\\n<li>支持网络卸载</li>\\n<li>DDIO</li>\\n<li>XDP程序快速执行并结束，没有循环</li>\\n<li>Packeting steering</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/03. Linux网络/08.2. XDP架构.md","value":{"title":"08.2. XDP架构","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/03. Linux网络/08.2. XDP架构.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{s as comp,d as data};
