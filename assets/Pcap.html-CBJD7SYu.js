import{_ as s,e as a,g as e,o as n}from"./app-DeGPQmv-.js";const l={};function p(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="pcap" tabindex="-1"><a class="header-anchor" href="#pcap"><span>Pcap</span></a></h1><p>参考：<a href="https://blog.csdn.net/lu_embedded/article/details/124952413" target="_blank" rel="noopener noreferrer">Pcap 数据包捕获格式详解</a> (禁止转载)</p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p><a href="https://so.csdn.net/so/search?q=Pcap&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">Pcap</a> 是 Packet Capture 的英文缩写，是一种行业标准的网络数据包捕获格式。</p><p>如果你是网络开发人员，那么通常会使用 Wireshark、Tcpdump 或 WinDump 等网络分析器捕获 TCP/IP 数据包，而抓包后存盘的文件格式就是 .pcap 文件。</p><h2 id="文件格式" tabindex="-1"><a class="header-anchor" href="#文件格式"><span>文件格式</span></a></h2><h3 id="一般格式" tabindex="-1"><a class="header-anchor" href="#一般格式"><span>一般格式</span></a></h3><p>Pcap 文件格式是一种二进制格式，支持纳秒级精度的时间戳。虽然这种格式在不同的实现中有所不同，但是所有的 pcap 文件都具有如下图所示的一般结构。</p><table><thead><tr><th style="text-align:center;">Global Header</th></tr></thead><tbody><tr><td style="text-align:center;">Packet Header<br>Packet Data</td></tr><tr><td style="text-align:center;">Packet Header<br>Packet Data</td></tr><tr><td style="text-align:center;">……</td></tr></tbody></table><h3 id="全局报头-global-header" tabindex="-1"><a class="header-anchor" href="#全局报头-global-header"><span>全局报头（Global Header）</span></a></h3><p>全局报头（Global Header）包含魔数（Magic number）、GMT 偏移量、时间戳精度、捕获的数据包的最大长度，以及数据链路的类型。内部具体格式和区域划分如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               3</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                          </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Magic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                         |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |          </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Major</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        |         </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Minor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">         |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                           </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Reserved1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                           </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Reserved2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                            </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SnapLen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FCS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LinkType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pcap 文件全局报头的长度为 24 字节，各区域/字段说明如下：</p><ol><li><p>[0-3, 4Byte]，魔数（Magic Number）</p><ul><li><ul><li>一个无符号幻数，其值为十六进制数 0xA1B2C3D4 或十六进制数 0xA1B23C4D。</li><li>如果值为 0xA1B2C3D4，则 Packet Records 中的时间戳以秒和微秒为单位；</li><li>如果是 0xA1B23C4D，则数据包记录中的时间戳以秒和纳秒为单位。</li><li>另外，这个幻数也可用于区分保存在小端机器上的部分和保存在大端机器上的部分，并自动识别 pcap 文件。</li></ul></li></ul></li><li><p>[4-7, 4Byte]，版本号</p><ul><li>Major Version（16 位）一个无符号值，给出 pcap 格式的当前主要版本的编号。</li><li>Minor Version（16 位）一个无符号值，给出 pcap 格式的当前次要版本的编号。</li></ul></li><li><p>[8-11, 4Byte]，保留1</p><ul><li>未使用的保留字段，pcap 文件写入器应填充 0，pcap 文件读取器必须忽略。这个值被一些较早的实现记录为“gmt to local correction”，因此一些较旧的 pcap 文件编写器在此字段中存储了非零值。</li></ul></li><li><p>[12-15, 4Byte]，保留2</p><ul><li>未使用的保留字段，pcap 文件写入器应填充 0，pcap 文件读取器必须忽略。这个值被一些较旧的实现记录为“accuracy of timestamps”，因此一些较旧的 pcap 文件编写器在此字段中存储了非零值。</li></ul></li><li><p>[16-19, 4Byte]，最大长度，SnapLen（32 位）</p><ul><li>一个无符号值，表示从每个数据包中捕获的最大字节数。每个数据包中超过此值的部分将不会存储在文件中。</li><li>注意：该值不得为零；如果未指定限制，则该值应为大于或等于文件中最大数据包长度的数字。</li></ul></li><li><p>[20-23, 4Byte]</p><ul><li><p>LinkType（28 位）</p><ul><li>一个无符号值，在全局报头最后 4 字节的低 28 位中定义文件中数据包的链路层类型。</li></ul></li><li><p>Frame Cyclic Sequence present（4 位）</p><ul><li>如果设置了“f”位，则 FCS 位提供附加到每个数据包的 FCS 字节数，有效值介于 0 和 7 之间。</li></ul></li></ul></li></ol><h3 id="数据记录-packet-record" tabindex="-1"><a class="header-anchor" href="#数据记录-packet-record"><span>数据记录（Packet Record）</span></a></h3><p>在全局报头后面，跟着 0 条或多条捕获的数据包数据记录（Packet Record）。</p><p>数据记录</p><p>数据包记录（Packet Record）是存储来自网络的数据包的标准容器，包括 Packet Header 和 Packet Data 两部分。其中，Packet Header 长度固定为 16 字节，Packet Data 则是可变长度的负荷数据。</p><p>Packet Record 内部具体格式和区域划分如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               3</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                      </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Seconds)                      |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |            </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Microseconds </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nanoseconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)            |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Captured</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                     |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Original</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                     |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                                               /</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                          Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Data</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                          /</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        variable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> length</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        /</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                                               /</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +---------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据记录各区域/字段说明如下：</p><ol><li><p>[0-7, 8Byte]，时间戳</p><ul><li><p>Timestamp（秒）和 Timestamp（微秒或纳秒）分别占4Byte</p></li><li><p>包括整数（秒数）和小数（微秒或纳秒）部分。秒值是一个 32 位无符号整数，表示自 1970 年 1 月 1 日 00:00:00 UTC 以来经过的秒数，微秒或纳秒值表示自那以后经过的微秒或纳秒数秒。值得一提的是，该值是表示微秒还是纳秒，由文件头中的幻数指定。</p></li></ul></li><li><p>[8-11, 4Byte]，抓包长度</p><ul><li>一个无符号值，表示从数据包中捕获的字节数（即数据包数据字段的长度）。它将是原始数据包长度（Original Packet Length）和接口的快照长度（上图中的 SnapLen 定义）中的最小值。</li></ul></li><li><p>[12-15, 4Byte]，原始包长</p><ul><li>一个无符号值，表示数据包在网络上传输时的实际长度。如果数据包已被捕获过程截断，则它可能与捕获的数据包长度不同。</li></ul></li><li><p>[NByte]，Packet Data</p><ul><li>来自网络的数据，包括链路层标头。该字段的实际长度为 Captured Packet Length。链路层头部的格式取决于文件头中指定的 LinkType 字段。</li></ul></li></ol><h3 id="pcap-库" tabindex="-1"><a class="header-anchor" href="#pcap-库"><span>pcap 库</span></a></h3><p>libpcap 是用 C 语言编写的 pcap 库，在类 Unix 系统中透过 libpcap 库来实现 pcap。</p><p>在 Microsoft Windows 上则是透过 Npcap 库来实现，之前还可以透过 WinPcap 库来实现，但 WinPcap 库已不再维护。</p><p>我们自己设计的监控软件可以使用 libpcap 来捕获在计算机网络上传输的网络数据包。</p><p>更多 &gt;&gt; <a href="https://getiot.tech/awesome-c/libpcap.html" target="_blank" rel="noopener noreferrer">libpcap 使用教程</a></p><h3 id="相关链接" tabindex="-1"><a class="header-anchor" href="#相关链接"><span>相关链接</span></a></h3><ul><li><a href="http://www.tcpdump.org/" target="_blank" rel="noopener noreferrer">tcpdump 官方网站（基于 libpcap）</a></li><li><a href="https://www.wireshark.org" target="_blank" rel="noopener noreferrer">Wireshark 官方网站</a></li><li><a href="http://www.winpcap.org/" target="_blank" rel="noopener noreferrer">WinPcap 官方网站</a></li><li><a href="http://www.npcap.org/" target="_blank" rel="noopener noreferrer">Npcap 官方网站</a></li><li><a href="https://github.com/the-tcpdump-group/libpcap" target="_blank" rel="noopener noreferrer">libpcap 代码仓库</a></li></ul><h2 id="wireshark-pcap" tabindex="-1"><a class="header-anchor" href="#wireshark-pcap"><span>wireshark &amp; Pcap</span></a></h2><p>可以抓，也可以分析</p><h2 id="tcpdump-pcap" tabindex="-1"><a class="header-anchor" href="#tcpdump-pcap"><span>tcpdump &amp; Pcap</span></a></h2><p>Linux使用tcpdump快速抓Pcap也很简单</p><p>方法：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcpdump</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> output.pcap</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>常用选项：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcpdump</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> udp</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 只抓udp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,37)]))}const k=s(l,[["render",p],["__file","Pcap.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/Capture/%E6%8A%93%E5%8C%85%E6%A0%BC%E5%BC%8F/Pcap.html","title":"Pcap","lang":"zh-CN","frontmatter":{"Permission":"Reprint prohibited","description":"Pcap 参考：Pcap 数据包捕获格式详解 (禁止转载) 介绍 Pcap 是 Packet Capture 的英文缩写，是一种行业标准的网络数据包捕获格式。 如果你是网络开发人员，那么通常会使用 Wireshark、Tcpdump 或 WinDump 等网络分析器捕获 TCP/IP 数据包，而抓包后存盘的文件格式就是 .pcap 文件。 文件格式 一...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/Capture/%E6%8A%93%E5%8C%85%E6%A0%BC%E5%BC%8F/Pcap.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Pcap"}],["meta",{"property":"og:description","content":"Pcap 参考：Pcap 数据包捕获格式详解 (禁止转载) 介绍 Pcap 是 Packet Capture 的英文缩写，是一种行业标准的网络数据包捕获格式。 如果你是网络开发人员，那么通常会使用 Wireshark、Tcpdump 或 WinDump 等网络分析器捕获 TCP/IP 数据包，而抓包后存盘的文件格式就是 .pcap 文件。 文件格式 一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pcap\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":5.03,"words":1508},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/抓包格式/Pcap.md","excerpt":"\\n<p>参考：<a href=\\"https://blog.csdn.net/lu_embedded/article/details/124952413\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Pcap 数据包捕获格式详解</a> (禁止转载)</p>\\n<h2>介绍</h2>\\n<p><a href=\\"https://so.csdn.net/so/search?q=Pcap&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Pcap</a> 是 Packet Capture 的英文缩写，是一种行业标准的网络数据包捕获格式。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/抓包格式/Pcap.md","value":{"title":"Pcap","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/抓包格式/Pcap.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{k as comp,r as data};
