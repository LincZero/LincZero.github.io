import{_ as e,c as n,e as i,b as o,o as s,r as a}from"./app-CZqDObZ4.js";const r={};function d(h,t){const l=a("Mermaid");return s(),n("div",null,[t[0]||(t[0]=i('<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>Qt</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="控件类" tabindex="-1"><a class="header-anchor" href="#控件类"><span>控件类</span></a></h1><h2 id="qwidget继承树系列" tabindex="-1"><a class="header-anchor" href="#qwidget继承树系列"><span>QWidget继承树系列</span></a></h2><h3 id="继承树" tabindex="-1"><a class="header-anchor" href="#继承树"><span>继承树</span></a></h3>',5)),o(l,{id:"mermaid-15",code:"eJxLL0osyFAIceIKDM9MSU8tUdDVtVMIdEwqLilKTC5xKi0pyc/j4kQTgCgKKC3OgPB1dXWf9XQ+7esGki8nrbNOzkksLkZWoFCUmoLDFOeM1ORsuDFPl/S+bOh8trANZgaSNB5DghJTMvMRhvRORTUESRqPISH5+TkIM7Yvfdq6HdU/CAVgU7CGWHBBZp5TfgVEEMoBBc/UDU8b9rzYN/lp61KYcTCluM3KyUxJLYIaBWaDTNo98fnq/WgmQRRiGORWlJibCmH6JCal5oC0L2h/vnYfTCNYFKyPS1VV4em6WU92dj5bsP3pnn4usAqX1DSQrEJaZk6OlXKaZZoO0GX52alWysbGxlC2bnlmSkmGlUlBhTUXANl+5FI="}),t[1]||(t[1]=i(`<h2 id="buttons-按钮组" tabindex="-1"><a class="header-anchor" href="#buttons-按钮组"><span>Buttons，按钮组</span></a></h2><ul><li><strong>Push Button</strong>，按压式按钮</li><li><strong>Tool Button</strong>，工具按钮（主要用来显示图标） <ul><li>icon、text</li><li>toolButtonStyle属性：ToolButtonInconOnly、ToolButtonTextBesideIcon</li><li>autoRaise属性：凸起风格，勾选/不勾选</li></ul></li><li><strong>Radio Button</strong>，单选框 <ul><li>单选框和复选框要配合按钮组Group Box使用</li></ul></li><li><strong>Check Box</strong>，复选框 <ul><li>单选框和复选框要配合按钮组Group Box使用</li></ul></li><li><strong>Command Link Button</strong>，命令链接按钮</li><li><strong>Dialog Button Box</strong>，对话框按钮盒（OK和Cancel组合的按钮）</li></ul><h3 id="qpushbutton-按钮控件" tabindex="-1"><a class="header-anchor" href="#qpushbutton-按钮控件"><span>QPushButton 按钮控件</span></a></h3><ul><li>头文件 <ul><li><code>#include &lt;QPushButton&gt;</code></li></ul></li><li>继承 <ul><li>其中<code>QPushButton</code>的基类是<code>QAbstractButton</code>，基基类是<code>QWidget</code></li><li>即一般可使用QWidget的接口方法</li></ul></li><li>常用方法 <ul><li><code>setParent(this);</code>，设置父对象（一般是窗口类的this）</li><li><code>setText(&quot;xxx&quot;);</code>，设置按钮文本</li><li><code>move(x, y);</code>，设置坐标</li></ul></li><li><code>QWidget</code>基类的方法 <ul><li><code>resize(width, height);</code>，设置宽高</li></ul></li></ul><h3 id="qlabel-标题控件" tabindex="-1"><a class="header-anchor" href="#qlabel-标题控件"><span>QLabel 标题控件</span></a></h3><ul><li>头文件 <ul><li><code>#include &lt;QLabel&gt;</code></li></ul></li><li>使用 <ul><li>（基本同按钮）</li></ul></li><li>注意 <ul><li>在显示文本的某个字符前面添加一个前缀<code>&amp;</code>，就可以定义快捷键</li><li>比如<code>QLabel * ageLabel = new QLabel(&quot;&amp;Age&quot;,this);</code>，则ageLabel标签的组合键为<code>Alt+A</code></li></ul></li></ul><h2 id="input-widgets-输入控件" tabindex="-1"><a class="header-anchor" href="#input-widgets-输入控件"><span>Input Widgets，输入控件</span></a></h2><ul><li><strong>Combo Box</strong>，下拉框 <ul><li>使用 <ul><li>(1) 添加项目，<code>ui-&gt;comboBox-&gt;addItem(&quot;Item1&quot;);</code></li><li>(2) 设置默认值或值，<code>ui-&gt;comboBox-&gt;setCurrentIndex(1);</code></li></ul></li></ul></li><li><strong>Font Combo Box</strong>，字体下拉框</li><li><strong>Line Edit</strong>，单行输入框 <ul><li>echoMode属性值：Normal、NoEcho不显示、Password密码、PasswordEcho...输入时才可见</li></ul></li><li><strong>Text Edit</strong>，多行输入框（富文本编辑框）</li><li><strong>Plain Text Edit</strong>，多行输入框（纯文本编辑框）</li><li><strong>Spin Box</strong>，数值输入</li><li><strong>Double Spin Box</strong>，浮点数值输入</li><li><strong>Time Eidt</strong>，时间选择</li><li><strong>Data Eidt</strong>，日期选择</li><li><strong>Data/Time Edit</strong>，日期与时间选择</li><li><strong>Dial</strong>，？？？</li><li><strong>Horizontal Scroll Bar</strong>，水平滑动条</li><li><strong>Vertical Scroll Bar</strong>，垂直滑动条</li><li><strong>Horizontal Slider</strong>，水平滑动杆（可配合数值或浮点数值输入使用）</li><li><strong>Vertical Slider</strong>，垂直滑动杆（可配合数值或浮点数值输入使用）</li><li><strong>Key Sequence Edit</strong>，输入快捷键</li></ul><h3 id="qtextedit-文本编辑器" tabindex="-1"><a class="header-anchor" href="#qtextedit-文本编辑器"><span>QTextEdit 文本编辑器</span></a></h3><ul><li><p>头文件</p><ul><li><code>#include &lt;QTextEdit&gt;</code></li></ul></li><li><p>使用</p><ul><li><p>比如设置为核心</p><p><code>QTextEdit * edit = new QTextEdit(this);</code></p><p><code>setCentralWidget(edit);</code></p></li></ul></li></ul><h2 id="display-widgets-显示控件" tabindex="-1"><a class="header-anchor" href="#display-widgets-显示控件"><span>Display Widgets，显示控件</span></a></h2><ul><li><strong>Label</strong>，标签（能显示文字/图片） <ul><li>可以在字母前加<code>&amp;</code>快速指定快捷键</li><li>界面中显示<code>&amp;</code>可以通过编辑伙伴来解决</li></ul></li><li><strong>Text Browser</strong>，</li><li><strong>Graphics View</strong>，图形视图</li><li><strong>Calendar Widget</strong></li><li><strong>LCD Number</strong>，LCD数字显示</li><li><strong>Progress Bar</strong>，进度条</li><li><strong>Horizontal Line</strong>，水平分割线</li><li><strong>Vertival Line</strong>，垂直分割线</li><li><strong>OpenGL Widget</strong></li><li><strong>QQuickWidget</strong>，可以嵌入QML代码，为Qt开发者将桌面应用迁移到QtQuick提供方便</li></ul><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><h3 id="其他-1" tabindex="-1"><a class="header-anchor" href="#其他-1"><span>其他</span></a></h3><h4 id="qplaintextedit" tabindex="-1"><a class="header-anchor" href="#qplaintextedit"><span>QPlainTextEdit</span></a></h4><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QPlainTextEdit</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> te </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> QPlainTextEdit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">te</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPlaceholderText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Please enter your text here into this QPlainTextEdit...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 提示文本</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,16))])}const g=e(r,[["render",d],["__file","02. 控件类.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/01.%20Widget/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB.html","title":"Qt","lang":"zh-CN","frontmatter":{"description":"Qt 目录 控件类 QWidget继承树系列 继承树 Buttons，按钮组 Push Button，按压式按钮 Tool Button，工具按钮（主要用来显示图标） icon、text toolButtonStyle属性：ToolButtonInconOnly、ToolButtonTextBesideIcon autoRaise属性：凸起风格，勾选/...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/01.%20Widget/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Qt"}],["meta",{"property":"og:description","content":"Qt 目录 控件类 QWidget继承树系列 继承树 Buttons，按钮组 Push Button，按压式按钮 Tool Button，工具按钮（主要用来显示图标） icon、text toolButtonStyle属性：ToolButtonInconOnly、ToolButtonTextBesideIcon autoRaise属性：凸起风格，勾选/..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Qt","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"控件类","slug":"控件类","link":"#控件类","children":[{"level":2,"title":"QWidget继承树系列","slug":"qwidget继承树系列","link":"#qwidget继承树系列","children":[{"level":3,"title":"继承树","slug":"继承树","link":"#继承树","children":[]}]},{"level":2,"title":"Buttons，按钮组","slug":"buttons-按钮组","link":"#buttons-按钮组","children":[{"level":3,"title":"QPushButton 按钮控件","slug":"qpushbutton-按钮控件","link":"#qpushbutton-按钮控件","children":[]},{"level":3,"title":"QLabel 标题控件","slug":"qlabel-标题控件","link":"#qlabel-标题控件","children":[]}]},{"level":2,"title":"Input Widgets，输入控件","slug":"input-widgets-输入控件","link":"#input-widgets-输入控件","children":[{"level":3,"title":"QTextEdit 文本编辑器","slug":"qtextedit-文本编辑器","link":"#qtextedit-文本编辑器","children":[]}]},{"level":2,"title":"Display Widgets，显示控件","slug":"display-widgets-显示控件","link":"#display-widgets-显示控件","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"其他","slug":"其他-1","link":"#其他-1","children":[{"level":4,"title":"QPlainTextEdit","slug":"qplaintextedit","link":"#qplaintextedit","children":[]}]}]}]}],"git":{},"readingTime":{"minutes":2.4,"words":719},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/02. 控件类.md","excerpt":"\\n<h1>目录</h1>\\n<h1>控件类</h1>\\n<h2>QWidget继承树系列</h2>\\n<h3>继承树</h3>\\n<h2>Buttons，按钮组</h2>\\n<ul>\\n<li><strong>Push Button</strong>，按压式按钮</li>\\n<li><strong>Tool Button</strong>，工具按钮（主要用来显示图标）\\n<ul>\\n<li>icon、text</li>\\n<li>toolButtonStyle属性：ToolButtonInconOnly、ToolButtonTextBesideIcon</li>\\n<li>autoRaise属性：凸起风格，勾选/不勾选</li>\\n</ul>\\n</li>\\n<li><strong>Radio Button</strong>，单选框\\n<ul>\\n<li>单选框和复选框要配合按钮组Group Box使用</li>\\n</ul>\\n</li>\\n<li><strong>Check Box</strong>，复选框\\n<ul>\\n<li>单选框和复选框要配合按钮组Group Box使用</li>\\n</ul>\\n</li>\\n<li><strong>Command Link Button</strong>，命令链接按钮</li>\\n<li><strong>Dialog Button Box</strong>，对话框按钮盒（OK和Cancel组合的按钮）</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/02. 控件类.md","value":{"title":"02. 控件类","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/02. 控件类.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{g as comp,c as data};
