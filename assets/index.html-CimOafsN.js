import{_ as n,e as i,g as t,o}from"./app-BapqMaOt.js";const l={};function a(p,e){return o(),i("div",null,e[0]||(e[0]=[t('<h1 id="进程基础知识" tabindex="-1"><a class="header-anchor" href="#进程基础知识"><span>进程基础知识</span></a></h1><p>先强调一下，我们本篇讲的主要都是操作系统理论知识，偏大学计算机专业课上的那种，并不是讲解 Linux 或 Windows 操作系统的实现方式，所以大家要区别一下。</p><p>想让了解 Linux 或 Windows 操作系统的具体实现，得去看这些操作系统的实现原理或者源码书籍。</p><h2 id="总" tabindex="-1"><a class="header-anchor" href="#总"><span>总</span></a></h2><h3 id="概念类比" tabindex="-1"><a class="header-anchor" href="#概念类比"><span>概念类比</span></a></h3><p>我们写好的一行行代码，为了让其工作起来，我们还得把它送进城**（进程）**里，那既然进了城里，那肯定不能胡作非为了。</p><p>城里人有城里人的规矩，城中有个专门管辖你们的城管**（操作系统）**，人家让你休息就休息，让你工作就工作，毕竟摊位不多，每个人都要占这个摊位来工作，城里要工作的人多着去了。</p><p>所以城管为了公平起见，它使用一种策略**（调度）<strong>方式，给每个人一个固定的工作时间</strong>（时间片）**，时间到了就会通知你去休息而换另外一个人上场工作。</p><p>另外，在休息时候你也不能偷懒，要记住工作到哪了，不然下次到你工作了，你忘记工作到哪了，那还怎么继续？</p><p>有的人，可能还进入了县城**（线程）**工作，这里相对轻松一些，在休息的时候，要记住的东西相对较少，而且还能共享城里的资源。</p><h2 id="【比较】线程与进程的比较" tabindex="-1"><a class="header-anchor" href="#【比较】线程与进程的比较"><span>【比较】线程与进程的比较</span></a></h2><p>不管是时间效率，还是空间效率线程比进程都要高</p><h3 id="比较" tabindex="-1"><a class="header-anchor" href="#比较"><span>比较</span></a></h3><ul><li>核心 <ul><li>进程是 <strong>资源分配的单位</strong>（资源包括内存、打开的文件等）</li><li>线程是 <strong>CPU 调度的单位</strong></li></ul></li><li>资源 <ul><li>进程拥有一个<strong>完整的资源平台</strong>（独立的虚拟内存）</li><li>线程<strong>只独享必不可少的资源，如寄存器和栈</strong></li></ul></li><li>性能 <ul><li>线程能减少并发执行的时间和空间开销</li></ul></li><li>相同点 <ul><li>线程同样具有就绪、阻塞、执行三种基本状态，同样具有状态之间的转换关系；</li></ul></li></ul><h3 id="为什么线程比进程开销少-体现在" tabindex="-1"><a class="header-anchor" href="#为什么线程比进程开销少-体现在"><span>为什么线程比进程开销少（体现在）</span></a></h3><ul><li>资源少所以快 <ul><li>创建快： 线程的创建时间比进程快，因为进程在创建的过程中，还需要资源管理信息，比如内存管理信息、文件管理信息，而线程在创建的过程中，不会涉及这些资源管理信息，而是共享它们；</li><li>终止快： 线程的终止时间比进程快，因为线程释放的资源相比进程少很多；</li><li>切换快： 同一个进程内的线程切换比进程切换快，因为线程具有相同的地址空间（虚拟内存共享），这意味着同一个进程的线程都具有同一个页表，那么在切换的时候不需要切换页表。而对于进程之间的切换，切换的时候要把页表给切换掉，而页表的切换过程开销是比较大的；</li></ul></li><li>共享快： 由于同一进程的各线程间共享内存和文件资源，那么在线程之间数据传递的时候，就不需要经过内核了，这就使得线程之间的数据交互效率更高了；</li></ul>',16)]))}const E=n(l,[["render",a],["__file","index.html.vue"]]),s=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E7%BA%BF%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%89%88/%E3%80%8A%E5%B0%8F%E6%9E%97coding_%E5%9B%BE%E8%A7%A3%E7%B3%BB%E5%88%97%E3%80%8B/01.%20%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F/05.%20%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/01.%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","title":"进程基础知识","lang":"zh-CN","frontmatter":{"description":"进程基础知识 先强调一下，我们本篇讲的主要都是操作系统理论知识，偏大学计算机专业课上的那种，并不是讲解 Linux 或 Windows 操作系统的实现方式，所以大家要区别一下。 想让了解 Linux 或 Windows 操作系统的具体实现，得去看这些操作系统的实现原理或者源码书籍。 总 概念类比 我们写好的一行行代码，为了让其工作起来，我们还得把它送进...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E7%BA%BF%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%89%88/%E3%80%8A%E5%B0%8F%E6%9E%97coding_%E5%9B%BE%E8%A7%A3%E7%B3%BB%E5%88%97%E3%80%8B/01.%20%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F/05.%20%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/01.%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"进程基础知识"}],["meta",{"property":"og:description","content":"进程基础知识 先强调一下，我们本篇讲的主要都是操作系统理论知识，偏大学计算机专业课上的那种，并不是讲解 Linux 或 Windows 操作系统的实现方式，所以大家要区别一下。 想让了解 Linux 或 Windows 操作系统的具体实现，得去看这些操作系统的实现原理或者源码书籍。 总 概念类比 我们写好的一行行代码，为了让其工作起来，我们还得把它送进..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"进程基础知识\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.81,"words":844},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 线性学习版/《小林coding_图解系列》/01. 图解系统/05. 进程管理/01. 基础知识/README.md","excerpt":"\\n<p>先强调一下，我们本篇讲的主要都是操作系统理论知识，偏大学计算机专业课上的那种，并不是讲解 Linux 或 Windows 操作系统的实现方式，所以大家要区别一下。</p>\\n<p>想让了解 Linux 或 Windows 操作系统的具体实现，得去看这些操作系统的实现原理或者源码书籍。</p>\\n<h2>总</h2>\\n<h3>概念类比</h3>\\n<p>我们写好的一行行代码，为了让其工作起来，我们还得把它送进城**（进程）**里，那既然进了城里，那肯定不能胡作非为了。</p>\\n<p>城里人有城里人的规矩，城中有个专门管辖你们的城管**（操作系统）**，人家让你休息就休息，让你工作就工作，毕竟摊位不多，每个人都要占这个摊位来工作，城里要工作的人多着去了。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 线性学习版/《小林coding_图解系列》/01. 图解系统/05. 进程管理/01. 基础知识/README.md","value":{"title":"05. 进程管理/","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 线性学习版/《小林coding_图解系列》/01. 图解系统/05. 进程管理/01. 基础知识/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{E as comp,s as data};
