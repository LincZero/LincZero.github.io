import{_ as t,c as e,e as a,a as s,o as i}from"./app-DQC9V0Al.js";const n={};function p(m,l){return i(),e("div",null,l[0]||(l[0]=[a(`<h2 id="链表" tabindex="-1"><a class="header-anchor" href="#链表"><span>链表</span></a></h2><h3 id="单链表" tabindex="-1"><a class="header-anchor" href="#单链表"><span>单链表</span></a></h3><h3 id="双链表" tabindex="-1"><a class="header-anchor" href="#双链表"><span>双链表</span></a></h3><h3 id="换头问题" tabindex="-1"><a class="header-anchor" href="#换头问题"><span>换头问题</span></a></h3><ol><li>带返回值返回新地址</li><li>头节点刷新一遍内容</li><li>一个特殊的头部节点</li></ol><h3 id="题-链表题" tabindex="-1"><a class="header-anchor" href="#题-链表题"><span>题（链表题）</span></a></h3><h4 id="打印有序链表公共部分-双指针" tabindex="-1"><a class="header-anchor" href="#打印有序链表公共部分-双指针"><span>打印有序链表公共部分（双指针）</span></a></h4><ul><li>题 <ul><li>给定两个有序链表的头指针head1和head2，打印两个链表的公共部分 (要求如果两个链表的长度之和为N，时间复杂度要求为O(N)，额外空间复杂度要求为O(1))</li></ul></li><li>答案 <ul><li>非常非常基础，自己做。类似归并排序的过程，双指针就行</li></ul></li></ul><h4 id="单链表回文结构-快慢指针、改数据结构-单链表逆序" tabindex="-1"><a class="header-anchor" href="#单链表回文结构-快慢指针、改数据结构-单链表逆序"><span>单链表回文结构（快慢指针、改数据结构 - 单链表逆序!）</span></a></h4><ul><li>题 <ul><li>判断一个链表是否为回文结构</li><li>给定一个单链表的头节点head，请判断该链表是否为回文结构。 例子：1-&gt;2-&gt;1，返回true; 1-&gt;2-&gt;2-&gt;1，返回true; 15-&gt;6-&gt;15，返回true;1-&gt;2-&gt;3，返回false。 (如果链表长度为N，时间复杂度达到0(N)，额外空间复杂度达到O(1)</li></ul></li><li>答案 <ul><li>也很简单。栈可以实现，但空间复杂度O(N)。 <ul><li>优化：只压一般栈。那怎么实现只压一半的栈（在没有缓存大小的情况）</li><li>使用<strong>快慢指针</strong>，快指针一次两步，慢指针一次一步，当快到达终点后，慢指针就到达中间了</li></ul></li><li>但如果空间复杂度是O(1)，双链表直接双指针。但题目又要求单链表，想不出</li><li>答案：双指针往中间！慢指针将中间往后一半进行<strong>单链表的逆序</strong>！然后就形成了一个类似双链表的东西，就可以用双指针了，判断完将他恢复回去就行</li></ul></li></ul><h4 id="将单向链表按某值划分成左边小、中间相等、右边大的形式" tabindex="-1"><a class="header-anchor" href="#将单向链表按某值划分成左边小、中间相等、右边大的形式"><span>将单向链表按某值划分成左边小、中间相等、右边大的形式</span></a></h4><ul><li>题 <ul><li>给定一个单链表的头节点head，节点的值类型是整型，再给定一个整数pivot。 实现一个调整链表的函数，将链表调整为左部分都是值小于pivot的节点，中间部分都是值等于pivot的节点，右部分都是值大于pivot的节点。</li><li>也就是说单链表版的快速排序的第一部分</li></ul></li><li>一些要求 <ul><li>[要求] 调整后所有小于pivot的节点之间的相对顺序和调整前一样</li><li>[要求] 调整后所有等于pivot的节点之间的相对顺序和调整前</li><li>[要求] 调整后所有大于pivot的节点之间的相对顺序和调整前</li><li>[要求] 时间复杂度请达到O(N)，额外空间复杂度请达到O(1)</li></ul></li><li>答案 <ul><li>6个变量：SmallHeader、SmallTail、EqualHeader、EqualTail、BigHeader、BigTail</li><li>遍历链表：小于5的放左边两个，等于5的放中间两个，大于5的放右边两个，这三个部分内部互连</li><li>最后再连接这三个部分就完成了。SH -&gt; ... -&gt; ST -&gt; EH -&gt; ... -&gt; ET -&gt; BH -&gt; ... -&gt; BT</li><li>注意最好要考虑好边界，例如这三部分可能有一部分是没数据的</li></ul></li></ul><h4 id="复制含有随机指针节点的链表-链表改拓扑形成哈希表" tabindex="-1"><a class="header-anchor" href="#复制含有随机指针节点的链表-链表改拓扑形成哈希表"><span>复制含有随机指针节点的链表 (链表改拓扑形成哈希表)</span></a></h4><ul><li><p>题：</p><ul><li><p>一种特殊的单链表节点类描述如下</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> value;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	Node next;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	Node rand;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// rand指针是单链表节点结构中新增的指针，rand可能指向链表中的任意一个节点，也可能指向null</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">	Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		value </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> val;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>给定一个由Node节点类型组成的无环单链表的头节点head，请实现一个函数完成这个链表的复制，并返回复制的新链表的头节点</p></li><li><p>[要求] 时间复杂度O(N)，额外空间复杂度O(1)</p></li></ul></li><li><p>答案：</p><ul><li><p>如果用额外空间就很简单，用哈希表就行。准备一个哈希表，存储：key(老节点):value(新节点)，N个老节点就创建N个新节点并往UnorderHashMap里塞如N组Key-Value</p></li><li><p>不用额外空间的做法：</p><p>篡改原数组，进行全插入：Node1Old -&gt; Node1New -&gt; Node2Old -&gt; Node2New -&gt; …… 这个时候其实也相当于有一个天然的哈希表来映射 NodeOlds 和 NodeNews</p></li></ul></li></ul><h4 id="找链表环点-很难想到-快慢指针-双指针找入环点" tabindex="-1"><a class="header-anchor" href="#找链表环点-很难想到-快慢指针-双指针找入环点"><span>找链表环点 (很难想到，快慢指针+双指针找入环点)</span></a></h4><p>先来看怎么判断一个链表的环？</p>`,16),s("ul",null,[s("li",null,[s("p",null,"O(N)：可以用hash表。遍历时一直放节点地址到hashMap里，直到发现新的节点在hashMap里")]),s("li",null,[s("p",null,"O(1)：很妙"),s("ul",null,[s("li",null,[s("p",null,"先用快慢指针让两者相遇。例如环外5个位置，环内4的节点，快指针2步慢指针1步。最后快慢指针一定会在环内相遇！"),s("p",null,"（并且快慢指针运行的圈数不会大于2。最简单的证明和理解是：当快指针和慢指针都在环内时，快指针在追赶慢指针，且两者的距离每次减一）")]),s("li",null,[s("p",null,"然后再指针找入环节点。我们将快指针去掉并在链头放一个新指针指针，慢指针位置不变。然后两个指针每次移动一，最后会在入环节点处相遇 简单证明："),s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t"),s("mn",null,"1"),s("mo",null,"="),s("mtext",null,"第一次步数或距离，"),s("mi",null,"t"),s("mn",null,"2"),s("mo",null,"="),s("mtext",null,"第二次步数或距离，"),s("msub",null,[s("mi",null,"L"),s("mtext",null,"外")]),s("mo",null,"="),s("mtext",null,"环外长度，"),s("msub",null,[s("mi",null,"L"),s("mtext",null,"内")]),s("mo",null,"="),s("mtext",null,"环内长度，"),s("mi",null,"k"),s("mtext",null,"为任意圈"),s("mspace",{linebreak:"newline"}),s("mtext",null," "),s("mspace",{linebreak:"newline"}),s("mtext",null,"第一次步骤有："),s("mspace",{linebreak:"newline"}),s("mi",null,"t"),s("mn",null,"1"),s("mo",null,"="),s("msub",null,[s("mi",null,"L"),s("mtext",null,"外")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"k"),s("mn",null,"1")]),s("mo",null,"∗"),s("msub",null,[s("mi",null,"L"),s("mtext",null,"内")]),s("mspace",{linebreak:"newline"}),s("mn",null,"2"),s("mi",null,"t"),s("mn",null,"1"),s("mo",null,"="),s("msub",null,[s("mi",null,"L"),s("mtext",null,"外")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"k"),s("mn",null,"2")]),s("mo",null,"∗"),s("msub",null,[s("mi",null,"L"),s("mtext",null,"内")]),s("mspace",{linebreak:"newline"}),s("mi",null,"t"),s("mn",null,"1"),s("mo",null,"="),s("msub",null,[s("mi",null,"k"),s("mn",null,"3")]),s("mo",null,"∗"),s("mi",null,"L"),s("mtext",null,"内"),s("mspace",{linebreak:"newline"}),s("mtext",null," "),s("mspace",{linebreak:"newline"}),s("mtext",null,"第二次时，"),s("mi",null,"t"),s("mn",null,"2"),s("mo",null,"="),s("msub",null,[s("mi",null,"L"),s("mtext",null,"外")]),s("mspace",{linebreak:"newline"}),s("mtext",null,"有"),s("msub",null,[s("mi",null,"t"),s("mn",null,"2")]),s("mo",null,"="),s("msub",null,[s("mi",null,"t"),s("mrow",null,[s("mn",null,"1"),s("mo",null,"+"),s("mn",null,"2")])]),s("mo",null,"−"),s("msub",null,[s("mi",null,"k"),s("mn",null,"4")]),s("mo",null,"∗"),s("msub",null,[s("mi",null,"L"),s("mtext",null,"内")])]),s("annotation",{encoding:"application/x-tex"},"t1=第一次步数或距离，t2=第二次步数或距离，L_外=环外长度，L_内=环内长度，k为任意圈\\\\ ~\\\\ 第一次步骤有：\\\\ t1=L_外+k_1*L_内\\\\ 2t1=L_外+k_2*L_内\\\\ t1=k_3*L内\\\\ ~\\\\ 第二次时，t2=L_外\\\\ 有t_2 = t_{1+2}-k_4*L_内 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"第一次步数或距离，"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord cjk_fallback"},"第二次步数或距离，"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord cjk_fallback mtight"},"外")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord cjk_fallback"},"环外长度，"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord cjk_fallback mtight"},"内")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord cjk_fallback"},"环内长度，"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord cjk_fallback"},"为任意圈")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0em"}}),s("span",{class:"mspace nobreak"}," ")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"第一次步骤有：")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord cjk_fallback mtight"},"外")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8444em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0315em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord cjk_fallback mtight"},"内")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord cjk_fallback mtight"},"外")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8444em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0315em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord cjk_fallback mtight"},"内")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8444em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0315em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"L"),s("span",{class:"mord cjk_fallback"},"内")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0em"}}),s("span",{class:"mspace nobreak"}," ")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"第二次时，"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord cjk_fallback mtight"},"外")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord cjk_fallback"},"有"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8234em","vertical-align":"-0.2083em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8444em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0315em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord cjk_fallback mtight"},"内")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])])])])])],-1),a('<h4 id="两个单链表相交的一系列问题-情况很多" tabindex="-1"><a class="header-anchor" href="#两个单链表相交的一系列问题-情况很多"><span>两个单链表相交的一系列问题 (情况很多)</span></a></h4><p>“单链表算法层次上最难的题，没有之一。而且可以做到空间O(1)”</p><ul><li>题 <ul><li>给定两个可能有环也可能无环的单链表，头节点head1和head2。 请实现一个函数，如果两个链表相交，请返回相交的第一个节点。如果不相交，返回null</li><li>要求：如果两个链表长度之和为N，时间复杂度请达到<strong>O(N)</strong>，额外空间复杂度请达到<strong>O(1)</strong></li></ul></li><li>答案 <ul><li>这里分有环和无环的情况</li><li>均无环判断相交 <ul><li>由于单链表只指向一个地址，无环的化形状大概像“Y”型 (不可能是&quot;X&quot;型，链表只有一个next指针)。</li><li>判断end节点的地址是否相同，如是则相交。</li><li>找相交节点 <ul><li>我刚开始想的是：可以逆序链表然后往后遍历，逆序的过程中遇到冲突了，那就是相交的位置了</li><li>但其实更简单：第一次判断end节点时，已经都两条链表各自的长度L1和L2了，例如分别100和80，那么1走20步，然后两边同步指针一起走就行</li></ul></li></ul></li><li>一边有环判断相交 <ul><li>这种情况不可能出现。简单思想证明： 假如L1和L2无环相交，即&quot;Y&quot;型。此时如果L1有环则遍历的最后一个节点指回自身，相当于 &quot;Y&quot; 型的下面又链回自己，此时另一节点一定有环</li></ul></li><li>均有环判断相交 <ul><li>一共三种情况： <ul><li>情况一：两个链表不相交，各自为环</li><li>情况二：入环点是同一个，相当于&quot;Y&quot;下面的部分反过来接到三叉点的下部</li><li>情况三：入环点不是同一个，相当于&quot;Y&quot;下面的部分反过来接到三叉点的上部（左上或右上）。或可以想像成一个环的基础上两个不同位置上的点往外延伸，可能更形象点</li></ul></li><li>分别解决 <ul><li>情况二：最简单，各自找入环地址，如果发现相同就是情况二</li><li>情况一/三：都找到入环地址后，一个入环继续走，看他能不能遇到另一个入环地址。若能则是情况三，否则是情况一</li></ul></li></ul></li></ul></li></ul><h3 id="解题思维总结" tabindex="-1"><a class="header-anchor" href="#解题思维总结"><span><strong>解题思维总结</strong></span></a></h3><p>链表相关的题几乎都没有算法题，都是coding题</p><p>面试时链表解题的方法论</p><ol><li>对于笔试，不用太在乎空间复杂度，一切为了时间复杂度</li><li>对于面试，时间复杂度依然放在第一位，但是一定要找到空间最省的方法</li></ol><p>重要技巧:</p><ol><li>额外数据结构记录 (哈希表等)</li><li>快慢指针 (例如快指针2步慢指针一步，也是双指针的一种，快慢指针有时不同的定制)</li><li>空间限制O(1)时，经常需要篡改原来的数据结构的拓扑，如： <ul><li>链表的<strong>逆序</strong> (回文判断题)</li><li><strong>链表全插入</strong> (含随机节点的链表复制题)</li><li><strong>拓扑</strong>形成额外信息表 (含随机节点的链表复制题，既然不让创建哈希表，我就<strong>让链表本身形成类似哈希表的结构</strong>)</li></ul></li></ol>',9)]))}const r=t(n,[["render",p],["__file","13. 结构 - 链表.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Program_Algorithm/%E9%80%9A%E7%94%A8%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E6%95%99%E7%A8%8B%20-%20%E5%B7%A6%E7%A8%8B%E4%BA%91/01.%20%E5%9F%BA%E7%A1%80%E7%8F%AD/13.%20%E7%BB%93%E6%9E%84%20-%20%E9%93%BE%E8%A1%A8.html","title":"13. 结构 - 链表","lang":"zh-CN","frontmatter":{"description":"链表 单链表 双链表 换头问题 带返回值返回新地址 头节点刷新一遍内容 一个特殊的头部节点 题（链表题） 打印有序链表公共部分（双指针） 题 给定两个有序链表的头指针head1和head2，打印两个链表的公共部分 (要求如果两个链表的长度之和为N，时间复杂度要求为O(N)，额外空间复杂度要求为O(1)) 答案 非常非常基础，自己做。类似归并排序的过程，...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Program_Algorithm/%E9%80%9A%E7%94%A8%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E6%95%99%E7%A8%8B%20-%20%E5%B7%A6%E7%A8%8B%E4%BA%91/01.%20%E5%9F%BA%E7%A1%80%E7%8F%AD/13.%20%E7%BB%93%E6%9E%84%20-%20%E9%93%BE%E8%A1%A8.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:description","content":"链表 单链表 双链表 换头问题 带返回值返回新地址 头节点刷新一遍内容 一个特殊的头部节点 题（链表题） 打印有序链表公共部分（双指针） 题 给定两个有序链表的头指针head1和head2，打印两个链表的公共部分 (要求如果两个链表的长度之和为N，时间复杂度要求为O(N)，额外空间复杂度要求为O(1)) 答案 非常非常基础，自己做。类似归并排序的过程，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":2,"title":"链表","slug":"链表","link":"#链表","children":[{"level":3,"title":"单链表","slug":"单链表","link":"#单链表","children":[]},{"level":3,"title":"双链表","slug":"双链表","link":"#双链表","children":[]},{"level":3,"title":"换头问题","slug":"换头问题","link":"#换头问题","children":[]},{"level":3,"title":"题（链表题）","slug":"题-链表题","link":"#题-链表题","children":[{"level":4,"title":"打印有序链表公共部分（双指针）","slug":"打印有序链表公共部分-双指针","link":"#打印有序链表公共部分-双指针","children":[]},{"level":4,"title":"单链表回文结构（快慢指针、改数据结构 - 单链表逆序!）","slug":"单链表回文结构-快慢指针、改数据结构-单链表逆序","link":"#单链表回文结构-快慢指针、改数据结构-单链表逆序","children":[]},{"level":4,"title":"将单向链表按某值划分成左边小、中间相等、右边大的形式","slug":"将单向链表按某值划分成左边小、中间相等、右边大的形式","link":"#将单向链表按某值划分成左边小、中间相等、右边大的形式","children":[]},{"level":4,"title":"复制含有随机指针节点的链表 (链表改拓扑形成哈希表)","slug":"复制含有随机指针节点的链表-链表改拓扑形成哈希表","link":"#复制含有随机指针节点的链表-链表改拓扑形成哈希表","children":[]},{"level":4,"title":"找链表环点 (很难想到，快慢指针+双指针找入环点)","slug":"找链表环点-很难想到-快慢指针-双指针找入环点","link":"#找链表环点-很难想到-快慢指针-双指针找入环点","children":[]},{"level":4,"title":"两个单链表相交的一系列问题 (情况很多)","slug":"两个单链表相交的一系列问题-情况很多","link":"#两个单链表相交的一系列问题-情况很多","children":[]}]},{"level":3,"title":"解题思维总结","slug":"解题思维总结","link":"#解题思维总结","children":[]}]}],"git":{},"readingTime":{"minutes":7.26,"words":2179},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/通用算法/算法教程 - 左程云/01. 基础班/13. 结构 - 链表.md","excerpt":"<h2>链表</h2>\\n<h3>单链表</h3>\\n<h3>双链表</h3>\\n<h3>换头问题</h3>\\n<ol>\\n<li>带返回值返回新地址</li>\\n<li>头节点刷新一遍内容</li>\\n<li>一个特殊的头部节点</li>\\n</ol>\\n<h3>题（链表题）</h3>\\n<h4>打印有序链表公共部分（双指针）</h4>\\n<ul>\\n<li>题\\n<ul>\\n<li>给定两个有序链表的头指针head1和head2，打印两个链表的公共部分\\n(要求如果两个链表的长度之和为N，时间复杂度要求为O(N)，额外空间复杂度要求为O(1))</li>\\n</ul>\\n</li>\\n<li>答案\\n<ul>\\n<li>非常非常基础，自己做。类似归并排序的过程，双指针就行</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/通用算法/算法教程 - 左程云/01. 基础班/13. 结构 - 链表.md","value":{"title":"13. 结构 - 链表","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/通用算法/算法教程 - 左程云/01. 基础班/13. 结构 - 链表.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,h as data};
