import{_ as i,e as a,g as n,o as l}from"./app-DeGPQmv-.js";const t={};function e(h,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_06-编程语言-缺陷篇" tabindex="-1"><a class="header-anchor" href="#_06-编程语言-缺陷篇"><span>06. 编程语言 - 缺陷篇</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><p>[toc]</p><h1 id="_0-1-0-2-0-30000000000000004" tabindex="-1"><a class="header-anchor" href="#_0-1-0-2-0-30000000000000004"><span>0.1+0.2 = 0.30000000000000004</span></a></h1><p>参考：https://www.runoob.com/manual/pythontutorial3/docs/html/floatingpoint.html</p><ul><li><p>类似情况，相同原理的还有：</p><ul><li>运算结果为0.3时 <ul><li><code>3*0.1 = 0.30000000000000004 != 0.3</code></li></ul></li><li>浮点加减运算 <ul><li><code>50.25f + 11.17f = 61.419998</code></li><li><code>50.25f - 11.14f = 39.080002</code></li></ul></li></ul></li><li><p>普遍性</p><ul><li>所有语言都存在这种问题（亲测<code>python</code>、<code>javascript</code>存在）</li><li>但计算器一般不会这样（亲测<code>casio fx82</code>、<code>uTools计算稿纸</code> 、<code>微软计算器</code>、<code>安卓多多计算器</code>无该问题）</li></ul></li><li><p>原理（以双浮点为例，小数点后面有效数字16位）</p><ul><li>0.1 = 0.0001100110011001</li><li>0.2 = 0.0011001100110011</li><li>0.3 = 0.0100110011001100</li><li>0.1+0.2 = 0.0100110011001100 = 0.3</li><li>即：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.3</mn><mo>=</mo><mn>0.0100110011001100</mn><mo mathvariant="normal">≠</mo><mn>0.3</mn></mrow><annotation encoding="application/x-tex">0.3 = 0.0100110011001100\\neq 0.3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0.0100110011001100</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.3</span></span></span></span></li></ul></li><li><p>解决方案</p><ul><li><p>比如Python中，<a href="https://docs.python.org/3/library/stdtypes.html#float.as_integer_ratio" target="_blank" rel="noopener noreferrer">float.as_integer_ratio()</a> 方法以分数的形式表示一个浮点数的值：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.14159</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">as_integer_ratio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3537115888337719</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1125899906842624</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3537115888337719</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1125899906842624</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><a href="https://docs.python.org/3/library/stdtypes.html#float.hex" target="_blank" rel="noopener noreferrer">float.hex()</a> 方法以十六进制表示浮点数，给出的同样是计算机存储的精确值：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">hex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;0x1.921f9f01b866ep+1&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">fromhex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;0x1.921f9f01b866ep+1&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>另外一个有用的工具是 <a href="https://docs.python.org/3/library/math.html#math.fsum" target="_blank" rel="noopener noreferrer">math.fsum()</a> 函数，它帮助求和过程中减少精度的损失。当数值在不停地相加的时候，它会跟踪“丢弃的数字”。这可以给总体的准确度带来不同，以至于错误不会累积到影响最终结果的点：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> math.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">fsum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h1 id="手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘" tabindex="-1"><a class="header-anchor" href="#手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘"><span>手持两把锟斤拷 口中疾呼烫烫烫 脚踏千朵屯屯屯 笑看万物锘锘锘</span></a></h1><ul><li>C语言</li></ul>`,8)]))}const r=i(t,[["render",e],["__file","06. 编程语言 - 缺陷篇.html.vue"]]),k=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/01.%20ALL/06.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%20-%20%E7%BC%BA%E9%99%B7%E7%AF%87.html","title":"06. 编程语言 - 缺陷篇","lang":"zh-CN","frontmatter":{"description":"06. 编程语言 - 缺陷篇 目录 [toc] 0.1+0.2 = 0.30000000000000004 参考：https://www.runoob.com/manual/pythontutorial3/docs/html/floatingpoint.html 类似情况，相同原理的还有： 运算结果为0.3时 3*0.1 = 0.30000000000...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/01.%20ALL/06.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%20-%20%E7%BC%BA%E9%99%B7%E7%AF%87.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"06. 编程语言 - 缺陷篇"}],["meta",{"property":"og:description","content":"06. 编程语言 - 缺陷篇 目录 [toc] 0.1+0.2 = 0.30000000000000004 参考：https://www.runoob.com/manual/pythontutorial3/docs/html/floatingpoint.html 类似情况，相同原理的还有： 运算结果为0.3时 3*0.1 = 0.30000000000..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"06. 编程语言 - 缺陷篇\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.16,"words":347},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/06. 编程语言 - 缺陷篇.md","excerpt":"\\n<h1>目录</h1>\\n<p>[toc]</p>\\n<h1>0.1+0.2 = 0.30000000000000004</h1>\\n<p>参考：https://www.runoob.com/manual/pythontutorial3/docs/html/floatingpoint.html</p>\\n<ul>\\n<li>\\n<p>类似情况，相同原理的还有：</p>\\n<ul>\\n<li>运算结果为0.3时\\n<ul>\\n<li><code>3*0.1 = 0.30000000000000004 != 0.3</code></li>\\n</ul>\\n</li>\\n<li>浮点加减运算\\n<ul>\\n<li><code>50.25f + 11.17f = 61.419998</code></li>\\n<li><code>50.25f - 11.14f = 39.080002</code></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>普遍性</p>\\n<ul>\\n<li>所有语言都存在这种问题（亲测<code>python</code>、<code>javascript</code>存在）</li>\\n<li>但计算器一般不会这样（亲测<code>casio fx82</code>、<code>uTools计算稿纸</code> 、<code>微软计算器</code>、<code>安卓多多计算器</code>无该问题）</li>\\n</ul>\\n</li>\\n<li>\\n<p>原理（以双浮点为例，小数点后面有效数字16位）</p>\\n<ul>\\n<li>0.1 = 0.0001100110011001</li>\\n<li>0.2 = 0.0011001100110011</li>\\n<li>0.3 = 0.0100110011001100</li>\\n<li>0.1+0.2 = 0.0100110011001100 = 0.3</li>\\n<li>即：<span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mn>0.3</mn><mo>=</mo><mn>0.0100110011001100</mn><mo mathvariant=\\"normal\\">≠</mo><mn>0.3</mn></mrow><annotation encoding=\\"application/x-tex\\">0.3 = 0.0100110011001100\\\\neq 0.3</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6444em;\\"></span><span class=\\"mord\\">0.3</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">=</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8889em;vertical-align:-0.1944em;\\"></span><span class=\\"mord\\">0.0100110011001100</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\"><span class=\\"mrel\\"><span class=\\"mord vbox\\"><span class=\\"thinbox\\"><span class=\\"rlap\\"><span class=\\"strut\\" style=\\"height:0.8889em;vertical-align:-0.1944em;\\"></span><span class=\\"inner\\"><span class=\\"mord\\"><span class=\\"mrel\\"></span></span></span><span class=\\"fix\\"></span></span></span></span></span><span class=\\"mrel\\">=</span></span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6444em;\\"></span><span class=\\"mord\\">0.3</span></span></span></span></li>\\n</ul>\\n</li>\\n<li>\\n<p>解决方案</p>\\n<ul>\\n<li>\\n<p>比如Python中，<a href=\\"https://docs.python.org/3/library/stdtypes.html#float.as_integer_ratio\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">float.as_integer_ratio()</a> 方法以分数的形式表示一个浮点数的值：</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 3.14159</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">as_integer_ratio</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">3537115888337719</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1125899906842624</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">==</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 3537115888337719</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> /</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 1125899906842624</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">True</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><a href=\\"https://docs.python.org/3/library/stdtypes.html#float.hex\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">float.hex()</a> 方法以十六进制表示浮点数，给出的同样是计算机存储的精确值：</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">hex</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'0x1.921f9f01b866ep+1'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">==</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> float</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">fromhex</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'0x1.921f9f01b866ep+1'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">True</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>另外一个有用的工具是 <a href=\\"https://docs.python.org/3/library/math.html#math.fsum\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">math.fsum()</a> 函数，它帮助求和过程中减少精度的损失。当数值在不停地相加的时候，它会跟踪“丢弃的数字”。这可以给总体的准确度带来不同，以至于错误不会累积到影响最终结果的点：</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> sum</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">([</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0.1</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">] </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">*</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 10</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">==</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 1.0</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">False</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> math.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">fsum</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">([</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0.1</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">] </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">*</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 10</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">==</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 1.0</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">True</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/06. 编程语言 - 缺陷篇.md","value":{"title":"06. 编程语言 - 缺陷篇","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/06. 编程语言 - 缺陷篇.md","outlink":[],"backlink":[]}}],"links":[]}}}`);export{r as comp,k as data};
