import{_ as i,c as n,e as a,o as e}from"./app-Dnpl954R.js";const l="/assets/image-20211109170840304-Du1nQDXx.png",t="/assets/IMG_20211109_190351-Dy-yHUKw.jpg",d="/assets/image-20211109174136841-Dju-dZ3c.png",p={};function r(h,s){return e(),n("div",null,s[0]||(s[0]=[a(`<h1 id="computersystems" tabindex="-1"><a class="header-anchor" href="#computersystems"><span>ComputerSystems</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="运行起来" tabindex="-1"><a class="header-anchor" href="#运行起来"><span>运行起来</span></a></h1><h2 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作"><span>准备工作</span></a></h2><table><thead><tr><th>准备软件</th><th>作用</th><th>补充</th></tr></thead><tbody><tr><td>Windows系统</td><td>提供x86系统</td><td>学习暂用，以后可以用其他x86系统或其他指令集</td></tr><tr><td>VSCode</td><td>仅提供代码高亮</td><td></td></tr><tr><td>nasm</td><td>将汇编代码翻译成机器代码</td><td>开源软件，跨平台软件</td></tr><tr><td>VirtualBox</td><td>虚拟机软件</td><td></td></tr><tr><td>FixVhdw</td><td>读取、写入裸盘的小工具，硬盘U盘都可以</td><td>《x86汇编语言，从实模式到保护模式》的作者开发的</td></tr><tr><td>WinHex</td><td>读写Hex、直接读写磁盘</td><td>打开速度挺慢的，而且仅限试用45天，可以考虑换HxD软件</td></tr><tr><td>U盘</td><td>提供真机测试</td><td></td></tr></tbody></table><h2 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>编译</span></a></h2><h3 id="编译汇编程序-nasm" tabindex="-1"><a class="header-anchor" href="#编译汇编程序-nasm"><span>编译汇编程序 （nasm）</span></a></h3><h4 id="汇编程序编写-第一个x86汇编代码" tabindex="-1"><a class="header-anchor" href="#汇编程序编写-第一个x86汇编代码"><span>汇编程序编写（第一个x86汇编代码）</span></a></h4><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mov ax, 0b800h</span></span>
<span class="line"><span>mov ds, ax</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mov byte [0x00],&#39;H&#39;</span></span>
<span class="line"><span>mov byte [0x02],&#39;e&#39;</span></span>
<span class="line"><span>mov byte [0x04],&#39;l&#39;</span></span>
<span class="line"><span>mov byte [0x06],&#39;l&#39;</span></span>
<span class="line"><span>mov byte [0x08],&#39;o&#39;</span></span>
<span class="line"><span>mov byte [0x0a],&#39;,&#39;</span></span>
<span class="line"><span>mov byte [0x0c],&#39;W&#39;</span></span>
<span class="line"><span>mov byte [0x0e],&#39;o&#39;</span></span>
<span class="line"><span>mov byte [0x10],&#39;r&#39;</span></span>
<span class="line"><span>mov byte [0x12],&#39;l&#39;</span></span>
<span class="line"><span>mov byte [0x14],&#39;d&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jmp $</span></span>
<span class="line"><span></span></span>
<span class="line"><span>times 510-($-$$) db 0</span></span>
<span class="line"><span>db 0x55,0xaa</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="汇编程序编译" tabindex="-1"><a class="header-anchor" href="#汇编程序编译"><span>汇编程序编译</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nasm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start.asm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start.bin</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 若不加目标则默认生成的文件无.bin后缀</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -f：输入格式</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -o：输出文件名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nasm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start.asm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start.bin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start.lst</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 【技巧】</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -l：然后后面再加一个.lst扩展名的文件，可以生成一个包括汇编地址、代码以及机器码的文件。可以方便用来调试</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行起来-1" tabindex="-1"><a class="header-anchor" href="#运行起来-1"><span>运行起来</span></a></h2><h3 id="虚拟机跑汇编程序" tabindex="-1"><a class="header-anchor" href="#虚拟机跑汇编程序"><span>虚拟机跑汇编程序</span></a></h3><h4 id="虚拟机环境搭建" tabindex="-1"><a class="header-anchor" href="#虚拟机环境搭建"><span>虚拟机环境搭建</span></a></h4><p>这里用VirtualBox，因为上面的<code>FixVhdw</code>只能些Vhd格式的虚拟磁盘，而VMWare的虚拟磁盘格式选择中没有这个格式</p><ul><li>官网安装VMWare并打开，点击新建，新建参数如下 <ul><li>虚拟电脑名称和系统类型：名称随意，修改位置，类型Other - Dos，默认为Windows</li><li>内存大小：默认，默认为32MB</li><li>虚拟硬盘：默认，默认为现在创建</li><li>虚拟硬盘文件类型：VHD (虚拟硬盘)，默认为VDI (VirtualBox 磁盘映像)</li><li>存储在物理硬盘上：固定大小，默认为动态分配</li><li>文件位置和大小：大小16MB，默认为500MB</li></ul></li><li>点击启动则让你选择启动盘</li></ul><h4 id="将程序导入虚拟硬盘-fixvhdw程序" tabindex="-1"><a class="header-anchor" href="#将程序导入虚拟硬盘-fixvhdw程序"><span>将程序导入虚拟硬盘（FixVhdw程序）</span></a></h4><p>打开FixVhdw程序，右上角选择虚拟硬盘文件，找到虚拟机创建的vhd文件，提示信息如下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>虚拟硬盘： D:\\...\\Worksapce_VirtualBox\\AssemblyTest\\AssemblyTest\\AssemblyTest.vhd</span></span>
<span class="line"><span>VHD规范的原始创建者标识： conectix</span></span>
<span class="line"><span>创建此文件的程序：vbox</span></span>
<span class="line"><span>创建此文件的程序版本：06.01</span></span>
<span class="line"><span>该虚拟磁盘创建于 2021-11-08 13:31:44。</span></span>
<span class="line"><span>481个柱面；4个磁头；每磁道有17个扇区。</span></span>
<span class="line"><span>总容量为 16 MB（兆字节）。</span></span>
<span class="line"><span>该磁盘为固定磁盘（容量固定，文件大小不变）。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击 &quot;数据文件1&quot; 后面的 &quot;选择&quot; 按钮，找到编译好了的bin文件，注意后面的 &quot;起始LBA扇区号&quot; 必须要是0</p><p>点击 &quot;写入&quot;</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>开始执行写入过程，准备打开虚拟磁盘文件……</span></span>
<span class="line"><span>虚拟磁盘文件打开成功，准备打开数据文件……</span></span>
<span class="line"><span>准备工作完成，开始写入数据文件 D:\\...\\Assembly\\start.bin……</span></span>
<span class="line"><span>数据写入完成，本次共操作了1个扇区。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后重新打开VirtualBox中的系统</p><h3 id="真机跑汇编程序" tabindex="-1"><a class="header-anchor" href="#真机跑汇编程序"><span>真机跑汇编程序</span></a></h3><h4 id="写入程序到硬盘" tabindex="-1"><a class="header-anchor" href="#写入程序到硬盘"><span>写入程序到硬盘</span></a></h4><ul><li><p>打开U盘文件</p><p>打开WinHex &gt; 菜单 &gt; Tool 工具 &gt; OpenDisk 打开磁盘 &gt; 选择U盘 (注意要选择Physical Storage Drivers物理驱动器，而不要选Logical Volume/Partition逻辑驱动器，区别是看你有几块硬盘还是几个分区)</p></li><li><p>复制二进制代码</p><p>菜单 &gt; File文件 &gt; Open打开 &gt; 打开编译好了的start.bin文件 &gt; 点工具栏上的复制图标 (Copy All) 末尾也是<code>55AA</code></p><p><img src="`+l+'" alt="image-20211109170840304" loading="lazy"></p></li><li><p>黏贴二进制代码到U盘中</p><p>切换到U盘文件 &gt; 选择开头的第一个16进制 &gt; 点击工具栏上的写入剪切板图标 (Write Clipboard) &gt; 第一扇区部分的内容改变且变为蓝字 (WinHex中蓝字表示还未保存，HxD中红色表示还未保存) &gt; 保存 (可能会提示只有完全版才允许将扇区写入磁盘，指你的WinHex没付费，只是试用版)</p></li><li><p>重启选择U盘作为启动盘</p><p>成功</p><p><img src="'+t+'" alt="IMG_20211109_190351" loading="lazy"></p></li></ul><h4 id="注意项-不要破坏mbr分区的mbr结构" tabindex="-1"><a class="header-anchor" href="#注意项-不要破坏mbr分区的mbr结构"><span>注意项：不要破坏MBR分区的MBR结构</span></a></h4><p>即只能编辑前440个字节的内容，后面不能动</p><p>会出现两种问题</p><ul><li>一是U盘作为启动盘时会出bug <ul><li>比如汇编程序中输出：0123456789ABCEDabced</li><li>而实际中输出的却是012389ABCDEabced (这里_表示显示的是空格，实则是无法显示的乱码)</li></ul></li><li>二是U盘无法正常打开 <ul><li><img src="'+d+'" alt="image-20211109174136841" loading="lazy"></li></ul></li></ul>',30)]))}const o=i(p,[["render",r],["__file","02. 汇编编译与运行.html.vue"]]),m=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/02.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8C%87%E4%BB%A4/01.%20%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/02.%20%E6%B1%87%E7%BC%96%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C.html","title":"ComputerSystems","lang":"zh-CN","frontmatter":{"description":"ComputerSystems 目录 运行起来 准备工作 编译 编译汇编程序 （nasm） 汇编程序编写（第一个x86汇编代码） 汇编程序编译 运行起来 虚拟机跑汇编程序 虚拟机环境搭建 这里用VirtualBox，因为上面的FixVhdw只能些Vhd格式的虚拟磁盘，而VMWare的虚拟磁盘格式选择中没有这个格式 官网安装VMWare并打开，点击新建，...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/02.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8C%87%E4%BB%A4/01.%20%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/02.%20%E6%B1%87%E7%BC%96%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"ComputerSystems"}],["meta",{"property":"og:description","content":"ComputerSystems 目录 运行起来 准备工作 编译 编译汇编程序 （nasm） 汇编程序编写（第一个x86汇编代码） 汇编程序编译 运行起来 虚拟机跑汇编程序 虚拟机环境搭建 这里用VirtualBox，因为上面的FixVhdw只能些Vhd格式的虚拟磁盘，而VMWare的虚拟磁盘格式选择中没有这个格式 官网安装VMWare并打开，点击新建，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ComputerSystems\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"ComputerSystems","slug":"computersystems","link":"#computersystems","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"运行起来","slug":"运行起来","link":"#运行起来","children":[{"level":2,"title":"准备工作","slug":"准备工作","link":"#准备工作","children":[]},{"level":2,"title":"编译","slug":"编译","link":"#编译","children":[{"level":3,"title":"编译汇编程序 （nasm）","slug":"编译汇编程序-nasm","link":"#编译汇编程序-nasm","children":[{"level":4,"title":"汇编程序编写（第一个x86汇编代码）","slug":"汇编程序编写-第一个x86汇编代码","link":"#汇编程序编写-第一个x86汇编代码","children":[]},{"level":4,"title":"汇编程序编译","slug":"汇编程序编译","link":"#汇编程序编译","children":[]}]}]},{"level":2,"title":"运行起来","slug":"运行起来-1","link":"#运行起来-1","children":[{"level":3,"title":"虚拟机跑汇编程序","slug":"虚拟机跑汇编程序","link":"#虚拟机跑汇编程序","children":[{"level":4,"title":"虚拟机环境搭建","slug":"虚拟机环境搭建","link":"#虚拟机环境搭建","children":[]},{"level":4,"title":"将程序导入虚拟硬盘（FixVhdw程序）","slug":"将程序导入虚拟硬盘-fixvhdw程序","link":"#将程序导入虚拟硬盘-fixvhdw程序","children":[]}]},{"level":3,"title":"真机跑汇编程序","slug":"真机跑汇编程序","link":"#真机跑汇编程序","children":[{"level":4,"title":"写入程序到硬盘","slug":"写入程序到硬盘","link":"#写入程序到硬盘","children":[]},{"level":4,"title":"注意项：不要破坏MBR分区的MBR结构","slug":"注意项-不要破坏mbr分区的mbr结构","link":"#注意项-不要破坏mbr分区的mbr结构","children":[]}]}]}]}],"git":{},"readingTime":{"minutes":3.96,"words":1189},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/02. 计算机指令/01. 汇编基础/02. 汇编编译与运行.md","excerpt":"\\n<h1>目录</h1>\\n<h1>运行起来</h1>\\n<h2>准备工作</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>准备软件</th>\\n<th>作用</th>\\n<th>补充</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Windows系统</td>\\n<td>提供x86系统</td>\\n<td>学习暂用，以后可以用其他x86系统或其他指令集</td>\\n</tr>\\n<tr>\\n<td>VSCode</td>\\n<td>仅提供代码高亮</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>nasm</td>\\n<td>将汇编代码翻译成机器代码</td>\\n<td>开源软件，跨平台软件</td>\\n</tr>\\n<tr>\\n<td>VirtualBox</td>\\n<td>虚拟机软件</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>FixVhdw</td>\\n<td>读取、写入裸盘的小工具，硬盘U盘都可以</td>\\n<td>《x86汇编语言，从实模式到保护模式》的作者开发的</td>\\n</tr>\\n<tr>\\n<td>WinHex</td>\\n<td>读写Hex、直接读写磁盘</td>\\n<td>打开速度挺慢的，而且仅限试用45天，可以考虑换HxD软件</td>\\n</tr>\\n<tr>\\n<td>U盘</td>\\n<td>提供真机测试</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/02. 计算机指令/01. 汇编基础/02. 汇编编译与运行.md","value":{"title":"02. 汇编编译与运行","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/02. 计算机指令/01. 汇编基础/02. 汇编编译与运行.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{o as comp,m as data};
