import{_ as i,c as l,e as s,a as e,d as o,b as n,o as b,r as a}from"./app-BEhgkBlQ.js";const _={},c={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bpf-c",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-kprobes",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-kretprobes",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-tracepoints",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-uprobes",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-uretprobes",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-usdt-probes",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-raw-tracepoints",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-system-call-tracepoints",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-kfuncs",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-kretfuncs",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-lsm-probes",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf-iterators",target:"_blank",rel:"noopener noreferrer"},F={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_probe_read_kernel",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_probe_read_kernel_str",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-bpf_ktime_get_ns",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-bpf_get_current_pid_tgid",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_get_current_uid_gid",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-bpf_get_current_comm",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-bpf_get_current_task",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-bpf_log2l",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-bpf_get_prandom_u32",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-bpf_probe_read_user",target:"_blank",rel:"noopener noreferrer"},M={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-bpf_probe_read_user_str",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf_get_ns_current_pid_tgid",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_override_return",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_trace_printk",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_perf_output",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-perf_submit",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-perf_submit_skb",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_ringbuf_output",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-ringbuf_output",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-ringbuf_reserve",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-ringbuf_submit",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-ringbuf_discard",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_table",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_hash",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-bpf_array",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-bpf_histogram",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_stack_trace",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-bpf_perf_array",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-bpf_percpu_hash",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-bpf_percpu_array",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-bpf_lpm_trie",target:"_blank",rel:"noopener noreferrer"},re={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-bpf_prog_array",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-bpf_devmap",target:"_blank",rel:"noopener noreferrer"},te={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf_cpumap",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-bpf_xskmap",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#14-bpf_array_of_maps",target:"_blank",rel:"noopener noreferrer"},le={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#15-bpf_hash_of_maps",target:"_blank",rel:"noopener noreferrer"},se={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#16-bpf_stack",target:"_blank",rel:"noopener noreferrer"},be={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#17-bpf_queue",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#18-bpf_sockhash",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#19-maplookup",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#20-maplookup_or_try_init",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#21-mapdelete",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#22-mapupdate",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#23-mapinsert",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#24-mapincrement",target:"_blank",rel:"noopener noreferrer"},me={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#25-mapget_stackid",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#26-mapperf_read",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#27-mapcall",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#28-mapredirect_map",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#29-mappush",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#30-mappop",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#31-mappeek",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#32-mapsock_hash_update",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#33-mapmsg_redirect_hash",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#34-mapsk_redirect_hash",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#licensing",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#rewriter",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bcc-python",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-usdt",target:"_blank",rel:"noopener noreferrer"},De={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-attach_kprobe",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-attach_kretprobe",target:"_blank",rel:"noopener noreferrer"},He={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-attach_tracepoint",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-attach_uprobe",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-attach_uretprobe",target:"_blank",rel:"noopener noreferrer"},we={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-usdtenable_probe",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-attach_raw_tracepoint",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-attach_raw_socket",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-attach_xdp",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-attach_func",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-detach_func",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-detach_kprobe",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-detach_kretprobe",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-trace_print",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-trace_fields",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-perf_buffer_poll",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-ring_buffer_poll",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-ring_buffer_consume",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-get_table",target:"_blank",rel:"noopener noreferrer"},je={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-open_perf_buffer",target:"_blank",rel:"noopener noreferrer"},Je={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-items",target:"_blank",rel:"noopener noreferrer"},We={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-values",target:"_blank",rel:"noopener noreferrer"},$e={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-clear",target:"_blank",rel:"noopener noreferrer"},er={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-items_lookup_and_delete_batch",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-items_lookup_batch",target:"_blank",rel:"noopener noreferrer"},or={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-items_delete_batch",target:"_blank",rel:"noopener noreferrer"},tr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-items_update_batch",target:"_blank",rel:"noopener noreferrer"},nr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-print_log2_hist",target:"_blank",rel:"noopener noreferrer"},ir={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-print_linear_hist",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-open_ring_buffer",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-push",target:"_blank",rel:"noopener noreferrer"},br={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#14-pop",target:"_blank",rel:"noopener noreferrer"},ar={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#15-peek",target:"_blank",rel:"noopener noreferrer"},_r={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-ksym",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-ksymname",target:"_blank",rel:"noopener noreferrer"},pr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-sym",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-num_open_kprobes",target:"_blank",rel:"noopener noreferrer"},fr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-get_syscall_fnname",target:"_blank",rel:"noopener noreferrer"},ur={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bpf-errors",target:"_blank",rel:"noopener noreferrer"},mr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-invalid-mem-access",target:"_blank",rel:"noopener noreferrer"},gr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-cannot-call-gpl-only-function-from-proprietary-program",target:"_blank",rel:"noopener noreferrer"},hr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#Environment-Variables",target:"_blank",rel:"noopener noreferrer"},kr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-kernel-source-directory",target:"_blank",rel:"noopener noreferrer"},vr={href:"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-kernel-version-overriding",target:"_blank",rel:"noopener noreferrer"};function Pr(Br,r){const t=a("ExternalLinkIcon");return b(),l("div",null,[r[129]||(r[129]=s('<h1 id="bcc" tabindex="-1"><a class="header-anchor" href="#bcc"><span>BCC</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="用例教程-参考" tabindex="-1"><a class="header-anchor" href="#用例教程-参考"><span>用例教程 - 参考</span></a></h1><p><strong>用于搜索 (Ctrl-F) 和参考。对于教程，请从tutorial.md 开始</strong></p><p>本指南不完整。如果感觉缺少某些内容，请检查BCC和内核源代码。如果您确认我们遗漏了某些内容，请发送拉取请求来修复它，并帮助每个人。</p><h2 id="目录-1" tabindex="-1"><a class="header-anchor" href="#目录-1"><span>目录</span></a></h2>',6)),e("ul",null,[e("li",null,[e("a",c,[r[0]||(r[0]=o("BPF C 带通滤波器C")),n(t)]),e("ul",null,[e("li",null,[r[13]||(r[13]=o("Events & Arguments 事件与参数 ")),e("ul",null,[e("li",null,[e("a",p,[r[1]||(r[1]=o("1. kprobes 1. k探针")),n(t)])]),e("li",null,[e("a",d,[r[2]||(r[2]=o("2. kretprobes 2. kret探针")),n(t)])]),e("li",null,[e("a",f,[r[3]||(r[3]=o("3. Tracepoints 3. 跟踪点")),n(t)])]),e("li",null,[e("a",u,[r[4]||(r[4]=o("4. uprobes 4. 起身")),n(t)])]),e("li",null,[e("a",m,[r[5]||(r[5]=o("5. uretprobes 5. 输尿管探针")),n(t)])]),e("li",null,[e("a",g,[r[6]||(r[6]=o("6. USDT probes 6.USDT探针")),n(t)])]),e("li",null,[e("a",h,[r[7]||(r[7]=o("7. Raw Tracepoints 7. 原始跟踪点")),n(t)])]),e("li",null,[e("a",k,[r[8]||(r[8]=o("8. system call tracepoints \\8. 系统调用跟踪点")),n(t)])]),e("li",null,[e("a",v,[r[9]||(r[9]=o("9. kfuncs 9. kfuncs 函数")),n(t)])]),e("li",null,[e("a",P,[r[10]||(r[10]=o("10. kretfuncs 10. kretfuncs 函数")),n(t)])]),e("li",null,[e("a",B,[r[11]||(r[11]=o("11. lsm probes 11.LSM探针")),n(t)])]),e("li",null,[e("a",A,[r[12]||(r[12]=o("12. bpf iterators 12.bpf迭代器")),n(t)])])])]),e("li",null,[r[26]||(r[26]=o("Data 数据 ")),e("ul",null,[e("li",null,[e("a",F,[r[14]||(r[14]=o("1. bpf_probe_read_kernel() 1.bpf_probe_read_kernel()")),n(t)])]),e("li",null,[e("a",E,[r[15]||(r[15]=o("2. bpf_probe_read_kernel_str() 2.bpf_probe_read_kernel_str()")),n(t)])]),e("li",null,[e("a",R,[r[16]||(r[16]=o("3. bpf_ktime_get_ns() 3.bpf_ktime_get_ns()")),n(t)])]),e("li",null,[e("a",C,[r[17]||(r[17]=o("4. bpf_get_current_pid_tgid() 4.bpf_get_current_pid_tgid()")),n(t)])]),e("li",null,[e("a",y,[r[18]||(r[18]=o("5. bpf_get_current_uid_gid() 5.bpf_get_current_uid_gid()")),n(t)])]),e("li",null,[e("a",S,[r[19]||(r[19]=o("6. bpf_get_current_comm() \\6. bpf_get_current_comm()")),n(t)])]),e("li",null,[e("a",T,[r[20]||(r[20]=o("7. bpf_get_current_task() \\7. bpf_get_current_task()")),n(t)])]),e("li",null,[e("a",D,[r[21]||(r[21]=o("8. bpf_log2l() 8. bpf_log2l()")),n(t)])]),e("li",null,[e("a",U,[r[22]||(r[22]=o("9. bpf_get_prandom_u32() \\9. bpf_get_prandom_u32()")),n(t)])]),e("li",null,[e("a",H,[r[23]||(r[23]=o("10. bpf_probe_read_user() 10.bpf_probe_read_user()")),n(t)])]),e("li",null,[e("a",M,[r[24]||(r[24]=o("11. bpf_probe_read_user_str() 11.bpf_probe_read_user_str()")),n(t)])]),e("li",null,[e("a",O,[r[25]||(r[25]=o("12. bpf_get_ns_current_pid_tgid() 12.bpf_get_ns_current_pid_tgid()")),n(t)])])])]),e("li",null,[r[28]||(r[28]=o("Debugging 调试 ")),e("ul",null,[e("li",null,[e("a",w,[r[27]||(r[27]=o("1. bpf_override_return() 1.bpf_override_return()")),n(t)])])])]),e("li",null,[r[38]||(r[38]=o("Output 输出 ")),e("ul",null,[e("li",null,[e("a",I,[r[29]||(r[29]=o("1. bpf_trace_printk() 1.bpf_trace_printk()")),n(t)])]),e("li",null,[e("a",L,[r[30]||(r[30]=o("2. BPF_PERF_OUTPUT 2.BPF_PERF_输出")),n(t)])]),e("li",null,[e("a",x,[r[31]||(r[31]=o("3. perf_submit() 3. perf_submit()")),n(t)])]),e("li",null,[e("a",Y,[r[32]||(r[32]=o("4. perf_submit_skb() 4. perf_submit_skb()")),n(t)])]),e("li",null,[e("a",N,[r[33]||(r[33]=o("5. BPF_RINGBUF_OUTPUT 5.BPF_RINGBUF_输出")),n(t)])]),e("li",null,[e("a",G,[r[34]||(r[34]=o("6. ringbuf_output() 6.ringbuf_output()")),n(t)])]),e("li",null,[e("a",K,[r[35]||(r[35]=o("7. ringbuf_reserve() 7.ringbuf_reserve()")),n(t)])]),e("li",null,[e("a",V,[r[36]||(r[36]=o("8. ringbuf_submit() 8.ringbuf_submit()")),n(t)])]),e("li",null,[e("a",z,[r[37]||(r[37]=o("9. ringbuf_discard() 9.ringbuf_discard()")),n(t)])])])]),e("li",null,[r[73]||(r[73]=o("Maps 地图 ")),e("ul",null,[e("li",null,[e("a",X,[r[39]||(r[39]=o("1. BPF_TABLE 1. BPF_表")),n(t)])]),e("li",null,[e("a",Z,[r[40]||(r[40]=o("2. BPF_HASH 2.BPF_HASH")),n(t)])]),e("li",null,[e("a",q,[r[41]||(r[41]=o("3. BPF_ARRAY 3. BPF_ARRAY")),n(t)])]),e("li",null,[e("a",Q,[r[42]||(r[42]=o("4. BPF_HISTOGRAM 4.BPF_直方图")),n(t)])]),e("li",null,[e("a",j,[r[43]||(r[43]=o("5. BPF_STACK_TRACE 5. BPF_STACK_TRACE")),n(t)])]),e("li",null,[e("a",J,[r[44]||(r[44]=o("6. BPF_PERF_ARRAY 6. BPF_PERF_ARRAY")),n(t)])]),e("li",null,[e("a",W,[r[45]||(r[45]=o("7. BPF_PERCPU_HASH 7. BPF_PERCPU_HASH")),n(t)])]),e("li",null,[e("a",$,[r[46]||(r[46]=o("8. BPF_PERCPU_ARRAY 8. BPF_PERCPU_ARRAY")),n(t)])]),e("li",null,[e("a",ee,[r[47]||(r[47]=o("9. BPF_LPM_TRIE 9. BPF_LPM_TRIE")),n(t)])]),e("li",null,[e("a",re,[r[48]||(r[48]=o("10. BPF_PROG_ARRAY 10. BPF_PROG_ARRAY")),n(t)])]),e("li",null,[e("a",oe,[r[49]||(r[49]=o("11. BPF_DEVMAP 11. BPF_DEVMAP")),n(t)])]),e("li",null,[e("a",te,[r[50]||(r[50]=o("12. BPF_CPUMAP 12. BPF_CPUMAP")),n(t)])]),e("li",null,[e("a",ne,[r[51]||(r[51]=o("13. BPF_XSKMAP 13.BPF_XSKMAP")),n(t)])]),e("li",null,[e("a",ie,[r[52]||(r[52]=o("14. BPF_ARRAY_OF_MAPS 14. BPF_ARRAY_OF_MAPS")),n(t)])]),e("li",null,[e("a",le,[r[53]||(r[53]=o("15. BPF_HASH_OF_MAPS 15. BPF_HASH_OF_MAPS")),n(t)])]),e("li",null,[e("a",se,[r[54]||(r[54]=o("16. BPF_STACK 16. BPF_堆栈")),n(t)])]),e("li",null,[e("a",be,[r[55]||(r[55]=o("17. BPF_QUEUE 17. BPF_队列")),n(t)])]),e("li",null,[e("a",ae,[r[56]||(r[56]=o("18. BPF_SOCKHASH 18. BPF_SOCKHASH")),n(t)])]),e("li",null,[e("a",_e,[r[57]||(r[57]=o("19. map.lookup() 19. 映射.lookup()")),n(t)])]),e("li",null,[e("a",ce,[r[58]||(r[58]=o("20. map.lookup_or_try_init() 20.map.lookup_or_try_init()")),n(t)])]),e("li",null,[e("a",pe,[r[59]||(r[59]=o("21. map.delete() 21. 地图.删除()")),n(t)])]),e("li",null,[e("a",de,[r[60]||(r[60]=o("22. map.update() 22. 地图更新()")),n(t)])]),e("li",null,[e("a",fe,[r[61]||(r[61]=o("23. map.insert() 23. 映射.insert()")),n(t)])]),e("li",null,[e("a",ue,[r[62]||(r[62]=o("24. map.increment() 24. 映射.increment()")),n(t)])]),e("li",null,[e("a",me,[r[63]||(r[63]=o("25. map.get_stackid() 25.map.get_stackid()")),n(t)])]),e("li",null,[e("a",ge,[r[64]||(r[64]=o("26. map.perf_read() 26. 映射.perf_read()")),n(t)])]),e("li",null,[e("a",he,[r[65]||(r[65]=o("27. map.call() 27. 映射.call()")),n(t)])]),e("li",null,[e("a",ke,[r[66]||(r[66]=o("28. map.redirect_map() 28. 映射.redirect_map()")),n(t)])]),e("li",null,[e("a",ve,[r[67]||(r[67]=o("29. map.push() 29. 地图.push()")),n(t)])]),e("li",null,[e("a",Pe,[r[68]||(r[68]=o("30. map.pop() 30. 地图.pop()")),n(t)])]),e("li",null,[e("a",Be,[r[69]||(r[69]=o("31. map.peek() 31. 地图.peek()")),n(t)])]),e("li",null,[e("a",Ae,[r[70]||(r[70]=o("32. map.sock_hash_update() 32.map.sock_hash_update()")),n(t)])]),e("li",null,[e("a",Fe,[r[71]||(r[71]=o("33. map.msg_redirect_hash() 33.map.msg_redirect_hash()")),n(t)])]),e("li",null,[e("a",Ee,[r[72]||(r[72]=o("34. map.sk_redirect_hash() 34.map.sk_redirect_hash()")),n(t)])])])]),e("li",null,[e("a",Re,[r[74]||(r[74]=o("Licensing 许可")),n(t)])]),e("li",null,[e("a",Ce,[r[75]||(r[75]=o("Rewriter 重写器")),n(t)])])])]),e("li",null,[e("a",ye,[r[76]||(r[76]=o("bcc Python 密件抄送 Python")),n(t)]),e("ul",null,[e("li",null,[r[79]||(r[79]=o("Initialization 初始化 ")),e("ul",null,[e("li",null,[e("a",Se,[r[77]||(r[77]=o("1. BPF 1.带通滤波器")),n(t)])]),e("li",null,[e("a",Te,[r[78]||(r[78]=o("2. USDT 2、泰达币")),n(t)])])])]),e("li",null,[r[93]||(r[93]=o("Events 活动 ")),e("ul",null,[e("li",null,[e("a",De,[r[80]||(r[80]=o("1. attach_kprobe() 1.attach_kprobe()")),n(t)])]),e("li",null,[e("a",Ue,[r[81]||(r[81]=o("2. attach_kretprobe() 2.attach_kretprobe()")),n(t)])]),e("li",null,[e("a",He,[r[82]||(r[82]=o("3. attach_tracepoint() 3.attach_tracepoint()")),n(t)])]),e("li",null,[e("a",Me,[r[83]||(r[83]=o("4. attach_uprobe() 4.attach_uprobe()")),n(t)])]),e("li",null,[e("a",Oe,[r[84]||(r[84]=o("5. attach_uretprobe() 5.attach_uretprobe()")),n(t)])]),e("li",null,[e("a",we,[r[85]||(r[85]=o("6. USDT.enable_probe() 6. USDT.enable_probe()")),n(t)])]),e("li",null,[e("a",Ie,[r[86]||(r[86]=o("7. attach_raw_tracepoint() 7.attach_raw_tracepoint()")),n(t)])]),e("li",null,[e("a",Le,[r[87]||(r[87]=o("8. attach_raw_socket() 8.attach_raw_socket()")),n(t)])]),e("li",null,[e("a",xe,[r[88]||(r[88]=o("9. attach_xdp() 9.attach_xdp()")),n(t)])]),e("li",null,[e("a",Ye,[r[89]||(r[89]=o("10. attach_func() 10. 附加函数（）")),n(t)])]),e("li",null,[e("a",Ne,[r[90]||(r[90]=o("11. detach_func() 11. detach_func()")),n(t)])]),e("li",null,[e("a",Ge,[r[91]||(r[91]=o("12. detach_kprobe() 12. detach_kprobe()")),n(t)])]),e("li",null,[e("a",Ke,[r[92]||(r[92]=o("13. detach_kretprobe() 13. detach_kretprobe()")),n(t)])])])]),e("li",null,[r[96]||(r[96]=o("Debug Output 调试输出 ")),e("ul",null,[e("li",null,[e("a",Ve,[r[94]||(r[94]=o("1. trace_print() 1.trace_print()")),n(t)])]),e("li",null,[e("a",ze,[r[95]||(r[95]=o("2. trace_fields() 2.trace_fields()")),n(t)])])])]),e("li",null,[r[100]||(r[100]=o("Output APIs 输出API ")),e("ul",null,[e("li",null,[e("a",Xe,[r[97]||(r[97]=o("1. perf_buffer_poll() 1. perf_buffer_poll()")),n(t)])]),e("li",null,[e("a",Ze,[r[98]||(r[98]=o("2. ring_buffer_poll() 2.ring_buffer_poll()")),n(t)])]),e("li",null,[e("a",qe,[r[99]||(r[99]=o("3. ring_buffer_consume() 3.ring_buffer_consume()")),n(t)])])])]),e("li",null,[r[116]||(r[116]=o("Map APIs 地图API ")),e("ul",null,[e("li",null,[e("a",Qe,[r[101]||(r[101]=o("1. get_table() 1. 获取表()")),n(t)])]),e("li",null,[e("a",je,[r[102]||(r[102]=o("2. open_perf_buffer() 2. open_perf_buffer()")),n(t)])]),e("li",null,[e("a",Je,[r[103]||(r[103]=o("3. items() 3. 项目（）")),n(t)])]),e("li",null,[e("a",We,[r[104]||(r[104]=o("4. values() 4. 值()")),n(t)])]),e("li",null,[e("a",$e,[r[105]||(r[105]=o("5. clear() 5. 清除()")),n(t)])]),e("li",null,[e("a",er,[r[106]||(r[106]=o("6. items_lookup_and_delete_batch() \\6. items_lookup_and_delete_batch()")),n(t)])]),e("li",null,[e("a",rr,[r[107]||(r[107]=o("7. items_lookup_batch() 7. items_lookup_batch()")),n(t)])]),e("li",null,[e("a",or,[r[108]||(r[108]=o("8. items_delete_batch() 8. items_delete_batch()")),n(t)])]),e("li",null,[e("a",tr,[r[109]||(r[109]=o("9. items_update_batch() 9. items_update_batch()")),n(t)])]),e("li",null,[e("a",nr,[r[110]||(r[110]=o("10. print_log2_hist() 10. print_log2_hist()")),n(t)])]),e("li",null,[e("a",ir,[r[111]||(r[111]=o("11. print_linear_hist() 11. 打印_线性_hist()")),n(t)])]),e("li",null,[e("a",lr,[r[112]||(r[112]=o("12. open_ring_buffer() 12. open_ring_buffer()")),n(t)])]),e("li",null,[e("a",sr,[r[113]||(r[113]=o("13. push() 13. 推()")),n(t)])]),e("li",null,[e("a",br,[r[114]||(r[114]=o("14. pop() 14. 弹出（）")),n(t)])]),e("li",null,[e("a",ar,[r[115]||(r[115]=o("15. peek() 15. 窥视（）")),n(t)])])])]),e("li",null,[r[122]||(r[122]=o("Helpers 帮手 ")),e("ul",null,[e("li",null,[e("a",_r,[r[117]||(r[117]=o("1. ksym() 1. ksym()")),n(t)])]),e("li",null,[e("a",cr,[r[118]||(r[118]=o("2. ksymname() 2. ksymname()")),n(t)])]),e("li",null,[e("a",pr,[r[119]||(r[119]=o("3. sym() 3. 符号（）")),n(t)])]),e("li",null,[e("a",dr,[r[120]||(r[120]=o("4. num_open_kprobes() 4. num_open_kprobes()")),n(t)])]),e("li",null,[e("a",fr,[r[121]||(r[121]=o("5. get_syscall_fnname() 5. get_syscall_fnname()")),n(t)])])])])])]),e("li",null,[e("a",ur,[r[123]||(r[123]=o("BPF Errors BPF 错误")),n(t)]),e("ul",null,[e("li",null,[e("a",mr,[r[124]||(r[124]=o("1. Invalid mem access \\1. 无效的内存访问")),n(t)])]),e("li",null,[e("a",gr,[r[125]||(r[125]=o("2. Cannot call GPL only function from proprietary program \\2. 无法从专有程序调用仅限GPL的函数")),n(t)])])])]),e("li",null,[e("a",hr,[r[126]||(r[126]=o("Environment Variables 环境变量")),n(t)]),e("ul",null,[e("li",null,[e("a",kr,[r[127]||(r[127]=o("1. kernel source directory 1.内核源码目录")),n(t)])]),e("li",null,[e("a",vr,[r[128]||(r[128]=o("2. kernel version overriding \\2. 内核版本覆盖")),n(t)])])])])])])}const Fr=i(_,[["render",Pr],["__file","04. 函数一览.html.vue"]]),Er=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/BCC%20(eBPF)/04.%20%E5%87%BD%E6%95%B0%E4%B8%80%E8%A7%88.html","title":"BCC","lang":"zh-CN","frontmatter":{"description":"BCC 目录 用例教程 - 参考 用于搜索 (Ctrl-F) 和参考。对于教程，请从tutorial.md 开始 本指南不完整。如果感觉缺少某些内容，请检查BCC和内核源代码。如果您确认我们遗漏了某些内容，请发送拉取请求来修复它，并帮助每个人。 目录 BPF C 带通滤波器C Events & Arguments 事件与参数 1. kprobes 1....","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/BCC%20(eBPF)/04.%20%E5%87%BD%E6%95%B0%E4%B8%80%E8%A7%88.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"BCC"}],["meta",{"property":"og:description","content":"BCC 目录 用例教程 - 参考 用于搜索 (Ctrl-F) 和参考。对于教程，请从tutorial.md 开始 本指南不完整。如果感觉缺少某些内容，请检查BCC和内核源代码。如果您确认我们遗漏了某些内容，请发送拉取请求来修复它，并帮助每个人。 目录 BPF C 带通滤波器C Events & Arguments 事件与参数 1. kprobes 1...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BCC\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"BCC","slug":"bcc","link":"#bcc","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"用例教程 - 参考","slug":"用例教程-参考","link":"#用例教程-参考","children":[{"level":2,"title":"目录","slug":"目录-1","link":"#目录-1","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4,"words":1201},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/BCC (eBPF)/04. 函数一览.md","excerpt":"\\n<h1>目录</h1>\\n<h1>用例教程 - 参考</h1>\\n<p><strong>用于搜索 (Ctrl-F) 和参考。对于教程，请从tutorial.md 开始</strong></p>\\n<p>本指南不完整。如果感觉缺少某些内容，请检查BCC和内核源代码。如果您确认我们遗漏了某些内容，请发送拉取请求来修复它，并帮助每个人。</p>\\n<h2>目录</h2>\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bpf-c\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">BPF C 带通滤波器C</a>\\n<ul>\\n<li>Events &amp; Arguments\\n事件与参数\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-kprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. kprobes 1. k探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-kretprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. kretprobes 2. kret探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-tracepoints\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. Tracepoints 3. 跟踪点</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-uprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. uprobes 4. 起身</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-uretprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. uretprobes 5. 输尿管探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-usdt-probes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. USDT probes 6.USDT探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-raw-tracepoints\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. Raw Tracepoints 7. 原始跟踪点</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-system-call-tracepoints\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. system call tracepoints\\n\\\\8. 系统调用跟踪点</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-kfuncs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. kfuncs 9. kfuncs 函数</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-kretfuncs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. kretfuncs 10. kretfuncs 函数</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-lsm-probes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. lsm probes 11.LSM探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf-iterators\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. bpf iterators 12.bpf迭代器</a></li>\\n</ul>\\n</li>\\n<li>Data 数据\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_probe_read_kernel\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. bpf_probe_read_kernel()\\n1.bpf_probe_read_kernel()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_probe_read_kernel_str\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. bpf_probe_read_kernel_str()\\n2.bpf_probe_read_kernel_str()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-bpf_ktime_get_ns\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. bpf_ktime_get_ns() 3.bpf_ktime_get_ns()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-bpf_get_current_pid_tgid\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. bpf_get_current_pid_tgid()\\n4.bpf_get_current_pid_tgid()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_get_current_uid_gid\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. bpf_get_current_uid_gid()\\n5.bpf_get_current_uid_gid()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-bpf_get_current_comm\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. bpf_get_current_comm()\\n\\\\6. bpf_get_current_comm()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-bpf_get_current_task\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. bpf_get_current_task()\\n\\\\7. bpf_get_current_task()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-bpf_log2l\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. bpf_log2l() 8. bpf_log2l()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-bpf_get_prandom_u32\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. bpf_get_prandom_u32()\\n\\\\9. bpf_get_prandom_u32()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-bpf_probe_read_user\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. bpf_probe_read_user()\\n10.bpf_probe_read_user()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-bpf_probe_read_user_str\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. bpf_probe_read_user_str()\\n11.bpf_probe_read_user_str()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf_get_ns_current_pid_tgid\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. bpf_get_ns_current_pid_tgid()\\n12.bpf_get_ns_current_pid_tgid()</a></li>\\n</ul>\\n</li>\\n<li>Debugging 调试\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_override_return\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. bpf_override_return()\\n1.bpf_override_return()</a></li>\\n</ul>\\n</li>\\n<li>Output 输出\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_trace_printk\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. bpf_trace_printk() 1.bpf_trace_printk()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_perf_output\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. BPF_PERF_OUTPUT 2.BPF_PERF_输出</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-perf_submit\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. perf_submit() 3. perf_submit()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-perf_submit_skb\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. perf_submit_skb() 4. perf_submit_skb()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_ringbuf_output\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. BPF_RINGBUF_OUTPUT 5.BPF_RINGBUF_输出</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-ringbuf_output\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. ringbuf_output() 6.ringbuf_output()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-ringbuf_reserve\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. ringbuf_reserve() 7.ringbuf_reserve()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-ringbuf_submit\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. ringbuf_submit() 8.ringbuf_submit()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-ringbuf_discard\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. ringbuf_discard() 9.ringbuf_discard()</a></li>\\n</ul>\\n</li>\\n<li>Maps 地图\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_table\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. BPF_TABLE 1. BPF_表</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_hash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. BPF_HASH 2.BPF_HASH</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-bpf_array\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. BPF_ARRAY 3. BPF_ARRAY</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-bpf_histogram\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. BPF_HISTOGRAM 4.BPF_直方图</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_stack_trace\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. BPF_STACK_TRACE 5. BPF_STACK_TRACE</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-bpf_perf_array\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. BPF_PERF_ARRAY 6. BPF_PERF_ARRAY</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-bpf_percpu_hash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. BPF_PERCPU_HASH 7. BPF_PERCPU_HASH</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-bpf_percpu_array\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. BPF_PERCPU_ARRAY 8. BPF_PERCPU_ARRAY</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-bpf_lpm_trie\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. BPF_LPM_TRIE 9. BPF_LPM_TRIE</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-bpf_prog_array\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. BPF_PROG_ARRAY 10. BPF_PROG_ARRAY</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-bpf_devmap\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. BPF_DEVMAP 11. BPF_DEVMAP</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf_cpumap\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. BPF_CPUMAP 12. BPF_CPUMAP</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-bpf_xskmap\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">13. BPF_XSKMAP 13.BPF_XSKMAP</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#14-bpf_array_of_maps\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14. BPF_ARRAY_OF_MAPS 14. BPF_ARRAY_OF_MAPS</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#15-bpf_hash_of_maps\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">15. BPF_HASH_OF_MAPS 15. BPF_HASH_OF_MAPS</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#16-bpf_stack\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">16. BPF_STACK 16. BPF_堆栈</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#17-bpf_queue\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">17. BPF_QUEUE 17. BPF_队列</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#18-bpf_sockhash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">18. BPF_SOCKHASH 18. BPF_SOCKHASH</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#19-maplookup\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">19. map.lookup() 19. 映射.lookup()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#20-maplookup_or_try_init\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">20. map.lookup_or_try_init()\\n20.map.lookup_or_try_init()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#21-mapdelete\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">21. map.delete() 21. 地图.删除()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#22-mapupdate\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">22. map.update() 22. 地图更新()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#23-mapinsert\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">23. map.insert() 23. 映射.insert()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#24-mapincrement\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">24. map.increment() 24. 映射.increment()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#25-mapget_stackid\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">25. map.get_stackid() 25.map.get_stackid()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#26-mapperf_read\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">26. map.perf_read() 26. 映射.perf_read()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#27-mapcall\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">27. map.call() 27. 映射.call()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#28-mapredirect_map\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">28. map.redirect_map() 28. 映射.redirect_map()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#29-mappush\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">29. map.push() 29. 地图.push()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#30-mappop\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">30. map.pop() 30. 地图.pop()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#31-mappeek\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">31. map.peek() 31. 地图.peek()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#32-mapsock_hash_update\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">32. map.sock_hash_update()\\n32.map.sock_hash_update()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#33-mapmsg_redirect_hash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">33. map.msg_redirect_hash()\\n33.map.msg_redirect_hash()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#34-mapsk_redirect_hash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">34. map.sk_redirect_hash()\\n34.map.sk_redirect_hash()</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#licensing\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Licensing 许可</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#rewriter\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Rewriter 重写器</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bcc-python\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">bcc Python 密件抄送 Python</a>\\n<ul>\\n<li>Initialization 初始化\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. BPF 1.带通滤波器</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-usdt\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. USDT 2、泰达币</a></li>\\n</ul>\\n</li>\\n<li>Events 活动\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-attach_kprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. attach_kprobe() 1.attach_kprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-attach_kretprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. attach_kretprobe() 2.attach_kretprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-attach_tracepoint\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. attach_tracepoint() 3.attach_tracepoint()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-attach_uprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. attach_uprobe() 4.attach_uprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-attach_uretprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. attach_uretprobe() 5.attach_uretprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-usdtenable_probe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. USDT.enable_probe() 6. USDT.enable_probe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-attach_raw_tracepoint\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. attach_raw_tracepoint()\\n7.attach_raw_tracepoint()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-attach_raw_socket\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. attach_raw_socket() 8.attach_raw_socket()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-attach_xdp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. attach_xdp() 9.attach_xdp()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-attach_func\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. attach_func() 10. 附加函数（）</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-detach_func\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. detach_func() 11. detach_func()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-detach_kprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. detach_kprobe() 12. detach_kprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-detach_kretprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">13. detach_kretprobe() 13. detach_kretprobe()</a></li>\\n</ul>\\n</li>\\n<li>Debug Output 调试输出\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-trace_print\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. trace_print() 1.trace_print()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-trace_fields\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. trace_fields() 2.trace_fields()</a></li>\\n</ul>\\n</li>\\n<li>Output APIs 输出API\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-perf_buffer_poll\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. perf_buffer_poll() 1. perf_buffer_poll()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-ring_buffer_poll\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. ring_buffer_poll() 2.ring_buffer_poll()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-ring_buffer_consume\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. ring_buffer_consume()\\n3.ring_buffer_consume()</a></li>\\n</ul>\\n</li>\\n<li>Map APIs 地图API\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-get_table\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. get_table() 1. 获取表()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-open_perf_buffer\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. open_perf_buffer() 2. open_perf_buffer()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-items\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. items() 3. 项目（）</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-values\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. values() 4. 值()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-clear\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. clear() 5. 清除()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-items_lookup_and_delete_batch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. items_lookup_and_delete_batch()\\n\\\\6. items_lookup_and_delete_batch()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-items_lookup_batch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. items_lookup_batch() 7. items_lookup_batch()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-items_delete_batch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. items_delete_batch() 8. items_delete_batch()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-items_update_batch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. items_update_batch() 9. items_update_batch()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-print_log2_hist\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. print_log2_hist() 10. print_log2_hist()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-print_linear_hist\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. print_linear_hist() 11. 打印_线性_hist()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-open_ring_buffer\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. open_ring_buffer() 12. open_ring_buffer()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-push\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">13. push() 13. 推()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#14-pop\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14. pop() 14. 弹出（）</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#15-peek\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">15. peek() 15. 窥视（）</a></li>\\n</ul>\\n</li>\\n<li>Helpers 帮手\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-ksym\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. ksym() 1. ksym()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-ksymname\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. ksymname() 2. ksymname()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-sym\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. sym() 3. 符号（）</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-num_open_kprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. num_open_kprobes() 4. num_open_kprobes()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-get_syscall_fnname\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. get_syscall_fnname() 5. get_syscall_fnname()</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bpf-errors\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">BPF Errors BPF 错误</a>\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-invalid-mem-access\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. Invalid mem access\\n\\\\1. 无效的内存访问</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-cannot-call-gpl-only-function-from-proprietary-program\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. Cannot call GPL only function from proprietary program\\n\\\\2. 无法从专有程序调用仅限GPL的函数</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#Environment-Variables\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Environment Variables 环境变量</a>\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-kernel-source-directory\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. kernel source directory\\n1.内核源码目录</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-kernel-version-overriding\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. kernel version overriding\\n\\\\2. 内核版本覆盖</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{Fr as comp,Er as data};
