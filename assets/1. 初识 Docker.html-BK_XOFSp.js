import{_ as n,c as i,a,o as l}from"./app-rdPRYmDk.js";const s={};function r(t,e){return l(),i("div",null,e[0]||(e[0]=[a(`<h1 id="初识-docker" tabindex="-1"><a class="header-anchor" href="#初识-docker"><span>初识 Docker</span></a></h1><h2 id="初识docker" tabindex="-1"><a class="header-anchor" href="#初识docker"><span>初识Docker</span></a></h2><ul><li>为什么 <ul><li>解决软件跨环境迁移的问题：代码“水土”不服</li></ul></li><li>是什么 <ul><li>是一个开源的应用容器引擎，诞生于2013年初，基于Go语言实现。Docker17版本后分为CE社区版和EE企业版</li></ul></li><li>容器 <ul><li>容器完全使用沙箱机制、互相隔离。容器性能开销低</li></ul></li><li>作用 <ul><li>可以让开发者打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的Linux机器上</li></ul></li></ul><h2 id="安装docker-原始版" tabindex="-1"><a class="header-anchor" href="#安装docker-原始版"><span>安装Docker（原始版）</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum update  <span class="token comment"># yum包安装到最新</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils device-mapper-persistent-data lvm2  <span class="token comment"># 安装需要的三个软件包。yum-utils提供yum-config-manager功能，后两个是devicemapper驱动所依赖的</span>
yum-config-manger --add-repo https://download.docker.com/linux/centos/docker-ce.repo  <span class="token comment"># 添加yum源</span>

yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce  <span class="token comment"># 安装docker(向导都按y)</span>
<span class="token function">docker</span> <span class="token parameter variable">-v</span>  <span class="token comment"># 查看版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装docker-一键版" tabindex="-1"><a class="header-anchor" href="#安装docker-一键版"><span>安装Docker（一键版）</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://get.docker.com <span class="token parameter variable">-o</span> get-docker.sh
<span class="token function">sh</span> get-docker.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker架构" tabindex="-1"><a class="header-anchor" href="#docker架构"><span>Docker架构</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Clients ——&gt; Host ——&gt; Registries
————————————————————————————————————
Clients(客户端)
    
Host(Docker核心)
    local host(守护进程)
        container(容器) 与 image(类)，类可以创建容器
    registries host
        container(容器) 与 image(类)，类可以创建容器
        
Registries(仓库)
    Docker hub(官方仓库)
    private registry(私人仓库)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用docker镜像提升速度" tabindex="-1"><a class="header-anchor" href="#用docker镜像提升速度"><span>用Docker镜像提升速度</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>1Docker仓库官网，https://hub.docker.com/
国内镜像：
    USTC：中科大镜像加速器（https://docker.mirrors.ustc.edu.cn）
    阿里云：阿里云官网 &gt; 登录 &gt; 右上-控制台 &gt; 左-产品与服务 &gt; 搜索“镜像” &gt; 容器镜像服务 &gt; 左-镜像加速器 &gt; 得到地址（每个人的不同，所以要登录阿里云）&gt; 复制配置即可
    网易云
    腾讯云
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const o=n(s,[["render",r],["__file","1. 初识 Docker.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E8%99%9A%E6%8B%9F%E6%9C%BA/Docker/Docker/1.%20%E5%88%9D%E8%AF%86%20Docker.html","title":"初识 Docker","lang":"zh-CN","frontmatter":{"create_time":"2020.04.21","tags":"有道云","description":"初识 Docker 初识Docker 为什么 解决软件跨环境迁移的问题：代码“水土”不服 是什么 是一个开源的应用容器引擎，诞生于2013年初，基于Go语言实现。Docker17版本后分为CE社区版和EE企业版 容器 容器完全使用沙箱机制、互相隔离。容器性能开销低 作用 可以让开发者打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的L...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E8%99%9A%E6%8B%9F%E6%9C%BA/Docker/Docker/1.%20%E5%88%9D%E8%AF%86%20Docker.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"初识 Docker"}],["meta",{"property":"og:description","content":"初识 Docker 初识Docker 为什么 解决软件跨环境迁移的问题：代码“水土”不服 是什么 是一个开源的应用容器引擎，诞生于2013年初，基于Go语言实现。Docker17版本后分为CE社区版和EE企业版 容器 容器完全使用沙箱机制、互相隔离。容器性能开销低 作用 可以让开发者打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的L..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初识 Docker\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"初识 Docker","slug":"初识-docker","link":"#初识-docker","children":[{"level":2,"title":"初识Docker","slug":"初识docker","link":"#初识docker","children":[]},{"level":2,"title":"安装Docker（原始版）","slug":"安装docker-原始版","link":"#安装docker-原始版","children":[]},{"level":2,"title":"安装Docker（一键版）","slug":"安装docker-一键版","link":"#安装docker-一键版","children":[]},{"level":2,"title":"Docker架构","slug":"docker架构","link":"#docker架构","children":[]},{"level":2,"title":"用Docker镜像提升速度","slug":"用docker镜像提升速度","link":"#用docker镜像提升速度","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.36,"words":407},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Virtual/虚拟机/Docker/Docker/1. 初识 Docker.md","excerpt":"\\n<h2>初识Docker</h2>\\n<ul>\\n<li>为什么\\n<ul>\\n<li>解决软件跨环境迁移的问题：代码“水土”不服</li>\\n</ul>\\n</li>\\n<li>是什么\\n<ul>\\n<li>是一个开源的应用容器引擎，诞生于2013年初，基于Go语言实现。Docker17版本后分为CE社区版和EE企业版</li>\\n</ul>\\n</li>\\n<li>容器\\n<ul>\\n<li>容器完全使用沙箱机制、互相隔离。容器性能开销低</li>\\n</ul>\\n</li>\\n<li>作用\\n<ul>\\n<li>可以让开发者打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的Linux机器上</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{o as comp,d as data};
