import{_ as l,c as e,e as t,o as n}from"./app-BG6lKC-Y.js";const o={};function s(d,i){return n(),e("div",null,i[0]||(i[0]=[t('<h1 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>Redis</span></a></h1><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>参考：</p><ul><li><p>官网</p><ul><li>https://redis.io/docs/ui/insight/</li></ul></li><li><p>查文档</p><ul><li>中文文档 <ul><li>https://redis.com.cn/documentation.html，这个还行</li><li><s>https://www.redisio.com/</s> (要关注公众号的，差评)</li></ul></li><li>官网文档 <ul><li>https://redis.io/docs/latest/</li><li>https://cndoc.github.io/redis-doc-cn/cn/documentation.html，内容是官网文档，有很多技巧，推荐阅读</li></ul></li></ul></li><li><p>学习</p><ul><li><p>https://www.bilibili.com/video/BV1Jj411D7oG</p><ul><li>0:57:51。进度：19/19，完成。</li><li>带动画不错，内嵌字幕，比较新，从视频内容可知是货真价实的2023-06产</li></ul></li><li><p>https://www.bilibili.com/video/BV1cr4y1671t</p><ul><li>42:48:51</li><li>黑马的</li></ul></li></ul></li></ul><h2 id="课程目录" tabindex="-1"><a class="header-anchor" href="#课程目录"><span>课程目录</span></a></h2><ul><li>基本概念</li><li>安装配置</li><li>常用命令</li><li>十大数据类型</li><li>事务</li><li>数据持久化</li><li>主从复制</li><li>哨兵模式</li></ul><h2 id="比较-redis-和-mongodb" tabindex="-1"><a class="header-anchor" href="#比较-redis-和-mongodb"><span>比较：redis 和 mongodb</span></a></h2><p>转载：https://redis.com.cn/redis-vs-mongodb.html</p><p>Redis和MongoDB是两种不同类型的数据库，它们在数据存储和查询方式、数据模型以及适用场景等方面有一些明显的区别。下面是Redis和MongoDB之间的一些比较：</p><ol><li>数据模型： <ul><li>Redis：Redis是一个<strong>键值</strong>存储系统，支持多种数据结构如字符串、哈希、列表、集合和有序集合。数据以键值对的形式存储，可以通过键快速访问数据。Redis适合用于缓存、会话存储和快速查询等场景。</li><li>MongoDB：MongoDB是一个<strong>面向文档</strong>的数据库，数据以类似JSON的BSON文档格式存储。每个文档都有一个唯一的ID，并且文档可以嵌套。MongoDB适合存储和查询复杂的数据结构和大规模数据集。</li></ul></li><li>数据持久化： <ul><li>Redis：Redis支持持久化，可以将数据保存到磁盘上，以防止数据丢失。它提供了<strong>快照</strong>（snapshotting）和<strong>AOF</strong>（Append-only file）两种持久化方式。</li><li>MongoDB：MongoDB也支持持久化，将数据写入磁盘文件中。它使用<strong>写时复制</strong>（write-ahead logging）机制来保证数据的一致性和持久性。</li></ul></li><li>查询功能： <ul><li>Redis：Redis提供了一些查询功能，如对字符串的模糊匹配、对集合的交并差等操作。然而，它并不是一个完整的查询语言，不支持复杂查询和索引，适合用于简单的数据检索。</li><li>MongoDB：MongoDB提供了强大的查询功能，支持丰富的查询语法和索引，可以进行复杂的查询操作，包括范围查询、正则表达式、聚合管道等。</li></ul></li><li>扩展性： <ul><li>Redis：Redis采用单线程模型，通过异步I/O来实现高性能。它可以通过主从复制和分片来扩展读性能和存储容量。</li><li>MongoDB：MongoDB采用分布式架构，支持水平扩展和分片。它可以在集群中添加更多的节点来扩展存储和处理能力。</li></ul></li><li>事务支持： <ul><li>Redis：Redis支持事务，可以将多个操作组合成一个原子性的操作序列。但是，Redis的事务是非严格的，即事务中的某个操作失败不会回滚其他操作。</li><li>MongoDB：MongoDB支持多文档事务，可以对多个文档进行原子性操作，保证事务的一致性。</li></ul></li><li>数据一致性： <ul><li>Redis：Redis默认情况下是单机数据库，数据复制和故障恢复依赖于主从复制和Sentinel哨兵机制。在主节点故障时，可能会出现一段时间的数据不一致。</li><li>MongoDB：MongoDB支持复制集和分片集群，在故障时可以实现数据的自动备份和故障转移，提供更高的数据一致性和可用性。</li></ul></li></ol><p>总体来说，Redis适用于高性能的键值存储和缓存场景，而MongoDB适用于更复杂的数据存储和查询需求，特别是对复杂数据结构和丰富查询功能的支持。具体选择应根据实际应用需求和数据模型的特点进行评估。</p><h2 id="分布式缓存和分布式锁" tabindex="-1"><a class="header-anchor" href="#分布式缓存和分布式锁"><span>分布式缓存和分布式锁</span></a></h2><p>Q：为什么要用Redis（Redis VS 数据库）（Redis VS 程序map等）</p><p>A1：性能，内存操作而非磁盘操作</p><p>A2：分布式缓存而非本地缓存，生命周期与持久化</p>',15)]))}const p=l(o,[["render",s],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20Redis/","title":"Redis","lang":"zh-CN","frontmatter":{"description":"Redis 资料 参考： 官网 https://redis.io/docs/ui/insight/ 查文档 中文文档 https://redis.com.cn/documentation.html，这个还行 (要关注公众号的，差评) 官网文档 https://redis.io/docs/latest/ https://cndoc.github.io/r...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20Redis/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Redis"}],["meta",{"property":"og:description","content":"Redis 资料 参考： 官网 https://redis.io/docs/ui/insight/ 查文档 中文文档 https://redis.com.cn/documentation.html，这个还行 (要关注公众号的，差评) 官网文档 https://redis.io/docs/latest/ https://cndoc.github.io/r..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Redis","slug":"redis","link":"#redis","children":[{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]},{"level":2,"title":"课程目录","slug":"课程目录","link":"#课程目录","children":[]},{"level":2,"title":"比较：redis 和 mongodb","slug":"比较-redis-和-mongodb","link":"#比较-redis-和-mongodb","children":[]},{"level":2,"title":"分布式缓存和分布式锁","slug":"分布式缓存和分布式锁","link":"#分布式缓存和分布式锁","children":[]}]}],"git":{},"readingTime":{"minutes":3.38,"words":1015},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/01. Redis/README.md","excerpt":"\\n<h2>资料</h2>\\n<p>参考：</p>\\n<ul>\\n<li>\\n<p>官网</p>\\n<ul>\\n<li>https://redis.io/docs/ui/insight/</li>\\n</ul>\\n</li>\\n<li>\\n<p>查文档</p>\\n<ul>\\n<li>中文文档\\n<ul>\\n<li>https://redis.com.cn/documentation.html，这个还行</li>\\n<li><s>https://www.redisio.com/</s> (要关注公众号的，差评)</li>\\n</ul>\\n</li>\\n<li>官网文档\\n<ul>\\n<li>https://redis.io/docs/latest/</li>\\n<li>https://cndoc.github.io/redis-doc-cn/cn/documentation.html，内容是官网文档，有很多技巧，推荐阅读</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>学习</p>\\n<ul>\\n<li>\\n<p>https://www.bilibili.com/video/BV1Jj411D7oG</p>\\n<ul>\\n<li>0:57:51。进度：19/19，完成。</li>\\n<li>带动画不错，内嵌字幕，比较新，从视频内容可知是货真价实的2023-06产</li>\\n</ul>\\n</li>\\n<li>\\n<p>https://www.bilibili.com/video/BV1cr4y1671t</p>\\n<ul>\\n<li>42:48:51</li>\\n<li>黑马的</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/01. Redis/README.md","value":{"title":"数据库/","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/01. Redis/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,c as data};
