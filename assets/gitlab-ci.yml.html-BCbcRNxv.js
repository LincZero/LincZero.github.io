import{_ as a,c as s,e as t,o as e}from"./app-C-bjNnVy.js";const p={};function l(i,n){return e(),s("div",null,n[0]||(n[0]=[t(`<h1 id="gitlab-ci-yml" tabindex="-1"><a class="header-anchor" href="#gitlab-ci-yml"><span>.gitlab-ci.yml</span></a></h1><p>文件名就是 <code>.gitlab-ci.yml</code>，用来控制 gitlab runner 执行工作流的</p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>demo</span></a></h2><p>参考: https://github.com/LincZero/LincZero.github.io/blob/main/.gitlab-ci.yml</p><p>我记得以前任职的公司里，我写过很多。有前端、后端等好几个 gitlab.ci 文件</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment"># 选择你要使用的 docker 镜像</span>
<span class="token key atrule">image</span><span class="token punctuation">:</span> node<span class="token punctuation">:</span>18<span class="token punctuation">-</span>buster

<span class="token key atrule">pages</span><span class="token punctuation">:</span>
  <span class="token comment"># 每当 push 到 main 分支时触发部署</span>
  <span class="token key atrule">only</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> main

  <span class="token comment"># 缓存 node_modules</span>
  <span class="token key atrule">cache</span><span class="token punctuation">:</span>
    <span class="token key atrule">key</span><span class="token punctuation">:</span>
      <span class="token key atrule">files</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> pnpm<span class="token punctuation">-</span>lock.yaml
    <span class="token key atrule">paths</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> .pnpm<span class="token punctuation">-</span>store

  <span class="token comment"># 安装 pnpm</span>
  <span class="token key atrule">before_script</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> curl <span class="token punctuation">-</span>fsSL https<span class="token punctuation">:</span>//get.pnpm.io/install.sh <span class="token punctuation">|</span> sh <span class="token punctuation">-</span>
    <span class="token punctuation">-</span> pnpm config set store<span class="token punctuation">-</span>dir .pnpm<span class="token punctuation">-</span>store

  <span class="token comment"># 安装依赖并运行构建脚本</span>
  <span class="token key atrule">script</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> pnpm install <span class="token punctuation">-</span><span class="token punctuation">-</span>frozen<span class="token punctuation">-</span>lockfile
    <span class="token punctuation">-</span> pnpm docs<span class="token punctuation">:</span>build <span class="token punctuation">-</span><span class="token punctuation">-</span>dest public

  <span class="token key atrule">artifacts</span><span class="token punctuation">:</span>
    <span class="token key atrule">paths</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> public
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const o=a(p,[["render",l],["__file","gitlab-ci.yml.html.vue"]]),u=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/02.%20%E5%A4%9A%E6%96%87%E4%BB%B6%E5%A4%9A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/%E5%B9%B3%E5%8F%B0%E9%85%8D%E7%BD%AE/gitlab-ci.yml.html","title":".gitlab-ci.yml","lang":"zh-CN","frontmatter":{"create_time":"2025-01-09T00:00:00.000Z","Author":"LincZero","description":".gitlab-ci.yml 文件名就是 .gitlab-ci.yml，用来控制 gitlab runner 执行工作流的 demo 参考: https://github.com/LincZero/LincZero.github.io/blob/main/.gitlab-ci.yml 我记得以前任职的公司里，我写过很多。有前端、后端等好几个 gitla...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/undefined/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/02.%20%E5%A4%9A%E6%96%87%E4%BB%B6%E5%A4%9A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/%E5%B9%B3%E5%8F%B0%E9%85%8D%E7%BD%AE/gitlab-ci.yml.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":".gitlab-ci.yml"}],["meta",{"property":"og:description","content":".gitlab-ci.yml 文件名就是 .gitlab-ci.yml，用来控制 gitlab runner 执行工作流的 demo 参考: https://github.com/LincZero/LincZero.github.io/blob/main/.gitlab-ci.yml 我记得以前任职的公司里，我写过很多。有前端、后端等好几个 gitla..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\".gitlab-ci.yml\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":".gitlab-ci.yml","slug":"gitlab-ci-yml","link":"#gitlab-ci-yml","children":[{"level":2,"title":"demo","slug":"demo","link":"#demo","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.47,"words":142},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/02. 多文件多目录管理/辅助文件/平台配置/gitlab-ci.yml.md","excerpt":"\\n<p>文件名就是 <code>.gitlab-ci.yml</code>，用来控制 gitlab runner 执行工作流的</p>\\n<h2>demo</h2>\\n<p>参考: https://github.com/LincZero/LincZero.github.io/blob/main/.gitlab-ci.yml</p>\\n<p>我记得以前任职的公司里，我写过很多。有前端、后端等好几个 gitlab.ci 文件</p>\\n<div class=\\"language-yaml\\" data-ext=\\"yml\\" data-title=\\"yml\\"><pre class=\\"language-yaml\\"><code><span class=\\"token comment\\"># 选择你要使用的 docker 镜像</span>\\n<span class=\\"token key atrule\\">image</span><span class=\\"token punctuation\\">:</span> node<span class=\\"token punctuation\\">:</span>18<span class=\\"token punctuation\\">-</span>buster\\n\\n<span class=\\"token key atrule\\">pages</span><span class=\\"token punctuation\\">:</span>\\n  <span class=\\"token comment\\"># 每当 push 到 main 分支时触发部署</span>\\n  <span class=\\"token key atrule\\">only</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token punctuation\\">-</span> main\\n\\n  <span class=\\"token comment\\"># 缓存 node_modules</span>\\n  <span class=\\"token key atrule\\">cache</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">key</span><span class=\\"token punctuation\\">:</span>\\n      <span class=\\"token key atrule\\">files</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token punctuation\\">-</span> pnpm<span class=\\"token punctuation\\">-</span>lock.yaml\\n    <span class=\\"token key atrule\\">paths</span><span class=\\"token punctuation\\">:</span>\\n      <span class=\\"token punctuation\\">-</span> .pnpm<span class=\\"token punctuation\\">-</span>store\\n\\n  <span class=\\"token comment\\"># 安装 pnpm</span>\\n  <span class=\\"token key atrule\\">before_script</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token punctuation\\">-</span> curl <span class=\\"token punctuation\\">-</span>fsSL https<span class=\\"token punctuation\\">:</span>//get.pnpm.io/install.sh <span class=\\"token punctuation\\">|</span> sh <span class=\\"token punctuation\\">-</span>\\n    <span class=\\"token punctuation\\">-</span> pnpm config set store<span class=\\"token punctuation\\">-</span>dir .pnpm<span class=\\"token punctuation\\">-</span>store\\n\\n  <span class=\\"token comment\\"># 安装依赖并运行构建脚本</span>\\n  <span class=\\"token key atrule\\">script</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token punctuation\\">-</span> pnpm install <span class=\\"token punctuation\\">-</span><span class=\\"token punctuation\\">-</span>frozen<span class=\\"token punctuation\\">-</span>lockfile\\n    <span class=\\"token punctuation\\">-</span> pnpm docs<span class=\\"token punctuation\\">:</span>build <span class=\\"token punctuation\\">-</span><span class=\\"token punctuation\\">-</span>dest public\\n\\n  <span class=\\"token key atrule\\">artifacts</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">paths</span><span class=\\"token punctuation\\">:</span>\\n      <span class=\\"token punctuation\\">-</span> public\\n</code></pre></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/02. 多文件多目录管理/辅助文件/平台配置/gitlab-ci.yml.md","value":{"title":"gitlab-ci.yml","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/02. 多文件多目录管理/辅助文件/平台配置/gitlab-ci.yml.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{o as comp,u as data};
