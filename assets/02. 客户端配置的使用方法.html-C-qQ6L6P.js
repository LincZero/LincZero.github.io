import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as i,c as l,a as n,b as s,d as e,e as t}from"./app-Cs_Fi1_3.js";const c={},r=n("h1",{id:"客户端配置的使用方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#客户端配置的使用方法"},[n("span",null,"客户端配置的使用方法")])],-1),u=n("h2",{id:"defineclientconfig-函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#defineclientconfig-函数"},[n("span",null,"defineClientConfig 函数")])],-1),d={href:"https://vuepress.github.io/zh/guide/configuration.html#%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},k={href:"https://vuepress.github.io/zh/reference/plugin-api.html#clientconfigfile",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/utils&#39;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">const</span> pluginOrTheme <span class="token operator">=</span> <span class="token punctuation">{</span>
  clientConfigFile<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/clientConfig.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),h=n("code",null,"vuepress/client",-1),m={href:"https://vuepress.github.io/zh/reference/client-api.html#defineclientconfig",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  rootComponents<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提前总结</p>`,2),g=n("li",null,[s("enhance "),n("ul",null,[n("li",null,[s("调用时机："),n("code",null,"enhance"),s(" 函数会在客户端应用创建后被调用")]),n("li",null,"作用：可以对 Vue 应用添加各种能力")])],-1),_=n("code",null,"setup",-1),b={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"setup",-1),E={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://vuepress.github.io/zh/reference/frontmatter.html#layout",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,[s("rootComponents "),n("ul",null,[n("li",null,"作用：组件数组，它们将会直接被放置在客户端 Vue 应用的根节点下。该选项的典型使用方式就是放置一些全局的 UI 组件，比如全局弹窗等")])],-1),A=n("h2",{id:"_1-enhance-函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-enhance-函数"},[n("span",null,"(1) enhance 函数")])],-1),B=n("p",null,[s("调用时机："),n("code",null,"enhance"),s(" 函数会在客户端应用创建后被调用，你可以对 Vue 应用添加各种能力")],-1),x=n("p",null,[n("code",null,"enhance"),s(" 函数既可以是同步的，也可以是异步的。它接收一个 Context 参数，包含以下属性：")],-1),S=n("code",null,"app",-1),D={href:"https://staging-cn.vuejs.org/api/application.html#create-app",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"router",-1),R={href:"https://router.vuejs.org/zh/api/index.html#createrouter",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"siteData",-1),M={href:"https://vuepress.github.io/zh/reference/config.html#base",target:"_blank",rel:"noopener noreferrer"},z={href:"https://vuepress.github.io/zh/reference/config.html#lang",target:"_blank",rel:"noopener noreferrer"},F={href:"https://vuepress.github.io/zh/reference/config.html#title",target:"_blank",rel:"noopener noreferrer"},j={href:"https://vuepress.github.io/zh/reference/config.html#description",target:"_blank",rel:"noopener noreferrer"},I={href:"https://vuepress.github.io/zh/reference/config.html#head",target:"_blank",rel:"noopener noreferrer"},N={href:"https://vuepress.github.io/zh/reference/config.html#locales",target:"_blank",rel:"noopener noreferrer"},H=n("h3",{id:"注册-vue-组件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#注册-vue-组件"},[n("span",null,"注册 Vue 组件")])],-1),L={href:"https://staging-cn.vuejs.org/api/application.html#app-component",target:"_blank",rel:"noopener noreferrer"},T=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&#39;./MyComponent.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;MyComponent&#39;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用不支持-ssr-的功能" tabindex="-1"><a class="header-anchor" href="#使用不支持-ssr-的功能"><span>使用不支持 SSR 的功能</span></a></h3><p>VuePress 会在构建过程中生成一个 SSR 应用，用以对页面进行预渲染。一般而言，如果一段代码在客户端应用 Mount 之前就使用了浏览器或 DOM API ，我们就认为其对 SSR 不友好，即不支持 SSR 。</p>`,3),O={href:"https://vuepress.github.io/zh/reference/components.html#clientonly",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"enhance",-1),G={href:"https://vuepress.github.io/zh/reference/client-api.html#ssr",target:"_blank",rel:"noopener noreferrer"},Z=n("code",null,"__VUEPRESS_SSR__",-1),q=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>__VUEPRESS_SSR__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nonSsrFriendlyModule <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;non-ssr-friendly-module&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-router-方法" tabindex="-1"><a class="header-anchor" href="#使用-router-方法"><span>使用 Router 方法</span></a></h3>`,2),J={href:"https://router.vuejs.org/zh/api/index.html#router-%E6%96%B9%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},K=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> router <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;before navigation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after navigation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意</p><p>我们不推荐使用 <code>addRoute</code> 方法来添加动态路由，因为这些路由记录 <strong>不会</strong> 在构建模式中被预渲染出来。</p><p>当然，如果你了解了这种用法的缺点，你还是可以这样使用。</p><h2 id="_2-setup-组合式api" tabindex="-1"><a class="header-anchor" href="#_2-setup-组合式api"><span>(2) setup 组合式API</span></a></h2>`,5),Q=n("code",null,"setup",-1),W={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},X=n("h3",{id:"使用组合式-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用组合式-api"},[n("span",null,"使用组合式 API")])],-1),Y=n("code",null,"setup",-1),$={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},nn=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> provide<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取当前的路由位置</span>
    <span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 或者 vue-router 实例</span>
    <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 供给一个值，可以被布局、页面和其他组件注入</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用不支持-ssr-的功能-1" tabindex="-1"><a class="header-anchor" href="#使用不支持-ssr-的功能-1"><span>使用不支持 SSR 的功能</span></a></h3>`,2),sn=n("code",null,"setup",-1),an={href:"https://vuepress.github.io/zh/reference/client-api.html#ssr",target:"_blank",rel:"noopener noreferrer"},en=n("code",null,"__VUEPRESS_SSR__",-1),tn={href:"https://staging-cn.vuejs.org/api/composition-api-lifecycle.html#onmounted",target:"_blank",rel:"noopener noreferrer"},on=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 在 mounted 之后使用 DOM API</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-layouts-配置项" tabindex="-1"><a class="header-anchor" href="#_3-layouts-配置项"><span>(3) layouts 配置项</span></a></h2>`,2),pn=n("code",null,"layouts",-1),ln={href:"https://vuepress.github.io/zh/reference/frontmatter.html#layout",target:"_blank",rel:"noopener noreferrer"},cn=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> MyLayout <span class="token keyword">from</span> <span class="token string">&#39;./layouts/MyLayout.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
    MyLayout<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-rootcomponents-放置全局组件" tabindex="-1"><a class="header-anchor" href="#_4-rootcomponents-放置全局组件"><span>(4) rootComponents 放置全局组件</span></a></h2><p><code>rootComponents</code> 是一个组件数组，它们将会直接被放置在客户端 Vue 应用的根节点下。</p><p>该选项的典型使用方式就是放置一些全局的 UI 组件，比如全局弹窗等：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> GlobalPopup <span class="token keyword">from</span> <span class="token string">&#39;./components/GlobalPopup.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  rootComponents<span class="token operator">:</span> <span class="token punctuation">[</span>GlobalPopup<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function rn(un,dn){const a=p("ExternalLinkIcon");return i(),l("div",null,[r,u,n("p",null,[s("你可以直接在你的项目中使用 "),n("a",d,[s("客户端配置文件"),e(a)]),s(" 。或者，在你的插件或者主题中，使用 "),n("a",k,[s("clientConfigFile"),e(a)]),s(" Hook 来指定客户端配置文件的路径：")]),v,n("p",null,[s("在客户端配置文件中，"),h,s(" 提供了一个 "),n("a",m,[s("defineClientConfig"),e(a)]),s(" 函数来帮助你定义客户端配置：")]),f,n("ul",null,[g,n("li",null,[s("setup "),n("ul",null,[n("li",null,[s("调用时机："),_,s(" 函数会在客户端 Vue 应用的 "),n("a",b,[s("setup"),e(a)]),s(" Hook 中被调用")]),n("li",null,[s("作用：可以把 "),y,s(" 函数当作根组件的 "),n("a",E,[s("setup"),e(a)]),s(" Hook 中的一部分。因此，所有的组合式 API 都可以在这里使用")])])]),n("li",null,[s("layouts "),n("ul",null,[n("li",null,[s("作用：设置布局组件。你在此处注册布局后，用户就可以通过 "),n("a",C,[s("layout"),e(a)]),s(" frontmatter 来使用它们")])])]),w]),A,B,x,n("ul",null,[n("li",null,[S,s(" 是由 "),n("a",D,[s("createApp"),e(a)]),s(" 创建的 Vue 应用实例。")]),n("li",null,[P,s(" 是由 "),n("a",R,[s("createRouter"),e(a)]),s(" 创建的路由实例。")]),n("li",null,[V,s(" 是一个根据用户配置生成的 Ref 对象，包含 "),n("a",M,[s("base"),e(a)]),s(", "),n("a",z,[s("lang"),e(a)]),s(", "),n("a",F,[s("title"),e(a)]),s(", "),n("a",j,[s("description"),e(a)]),s(", "),n("a",I,[s("head"),e(a)]),s(" 和 "),n("a",N,[s("locales"),e(a)]),s("。")])]),H,n("p",null,[s("你可以通过 "),n("a",L,[s("app.component"),e(a)]),s(" 方法来注册 Vue 全局组件：")]),T,n("p",null,[s("我们已经提供了一个 "),n("a",O,[s("ClientOnly"),e(a)]),s(" 组件来包裹不支持 SSR 的内容。")]),n("p",null,[s("在 "),U,s(" 函数中，你可以使用 "),n("a",G,[Z,e(a)]),s(" 标记来处理这种情况。")]),q,n("p",null,[s("你可以使用 vue-router 提供的 "),n("a",J,[s("Router 方法"),e(a)]),s(" 。例如，添加导航钩子：")]),K,n("p",null,[s("调用时机："),Q,s(" 函数会在客户端 Vue 应用的 "),n("a",W,[s("setup"),e(a)]),s(" Hook 中被调用")]),X,n("p",null,[s("作用：你可以把 "),Y,s(" 函数当作根组件的 "),n("a",$,[s("setup"),e(a)]),s(" Hook 中的一部分。因此，所有的组合式 API 都可以在这里使用。")]),nn,n("p",null,[s("在 "),sn,s(" 函数中，"),n("a",an,[en,e(a)]),s(" 标记同样可用。")]),n("p",null,[s("使用不支持 SSR 的功能的另一种方式就是将他们放在 "),n("a",tn,[s("onMounted"),e(a)]),s(" Hook 中：")]),on,n("p",null,[pn,s(" 配置项用于设置布局组件。你在此处注册布局后，用户就可以通过 "),n("a",ln,[s("layout"),e(a)]),s(" frontmatter 来使用它们。")]),cn])}const hn=o(c,[["render",rn],["__file","02. 客户端配置的使用方法.html.vue"]]),mn=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/04.%20Cookbook/02.%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html","title":"客户端配置的使用方法","lang":"zh-CN","frontmatter":{"description":"客户端配置的使用方法 defineClientConfig 函数 你可以直接在你的项目中使用 客户端配置文件 。或者，在你的插件或者主题中，使用 clientConfigFile Hook 来指定客户端配置文件的路径： 在客户端配置文件中，vuepress/client 提供了一个 defineClientConfig 函数来帮助你定义客户端配置： 提...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/04.%20Cookbook/02.%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"客户端配置的使用方法"}],["meta",{"property":"og:description","content":"客户端配置的使用方法 defineClientConfig 函数 你可以直接在你的项目中使用 客户端配置文件 。或者，在你的插件或者主题中，使用 clientConfigFile Hook 来指定客户端配置文件的路径： 在客户端配置文件中，vuepress/client 提供了一个 defineClientConfig 函数来帮助你定义客户端配置： 提..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"客户端配置的使用方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"客户端配置的使用方法","slug":"客户端配置的使用方法","link":"#客户端配置的使用方法","children":[{"level":2,"title":"defineClientConfig 函数","slug":"defineclientconfig-函数","link":"#defineclientconfig-函数","children":[]},{"level":2,"title":"(1) enhance 函数","slug":"_1-enhance-函数","link":"#_1-enhance-函数","children":[{"level":3,"title":"注册 Vue 组件","slug":"注册-vue-组件","link":"#注册-vue-组件","children":[]},{"level":3,"title":"使用不支持 SSR 的功能","slug":"使用不支持-ssr-的功能","link":"#使用不支持-ssr-的功能","children":[]},{"level":3,"title":"使用 Router 方法","slug":"使用-router-方法","link":"#使用-router-方法","children":[]}]},{"level":2,"title":"(2) setup 组合式API","slug":"_2-setup-组合式api","link":"#_2-setup-组合式api","children":[{"level":3,"title":"使用组合式 API","slug":"使用组合式-api","link":"#使用组合式-api","children":[]},{"level":3,"title":"使用不支持 SSR 的功能","slug":"使用不支持-ssr-的功能-1","link":"#使用不支持-ssr-的功能-1","children":[]}]},{"level":2,"title":"(3) layouts 配置项","slug":"_3-layouts-配置项","link":"#_3-layouts-配置项","children":[]},{"level":2,"title":"(4) rootComponents 放置全局组件","slug":"_4-rootcomponents-放置全局组件","link":"#_4-rootcomponents-放置全局组件","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.88,"words":1163},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/04. Cookbook/02. 客户端配置的使用方法.md","excerpt":"\\n<h2>defineClientConfig 函数</h2>\\n<p>你可以直接在你的项目中使用 <a href=\\"https://vuepress.github.io/zh/guide/configuration.html#%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">客户端配置文件</a> 。或者，在你的插件或者主题中，使用 <a href=\\"https://vuepress.github.io/zh/reference/plugin-api.html#clientconfigfile\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">clientConfigFile</a> Hook 来指定客户端配置文件的路径：</p>","autoDesc":true}');export{hn as comp,mn as data};
