import{_ as l,c as i,b as r,a,e as n,d as s,o as p,r as d}from"./app-CxAoBuKS.js";const o={},c={href:"https://www.digitalocean.com/community/tutorials/a-deep-dive-into-iptables-and-netfilter-architecture",target:"_blank",rel:"noopener noreferrer"},b={href:"http://www.netfilter.org/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://wiki.archlinux.org/index.php/Iptables",target:"_blank",rel:"noopener noreferrer"},m={href:"https://wiki.nftables.org/wiki-nftables/index.php/Main_Page",target:"_blank",rel:"noopener noreferrer"},v={href:"http://www.cnblogs.com/LittleHann/p/3708222.html",target:"_blank",rel:"noopener noreferrer"};function h(g,e){const t=d("ExternalLinkIcon");return p(),i("div",null,[e[5]||(e[5]=r(`<h1 id="linux命令-iptables和netfilter" tabindex="-1"><a class="header-anchor" href="#linux命令-iptables和netfilter"><span>Linux命令_iptables和netfilter</span></a></h1><p>iptables 是一个配置 Linux 内核防火墙的命令行工具，它基于内核的 netfilter 机制。新版本的内核（3.13+）也提供了 nftables，用于取代 iptables。</p><h2 id="netfilter" tabindex="-1"><a class="header-anchor" href="#netfilter"><span>netfilter</span></a></h2><p>netfilter是Linux内核的包过滤框架，它提供了一系列的钩子（Hook）供其他模块控制包的流动。这些钩子包括：</p><ul><li><strong>NF_IP_PRE_ROUTING</strong>：刚刚通过数据链路层解包进入网络层的数据包通过此钩子，它在路由之前处理</li><li><strong>NF_IP_LOCAL_IN</strong>：经过路由查找后，送往本机（目的地址在本地）的包会通过此钩子</li><li><strong>NF_IP_FORWARD</strong>：不是本地产生的并且目的地不是本地的包（即转发的包）会通过此钩子</li><li><strong>NF_IP_LOCAL_OUT</strong>：所有本地生成的发往其他机器的包会通过该钩子</li><li><strong>NF_IP_POST_ROUTING</strong>：在包就要离开本机之前会通过该钩子，它在路由之后处理</li></ul><p>![netfilter](02. Linux命令_iptables和netfilter.assets/netfilter.png)</p><h2 id="iptables" tabindex="-1"><a class="header-anchor" href="#iptables"><span>iptables</span></a></h2><h3 id="表和链-tables-chains" tabindex="-1"><a class="header-anchor" href="#表和链-tables-chains"><span>表和链 (Tables/Chains)</span></a></h3><p>iptables 通过表和链来组织数据包的过滤规则，每条规则都包括匹配和动作两部分。默认情况下，每张表包括一些默认链，用户也可以添加自定义的链，这些链都是顺序排列的。这些表和链包括：</p><ul><li><strong>raw表</strong>：用于决定数据包是否被状态跟踪机制处理，内建PREROUTING和OUTPUT两个链</li><li><strong>filter表</strong>：用于过滤，内建INPUT（目的地是本地的包）、FORWARD（不是本地产生的并且目的地不是本地）和OUTPUT（本地生成的包）等三个链</li><li><strong>nat表</strong>：用于网络地址转换，内建PREROUTING（在包刚刚到达防火墙时改变它的目的地址）、INPUT、OUTPUT和POSTROUTING（要离开防火墙之前改变其源地址）等链</li><li><strong>mangle表</strong>：用于对报文进行修改，内建PREROUTING、INPUT、FORWARD、OUTPUT和POSTROUTING等链</li><li><strong>security表</strong>：用于根据安全策略处理数据包，内建INPUT、FORWARD和OUTPUT链</li></ul><table><thead><tr><th>Tables↓/Chains→</th><th style="text-align:center;">PREROUTING</th><th style="text-align:center;">INPUT</th><th style="text-align:center;">FORWARD</th><th style="text-align:center;">OUTPUT</th><th style="text-align:center;">POSTROUTING</th></tr></thead><tbody><tr><td>(routing decision)</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td></tr><tr><td><strong>raw</strong></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td></tr><tr><td>(connection tracking enabled)</td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td></tr><tr><td><strong>mangle</strong></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td></tr><tr><td><strong>nat</strong> (DNAT)</td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td></tr><tr><td>(routing decision)</td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td></tr><tr><td><strong>filter</strong></td><td style="text-align:center;"></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;"></td></tr><tr><td><strong>security</strong></td><td style="text-align:center;"></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;"></td></tr><tr><td><strong>nat</strong> (SNAT)</td><td style="text-align:center;"></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">✓</td></tr></tbody></table><p>所有链默认都是没有任何规则的，用户可以按需要添加规则。每条规则都包括匹配和动作两部分：</p><ul><li>匹配可以有多条，比如匹配端口、IP、数据包类型等。匹配还可以包括模块（如<code>conntrack</code>、<code>recent</code>等），实现更复杂的过滤。</li><li>动作只能有一个，通过<code>-j</code>指定，如 <code>ACCEPT</code>、<code>DROP</code>、<code>RETURN</code>、<code>SNAT</code>、<code>DNAT</code>等</li></ul><h3 id="通过iptables的过程" tabindex="-1"><a class="header-anchor" href="#通过iptables的过程"><span>通过iptables的过程</span></a></h3><p>这样，网络数据包通过iptables的过程为</p><p>![iptables](02. Linux命令_iptables和netfilter.assets/iptables.png)</p><p>其规律为</p><ol><li>当一个数据包进入网卡时，数据包首先进入<code>PREROUTING</code>链，在<code>PREROUTING</code>链中我们有机会修改数据包的<code>DestIP</code>(目的IP)，然后内核的&quot;路由模块&quot;根据&quot;数据包目的IP&quot;以及&quot;内核中的路由表&quot; 判断是否需要转送出去(注意，这个时候数据包的<code>DestIP</code>有可能已经被我们修改过了)</li><li>如果数据包就是进入本机的(即数据包的目的IP是本机的网口IP)，数据包就会沿着图向下移动，到达<code>INPUT</code>链。数据包到达<code>INPUT</code>链后，任何进程都会收到它</li><li>本机上运行的程序也可以发送数据包，这些数据包经过<code>OUTPUT</code>链，然后到达<code>POSTROTING</code>链输出(注意，这个时候数据包的<code>SrcIP</code>有可能已经被我们修改过了)</li><li>如果数据包是要转发出去的(即目的IP地址不再当前子网中)，且内核允许转发，数据包就会向右移动，经过<code>FORWARD</code>链，然后到达<code>POSTROUTING</code>链输出(选择对应子网的网口发送出去)</li></ol><h3 id="iptables示例" tabindex="-1"><a class="header-anchor" href="#iptables示例"><span>iptables示例</span></a></h3><blockquote><h4 id="查看规则列表" tabindex="-1"><a class="header-anchor" href="#查看规则列表"><span>查看规则列表</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-nvL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><h4 id="允许22端口" tabindex="-1"><a class="header-anchor" href="#允许22端口"><span>允许22端口</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">22</span> <span class="token parameter variable">-j</span> ACCEPT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><h4 id="允许来自192-168-0-4的包" tabindex="-1"><a class="header-anchor" href="#允许来自192-168-0-4的包"><span>允许来自192.168.0.4的包</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.0.4 <span class="token parameter variable">-j</span> ACCEPT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><h4 id="允许现有连接或与现有连接关联的包" tabindex="-1"><a class="header-anchor" href="#允许现有连接或与现有连接关联的包"><span>允许现有连接或与现有连接关联的包</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-m</span> state <span class="token parameter variable">--state</span> ESTABLISHED,RELATED <span class="token parameter variable">-j</span> ACCEPT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><h4 id="禁止ping包" tabindex="-1"><a class="header-anchor" href="#禁止ping包"><span>禁止ping包</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> icmp --icmp-type echo-request <span class="token parameter variable">-j</span> DROP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><h4 id="禁止所有其他包" tabindex="-1"><a class="header-anchor" href="#禁止所有其他包"><span>禁止所有其他包</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-P</span> INPUT DROP
iptables <span class="token parameter variable">-P</span> FORWARD DROP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="masquerade" tabindex="-1"><a class="header-anchor" href="#masquerade"><span>MASQUERADE</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> POSTROUTING <span class="token parameter variable">-s</span> <span class="token number">10.0</span>.0.30/32 <span class="token parameter variable">-j</span> MASQUERADE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><h4 id="nat" tabindex="-1"><a class="header-anchor" href="#nat"><span>NAT</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-I</span> FORWARD <span class="token parameter variable">-m</span> state <span class="token parameter variable">--state</span> RELATED,ESTABLISHED <span class="token parameter variable">-j</span> ACCEPT
iptables <span class="token parameter variable">-I</span> INPUT   <span class="token parameter variable">-m</span> state <span class="token parameter variable">--state</span> RELATED,ESTABLISHED <span class="token parameter variable">-j</span> ACCEPT
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> OUTPUT <span class="token parameter variable">-d</span> <span class="token number">55.55</span>.55.55/32 <span class="token parameter variable">-j</span> DNAT --to-destination <span class="token number">10.0</span>.0.30
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> PREROUTING <span class="token parameter variable">-d</span> <span class="token number">55.55</span>.55.55/32 <span class="token parameter variable">-j</span> DNAT --to-destination <span class="token number">10.0</span>.0.30
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> POSTROUTING <span class="token parameter variable">-s</span> <span class="token number">10.0</span>.0.30/32 <span class="token parameter variable">-j</span> SNAT --to-source <span class="token number">55.55</span>.55.55
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="端口映射" tabindex="-1"><a class="header-anchor" href="#端口映射"><span>端口映射</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> OUTPUT <span class="token parameter variable">-d</span> <span class="token number">55.55</span>.55.55/32 <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">80</span> <span class="token parameter variable">-j</span> DNAT --to-destination <span class="token number">10.10</span>.10.3:80
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> POSTROUTING <span class="token parameter variable">-m</span> conntrack <span class="token operator">!</span> <span class="token parameter variable">--ctstate</span> DNAT <span class="token parameter variable">-j</span> ACCEPT
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> PREROUTING <span class="token parameter variable">-d</span> <span class="token number">55.55</span>.55.55/32 <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">80</span> <span class="token parameter variable">-j</span> DNAT --to-destination <span class="token number">10.10</span>.10.3:80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="重置所有规则" tabindex="-1"><a class="header-anchor" href="#重置所有规则"><span>重置所有规则</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-F</span>
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-F</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-F</span>
iptables <span class="token parameter variable">-X</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nftables" tabindex="-1"><a class="header-anchor" href="#nftables"><span>nftables</span></a></h2><p><code>nftables</code> 是从内核 3.13 版本引入的新的数据包过滤框架，旨在替代现用的 <code>iptables</code> 框架。<code>nftables</code>引入了一个新的命令行工具<code>nft</code>，取代了之前的<code>iptables</code>、<code>ip6iptables</code>、<code>ebtables</code>等各种工具。</p><p>跟<code>iptables</code>相比，<code>nftables</code>带来了一系列的好处</p><ul><li>更易用易理解的语法</li><li>表和链是完全可配置的</li><li>匹配和目标之间不再有区别</li><li>在一个规则中可以定义多个动作</li><li>每个链和规则都没有内建的计数器</li><li>更好的动态规则集更新支持</li><li>简化<code>IPv4/IPv6</code>双栈管理</li><li>支持<code>set/map</code>等</li><li>支持级连（需要内核4.1+）</li></ul><p>跟<code>iptables</code>类似，<code>nftables</code>也是使用表和链来管理规则。其中，表包括<code>ip</code>、<code>arp</code>、<code>ip6</code>、<code>bridge</code>、<code>inet</code>和<code>netdev</code>等6个类型。下面是一些简单的例子。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 新建一个ip类型的表</span>
nft <span class="token function">add</span> table <span class="token function">ip</span> foo

<span class="token comment"># 列出所有表</span>
nft list tables

<span class="token comment"># 删除表</span>
nft delete table <span class="token function">ip</span> foo

<span class="token comment"># 添加链</span>
nft <span class="token function">add</span> table <span class="token function">ip</span> filter
nft <span class="token function">add</span> chain <span class="token function">ip</span> filter input <span class="token punctuation">{</span> <span class="token builtin class-name">type</span> filter hook input priority <span class="token number">0</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
nft <span class="token function">add</span> chain <span class="token function">ip</span> filter output <span class="token punctuation">{</span> <span class="token builtin class-name">type</span> filter hook output priority <span class="token number">0</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token comment"># 添加规则</span>
nft <span class="token function">add</span> rule filter output <span class="token function">ip</span> daddr <span class="token number">8.8</span>.8.8 counter
nft <span class="token function">add</span> rule filter output tcp dport <span class="token function">ssh</span> counter
nft insert rule filter output <span class="token function">ip</span> daddr <span class="token number">192.168</span>.1.1 counter

<span class="token comment"># 列出规则</span>
nft list table filter

<span class="token comment"># 删除规则</span>
nft list table filter <span class="token parameter variable">-a</span> <span class="token comment"># 查询handle是多少</span>
nft delete rule filter output handle <span class="token number">5</span>

<span class="token comment"># 删除链中所有规则</span>
nft delete rule filter output

<span class="token comment"># 删除表中所有规则</span>
nft flush table filter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,46)),a("ul",null,[a("li",null,[a("a",c,[e[0]||(e[0]=n("A Deep Dive into Iptables and Netfilter Architecture")),s(t)])]),a("li",null,[a("a",b,[e[1]||(e[1]=n("netfilter.org")),s(t)])]),a("li",null,[a("a",u,[e[2]||(e[2]=n("archlinux wiki - iptables")),s(t)])]),a("li",null,[a("a",m,[e[3]||(e[3]=n("nftables wiki")),s(t)])]),a("li",null,[a("a",v,[e[4]||(e[4]=n("Linux数据包路由原理、Iptables/netfilter入门学习")),s(t)])])])])}const f=l(o,[["render",h],["__file","02. Linux命令_iptables和netfilter.html.vue"]]),x=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/03.%20Linux%E7%BD%91%E7%BB%9C/02.%20Linux%E5%91%BD%E4%BB%A4_iptables%E5%92%8Cnetfilter.html","title":"Linux命令_iptables和netfilter","lang":"zh-CN","frontmatter":{"description":"Linux命令_iptables和netfilter iptables 是一个配置 Linux 内核防火墙的命令行工具，它基于内核的 netfilter 机制。新版本的内核（3.13+）也提供了 nftables，用于取代 iptables。 netfilter netfilter是Linux内核的包过滤框架，它提供了一系列的钩子（Hook）供其他模块...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/03.%20Linux%E7%BD%91%E7%BB%9C/02.%20Linux%E5%91%BD%E4%BB%A4_iptables%E5%92%8Cnetfilter.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Linux命令_iptables和netfilter"}],["meta",{"property":"og:description","content":"Linux命令_iptables和netfilter iptables 是一个配置 Linux 内核防火墙的命令行工具，它基于内核的 netfilter 机制。新版本的内核（3.13+）也提供了 nftables，用于取代 iptables。 netfilter netfilter是Linux内核的包过滤框架，它提供了一系列的钩子（Hook）供其他模块..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux命令_iptables和netfilter\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Linux命令_iptables和netfilter","slug":"linux命令-iptables和netfilter","link":"#linux命令-iptables和netfilter","children":[{"level":2,"title":"netfilter","slug":"netfilter","link":"#netfilter","children":[]},{"level":2,"title":"iptables","slug":"iptables","link":"#iptables","children":[{"level":3,"title":"表和链 (Tables/Chains)","slug":"表和链-tables-chains","link":"#表和链-tables-chains","children":[]},{"level":3,"title":"通过iptables的过程","slug":"通过iptables的过程","link":"#通过iptables的过程","children":[]},{"level":3,"title":"iptables示例","slug":"iptables示例","link":"#iptables示例","children":[]}]},{"level":2,"title":"nftables","slug":"nftables","link":"#nftables","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.24,"words":1573},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/03. Linux网络/02. Linux命令_iptables和netfilter.md","excerpt":"\\n<p>iptables 是一个配置 Linux 内核防火墙的命令行工具，它基于内核的 netfilter 机制。新版本的内核（3.13+）也提供了 nftables，用于取代 iptables。</p>\\n<h2>netfilter</h2>\\n<p>netfilter是Linux内核的包过滤框架，它提供了一系列的钩子（Hook）供其他模块控制包的流动。这些钩子包括：</p>\\n<ul>\\n<li><strong>NF_IP_PRE_ROUTING</strong>：刚刚通过数据链路层解包进入网络层的数据包通过此钩子，它在路由之前处理</li>\\n<li><strong>NF_IP_LOCAL_IN</strong>：经过路由查找后，送往本机（目的地址在本地）的包会通过此钩子</li>\\n<li><strong>NF_IP_FORWARD</strong>：不是本地产生的并且目的地不是本地的包（即转发的包）会通过此钩子</li>\\n<li><strong>NF_IP_LOCAL_OUT</strong>：所有本地生成的发往其他机器的包会通过该钩子</li>\\n<li><strong>NF_IP_POST_ROUTING</strong>：在包就要离开本机之前会通过该钩子，它在路由之后处理</li>\\n</ul>","autoDesc":true}');export{f as comp,x as data};
