import{_ as t,e as a,g as l,f as i,j as e,o as h}from"./app-CbGUE4hV.js";const n={};function r(d,s){return h(),a("div",null,s[0]||(s[0]=[l(`<h1 id="codehighlight" tabindex="-1"><a class="header-anchor" href="#codehighlight"><span>CodeHighlight</span></a></h1><h2 id="调研" tabindex="-1"><a class="header-anchor" href="#调研"><span>调研</span></a></h2><p>:::code(chat)<br> me:<br> 调研前端的代码高亮库，开源的话给出地址和star数</p><p>deepseek:</p><h3 id="代码高亮开源库调研" tabindex="-1"><a class="header-anchor" href="#代码高亮开源库调研"><span>代码高亮开源库调研</span></a></h3><p>以下是几款主流的前端代码高亮开源库的调研总结，涵盖功能特点、GitHub地址及Star数（数据截至2025年3月3日）：</p><h4 id="_1-highlight-js" tabindex="-1"><a class="header-anchor" href="#_1-highlight-js"><span>1. highlight.js</span></a></h4><ul><li>GitHub地址: <a href="https://github.com/highlightjs/highlight.js" target="_blank" rel="noopener noreferrer">github.com/highlightjs/highlight.js</a></li><li>Star数: <strong>24.1k</strong></li><li>特点: <ul><li>支持 <strong>196种编程语言</strong> 和 <strong>242种主题</strong>，自动检测语言类型。</li><li>轻量级（核心库仅约6KB），支持浏览器端和Node.js环境，兼容任何框架。</li><li>使用简单，通过 <code>&lt;pre&gt;&lt;code&gt;</code> 标签自动高亮，支持自定义标签和禁用高亮。</li><li>提供CDN加速，社区活跃，持续维护。</li></ul></li></ul><h4 id="_2-prismjs" tabindex="-1"><a class="header-anchor" href="#_2-prismjs"><span>2. PrismJS</span></a></h4><ul><li>GitHub地址: <a href="https://github.com/PrismJS/prism" target="_blank" rel="noopener noreferrer">github.com/PrismJS/prism</a></li><li>Star数: 约 <strong>12.8k</strong></li><li>特点: <ul><li>模块化设计，支持按需加载语言插件，核心库仅约 <strong>2KB</strong>。</li><li>提供丰富的主题扩展（如官方主题库 <a href="https://github.com/PrismJS/prism-themes" target="_blank" rel="noopener noreferrer">Prism-Themes</a>），支持代码行号、高亮特定行等高级功能。</li><li>兼容现代前端框架（React、Vue等），支持服务端渲染。</li></ul></li></ul><h4 id="_3-starry-night" tabindex="-1"><a class="header-anchor" href="#_3-starry-night"><span>3. Starry Night</span></a></h4><ul><li>GitHub地址: <a href="https://github.com/wooorm/starry-night" target="_blank" rel="noopener noreferrer">github.com/wooorm/starry-night</a></li><li>Star数: 约 <strong>3.2k</strong></li><li>特点: <ul><li>基于 <strong>TextMate语法引擎</strong>，支持 <strong>600+种语言</strong>，提供与GitHub一致的高亮效果。</li><li>支持生成HTML或AST（抽象语法树），适用于博客、文档网站及命令行工具。</li><li>依赖WebAssembly优化性能，支持深色/浅色主题切换。</li></ul></li></ul><h4 id="_4-shiki" tabindex="-1"><a class="header-anchor" href="#_4-shiki"><span>4. Shiki</span></a></h4><ul><li>GitHub地址: <a href="https://github.com/shikijs/shiki" target="_blank" rel="noopener noreferrer">github.com/shikijs/shiki</a></li><li>Star数: 约 <strong>7.6k</strong></li><li>特点: <ul><li>基于VS Code的高亮引擎，支持 <strong>VS Code主题</strong>，语法精准度高。</li><li>支持静态生成，适合静态网站（如Jekyll、Hugo），避免客户端计算开销。</li></ul></li></ul><h4 id="_5-react-syntax-highlighter" tabindex="-1"><a class="header-anchor" href="#_5-react-syntax-highlighter"><span>5. React Syntax Highlighter</span></a></h4><ul><li>GitHub地址: <a href="https://github.com/react-syntax-highlighter/react-syntax-highlighter" target="_blank" rel="noopener noreferrer">github.com/react-syntax-highlighter/react-syntax-highlighter</a></li><li>Star数: 约 <strong>4.1k</strong></li><li>特点: <ul><li>专为React设计，封装了PrismJS和Highlight.js，提供组件化调用。</li><li>支持代码行高亮、行号、自定义样式等，适用于动态内容渲染。</li></ul></li></ul><h4 id="对比与选择建议" tabindex="-1"><a class="header-anchor" href="#对比与选择建议"><span>对比与选择建议</span></a></h4><ul><li>轻量级需求：优先考虑 <strong>highlight.js</strong> 或 <strong>PrismJS</strong>，适合快速集成且无需复杂配置。</li><li>高精度与主题多样性：选择 <strong>Starry Night</strong> 或 <strong>Shiki</strong>，尤其适合技术文档或对标GitHub风格的项目。</li><li>框架集成：React项目推荐 <strong>React Syntax Highlighter</strong>，Vue项目可使用 <strong>highlight.js的Vue插件</strong>。</li></ul><p>用户可通过GitHub链接查看详细文档和最新数据。若需更完整的库列表或主题示例，可参考各项目的官方Demo页面（如highlight.js的<a href="https://highlightjs.org/static/demo/" target="_blank" rel="noopener noreferrer">Demo</a>。</p><p>以下是对 <strong>Shiki</strong>、<strong>Prism.js</strong> 和 <strong>Highlight.js</strong> 三款主流前端代码高亮库的对比分析，结合功能特性、性能表现及适用场景，给出选用建议：</p><p>@chat me</p><p>重点比较 shiki prismjs highlight.js 三者，突出他们的优点缺点，给出选用建议</p><p>@chat deepseek</p><h3 id="重点比较-shiki-prismjs-highlight-js" tabindex="-1"><a class="header-anchor" href="#重点比较-shiki-prismjs-highlight-js"><span>重点比较 shiki prismjs highlight.js</span></a></h3><h4 id="_1-shiki" tabindex="-1"><a class="header-anchor" href="#_1-shiki"><span>1. Shiki</span></a></h4><ul><li>优点 <ol><li>高精度分词<br> 基于 VS Code 的语法引擎和 TextMate 语法规则，分词精细度接近专业编辑器（如 VSCode、PyCharm），支持代码结构中的装饰器、f-string、参数类型等复杂语法元素的区分。</li><li>主题丰富性<br> 支持直接使用 VS Code 主题，提供与编辑器一致的视觉效果，且支持深浅色模式切换。</li><li>静态生成优化<br> 适合静态网站（如 Jekyll、Hugo），在构建时生成高亮代码，减少客户端计算开销。</li><li>性能高效<br> 通过 WebAssembly 优化，支持细粒度语言和主题的按需加载，避免冗余资源加载。</li></ol></li><li>缺点 <ol><li>客户端动态渲染性能受限<br> 若需在浏览器端动态高亮代码，依赖 WebAssembly 可能增加初始化耗时。</li><li>配置复杂度较高<br> 需要手动管理语言包和主题，对新手不够友好。</li></ol></li></ul><h4 id="_2-prism-js" tabindex="-1"><a class="header-anchor" href="#_2-prism-js"><span>2. Prism.js</span></a></h4><ul><li>优点 <ol><li>轻量灵活<br> 核心库仅 2KB，支持按需加载语言和插件（如行号、复制按钮），适合对性能敏感的场景。</li><li>扩展性强<br> 提供丰富的插件生态（如代码折叠、语言别名映射），支持自定义主题和样式。</li><li>框架友好<br> 与 Vue、React 等现代框架集成简单，支持服务端渲染。</li><li>分词表现中上<br> 分词精度优于 Highlight.js，但略逊于 Shiki，能满足大多数常见需求。</li></ol></li><li>缺点 <ol><li>主题风格有限<br> 官方主题数量较少，需依赖第三方主题库（如 Prism-Themes）扩展。</li><li>动态内容需手动触发<br> 在动态渲染场景中需调用 <code>Prism.highlightAll()</code> 手动更新高亮。</li></ol></li></ul><h4 id="highlight-js" tabindex="-1"><a class="header-anchor" href="#highlight-js"><span>Highlight.js</span></a></h4><ul><li>优点 <ol><li>开箱即用<br> 自动检测代码语言，无需手动指定，支持 196 种语言和 242 种主题，适合快速集成。</li><li>社区活跃<br> 维护时间长，文档丰富，兼容性广泛。</li><li>轻量级<br> 核心库约 6KB，CDN 支持加速加载。</li></ol></li><li>缺点 <ol><li>分词粗糙<br> 对复杂语法（如装饰器、f-string）支持不足，部分语言高亮效果与专业工具有明显差距。</li><li>扩展功能有限<br> 需要自行实现行号、复制等功能，插件生态较弱。</li><li>样式兼容问题<br> 某些主题在移动端可能导致代码换行错位，需额外 CSS 修复。</li></ol></li></ul><h4 id="综合对比与选用建议" tabindex="-1"><a class="header-anchor" href="#综合对比与选用建议"><span>综合对比与选用建议</span></a></h4><table><thead><tr><th>维度</th><th>Shiki</th><th>Prism.js</th><th>Highlight.js</th></tr></thead><tbody><tr><td>分词精度</td><td>极高（近编辑器级）</td><td>中上</td><td>一般</td></tr><tr><td>主题丰富性</td><td>高（VS Code 主题）</td><td>中（依赖扩展）</td><td>高（原生主题多）</td></tr><tr><td>性能</td><td>静态生成快，动态稍慢</td><td>轻量灵活</td><td>轻量但动态渲染效率一般</td></tr><tr><td>框架支持</td><td>通用（需配置）</td><td>友好（Vue/React插件）</td><td>通用（需手动封装）</td></tr><tr><td>适用场景</td><td>静态站点、文档</td><td>动态应用、博客</td><td>快速集成、简单需求</td></tr></tbody></table><h4 id="选用建议" tabindex="-1"><a class="header-anchor" href="#选用建议"><span>选用建议</span></a></h4><ol start="2"><li>追求高精度与美观<br> 选择 <strong>Shiki</strong>，尤其适合技术文档、对标 GitHub/VSCode 风格的项目。</li><li>轻量灵活与动态渲染<br> 选择 <strong>Prism.js</strong>，适合需要行号、复制等插件功能的动态应用或博客。</li><li>快速集成与简单需求<br> 选择 <strong>Highlight.js</strong>，适合对高亮精度要求不高的小型项目或快速原型开发。</li></ol><h4 id="附加推荐" tabindex="-1"><a class="header-anchor" href="#附加推荐"><span>附加推荐</span></a></h4><ul><li>React/Vue 项目：可结合框架专用封装（如 <code>react-syntax-highlighter</code> 或 <code>vue-highlightjs</code>）简化集成。</li><li>性能优化：若使用 Shiki，建议通过静态生成减少客户端负担；若使用 Prism.js，按需加载语言和插件。</li></ul><p>通过以上分析，可根据项目需求选择最合适的工具。如需进一步了解具体配置，可参考各库的官方文档或示例页面。</p><p>@chat me</p><p>你还应该给出他们分别在哪里有应用。以及帮我看下obsidian、typora、vuepress、vscode分别用的什么方案？</p><p>@chat deepseek</p><h3 id="实际应用场景" tabindex="-1"><a class="header-anchor" href="#实际应用场景"><span>实际应用场景</span></a></h3><h4 id="_1-shiki-1" tabindex="-1"><a class="header-anchor" href="#_1-shiki-1"><span>1. Shiki</span></a></h4><ul><li>应用场景 <ul><li>静态站点生成器（如 <strong>VuePress</strong>、<strong>Docusaurus</strong> 的插件）</li><li>技术文档平台（如 <strong>VitePress</strong> 默认高亮方案）</li><li>需要精准语法高亮的 Markdown 渲染工具（如 <strong>GitBook</strong> 的扩展方案）</li></ul></li></ul><h4 id="_2-prism-js-1" tabindex="-1"><a class="header-anchor" href="#_2-prism-js-1"><span>2. Prism.js</span></a></h4><ul><li>应用场景 <ul><li>博客系统（如 <strong>Hexo</strong>、<strong>Gatsby</strong> 的默认高亮）</li><li>动态网页应用（如 <strong>MDN Web Docs</strong> 的代码示例）</li><li>富文本编辑器（如 <strong>Tiptap</strong> 的代码块插件）</li></ul></li></ul><h4 id="_3-highlight-js" tabindex="-1"><a class="header-anchor" href="#_3-highlight-js"><span>3. Highlight.js</span></a></h4><ul><li>应用场景 <ul><li>快速集成的小型项目（如 <strong>Discourse 论坛</strong> 的代码片段）</li><li>CMS 系统（如 <strong>WordPress</strong> 的代码高亮插件）</li><li>在线代码展示工具（如 <strong>CodePen</strong> 的早期版本）</li></ul></li></ul><h4 id="再次总结调研" tabindex="-1"><a class="header-anchor" href="#再次总结调研"><span>再次总结调研</span></a></h4><table><thead><tr><th>工具</th><th>高亮方案</th><th>说明</th></tr></thead><tbody><tr><td>Obsidian</td><td>基于 <strong>CodeMirror 6</strong> + <strong>Lezer 语法树</strong></td><td>依赖 CodeMirror 的语法解析能力，深度集成 Markdown 编辑与实时高亮。</td></tr><tr><td>Typora</td><td>自研高亮引擎（推测基于 <strong>CodeMirror</strong> 或 <strong>Prism.js</strong> 定制）</td><td>高亮风格简洁，支持实时渲染，但未公开技术细节。</td></tr><tr><td>VuePress</td><td>默认使用 <strong>Prism.js</strong>，支持切换为 <strong>Shiki</strong>（需配置）</td><td>官方推荐 Shiki 作为静态生成优化方案，动态模式下仍依赖 Prism.js。</td></tr><tr><td>VS Code</td><td>基于 <strong>TextMate 语法引擎</strong>（与 <strong>Shiki</strong> 同源）</td><td>使用 TextMate 的 <code>.tmLanguage</code> 语法规则，支持扩展主题和语法包。</td></tr><tr><td>:::</td><td></td><td></td></tr></tbody></table><h2 id="我的一个需求" tabindex="-1"><a class="header-anchor" href="#我的一个需求"><span>我的一个需求</span></a></h2><p>:::code(chat)</p><p>me:<br> 假如我现在的需求是：需要在客户端进行代码编辑并实时高亮，你最推荐哪个？</p><p>deepseek:</p><h3 id="需求分析-客户端代码编辑-实时高亮" tabindex="-1"><a class="header-anchor" href="#需求分析-客户端代码编辑-实时高亮"><span>需求分析：客户端代码编辑 + 实时高亮</span></a></h3><h4 id="核心挑战" tabindex="-1"><a class="header-anchor" href="#核心挑战"><span>核心挑战</span></a></h4><ol><li>实时性：编辑时需即时触发高亮，对性能敏感。</li><li>精准性：需支持复杂语法（如 JSX、TypeScript 类型注解）。</li><li>轻量化：避免因高亮库过大导致页面卡顿。</li></ol><h4 id="方案对比" tabindex="-1"><a class="header-anchor" href="#方案对比"><span>方案对比</span></a></h4><table><thead><tr><th>库</th><th>实时高亮适配性</th><th>关键限制</th></tr></thead><tbody><tr><td>Shiki</td><td>❌ 较差<br>（依赖静态生成或 WebAssembly，动态编辑场景初始化延迟较高）</td><td>需预加载语言和主题，动态渲染性能较差，适合静态内容展示。</td></tr><tr><td>Prism.js</td><td>✅ 优秀<br>（轻量，支持按需加载语言，可监听输入事件手动触发高亮）</td><td>需调用 <code>Prism.highlightAll()</code> 更新高亮，对高频输入需做防抖优化。</td></tr><tr><td>Highlight.js</td><td>✅ 一般<br>（自动检测语言，但分词粗糙，复杂语法高亮效果差）</td><td>无法精准处理 TS/JSX 等嵌套语法，适合简单代码片段。</td></tr></tbody></table><h4 id="最终推荐-prism-js" tabindex="-1"><a class="header-anchor" href="#最终推荐-prism-js"><span>最终推荐：Prism.js</span></a></h4><p>理由：</p><ol><li>平衡性能与精度：轻量核心（2KB）支持按需加载语言，分词精度满足大多数动态编辑场景。</li><li>扩展性强：可通过插件添加行号、代码复制、折叠等功能，适配编辑器需求。</li><li>社区支持：丰富的示例和框架封装（如 <code>vue-prism-editor</code>、<code>react-simple-code-editor</code>）。</li></ol><h4 id="优化方向" tabindex="-1"><a class="header-anchor" href="#优化方向"><span>优化方向</span></a></h4><ol><li>高频输入防抖<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">editor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;input&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  clearTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  timeout</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> Prism</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">highlightAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>按需加载语言<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 仅加载必要语言 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prism-core.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prism-javascript.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;prism-typescript.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>主题适配<br> 使用 VS Code 风格主题库（如 <a href="https://github.com/PrismJS/prism-themes" target="_blank" rel="noopener noreferrer">Prism Theme VS Code</a>）提升视觉效果。</li></ol><h4 id="替代方案参考" tabindex="-1"><a class="header-anchor" href="#替代方案参考"><span>替代方案参考</span></a></h4><p>若对高亮精度要求极高且可接受性能妥协：</p><ul><li><strong>Shiki + 定制 Web Worker</strong>：<br> 将 Shiki 的高亮计算移至 Web Worker 线程，避免主线程阻塞，示例：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 主线程</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> worker</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;shiki-worker.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">editor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">onInput</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">postMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Worker 线程</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">shiki</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getHighlighter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">theme</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;github-dark&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">highlighter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">onmessage</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> html</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> highlighter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">codeToHtml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">lang</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;typescript&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">postMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h4><ul><li><strong>优先选 Prism.js</strong>：适合大多数实时编辑场景，轻量且易扩展。</li><li><strong>备选 Shiki + Worker</strong>：仅在高精度需求且愿意投入性能优化时采用。</li><li><strong>避免 Highlight.js</strong>：除非项目对高亮质量要求极低。</li></ul><p>可根据实际项目复杂度选择方案，建议从 Prism.js 开始快速验证原型。<br> :::</p><h2 id="区别、应用" tabindex="-1"><a class="header-anchor" href="#区别、应用"><span>区别、应用</span></a></h2>`,70),i("div",{class:"ab-note drop-shadow"},[i("table",{class:"ab-table ab-branch-table"},[i("tbody",null,[i("tr",null,[i("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[i("div",null,[i("p",null,[i("a",{href:"https://github.com/highlightjs/highlight.js",target:"_blank",rel:"noopener noreferrer"},"highlight.js")])])]),i("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[i("div",null,[i("p",null,"24.1k")])]),i("td",{rowspan:"1",col_index:"2",class:"markdown-rendered"},[i("div",null,[i("p",null,"2 months ago")])])]),i("tr",null,[i("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[i("div",null,[i("p",null,[i("a",{href:"https://github.com/PrismJS/prism",target:"_blank",rel:"noopener noreferrer"},"PrismJS")])])]),i("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[i("div",null,[i("p",null,"12.5k")])]),i("td",{rowspan:"1",col_index:"2",class:"markdown-rendered"},[i("div",null,[i("p",null,"3 years ago")])])]),i("tr",null,[i("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[i("div",null,[i("p",null,[i("a",{href:"https://github.com/shikijs/shiki",target:"_blank",rel:"noopener noreferrer"},"Shiki")])])]),i("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[i("div",null,[i("p",null,"11.0k")])]),i("td",{rowspan:"1",col_index:"2",class:"markdown-rendered"},[i("div",null,[i("p",null,"9 hours age")])])])])])],-1),i("p",null,"实际应用",-1),i("ul",null,[i("li",null,[i("a",{href:"https://theme-hope.vuejs.press/zh/guide/markdown/code/fence.html",target:"_blank",rel:"noopener noreferrer"},"vuepress-hope-theme 代码块"),e(" 使用的是Shiki和Prismjs")]),i("li",null,"Obsidian实时模式、Typora使用的是CodeMirror (你可以使用CodeMirror官网上的预设方案来修改代码块样式)"),i("li",null,"Obsidian阅读模式: 好像是Shiki"),i("li",null,"vscode: TextMate Grammars")],-1)]))}const o=t(n,[["render",r],["__file","CodeHighlight.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/03.%20Tools/PrismJS%E3%80%81CodeMirror%E3%80%81Shiki/CodeHighlight.html","title":"CodeHighlight","lang":"zh-CN","frontmatter":{"create_time":"2025-03-03T00:00:00.000Z","Author":"LincZero","description":"CodeHighlight 调研 :::code(chat) me: 调研前端的代码高亮库，开源的话给出地址和star数 deepseek: 代码高亮开源库调研 以下是几款主流的前端代码高亮开源库的调研总结，涵盖功能特点、GitHub地址及Star数（数据截至2025年3月3日）： 1. highlight.js GitHub地址: github.co...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/03.%20Tools/PrismJS%E3%80%81CodeMirror%E3%80%81Shiki/CodeHighlight.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"CodeHighlight"}],["meta",{"property":"og:description","content":"CodeHighlight 调研 :::code(chat) me: 调研前端的代码高亮库，开源的话给出地址和star数 deepseek: 代码高亮开源库调研 以下是几款主流的前端代码高亮开源库的调研总结，涵盖功能特点、GitHub地址及Star数（数据截至2025年3月3日）： 1. highlight.js GitHub地址: github.co..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CodeHighlight\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":8.99,"words":2696},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/03. Tools/PrismJS、CodeMirror、Shiki/CodeHighlight.md","excerpt":"\\n<h2>调研</h2>\\n<p>:::code(chat)<br>\\nme:<br>\\n调研前端的代码高亮库，开源的话给出地址和star数</p>\\n<p>deepseek:</p>\\n<h3>代码高亮开源库调研</h3>\\n<p>以下是几款主流的前端代码高亮开源库的调研总结，涵盖功能特点、GitHub地址及Star数（数据截至2025年3月3日）：</p>\\n<h4>1. highlight.js</h4>\\n<ul>\\n<li>GitHub地址: <a href=\\"https://github.com/highlightjs/highlight.js\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">github.com/highlightjs/highlight.js</a></li>\\n<li>Star数: <strong>24.1k</strong></li>\\n<li>特点:\\n<ul>\\n<li>支持 <strong>196种编程语言</strong> 和 <strong>242种主题</strong>，自动检测语言类型。</li>\\n<li>轻量级（核心库仅约6KB），支持浏览器端和Node.js环境，兼容任何框架。</li>\\n<li>使用简单，通过 <code>&lt;pre&gt;&lt;code&gt;</code> 标签自动高亮，支持自定义标签和禁用高亮。</li>\\n<li>提供CDN加速，社区活跃，持续维护。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/03. Tools/PrismJS、CodeMirror、Shiki/CodeHighlight.md","value":{"title":"CodeHighlight","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/03. Tools/PrismJS、CodeMirror、Shiki/CodeHighlight.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{o as comp,k as data};
