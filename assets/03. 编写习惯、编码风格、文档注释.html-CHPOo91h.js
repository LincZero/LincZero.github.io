import{_ as s,c as n,e as a,o as l}from"./app-DnpufS1x.js";const t={};function e(h,i){return l(),n("div",null,i[0]||(i[0]=[a(`<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="编写习惯" tabindex="-1"><a class="header-anchor" href="#编写习惯"><span>编写习惯</span></a></h1><h2 id="注释类" tabindex="-1"><a class="header-anchor" href="#注释类"><span>注释类</span></a></h2><h3 id="文档字符串-类似javadoc的文档注释" tabindex="-1"><a class="header-anchor" href="#文档字符串-类似javadoc的文档注释"><span>文档字符串（类似JavaDoc的文档注释）</span></a></h3><ul><li><p>格式</p><ul><li>第一行应该是关于对象用途的简介。简短起见，不用明确的陈述对象名或类型（Java则需要）。这一行应该以大写字母开头，以句号结尾</li><li>第二行应该空出来，与接下来的详细描述明确分隔</li><li>接下来的文档应该有一或多段描述对象的调用约定、边界效应等</li><li>第一行之后的第一个非空行决定了整个文档的缩进格式（我们不用第一行是因为它通常紧靠着起始的引号，缩进格式显示的不清楚。）</li></ul></li><li><p>作用</p><ul><li>可以调用函数的<code>__doc__</code>属性查看</li></ul></li><li><p>demo</p><ul><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  &gt;&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> my_function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  ...</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     &quot;&quot;&quot;Do nothing, but document it.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ...</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ...     No, really, it doesn&#39;t do anything.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ...     &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  ...</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     pass</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  &gt;&gt;&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(my_function.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__doc__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  Do nothing, but document it.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      No, really, it doesn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;t do anything.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="函数注解-参数和返回值的注释" tabindex="-1"><a class="header-anchor" href="#函数注解-参数和返回值的注释"><span>函数注解（参数和返回值的注释）</span></a></h3><ul><li><p>概念</p><ul><li><a href="https://docs.python.org/3/reference/compound_stmts.html#function" target="_blank" rel="noopener noreferrer">函数注解</a> 是关于用户自定义的函数的完全可选的、随意的元数据信息。无论 Python 本身或者标准库中都没有使用函数注解；本节只是描述了语法。第三方的项目是自由地为文档，类型检查，以及其它用途选择函数注解。</li><li>注解是以字典形式存储在函数的 <code>__annotations__</code> 属性中，对函数的其它部分没有任何影响</li></ul></li><li><p>格式</p><ul><li><code>参数注解</code>（Parameter annotations）是定义在参数名称的<strong>冒号后面</strong>，紧随着一个用来表示注解的值得表达式</li><li><code>返回注释</code>（Return annotations）是定义在一个 <code>-&gt;</code> 后面，紧随着一个表达式，在冒号与 <code>-&gt;</code> 之间。下面的示例包含一个位置参数，一个关键字参数，和没有意义的返回值注释</li></ul></li><li><p>作用</p><ul><li>可以调用<code>__annotations__</code>（注释文）查看</li></ul></li><li><p>demo</p><ul><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  &gt;&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">ham</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> eggs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;spam&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Nothing to see here&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  ...</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">     print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Annotations:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, f.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__annotations__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  ...</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">     print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Arguments:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, ham, eggs)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  &gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;wonderful&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  Annotations: {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;eggs&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;int&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;return&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Nothing to see here&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ham&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  Arguments: wonderful spam</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="todo注释" tabindex="-1"><a class="header-anchor" href="#todo注释"><span>TODO注释</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># @</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">TODO</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">: Fix ME!!! 不用@符号也行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注释的样式和有所不同，会高亮</p><p>PyCharm中，左下角TODO或双Shift搜索TODO，可以弹出TODO界面，查看所有有TODO注释的代码</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 考虑个人常用的符号</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># @</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">TODO</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">: fixing bug</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># @Question</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># @Attention</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# @noexcept</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # @except</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # @Fixed Bug</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # @Fixing Bug</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># @</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">NOTE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:except</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编码风格" tabindex="-1"><a class="header-anchor" href="#编码风格"><span>编码风格</span></a></h2><p>对于 Python，<a href="http://www.python.org/dev/peps/pep-0008" target="_blank" rel="noopener noreferrer">PEP 8</a> 引入了大多数项目遵循的风格指导。它给出了一个高度可读，视觉友好的编码风格</p><p>每个 Python 开发者都应该读一下，大多数要点都会对你有帮助：</p><ul><li><p>使用 <strong>4 空格</strong>缩进，而非 TAB</p><p>在小缩进（可以嵌套更深）和大缩进（更易读）之间，4空格是一个很好的折中。TAB 引发了一些混乱，最好弃用</p></li><li><p>折行以确保其不会超过 79 个字符</p><p>这有助于小显示器用户阅读，也可以让大显示器能并排显示几个代码文件</p></li><li><p>使用空行分隔函数和类，以及函数中的大块代码</p></li><li><p>可能的话，<strong>注释独占一行</strong></p></li><li><p>使用<strong>文档字符串</strong></p></li><li><p>把<strong>空格放到操作符两边，以及逗号后面，但是括号里侧不加空格</strong>：<code>a = f(1, 2) + g(3, 4)</code></p></li><li><p>统一函数和类<strong>命名</strong></p><p>推荐类名用 <code>大驼峰命名</code>， 函数和方法名用 <code>小写_和_下划线</code>。总是用 <code>self</code> 作为方法的第一个参数（关于类和方法的知识详见 <a href="https://www.runoob.com/manual/pythontutorial3/docs/html/classes.html#tut-firstclasses" target="_blank" rel="noopener noreferrer">初识类</a> ）</p></li><li><p>不要使用花哨的编码，如果你的代码的目的是要在国际化环境。Python 的默认情况下，UTF-8，甚至普通的 ASCII 总是工作的最好</p></li><li><p>同样，也不要使用非 ASCII 字符的标识符，除非是不同语种的会阅读或者维护代码。</p></li></ul><h2 id="编码习惯" tabindex="-1"><a class="header-anchor" href="#编码习惯"><span>编码习惯</span></a></h2>`,18)]))}const k=s(t,[["render",e],["__file","03. 编写习惯、编码风格、文档注释.html.vue"]]),d=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/11.%20%E7%BC%96%E5%86%99%E4%B9%8B%E5%A4%96/03.%20%E7%BC%96%E5%86%99%E4%B9%A0%E6%83%AF%E3%80%81%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC%E3%80%81%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 编写习惯 注释类 文档字符串（类似JavaDoc的文档注释） 格式 第一行应该是关于对象用途的简介。简短起见，不用明确的陈述对象名或类型（Java则需要）。这一行应该以大写字母开头，以句号结尾 第二行应该空出来，与接下来的详细描述明确分隔 接下来的文档应该有一或多段描述对象的调用约定、边界效应等 第一行之后的第一个非空行决定了整个文...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/11.%20%E7%BC%96%E5%86%99%E4%B9%8B%E5%A4%96/03.%20%E7%BC%96%E5%86%99%E4%B9%A0%E6%83%AF%E3%80%81%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC%E3%80%81%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 编写习惯 注释类 文档字符串（类似JavaDoc的文档注释） 格式 第一行应该是关于对象用途的简介。简短起见，不用明确的陈述对象名或类型（Java则需要）。这一行应该以大写字母开头，以句号结尾 第二行应该空出来，与接下来的详细描述明确分隔 接下来的文档应该有一或多段描述对象的调用约定、边界效应等 第一行之后的第一个非空行决定了整个文..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"编写习惯","slug":"编写习惯","link":"#编写习惯","children":[{"level":2,"title":"注释类","slug":"注释类","link":"#注释类","children":[{"level":3,"title":"文档字符串（类似JavaDoc的文档注释）","slug":"文档字符串-类似javadoc的文档注释","link":"#文档字符串-类似javadoc的文档注释","children":[]},{"level":3,"title":"函数注解（参数和返回值的注释）","slug":"函数注解-参数和返回值的注释","link":"#函数注解-参数和返回值的注释","children":[]},{"level":3,"title":"TODO注释","slug":"todo注释","link":"#todo注释","children":[]}]},{"level":2,"title":"编码风格","slug":"编码风格","link":"#编码风格","children":[]},{"level":2,"title":"编码习惯","slug":"编码习惯","link":"#编码习惯","children":[]}]}],"git":{},"readingTime":{"minutes":3.28,"words":983},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/11. 编写之外/03. 编写习惯、编码风格、文档注释.md","excerpt":"\\n<h1>目录</h1>\\n<h1>编写习惯</h1>\\n<h2>注释类</h2>\\n<h3>文档字符串（类似JavaDoc的文档注释）</h3>\\n<ul>\\n<li>\\n<p>格式</p>\\n<ul>\\n<li>第一行应该是关于对象用途的简介。简短起见，不用明确的陈述对象名或类型（Java则需要）。这一行应该以大写字母开头，以句号结尾</li>\\n<li>第二行应该空出来，与接下来的详细描述明确分隔</li>\\n<li>接下来的文档应该有一或多段描述对象的调用约定、边界效应等</li>\\n<li>第一行之后的第一个非空行决定了整个文档的缩进格式（我们不用第一行是因为它通常紧靠着起始的引号，缩进格式显示的不清楚。）</li>\\n</ul>\\n</li>\\n<li>\\n<p>作用</p>\\n<ul>\\n<li>可以调用函数的<code>__doc__</code>属性查看</li>\\n</ul>\\n</li>\\n<li>\\n<p>demo</p>\\n<ul>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">  &gt;&gt;&gt;</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> def</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> my_function</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">():</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#D19A66\\">  ...</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">     \\"\\"\\"Do nothing, but document it.</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  ...</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  ...     No, really, it doesn't do anything.</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  ...     \\"\\"\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#D19A66\\">  ...</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">     pass</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#D19A66\\">  ...</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">  &gt;&gt;&gt;</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> print</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(my_function.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">__doc__</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  Do nothing, but document it.</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">      No, really, it doesn</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'t do anything.</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/11. 编写之外/03. 编写习惯、编码风格、文档注释.md","value":{"title":"03. 编写习惯、编码风格、文档注释","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/11. 编写之外/03. 编写习惯、编码风格、文档注释.md","outlink":[],"backlink":[]}}],"links":[]}}}`);export{k as comp,d as data};
