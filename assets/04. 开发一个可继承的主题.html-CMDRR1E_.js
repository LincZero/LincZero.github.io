import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as l,c as s,a as e,b as t,d as i,e as o}from"./app-wsUEcXLu.js";const d={},c=e("h1",{id:"开发一个可继承的主题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#开发一个可继承的主题"},[e("span",null,"开发一个可继承的主题")])],-1),m=e("p",null,"有时用户可能希望对一个主题进行一些小改动，但是又不想 Fork 并修改整个项目。",-1),p={href:"https://vuepress.github.io/zh/reference/theme-api.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://ecosystem.vuejs.press/zh/themes/default/extending.html",target:"_blank",rel:"noopener noreferrer"},v=o(`<h2 id="布局插槽" tabindex="-1"><a class="header-anchor" href="#布局插槽"><span>布局插槽</span></a></h2><p>这种方式需要你来决定主题的哪些部分是可以被扩展的，它更适合用于一些常见的自定义需求，比如页眉或页脚。</p><p>你只需要在你的布局文件中提供 slots ，并告诉用户如何使用它们即可：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;template&gt;
  &lt;div class=&quot;my-theme-layout&quot;&gt;
    &lt;slot name=&quot;page-header&quot; /&gt;
    &lt;Content /&gt;
    &lt;slot name=&quot;page-footer&quot; /&gt;
  &lt;/div&gt;
&lt;/template&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件别名" tabindex="-1"><a class="header-anchor" href="#组件别名"><span>组件别名</span></a></h2><p>这种方式需要你考虑清楚你的主题的哪些组件可以被替换，并且你需要将组件拆分到合适的粒度。</p><p>首先，为你主题的可替换组件设置 <code>alias</code> 别名：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>import type { Theme } from &#39;vuepress/core&#39;
import { getDirname, path } from &#39;vuepress/utils&#39;

const __dirname = getDirname(import.meta.url)

export const fooTheme = (options): Theme =&gt; ({
  name: &#39;vuepress-theme-foo&#39;,
  alias: {
    // 为可替换的组件设置别名
    &#39;@theme/Navbar.vue&#39;: path.resolve(__dirname, &#39;components/Navbar.vue&#39;),
    &#39;@theme/Sidebar.vue&#39;: path.resolve(__dirname, &#39;components/Sidebar.vue&#39;),
  },
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，在你的主题中通过别名来使用这些组件：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;script setup lang=&quot;ts&quot;&gt;
import Navbar from &#39;@theme/Navbar.vue&#39;
import Sidebar from &#39;@theme/Sidebar.vue&#39;
&lt;/script&gt;

&lt;template&gt;
  &lt;div class=&quot;my-theme-layout&quot;&gt;
    &lt;Navbar /&gt;
    &lt;Sidebar /&gt;
    &lt;Content /&gt;
  &lt;/div&gt;
&lt;/template&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，用户在继承或使用你的主题时，就可以通过覆盖 <code>alias</code> 来替换特定的组件了。</p>`,11);function h(b,E){const n=r("ExternalLinkIcon");return l(),s("div",null,[c,m,e("p",null,[t("借助于 "),e("a",p,[t("主题 API"),i(n)]),t(" ，你可以让用户继承你的主题，允许用户对你的主题进行改动。")]),e("p",null,[t("你肯定已经知道了如何 "),e("a",u,[t("继承默认主题"),i(n)]),t(" 。接下来我们将介绍如何让你的主题像默认主题一样被用户继承。")]),v])}const A=a(d,[["render",h],["__file","04. 开发一个可继承的主题.html.vue"]]),f=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/04.%20Cookbook/04.%20%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E7%BB%A7%E6%89%BF%E7%9A%84%E4%B8%BB%E9%A2%98.html","title":"开发一个可继承的主题","lang":"zh-CN","frontmatter":{"description":"开发一个可继承的主题 有时用户可能希望对一个主题进行一些小改动，但是又不想 Fork 并修改整个项目。 借助于 主题 API ，你可以让用户继承你的主题，允许用户对你的主题进行改动。 你肯定已经知道了如何 继承默认主题 。接下来我们将介绍如何让你的主题像默认主题一样被用户继承。 布局插槽 这种方式需要你来决定主题的哪些部分是可以被扩展的，它更适合用于一...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/04.%20Cookbook/04.%20%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E7%BB%A7%E6%89%BF%E7%9A%84%E4%B8%BB%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"开发一个可继承的主题"}],["meta",{"property":"og:description","content":"开发一个可继承的主题 有时用户可能希望对一个主题进行一些小改动，但是又不想 Fork 并修改整个项目。 借助于 主题 API ，你可以让用户继承你的主题，允许用户对你的主题进行改动。 你肯定已经知道了如何 继承默认主题 。接下来我们将介绍如何让你的主题像默认主题一样被用户继承。 布局插槽 这种方式需要你来决定主题的哪些部分是可以被扩展的，它更适合用于一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发一个可继承的主题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"开发一个可继承的主题","slug":"开发一个可继承的主题","link":"#开发一个可继承的主题","children":[{"level":2,"title":"布局插槽","slug":"布局插槽","link":"#布局插槽","children":[]},{"level":2,"title":"组件别名","slug":"组件别名","link":"#组件别名","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/04. Cookbook/04. 开发一个可继承的主题.md","excerpt":"\\n<p>有时用户可能希望对一个主题进行一些小改动，但是又不想 Fork 并修改整个项目。</p>\\n<p>借助于 <a href=\\"https://vuepress.github.io/zh/reference/theme-api.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">主题 API</a> ，你可以让用户继承你的主题，允许用户对你的主题进行改动。</p>\\n<p>你肯定已经知道了如何 <a href=\\"https://ecosystem.vuejs.press/zh/themes/default/extending.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">继承默认主题</a> 。接下来我们将介绍如何让你的主题像默认主题一样被用户继承。</p>","autoDesc":true}');export{A as comp,f as data};
