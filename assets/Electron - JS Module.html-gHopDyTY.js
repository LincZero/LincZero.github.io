import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-Ld2qzqw_.js";const e={},p=t(`<h1 id="electron" tabindex="-1"><a class="header-anchor" href="#electron"><span>Electron</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><p>[TOC]</p><h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h1><p>开源：GitHub开源框架，开发产品可商用</p><p>前置知识：html、css、JavaScript</p><p>平台：跨平台，Window、Mac、Linux</p><p>Electron结构：<code>Electron</code>=<code>Chromium</code>+<code>Node.js</code>+<code>Native API</code></p><p>开发产品：VSCode、Atom、slack、wordpress</p><h1 id="开发环境搭建" tabindex="-1"><a class="header-anchor" href="#开发环境搭建"><span>开发环境搭建</span></a></h1><p>Node.js</p><blockquote><p>去官网下<code>nodejs.org</code></p></blockquote><h1 id="项目创建" tabindex="-1"><a class="header-anchor" href="#项目创建"><span>项目创建</span></a></h1><h2 id="helloworld" tabindex="-1"><a class="header-anchor" href="#helloworld"><span>HelloWorld</span></a></h2><p>终端</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> init <span class="token parameter variable">-y</span> <span class="token comment"># 初始化，npm install也行？</span>
<span class="token function">npm</span> <span class="token function">install</span> electron --save-dev <span class="token comment"># 安装，必须是开发时依赖</span>
npx electron <span class="token parameter variable">-v</span> <span class="token comment"># 检查版本，npx是Node5.0版本后才有</span>
<span class="token comment"># 或./node_modules/.bin/electron -v # 这样检查版本也行</span>
npx electron <span class="token builtin class-name">.</span> <span class="token comment"># electron是全局安装的化则不需要加npx前缀</span>
<span class="token comment"># 或./node_modules/.bin/electron # 打开界面</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>main.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> electron <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> app <span class="token operator">=</span> electron<span class="token punctuation">.</span>app  <span class="token comment">// 引用app</span>
<span class="token keyword">var</span> BrowserWindow <span class="token operator">=</span> electron<span class="token punctuation">.</span>BrowserWindow <span class="token comment">// 窗口引用</span>

<span class="token keyword">var</span> mainWindow <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token comment">// 生命要打开的窗口</span>

app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span>
      <span class="token literal-property property">webPreferences</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token comment">// 写了html才能引入js代码</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  mainWindow<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 加载html页面</span>
  mainWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;closed&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token comment">// 监听关闭，不能忘，否则内存占用越来越多</span>
    mainWindow <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行窗口</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>npx electron <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="进程结构" tabindex="-1"><a class="header-anchor" href="#进程结构"><span>进程结构</span></a></h1><h2 id="流程" tabindex="-1"><a class="header-anchor" href="#流程"><span>流程</span></a></h2><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR
package.json<span class="token arrow operator">--&gt;</span>2<span class="token text string">[主进程文件-main.js]</span><span class="token arrow operator">--&gt;</span>读取页面布局和演示<span class="token arrow operator">--&gt;</span>IPC执行任务和获取信息
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主进程和渲染进程" tabindex="-1"><a class="header-anchor" href="#主进程和渲染进程"><span>主进程和渲染进程</span></a></h2><p>main.js是主进程，像其他html导入的index.js这种是渲染进程</p><p>一个主进程可延伸出多个渲染进程</p><h2 id="渲染进程访问主进程方法" tabindex="-1"><a class="header-anchor" href="#渲染进程访问主进程方法"><span>渲染进程访问主进程方法</span></a></h2><p>需要使用<code>Remote</code>模块</p><h3 id="打开子窗口" tabindex="-1"><a class="header-anchor" href="#打开子窗口"><span>打开子窗口</span></a></h3><p>渲染进程index2.js：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> BrowserWindow <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>remote<span class="token punctuation">.</span>BrowserWindow <span class="token comment">// 需要remote</span>
window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> btn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#button&#39;</span><span class="token punctuation">)</span>
    btn<span class="token punctuation">.</span><span class="token function-variable function">onclicke</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        newWin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">,</span>
            <span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">500</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        newWin<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&#39;demo.html&#39;</span><span class="token punctuation">)</span>
        mainWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;closed&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        	mainWindow <span class="token operator">=</span> <span class="token keyword">null</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="开发时工具" tabindex="-1"><a class="header-anchor" href="#开发时工具"><span>开发时工具</span></a></h1><h2 id="调试" tabindex="-1"><a class="header-anchor" href="#调试"><span>调试</span></a></h2><p>未打包时，可通过<code>菜单 &gt; View &gt; Toggle Develop Tools（CtrlShift+I）</code>来调试</p><p>调试界面和浏览器调试界面差不多</p><h2 id="重新编译" tabindex="-1"><a class="header-anchor" href="#重新编译"><span>重新编译</span></a></h2><p>等代码编辑后，可通过<code>菜单 &gt; View &gt; Reload（Ctrl+R）</code>来重新编译</p><p>而不需要退出再重新<code>npx electron .</code></p><p>但有时会有点问题，即使第一次正常，Reload后也可能变得不正常</p><h2 id="创建菜单后开发工具丢失" tabindex="-1"><a class="header-anchor" href="#创建菜单后开发工具丢失"><span>创建菜单后开发工具丢失</span></a></h2><p>main.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// mainWindow = new BrowserWindow({...})之后</span>
mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span>openDevTools <span class="token comment">// 打开窗口后直接打开调试模式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="打包" tabindex="-1"><a class="header-anchor" href="#打包"><span>打包</span></a></h1><p>有electron-packager和electron-builder两种方式实现</p><h2 id="electron-packager" tabindex="-1"><a class="header-anchor" href="#electron-packager"><span>electron-packager</span></a></h2><p>略</p><h2 id="electron-builder" tabindex="-1"><a class="header-anchor" href="#electron-builder"><span>electron-builder</span></a></h2><p>功能更丰富，支持平台更多，也支持制动更新。打包出的包更轻量，并可以打包出不暴露源码的setup安装程序</p><p>安装依赖</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> electron-builder --save-dev // 官方强烈推荐使用yarn安装依赖包，但亲测npm可以
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>package.json做配置</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;appId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.study.app&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;win&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;nsis&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zip&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;mac&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;dmg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zip&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dist&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-builder --win --x64&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打包执行<code>npm run dist</code>即可</p><h1 id="功能实现" tabindex="-1"><a class="header-anchor" href="#功能实现"><span>功能实现</span></a></h1><h2 id="菜单" tabindex="-1"><a class="header-anchor" href="#菜单"><span>菜单</span></a></h2><h3 id="菜单的创建和绑定事件" tabindex="-1"><a class="header-anchor" href="#菜单的创建和绑定事件"><span>菜单的创建和绑定事件</span></a></h3><p>menu.js // 菜单文件，在主进程中</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>Menu<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> template <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;菜单1&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">submenu</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">label</span><span class="token operator">:</span><span class="token string">&#39;子菜单1&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">accelerator</span><span class="token operator">:</span> <span class="token string">&#39;ctrl+n&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 快捷键</span>
                <span class="token function-variable function">click</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 事件绑定</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token string">&#39;子菜单2&#39;</span><span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;菜单2&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token keyword">var</span> m <span class="token operator">=</span> Menu<span class="token punctuation">.</span><span class="token function">buildFromTemplate</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token comment">// 放入模板</span>
Menu<span class="token punctuation">.</span><span class="token function">setApplicationMenu</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token comment">// 放入App</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>main.js // 主进程</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> electron <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> app <span class="token operator">=</span> electron<span class="token punctuation">.</span>app
<span class="token keyword">var</span> BrowserWindow <span class="token operator">=</span> electron<span class="token punctuation">.</span>BrowserWindow

<span class="token keyword">var</span> mainWindow <span class="token operator">=</span> <span class="token keyword">null</span>

app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">300</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./main/menu.js&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 把菜单文件导入主进程......这种写法可以将菜单的js分离出去!!!!!!</span>
  mainWindow<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span>
  mainWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;closed&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    mainWindow <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="右键菜单" tabindex="-1"><a class="header-anchor" href="#右键菜单"><span>右键菜单</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// window.addEventListener(&#39;click&#39;,()=&gt;{ // 单击事件</span>
<span class="token comment">//     alert(111)</span>
<span class="token comment">// })</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>remote<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> rightTemplate <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token string">&#39;复制&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token string">&#39;粘贴&#39;</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token keyword">var</span> m <span class="token operator">=</span> remote<span class="token punctuation">.</span>Menu<span class="token punctuation">.</span><span class="token function">buildFromTemplate</span><span class="token punctuation">(</span>rightTemplate<span class="token punctuation">)</span> <span class="token comment">// 放入模板</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;contextmenu&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token comment">// 右击事件</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 阻止默认事件</span>
    m<span class="token punctuation">.</span><span class="token function">popup</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">window</span><span class="token operator">:</span>remote<span class="token punctuation">.</span><span class="token function">getCurrentWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 放入右键事件中</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="web" tabindex="-1"><a class="header-anchor" href="#web"><span>Web</span></a></h2><h3 id="通过链接打开浏览器" tabindex="-1"><a class="header-anchor" href="#通过链接打开浏览器"><span>通过链接打开浏览器</span></a></h3><p>使用<code>&lt;a&gt;</code>标签默认在窗口程序中打开</p><p>如果需要在其他浏览器打开，是要使用shell</p><p>demo.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token punctuation">{</span>shell<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> aHref <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#aHref&#39;</span><span class="token punctuation">)</span>
aHref<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 阻止窗口打开链接的默认行为</span>
    <span class="token keyword">var</span> href <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>
    shell<span class="token punctuation">.</span><span class="token function">openExternal</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="嵌入网页" tabindex="-1"><a class="header-anchor" href="#嵌入网页"><span>嵌入网页</span></a></h3><p>嵌入网页用webview和browserView</p><p>main.js // 主进程</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 加载html页面后</span>
<span class="token keyword">var</span> BrowserView <span class="token operator">=</span> electron<span class="token punctuation">.</span>BrowserView
<span class="token keyword">var</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
mainWindow<span class="token punctuation">.</span><span class="token function">setBrowserView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">serBounds</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// 设置属性</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">120</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">700</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
view<span class="token punctuation">.</span>webContent<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span><span class="token string">&#39;http://baidu.com&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打开网页子窗口" tabindex="-1"><a class="header-anchor" href="#打开网页子窗口"><span>打开网页子窗口</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;http://baidu.com&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>后面直接接一个html好像也行</p><h2 id="对话框" tabindex="-1"><a class="header-anchor" href="#对话框"><span>对话框</span></a></h2><p>这里原生HTML也能做得到，这里使用的是Electron的API方法</p><h3 id="选择文件对话框" tabindex="-1"><a class="header-anchor" href="#选择文件对话框"><span>选择文件对话框</span></a></h3><p>选择文件对话框API：</p><ul><li>异步<code>dialog.showOpenDialog(基本属性,回调函数)</code>，或可以使用<code>then</code></li><li>同步<code>dialog.showOpenDialogSync(基本属性)</code></li></ul><p>基本属性（对象类型）参数表：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>String(可选)</td><td>对话的标题</td></tr><tr><td>defaultPath</td><td>String(可选)</td><td>默认打开路径</td></tr><tr><td>buttonLabel</td><td>String(可选)</td><td>确定按钮的自定义标签</td></tr><tr><td>filters</td><td>List(可选)</td><td>文件选择过滤器（扩展名筛选）</td></tr><tr><td>properties</td><td></td><td>打开文件的属性：文件/文件夹、隐藏文件</td></tr></tbody></table><p>demo</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>dialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>remote
<span class="token keyword">var</span> openBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;openBtn&#39;</span><span class="token punctuation">)</span>

openBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    dialog<span class="token punctuation">.</span><span class="token function">showOpenDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;请选择xxx文件&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">defaultPath</span><span class="token operator">:</span> <span class="token string">&#39;C:\\\\xxx.jpg&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">filters</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">extensions</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;jpg&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;png&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">buttonLabel</span><span class="token operator">:</span> <span class="token string">&#39;确定选择&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> image <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;images&#39;</span><span class="token punctuation">)</span>
        image<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span>result<span class="token punctuation">.</span>filePaths<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="保存文件对话框" tabindex="-1"><a class="header-anchor" href="#保存文件对话框"><span>保存文件对话框</span></a></h3><p>保存文件对话框API：</p><p><code>showSaveDialog</code></p><p>同步异步、参数那些和上面差不多</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>dialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>remote
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Node.js的fs模块</span>

<span class="token keyword">var</span> openBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;openBtn&#39;</span><span class="token punctuation">)</span>
openBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    dialog<span class="token punctuation">.</span><span class="token function">showSaveDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;保存文件&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
        fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>filePath<span class="token punctuation">,</span><span class="token string">&#39;lalala&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 这里有点问题，选择文件夹要加文件名</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="消息对话框" tabindex="-1"><a class="header-anchor" href="#消息对话框"><span>消息对话框</span></a></h3><p>API：<code>showMessageBox()</code></p><p>常用参数：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>参数：none、info、error、question、warning</td></tr><tr><td>title</td><td>String</td><td>弹出框的标题</td></tr><tr><td>message</td><td>String(必写)</td><td>message box的内容</td></tr><tr><td>buttons</td><td>List</td><td>API返回值为该列表的索引的下标值</td></tr></tbody></table><p>Demo</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>dialog<span class="token punctuation">.</span><span class="token function">showMessageBox</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;信息对话框标题&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;信息对话&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">buttons</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;按钮1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;按钮2&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 会返回数组下标</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网络监控与断网提醒" tabindex="-1"><a class="header-anchor" href="#网络监控与断网提醒"><span>网络监控与断网提醒</span></a></h2><p>demo</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;online&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 注意：刚开始连网时不会触发，需要网络断了后重新连上才会触发</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;网络连上了！&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;offline&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;网络断了！&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="底部信息通知" tabindex="-1"><a class="header-anchor" href="#底部信息通知"><span>底部信息通知</span></a></h2><p>demo</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;通知标题&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;通知信息&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>Notification</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>title<span class="token punctuation">,</span>option<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注册全局快捷键" tabindex="-1"><a class="header-anchor" href="#注册全局快捷键"><span>注册全局快捷键</span></a></h2><p>demo</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> globalShortcut <span class="token operator">=</span> electron<span class="token punctuation">.</span>globalShortcut
<span class="token comment">// ...写在app.on(‘ready&#39;,()=&gt;{})里</span>
globalShortcut<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;ctrl+e&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> isRegister <span class="token operator">=</span> globalShortcut<span class="token punctuation">.</span><span class="token function">isRegistered</span><span class="token punctuation">(</span><span class="token string">&#39;ctrl+e&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 判断，以免热键冲突，返回Bool值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注销快捷键</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;will-quit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 注销全局快捷键方法</span>
    globalShortcut<span class="token punctuation">.</span><span class="token function">unregister</span><span class="token punctuation">(</span><span class="token string">&#39;ctrl+e&#39;</span><span class="token punctuation">)</span> <span class="token comment">//单独注销</span>
    globalShortcut<span class="token punctuation">.</span><span class="token function">unregisterAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 全部注销</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="剪切板功能" tabindex="-1"><a class="header-anchor" href="#剪切板功能"><span>剪切板功能</span></a></h2><p>demo</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> clipboard <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>clipboard <span class="token comment">// 剪切板模块，可在渲染进程使用</span>
<span class="token comment">// ...</span>
clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span><span class="token string">&#39;需要复制的文本&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="数据传递" tabindex="-1"><a class="header-anchor" href="#数据传递"><span>数据传递</span></a></h1><h2 id="子窗口向父窗口传递信息" tabindex="-1"><a class="header-anchor" href="#子窗口向父窗口传递信息"><span>子窗口向父窗口传递信息</span></a></h2><p>子窗口</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>opener<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;我是子窗口传递过来的信息&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>父窗口</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;./subWindow.html&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 打开子窗口</span>
<span class="token comment">// ...</span>
window<span class="token punctuation">.</span><span class="token function">addEventLister</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	<span class="token keyword">let</span> mytext <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelect</span><span class="token punctuation">(</span><span class="token string">&#39;#mytext&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token comment">// 打印“我是子窗口传递过来的信息”</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="个人总结" tabindex="-1"><a class="header-anchor" href="#个人总结"><span>个人总结</span></a></h1><h2 id="事件监听" tabindex="-1"><a class="header-anchor" href="#事件监听"><span>事件监听</span></a></h2><p>app事件 - 开始</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>窗口事件监听 - 关闭窗口事件</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>mainWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;closed&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>mainWindow <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>window监听 - 右击菜单事件</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;contextmenu&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>window监听 - 网络监听</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;online&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;offline&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>window监听 - 信息传递</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// window.opener.postMessage(&#39;我是子窗口传递过来的信息&#39;) // 该信息由该代码发起</span>
window<span class="token punctuation">.</span><span class="token function">addEventLister</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="electron的子模块" tabindex="-1"><a class="header-anchor" href="#electron的子模块"><span>electron的子模块</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> electron <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 主模块，方便下面的子模块引入代码的书写</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> electron<span class="token punctuation">.</span>app <span class="token comment">// App模块</span>
<span class="token keyword">const</span> BrowserWindow <span class="token operator">=</span> electron<span class="token punctuation">.</span>BrowserWindow <span class="token comment">// 窗口模块</span>
<span class="token keyword">const</span> BrowserWindow <span class="token operator">=</span> electron<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>BrowserWindow <span class="token comment">// 窗口模块(非主进程)</span>
<span class="token keyword">const</span> Menu <span class="token operator">=</span> electron<span class="token punctuation">.</span>Menu <span class="token comment">// 菜单模块</span>
<span class="token keyword">const</span> remote <span class="token operator">=</span> electron<span class="token punctuation">.</span>remote <span class="token comment">// 右键菜单模块</span>
<span class="token keyword">const</span> shell <span class="token operator">=</span> electron<span class="token punctuation">.</span>shell <span class="token comment">// 脚本模块</span>
<span class="token keyword">const</span> BrowserView <span class="token operator">=</span> electron<span class="token punctuation">.</span>BrowserView <span class="token comment">// 浏览器视图模块</span>
<span class="token keyword">const</span> dialog <span class="token operator">=</span> electron<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>dialog <span class="token comment">// 对话框模块(非主进程)</span>
<span class="token keyword">const</span> globalShortcut <span class="token operator">=</span> electron<span class="token punctuation">.</span>globalShortcut <span class="token comment">// 全局快捷键</span>
<span class="token keyword">const</span> clipboard <span class="token operator">=</span> electron<span class="token punctuation">.</span>clipboard <span class="token comment">// 剪切板模块，可在渲染进程使用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="app模块" tabindex="-1"><a class="header-anchor" href="#app模块"><span>App模块</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>app <span class="token comment">// app模块</span>
<span class="token comment">// ...</span>
app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;will-quit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="browserwindow窗口模块" tabindex="-1"><a class="header-anchor" href="#browserwindow窗口模块"><span>BrowserWindow窗口模块</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> BrowserWindow <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>BrowserWindow <span class="token comment">// BrowserWindow窗口模块</span>
<span class="token comment">// ...</span>
mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 窗口</span>
mainWindow<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span>
mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span>openDevTools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="menu菜单模块" tabindex="-1"><a class="header-anchor" href="#menu菜单模块"><span>Menu菜单模块</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Menu <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Menu <span class="token comment">// Menu菜单模块</span>
<span class="token comment">//...</span>
<span class="token keyword">var</span> m <span class="token operator">=</span> Menu<span class="token punctuation">.</span><span class="token function">buildFromTemplate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 放入模板，一般模板写外面</span>
Menu<span class="token punctuation">.</span><span class="token function">setApplicationMenu</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token comment">// 放入App</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remote右键菜单模块" tabindex="-1"><a class="header-anchor" href="#remote右键菜单模块"><span>remote右键菜单模块</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> remote <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>remote <span class="token comment">// remote右键菜单模块</span>
<span class="token comment">// ...</span>
<span class="token keyword">var</span> m <span class="token operator">=</span> remote<span class="token punctuation">.</span>Menu<span class="token punctuation">.</span><span class="token function">buildFromTemplate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 放入模板，一般模板写外面</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;contextmenu&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token comment">// 右击事件</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    m<span class="token punctuation">.</span><span class="token function">popup</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">window</span><span class="token operator">:</span>remote<span class="token punctuation">.</span><span class="token function">getCurrentWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 放入右键事件中</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等等</p><p>略...</p>`,139),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","Electron - JS Module.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/Electron%EF%BC%88Web%EF%BC%89/Electron%20-%20JS%20Module.html","title":"Electron","lang":"zh-CN","frontmatter":{"description":"Electron 目录 [TOC] 介绍 开源：GitHub开源框架，开发产品可商用 前置知识：html、css、JavaScript 平台：跨平台，Window、Mac、Linux Electron结构：Electron=Chromium+Node.js+Native API 开发产品：VSCode、Atom、slack、wordpress 开发环境...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/Electron%EF%BC%88Web%EF%BC%89/Electron%20-%20JS%20Module.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Electron"}],["meta",{"property":"og:description","content":"Electron 目录 [TOC] 介绍 开源：GitHub开源框架，开发产品可商用 前置知识：html、css、JavaScript 平台：跨平台，Window、Mac、Linux Electron结构：Electron=Chromium+Node.js+Native API 开发产品：VSCode、Atom、slack、wordpress 开发环境..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Electron\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Electron","slug":"electron","link":"#electron","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":1,"title":"开发环境搭建","slug":"开发环境搭建","link":"#开发环境搭建","children":[]},{"level":1,"title":"项目创建","slug":"项目创建","link":"#项目创建","children":[{"level":2,"title":"HelloWorld","slug":"helloworld","link":"#helloworld","children":[]}]},{"level":1,"title":"进程结构","slug":"进程结构","link":"#进程结构","children":[{"level":2,"title":"流程","slug":"流程","link":"#流程","children":[]},{"level":2,"title":"主进程和渲染进程","slug":"主进程和渲染进程","link":"#主进程和渲染进程","children":[]},{"level":2,"title":"渲染进程访问主进程方法","slug":"渲染进程访问主进程方法","link":"#渲染进程访问主进程方法","children":[{"level":3,"title":"打开子窗口","slug":"打开子窗口","link":"#打开子窗口","children":[]}]}]},{"level":1,"title":"开发时工具","slug":"开发时工具","link":"#开发时工具","children":[{"level":2,"title":"调试","slug":"调试","link":"#调试","children":[]},{"level":2,"title":"重新编译","slug":"重新编译","link":"#重新编译","children":[]},{"level":2,"title":"创建菜单后开发工具丢失","slug":"创建菜单后开发工具丢失","link":"#创建菜单后开发工具丢失","children":[]}]},{"level":1,"title":"打包","slug":"打包","link":"#打包","children":[{"level":2,"title":"electron-packager","slug":"electron-packager","link":"#electron-packager","children":[]},{"level":2,"title":"electron-builder","slug":"electron-builder","link":"#electron-builder","children":[]}]},{"level":1,"title":"功能实现","slug":"功能实现","link":"#功能实现","children":[{"level":2,"title":"菜单","slug":"菜单","link":"#菜单","children":[{"level":3,"title":"菜单的创建和绑定事件","slug":"菜单的创建和绑定事件","link":"#菜单的创建和绑定事件","children":[]},{"level":3,"title":"右键菜单","slug":"右键菜单","link":"#右键菜单","children":[]}]},{"level":2,"title":"Web","slug":"web","link":"#web","children":[{"level":3,"title":"通过链接打开浏览器","slug":"通过链接打开浏览器","link":"#通过链接打开浏览器","children":[]},{"level":3,"title":"嵌入网页","slug":"嵌入网页","link":"#嵌入网页","children":[]},{"level":3,"title":"打开网页子窗口","slug":"打开网页子窗口","link":"#打开网页子窗口","children":[]}]},{"level":2,"title":"对话框","slug":"对话框","link":"#对话框","children":[{"level":3,"title":"选择文件对话框","slug":"选择文件对话框","link":"#选择文件对话框","children":[]},{"level":3,"title":"保存文件对话框","slug":"保存文件对话框","link":"#保存文件对话框","children":[]},{"level":3,"title":"消息对话框","slug":"消息对话框","link":"#消息对话框","children":[]}]},{"level":2,"title":"网络监控与断网提醒","slug":"网络监控与断网提醒","link":"#网络监控与断网提醒","children":[]},{"level":2,"title":"底部信息通知","slug":"底部信息通知","link":"#底部信息通知","children":[]},{"level":2,"title":"注册全局快捷键","slug":"注册全局快捷键","link":"#注册全局快捷键","children":[]},{"level":2,"title":"剪切板功能","slug":"剪切板功能","link":"#剪切板功能","children":[]}]},{"level":1,"title":"数据传递","slug":"数据传递","link":"#数据传递","children":[{"level":2,"title":"子窗口向父窗口传递信息","slug":"子窗口向父窗口传递信息","link":"#子窗口向父窗口传递信息","children":[]}]},{"level":1,"title":"个人总结","slug":"个人总结","link":"#个人总结","children":[{"level":2,"title":"事件监听","slug":"事件监听","link":"#事件监听","children":[]},{"level":2,"title":"electron的子模块","slug":"electron的子模块","link":"#electron的子模块","children":[{"level":3,"title":"App模块","slug":"app模块","link":"#app模块","children":[]},{"level":3,"title":"BrowserWindow窗口模块","slug":"browserwindow窗口模块","link":"#browserwindow窗口模块","children":[]},{"level":3,"title":"Menu菜单模块","slug":"menu菜单模块","link":"#menu菜单模块","children":[]},{"level":3,"title":"remote右键菜单模块","slug":"remote右键菜单模块","link":"#remote右键菜单模块","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":6.72,"words":2015},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Platform/Multi/Electron（Web）/Electron - JS Module.md","autoDesc":true}');export{d as comp,k as data};
