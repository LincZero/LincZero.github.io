import{_ as l,c as o,b as s,d as t,e,a as p,o as d,r}from"./app-CoK3rLoY.js";const c={},i={id:"使用-css-属性​",tabindex:"-1"},u={class:"header-anchor",href:"#使用-css-属性​"},v={href:"https://vueflow.dev/guide/theming.html#using-css-properties",target:"_blank",rel:"noopener noreferrer"};function h(k,n){const a=r("ExternalLinkIcon");return d(),o("div",null,[n[2]||(n[2]=s(`<h1 id="主题" tabindex="-1"><a class="header-anchor" href="#主题"><span>主题</span></a></h1><p>让我们了解一下 Vue Flow 开箱即用的库样式、定制机会和其他功能。</p><h2 id="库样式" tabindex="-1"><a class="header-anchor" href="#库样式"><span>库样式</span></a></h2><p>Vue Flow 重视灵活性，让您在样式方面占据主导地位。它展示了一些必须导入的强制性样式，同时将默认主题等可选功能留给您的偏好。</p><p>要导入必要和可选的样式：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 这些是VueFlow的必要样式 */</span>
<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&#39;@vue-flow/core/dist/style.css&#39;</span><span class="token punctuation">;</span></span>

<span class="token comment">/* 这包含了默认的主题，这些是可选的样式 */</span>
<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&#39;@vue-flow/core/dist/theme-default.css&#39;</span><span class="token punctuation">;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="调整默认主题" tabindex="-1"><a class="header-anchor" href="#调整默认主题"><span>调整默认主题</span></a></h2><p>Vue Flow 默认主题作为您的基准，您可以根据自己的喜好使用 CSS 规则、样式和类属性以及 CSS 变量进行自定义和装饰。</p><h3 id="使用-css-类进行样式设置" tabindex="-1"><a class="header-anchor" href="#使用-css-类进行样式设置"><span>使用 CSS 类进行样式设置</span></a></h3><p>您可以按照以下步骤使用 CSS 类来添加流行颜色或更改主题的字体样式：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 为我们的自定义节点使用紫色主题 */</span>
<span class="token selector">.vue-flow__node-custom</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid purple<span class="token punctuation">;</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 1px purple<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>（译者：这里是一个带样式的节点画布，具体对比原链接，我这里显示不出来）</p></blockquote>`,12)),t("h3",i,[t("a",u,[t("span",null,[n[1]||(n[1]=e("使用 CSS 属性")),t("a",v,[n[0]||(n[0]=e("​")),p(a)])])])]),n[3]||(n[3]=s(`<p>您还可以直接将样式或类属性传递给 Vue Flow 组件和节点/边。</p><p>下面是一些有关如何执行此操作的示例：</p><p>直接设置 Vue Flow 组件的样式：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>&lt;VueFlow
  :nodes=&quot;nodes&quot;
  :edges=&quot;edges&quot;
  class=&quot;my-diagram-class&quot;       // [!code]
  :style=&quot;{ background: &#39;red&#39; }&quot; // [!code]
/&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用样式或类属性设置节点/边的样式：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">/* 通过分配类和样式属性自定义节点 */</span>
<span class="token keyword">const</span> nodes <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> 
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Node 1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
    <span class="token comment">// 向节点添加类名                  // [!code]</span>
    <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;my-custom-node-class&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// [!code]</span>
    
    <span class="token comment">// 您可以传递一个包含CSSProperties或CSS变量的对象                          // [!code]</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;200px&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// [!code]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-css-变量重新定义样式" tabindex="-1"><a class="header-anchor" href="#使用-css-变量重新定义样式"><span>使用 CSS 变量重新定义样式</span></a></h3><p>部分已定义的主题样式可使用 CSS 变量进行覆盖。这些更改可全局实施，也可针对单个元素实施。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 全局默认的CSS变量值 */</span>
<span class="token selector">:root</span> <span class="token punctuation">{</span>
    <span class="token property">--vf-node-bg</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
    <span class="token property">--vf-node-text</span><span class="token punctuation">:</span> #222<span class="token punctuation">;</span>
    <span class="token property">--vf-connection-path</span><span class="token punctuation">:</span> #b1b1b7<span class="token punctuation">;</span>
    <span class="token property">--vf-handle</span><span class="token punctuation">:</span> #555<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css-变量" tabindex="-1"><a class="header-anchor" href="#css-变量"><span>CSS 变量</span></a></h2><p>以下是您可以考虑的 CSS 变量的简明列表及其效果：</p><table><thead><tr><th>多变的</th><th>影响</th></tr></thead><tbody><tr><td>–vf 节点颜色</td><td>定义节点边框、框阴影和手柄颜色</td></tr><tr><td>--vf-box 阴影</td><td>定义节点 box-shadow 的颜色</td></tr><tr><td>--vf-节点-bg</td><td>定义节点背景颜色</td></tr><tr><td>–vf 节点文本</td><td>定义节点文本颜色</td></tr><tr><td>--vf 句柄</td><td>定义节点句柄颜色</td></tr><tr><td>--vf-连接路径</td><td>定义连接线颜色</td></tr></tbody></table><h2 id="css-类名" tabindex="-1"><a class="header-anchor" href="#css-类名"><span>CSS 类名</span></a></h2><p>在这里您可以找到类名及其各自元素的便捷参考指南：</p><h4 id="容器" tabindex="-1"><a class="header-anchor" href="#容器"><span>容器</span></a></h4><table><thead><tr><th>姓名</th><th>容器</th></tr></thead><tbody><tr><td>.vue-flow</td><td>外容器</td></tr><tr><td>.vue-flow__container</td><td>容器元素的包装器</td></tr><tr><td>.vue-flow__viewport</td><td>内容器</td></tr><tr><td>.vue-flow__background</td><td>背景组件</td></tr><tr><td>.vue-flow__minimap</td><td>MiniMap 组件</td></tr><tr><td>.vue-flow__controls</td><td>控制组件</td></tr></tbody></table><h4 id="边" tabindex="-1"><a class="header-anchor" href="#边"><span>边</span></a></h4><table><thead><tr><th>姓名</th><th>描述</th></tr></thead><tbody><tr><td>.vue-flow__edges</td><td>包装器渲染边缘</td></tr><tr><td>.vue-flow__edge</td><td>包裹每个边缘元素</td></tr><tr><td>.vue-flow__selectionpane</td><td>处理用户选择的窗格</td></tr><tr><td>.vue-flow__selection</td><td>定义当前用户选择框</td></tr><tr><td type="">.vue-flow__edge-</td><td>边缘类型（自定义或默认）</td></tr><tr><td>.vue-flow__edge.selected</td><td>定义当前选定的边</td></tr><tr><td>.vue-flow__edge.animated</td><td>定义动画边缘</td></tr><tr><td>.vue-flow__edge-path</td><td>边缘元素的 SVG 路径</td></tr><tr><td>.vue-flow__edge-text</td><td>边缘标签包装</td></tr><tr><td>.vue-flow__edge-textbg</td><td>边缘标签周围的背景包装</td></tr><tr><td>.vue-flow__connectionline</td><td>连接线元素的容器</td></tr><tr><td>.vue-flow__connection</td><td>单独的连接线元件</td></tr><tr><td>.vue-flow__connection-path</td><td>连接线的 SVG 路径</td></tr></tbody></table><h4 id="节点" tabindex="-1"><a class="header-anchor" href="#节点"><span>节点</span></a></h4><table><thead><tr><th>姓名</th><th>描述</th></tr></thead><tbody><tr><td>.vue-flow__nodes</td><td>节点周围的渲染包装器</td></tr><tr><td>.vue-flow__node</td><td>包裹每个节点元素</td></tr><tr><td>.vue-flow__node.selected</td><td>定义当前选定的节点</td></tr><tr><td type="">.vue-flow__node-</td><td>节点类型（自定义或默认）</td></tr><tr><td>.vue-flow__nodesselection</td><td>定义节点的选择矩形</td></tr></tbody></table><h4 id="节点句柄" tabindex="-1"><a class="header-anchor" href="#节点句柄"><span>节点句柄</span></a></h4><table><thead><tr><th>姓名</th><th>描述</th></tr></thead><tbody><tr><td>.vue-flow__handle</td><td>节点句柄元素的包装器</td></tr><tr><td>.vue-flow__handle-bottom</td><td>定义底部的手柄</td></tr><tr><td>.vue-flow__handle-top</td><td>定义顶部的手柄</td></tr><tr><td>.vue-flow__handle-left</td><td>定义左侧的手柄</td></tr><tr><td>.vue-flow__handle-right</td><td>定义右侧的手柄</td></tr><tr><td>.vue-flow__handle-connecting</td><td>连接线在手柄上方</td></tr><tr><td>.vue-flow__handle-valid</td><td>连接线通过句柄，具有有效连接</td></tr></tbody></table>`,22))])}const b=l(c,[["render",h],["__file","03. 主题.html.vue"]]),g=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/03.%20%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6/%E7%BB%84%E4%BB%B6%E5%BA%93/VueFlow/01.%20Guide/03.%20%E4%B8%BB%E9%A2%98.html","title":"主题","lang":"zh-CN","frontmatter":{"description":"主题 让我们了解一下 Vue Flow 开箱即用的库样式、定制机会和其他功能。 库样式 Vue Flow 重视灵活性，让您在样式方面占据主导地位。它展示了一些必须导入的强制性样式，同时将默认主题等可选功能留给您的偏好。 要导入必要和可选的样式： 调整默认主题 Vue Flow 默认主题作为您的基准，您可以根据自己的喜好使用 CSS 规则、样式和类属性以...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/03.%20%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6/%E7%BB%84%E4%BB%B6%E5%BA%93/VueFlow/01.%20Guide/03.%20%E4%B8%BB%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"主题"}],["meta",{"property":"og:description","content":"主题 让我们了解一下 Vue Flow 开箱即用的库样式、定制机会和其他功能。 库样式 Vue Flow 重视灵活性，让您在样式方面占据主导地位。它展示了一些必须导入的强制性样式，同时将默认主题等可选功能留给您的偏好。 要导入必要和可选的样式： 调整默认主题 Vue Flow 默认主题作为您的基准，您可以根据自己的喜好使用 CSS 规则、样式和类属性以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"主题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"主题","slug":"主题","link":"#主题","children":[{"level":2,"title":"库样式","slug":"库样式","link":"#库样式","children":[]},{"level":2,"title":"调整默认主题","slug":"调整默认主题","link":"#调整默认主题","children":[{"level":3,"title":"使用 CSS 类进行样式设置","slug":"使用-css-类进行样式设置","link":"#使用-css-类进行样式设置","children":[]},{"level":3,"title":"使用 CSS 属性​","slug":"使用-css-属性​","link":"#使用-css-属性​","children":[]},{"level":3,"title":"使用 CSS 变量重新定义样式","slug":"使用-css-变量重新定义样式","link":"#使用-css-变量重新定义样式","children":[]}]},{"level":2,"title":"CSS 变量","slug":"css-变量","link":"#css-变量","children":[]},{"level":2,"title":"CSS 类名","slug":"css-类名","link":"#css-类名","children":[{"level":4,"title":"容器","slug":"容器","link":"#容器","children":[]},{"level":4,"title":"边","slug":"边","link":"#边","children":[]},{"level":4,"title":"节点","slug":"节点","link":"#节点","children":[]},{"level":4,"title":"节点句柄","slug":"节点句柄","link":"#节点句柄","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.4,"words":1020},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/03. 前端组件/组件库/VueFlow/01. Guide/03. 主题.md","excerpt":"\\n<p>让我们了解一下 Vue Flow 开箱即用的库样式、定制机会和其他功能。</p>\\n<h2>库样式</h2>\\n<p>Vue Flow 重视灵活性，让您在样式方面占据主导地位。它展示了一些必须导入的强制性样式，同时将默认主题等可选功能留给您的偏好。</p>\\n<p>要导入必要和可选的样式：</p>\\n<div class=\\"language-css\\" data-ext=\\"css\\" data-title=\\"css\\"><pre class=\\"language-css\\"><code><span class=\\"token comment\\">/* 这些是VueFlow的必要样式 */</span>\\n<span class=\\"token atrule\\"><span class=\\"token rule\\">@import</span> <span class=\\"token string\\">'@vue-flow/core/dist/style.css'</span><span class=\\"token punctuation\\">;</span></span>\\n\\n<span class=\\"token comment\\">/* 这包含了默认的主题，这些是可选的样式 */</span>\\n<span class=\\"token atrule\\"><span class=\\"token rule\\">@import</span> <span class=\\"token string\\">'@vue-flow/core/dist/theme-default.css'</span><span class=\\"token punctuation\\">;</span></span>\\n</code></pre></div>","autoDesc":true}`);export{b as comp,g as data};
