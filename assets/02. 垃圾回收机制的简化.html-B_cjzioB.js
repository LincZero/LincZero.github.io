import{_ as t,c as a,e as n,o as i}from"./app-Dwsnbiv5.js";const o={};function r(l,e){return i(),a("div",null,e[0]||(e[0]=[n('<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>JavaScript</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="垃圾回收机制的简化" tabindex="-1"><a class="header-anchor" href="#垃圾回收机制的简化"><span>垃圾回收机制的简化</span></a></h1><p>当使用new创建对象时，我们不用担心释放内存，因为垃圾信息收集器会自动处理这件事（不同于C++）</p>',4)]))}const c=t(o,[["render",r],["__file","02. 垃圾回收机制的简化.html.vue"]]),s=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/JavaScript/04.%20%E4%BC%98%E5%8C%96/02.%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E7%9A%84%E7%AE%80%E5%8C%96.html","title":"JavaScript","lang":"zh-CN","frontmatter":{"description":"JavaScript 目录 垃圾回收机制的简化 当使用new创建对象时，我们不用担心释放内存，因为垃圾信息收集器会自动处理这件事（不同于C++）","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/JavaScript/04.%20%E4%BC%98%E5%8C%96/02.%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E7%9A%84%E7%AE%80%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"JavaScript"}],["meta",{"property":"og:description","content":"JavaScript 目录 垃圾回收机制的简化 当使用new创建对象时，我们不用担心释放内存，因为垃圾信息收集器会自动处理这件事（不同于C++）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"JavaScript","slug":"javascript","link":"#javascript","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"垃圾回收机制的简化","slug":"垃圾回收机制的简化","link":"#垃圾回收机制的简化","children":[]}],"git":{},"readingTime":{"minutes":0.17,"words":52},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/JavaScript/04. 优化/02. 垃圾回收机制的简化.md","excerpt":"\\n<h1>目录</h1>\\n<h1>垃圾回收机制的简化</h1>\\n<p>当使用new创建对象时，我们不用担心释放内存，因为垃圾信息收集器会自动处理这件事（不同于C++）</p>\\n","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/JavaScript/04. 优化/02. 垃圾回收机制的简化.md","value":{"title":"02. 垃圾回收机制的简化","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/JavaScript/04. 优化/02. 垃圾回收机制的简化.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{c as comp,s as data};
