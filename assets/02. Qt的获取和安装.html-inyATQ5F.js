import{_ as e,c as t,e as i,o as n}from"./app-BHdORQJ2.js";const o={};function r(a,l){return n(),t("div",null,l[0]||(l[0]=[i('<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>QT</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="qt的获取和安装" tabindex="-1"><a class="header-anchor" href="#qt的获取和安装"><span>Qt的获取和安装</span></a></h1><h2 id="协议说明" tabindex="-1"><a class="header-anchor" href="#协议说明"><span>协议说明</span></a></h2><p>开源版和商业版</p><ul><li>开源版 <ul><li>使用GUN通用公共协议（GPL，<em>General Public License</em>），给与应用程序的用户一些特定的权利</li><li>包括查看和修改源代码以及重新发布这个应用程序（在同等条款下）的权利</li></ul></li><li>商业版 <ul><li>希望在发布应用程序的同时不公布源代码，或者希望在发布应用程序时使用自己的商业协议条件</li></ul></li></ul><h2 id="qt-windows的安装" tabindex="-1"><a class="header-anchor" href="#qt-windows的安装"><span>Qt/Windows的安装</span></a></h2><h3 id="组件管理软件储存库设置" tabindex="-1"><a class="header-anchor" href="#组件管理软件储存库设置"><span>组件管理软件储存库设置</span></a></h3><ul><li><p>简概</p><ul><li>在线安装需要先设置国内储存库（以加快速度），而离线安装初始不需要，但当你添加或更新组件时也需要设置</li></ul></li><li><p>设置方法</p><ul><li>设置 &gt; 储存库 &gt; 临时储存库 &gt; 添加 &gt; 输入国内储存库的网站</li></ul></li><li><p><mark>国内储存库网址</mark></p><ul><li><a href="http://download.qt.io/static/mirrorlist/" target="_blank" rel="noopener noreferrer"><strong>http://download.qt.io/static/mirrorlist/</strong></a> 这个网站，显示了各国的qt镜像站点，中国有5个</li><li>中科大、清华等，随便选一个，点Mirror URLs一栏的HTTP，然后依次进入**/online/qtsdkrepository/windows_x86/root/qt/**，比如： <ul><li>中科大，http://mirrors.ustc.edu.cn/qtproject/online/qtsdkrepository/windows_x86/root/qt/</li><li>清华，https://mirrors.tuna.tsinghua.edu.cn/qt/online/qtsdkrepository/windows_x86/root/qt/</li></ul></li><li>注意用这个镜像时要关掉梯子，哪怕梯子用的 “仅跳过国内和局域网”</li></ul></li><li><p>好处</p><ul><li><p>不管是离线还是在线，推荐先设置下<strong>管理软件(MaintenanceTool.exe)</strong> 储存库设置，为什么要设置呢？</p><ol><li><p>对于离线安装的好处是可以随时修改、增加、删除、升级官网的组件，不用卸载重新又下载一个版本又重新反复安装，减去不必要的安装时间开销！</p></li><li><p>对于在线安装的好处是加速安装时间，在线安装如果不设置可能安装会失败，或者超级慢，因为下载源来自官网国外</p><p>所以设置成国内的就会非常快速，安装杠杠的</p></li><li><p>对于<strong>Qt5.15开始是强制在线安装了，没有离线安装了</strong>，所以学会组件存储库的设置是很有必要的</p></li><li><p>Qt5.12后，官网设置离线安装必须要有账号密码登录才能进入下一步，5.12之前都不需要，所以我们需要去官网申请注册一个账号来安装即可</p></li></ol></li></ul></li></ul><h3 id="离线安装" tabindex="-1"><a class="header-anchor" href="#离线安装"><span>离线安装</span></a></h3><p>安装注意项</p><ul><li>离线安装版本<code>qt-opensource-windows-x86-5.12.10</code>（5.12版本）、<code>qt-opensource-windows-x86-5.14.2.exe</code>（5.14版本）</li><li>下载时会需要选择组件，但后期可以在安装路径中找到<code>MaintenanceTool.exe</code>进行添加和更新组件甚至卸载 <ul><li>但可能会报错 “此操作至少需要一个处于启动状态的有效资料档案库”</li></ul></li><li>真正的<code>QTCreator.exe</code>文件在安装路径中的<code>.\\Tools\\QtCreator\\bin\\qtcreator.exe</code></li></ul><h3 id="在线安装" tabindex="-1"><a class="header-anchor" href="#在线安装"><span>在线安装</span></a></h3><p>在线安装就比离线安装简单多了（?）</p><p>刚开始我下的<code>qt-unified-windows-x86-4.0.1-online</code>即在线安装版本，网下不了。后来设置了临时储存库，能下了，但也下得挺慢的</p><p>详细步骤：</p><ul><li>Welcome，该阶段按设置把临时储存库换成国内的源</li><li>Open Source Obligations，同意开源协议</li><li>Setup - Qt，设置</li><li>Contribute to Qt Development，选第一项</li><li>Installation Foulder，自定义路径</li><li>Select Components，选择组件 <ul><li>Preview &gt; 不用管？</li><li>Qt &gt; 选一个版本 &gt; 看情况点，重点是点两个MSVC和MinGW，要开发安装勾Android，要开发UWP勾UWP，反正我除了UWP全选了</li><li>Qt &gt; Developer and Designer Tools &gt; 一般默认的就行，重点是包含Qt Creator</li></ul></li><li>License Agreement，同意协议</li><li>Start Menu shortcuts，开始菜单快捷键</li><li>Ready to Install，准备安装</li><li>Installing，安装，等待即可</li><li>Finished，完成</li></ul><h3 id="安装时选项的具体含义" tabindex="-1"><a class="header-anchor" href="#安装时选项的具体含义"><span>安装时选项的具体含义</span></a></h3><h4 id="通用组件" tabindex="-1"><a class="header-anchor" href="#通用组件"><span>通用组件</span></a></h4><ol><li>MinGW 7.3.0 32 bit 编译器模块。MinGW 是 Minimalist GNU for Windows 的缩写，MinGW 是 Windows 平台上使用的 GNU 工具集导入库的集合。</li><li>是用于 UWP 编译的模块。UWP 是 Windows 10 中 Universal Windows Platform 的简称，有不同编译器类型的 UWP。</li><li>用于 windows 平台上的 MSVC 编译器模块，如 msvc2017 32-bit 和 msvc2017 64-bit 等。要安装 MSVC 编译器的模块，需要计算机上已经安装相应版本的 Visual Studio。</li><li>用于 Android 平台的模块，如 Android x86 和 Android ARMv7。</li><li>Sources 是 Qt 的源程序。</li><li>Qt Charts是二维图表模块，用于绘制柱状图、饼图、曲线图等常用二维图表。</li><li>Qt Data Visualization 是三维数据图表模块，用于数据的三维显示，如散点的三维空间分布、三维曲面等。</li><li>Qt Purchasing、Qt WebEngine、Qt Network Auth(TP)等其他模块，括号里的 TP 表示技术预览。</li><li>Qt Scritp（Deprecated）是脚本模块，括号里的“Deprecated”表示这是个已经过时的模块。</li></ol><h4 id="tools选项" tabindex="-1"><a class="header-anchor" href="#tools选项"><span>Tools选项</span></a></h4><p><strong>“Tools”节点下面是一些工具软件，包括内容如下：</strong></p><ul><li><strong>Qt Creator 4.13.1</strong> 是用于 Qt 程序开发的 IDE。</li><li><strong>MinGW 7.3.0</strong> 是 MinGW 编译工具链。</li><li><strong>Strawberry Perl</strong> 是一个 Perl 语言工具。</li></ul><p>根据个人的需要设置安装选项，无需选择所有的安装选项。例如</p><ul><li>如果不需要进行 <strong>UWP 平台</strong>的开发，<strong>UWP模块就可以都不选</strong></li><li>如果不是为和以前开发的源程序兼容，过时的模块不要选择，如 <strong>Qt Script</strong> 就是已过时的模块</li></ul><h4 id="qt-creator-ide-主要工具软件-与api助手" tabindex="-1"><a class="header-anchor" href="#qt-creator-ide-主要工具软件-与api助手"><span>Qt Creator（IDE，主要工具软件）与API助手</span></a></h4><p>程序组中一个主要的程序是 <strong>Qt Creator 4.13.1(Community)</strong>，它是用于开发 Qt 程序的 IDE，是 Qt 的主要工具软件。</p><p>根据选择安装的编译器模块会建立几个子分组，见图 中 的 MinGW 5.13.0 (32-bit)、MSVC 2017（32-bit）和 MSVC 2017 （64-bit），每个组下面主要有 3 个工具软件：</p><ul><li><strong>Assistant</strong> 是一个独立的查看 Qt 帮助文件的程序，集成在 了 Qt Creator 中</li><li><strong>Designer</strong> 是一个独立的进行窗口、对话框等界面可视化设计的程序。Designer 也集成在了 Qt Creator 中，在 Qt Creator 中编辑或创建界面文件时，就可以自动打开并进行界面设计</li><li><strong>Linguist</strong>是一个编辑语言资源文件的程序，在开发多语言界面的应用程序时会用到</li></ul><h3 id="安装完成后" tabindex="-1"><a class="header-anchor" href="#安装完成后"><span>安装完成后</span></a></h3><p>Windows的开始菜单有一个名为<code>Qt by Trolltech v4.3.2(OpenSource)</code>的程序组（Qt 4），里面包含</p><ul><li>Qt助手（Qt Assistant）</li><li>Qt设计师（Qt Designer），注：高版本(Qt5)用的是<code>Qt Creator</code>而非<code>Qt Designer</code>，前者有后者的全部功能</li><li>Qt 4.3.2 命令行提示符（Qt 4.3.2 Command Prompt）</li></ul><h2 id="qt-mac的安装-略" tabindex="-1"><a class="header-anchor" href="#qt-mac的安装-略"><span><s>Qt/Mac的安装</s>（略）</span></a></h2><p>略</p><h2 id="qt-x11的安装-略" tabindex="-1"><a class="header-anchor" href="#qt-x11的安装-略"><span><s>Qt/X11的安装</s>（略）</span></a></h2><p>略</p><h1 id="使用vs开发qt" tabindex="-1"><a class="header-anchor" href="#使用vs开发qt"><span>使用VS开发Qt</span></a></h1><p>参考</p><ul><li><a href="http://c.biancheng.net/view/1818.html" target="_blank" rel="noopener noreferrer">【C语言中文网】VS中使用Qt方法详解</a></li></ul>',39)]))}const d=e(o,[["render",r],["__file","02. Qt的获取和安装.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/01.%20%E7%AE%80%E6%A6%82/01.%20%E7%AE%80%E6%A6%82/02.%20Qt%E7%9A%84%E8%8E%B7%E5%8F%96%E5%92%8C%E5%AE%89%E8%A3%85.html","title":"QT","lang":"zh-CN","frontmatter":{"description":"QT 目录 Qt的获取和安装 协议说明 开源版和商业版 开源版 使用GUN通用公共协议（GPL，General Public License），给与应用程序的用户一些特定的权利 包括查看和修改源代码以及重新发布这个应用程序（在同等条款下）的权利 商业版 希望在发布应用程序的同时不公布源代码，或者希望在发布应用程序时使用自己的商业协议条件 Qt/Wind...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/01.%20%E7%AE%80%E6%A6%82/01.%20%E7%AE%80%E6%A6%82/02.%20Qt%E7%9A%84%E8%8E%B7%E5%8F%96%E5%92%8C%E5%AE%89%E8%A3%85.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"QT"}],["meta",{"property":"og:description","content":"QT 目录 Qt的获取和安装 协议说明 开源版和商业版 开源版 使用GUN通用公共协议（GPL，General Public License），给与应用程序的用户一些特定的权利 包括查看和修改源代码以及重新发布这个应用程序（在同等条款下）的权利 商业版 希望在发布应用程序的同时不公布源代码，或者希望在发布应用程序时使用自己的商业协议条件 Qt/Wind..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"QT\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"QT","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"Qt的获取和安装","slug":"qt的获取和安装","link":"#qt的获取和安装","children":[{"level":2,"title":"协议说明","slug":"协议说明","link":"#协议说明","children":[]},{"level":2,"title":"Qt/Windows的安装","slug":"qt-windows的安装","link":"#qt-windows的安装","children":[{"level":3,"title":"组件管理软件储存库设置","slug":"组件管理软件储存库设置","link":"#组件管理软件储存库设置","children":[]},{"level":3,"title":"离线安装","slug":"离线安装","link":"#离线安装","children":[]},{"level":3,"title":"在线安装","slug":"在线安装","link":"#在线安装","children":[]},{"level":3,"title":"安装时选项的具体含义","slug":"安装时选项的具体含义","link":"#安装时选项的具体含义","children":[{"level":4,"title":"通用组件","slug":"通用组件","link":"#通用组件","children":[]},{"level":4,"title":"Tools选项","slug":"tools选项","link":"#tools选项","children":[]},{"level":4,"title":"Qt Creator（IDE，主要工具软件）与API助手","slug":"qt-creator-ide-主要工具软件-与api助手","link":"#qt-creator-ide-主要工具软件-与api助手","children":[]}]},{"level":3,"title":"安装完成后","slug":"安装完成后","link":"#安装完成后","children":[]}]},{"level":2,"title":"Qt/Mac的安装（略）","slug":"qt-mac的安装-略","link":"#qt-mac的安装-略","children":[]},{"level":2,"title":"Qt/X11的安装（略）","slug":"qt-x11的安装-略","link":"#qt-x11的安装-略","children":[]}]},{"level":1,"title":"使用VS开发Qt","slug":"使用vs开发qt","link":"#使用vs开发qt","children":[]}],"git":{},"readingTime":{"minutes":5.47,"words":1642},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/01. 简概/01. 简概/02. Qt的获取和安装.md","excerpt":"\\n<h1>目录</h1>\\n<h1>Qt的获取和安装</h1>\\n<h2>协议说明</h2>\\n<p>开源版和商业版</p>\\n<ul>\\n<li>开源版\\n<ul>\\n<li>使用GUN通用公共协议（GPL，<em>General Public License</em>），给与应用程序的用户一些特定的权利</li>\\n<li>包括查看和修改源代码以及重新发布这个应用程序（在同等条款下）的权利</li>\\n</ul>\\n</li>\\n<li>商业版\\n<ul>\\n<li>希望在发布应用程序的同时不公布源代码，或者希望在发布应用程序时使用自己的商业协议条件</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>Qt/Windows的安装</h2>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/01. 简概/01. 简概/02. Qt的获取和安装.md","value":{"title":"02. Qt的获取和安装","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/01. 简概/01. 简概/02. Qt的获取和安装.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,p as data};
