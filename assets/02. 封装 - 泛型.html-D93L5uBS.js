import{_ as e,e as s,g as i,o as n}from"./app-CuJixpuN.js";const h={};function t(r,a){return n(),s("div",null,a[0]||(a[0]=[i(`<h1 id="泛型编程" tabindex="-1"><a class="header-anchor" href="#泛型编程"><span>泛型编程</span></a></h1><p>很多都是<code>抽象数据类型</code>（<em>Abstract Data Type</em>，ADT）</p><ul><li>函数重载（模板）也是一种泛型</li><li>类模板</li></ul><h2 id="stl" tabindex="-1"><a class="header-anchor" href="#stl"><span>STL</span></a></h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h3><h4 id="容器" tabindex="-1"><a class="header-anchor" href="#容器"><span>容器</span></a></h4><p>概念</p><h4 id="迭代器" tabindex="-1"><a class="header-anchor" href="#迭代器"><span>迭代器</span></a></h4><p>概念</p><h4 id="适配器" tabindex="-1"><a class="header-anchor" href="#适配器"><span>适配器</span></a></h4><p>概念</p><h4 id="函数符" tabindex="-1"><a class="header-anchor" href="#函数符"><span>函数符</span></a></h4><p>概念</p><h2 id="容器类型" tabindex="-1"><a class="header-anchor" href="#容器类型"><span>容器类型</span></a></h2><p><code>容器类</code>（<em>container class</em>）</p><h3 id="序列容器类" tabindex="-1"><a class="header-anchor" href="#序列容器类"><span>序列容器类</span></a></h3><h4 id="vector-计算机矢量-数组实现" tabindex="-1"><a class="header-anchor" href="#vector-计算机矢量-数组实现"><span>vector - 计算机矢量（数组实现）</span></a></h4><h4 id="deque-双端队列" tabindex="-1"><a class="header-anchor" href="#deque-双端队列"><span>deque - 双端队列</span></a></h4><h4 id="list-链表-单向or双向-链表实现" tabindex="-1"><a class="header-anchor" href="#list-链表-单向or双向-链表实现"><span>list - 链表（单向or双向）（链表实现）</span></a></h4><h4 id="forward-list-向前链表-c-11" tabindex="-1"><a class="header-anchor" href="#forward-list-向前链表-c-11"><span>forward_list - 向前链表（C++11）</span></a></h4><h3 id="适配器类" tabindex="-1"><a class="header-anchor" href="#适配器类"><span>适配器类</span></a></h3><h4 id="queue-队列" tabindex="-1"><a class="header-anchor" href="#queue-队列"><span>queue - 队列</span></a></h4><h4 id="priority-queue-优先队列" tabindex="-1"><a class="header-anchor" href="#priority-queue-优先队列"><span>priority_queue - 优先队列</span></a></h4><h4 id="stack" tabindex="-1"><a class="header-anchor" href="#stack"><span>stack</span></a></h4><h3 id="其他类" tabindex="-1"><a class="header-anchor" href="#其他类"><span>其他类</span></a></h3><h4 id="array-c-11" tabindex="-1"><a class="header-anchor" href="#array-c-11"><span>array（C++11）</span></a></h4><h3 id="关联容器" tabindex="-1"><a class="header-anchor" href="#关联容器"><span>关联容器</span></a></h3><h4 id="set" tabindex="-1"><a class="header-anchor" href="#set"><span>set</span></a></h4><h4 id="multimap" tabindex="-1"><a class="header-anchor" href="#multimap"><span>multimap</span></a></h4><h3 id="无序关联容器" tabindex="-1"><a class="header-anchor" href="#无序关联容器"><span>无序关联容器</span></a></h3><h4 id="unordered-set" tabindex="-1"><a class="header-anchor" href="#unordered-set"><span>unordered_set</span></a></h4><h4 id="unordered-multiset" tabindex="-1"><a class="header-anchor" href="#unordered-multiset"><span>unordered_multiset</span></a></h4><h4 id="unordered-map" tabindex="-1"><a class="header-anchor" href="#unordered-map"><span>unordered_map</span></a></h4><h4 id="unordered-multimap" tabindex="-1"><a class="header-anchor" href="#unordered-multimap"><span>unordered_multimap</span></a></h4><h3 id="特殊" tabindex="-1"><a class="header-anchor" href="#特殊"><span>特殊</span></a></h3><h4 id="bitset" tabindex="-1"><a class="header-anchor" href="#bitset"><span>bitset</span></a></h4><h2 id="函数对象——也叫函数符" tabindex="-1"><a class="header-anchor" href="#函数对象——也叫函数符"><span>函数对象——也叫函数符</span></a></h2><h1 id="一些补充" tabindex="-1"><a class="header-anchor" href="#一些补充"><span>一些补充</span></a></h1><h2 id="stl-x-基类指针-多态性" tabindex="-1"><a class="header-anchor" href="#stl-x-基类指针-多态性"><span>STL x 基类指针（多态性）</span></a></h2><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">vector</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Line</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> lineVector;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">vector</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Rect</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rectVector;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 或</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">vector</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Shape</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> shapeVector;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 注意这里是指针，因为这里需要多态性！这里要既可以存直线又可以存矩形</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="比较常用" tabindex="-1"><a class="header-anchor" href="#比较常用"><span>比较常用</span></a></h2><p>vector</p>`,42)]))}const p=e(h,[["render",t],["__file","02. 封装 - 泛型.html.vue"]]),l=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/C__/05.%20%E5%B0%81%E8%A3%85/02.%20%E5%B0%81%E8%A3%85%20-%20%E6%B3%9B%E5%9E%8B.html","title":"泛型编程","lang":"zh-CN","frontmatter":{"description":"泛型编程 很多都是抽象数据类型（Abstract Data Type，ADT） 函数重载（模板）也是一种泛型 类模板 STL 概念 容器 概念 迭代器 概念 适配器 概念 函数符 概念 容器类型 容器类（container class） 序列容器类 vector - 计算机矢量（数组实现） deque - 双端队列 list - 链表（单向or双向）（...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/C__/05.%20%E5%B0%81%E8%A3%85/02.%20%E5%B0%81%E8%A3%85%20-%20%E6%B3%9B%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"泛型编程"}],["meta",{"property":"og:description","content":"泛型编程 很多都是抽象数据类型（Abstract Data Type，ADT） 函数重载（模板）也是一种泛型 类模板 STL 概念 容器 概念 迭代器 概念 适配器 概念 函数符 概念 容器类型 容器类（container class） 序列容器类 vector - 计算机矢量（数组实现） deque - 双端队列 list - 链表（单向or双向）（..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"泛型编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.71,"words":212},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/C++/05. 封装/02. 封装 - 泛型.md","excerpt":"\\n<p>很多都是<code>抽象数据类型</code>（<em>Abstract Data Type</em>，ADT）</p>\\n<ul>\\n<li>函数重载（模板）也是一种泛型</li>\\n<li>类模板</li>\\n</ul>\\n<h2>STL</h2>\\n<h3>概念</h3>\\n<h4>容器</h4>\\n<p>概念</p>\\n<h4>迭代器</h4>\\n<p>概念</p>\\n<h4>适配器</h4>\\n<p>概念</p>\\n<h4>函数符</h4>\\n<p>概念</p>\\n<h2>容器类型</h2>\\n<p><code>容器类</code>（<em>container class</em>）</p>\\n<h3>序列容器类</h3>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/C++/05. 封装/02. 封装 - 泛型.md","value":{"title":"02. 封装 - 泛型","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/C++/05. 封装/02. 封装 - 泛型.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,l as data};
