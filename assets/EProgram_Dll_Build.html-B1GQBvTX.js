import{_ as r,c as d,b as l,a as n,d as a,e as t,o as s,r as o}from"./app-BETEO2EF.js";const c={},p={href:"https://www.cnblogs.com/wurendao/p/10959007.html",target:"_blank",rel:"noopener noreferrer"};function u(m,e){const i=o("ExternalLinkIcon");return s(),d("div",null,[e[2]||(e[2]=l('<h1 id="dll-compiled-by-all-language" tabindex="-1"><a class="header-anchor" href="#dll-compiled-by-all-language"><span>DLL Compiled By All Language</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="eprogram-dll-build" tabindex="-1"><a class="header-anchor" href="#eprogram-dll-build"><span>EProgram_Dll_Build</span></a></h1>',3)),n("p",null,[e[1]||(e[1]=a("参考：")),n("a",p,[e[0]||(e[0]=a("【博客园】易语言调用外部DLL详细实例教程")),t(i)])]),e[3]||(e[3]=l(`<h2 id="工程模板" tabindex="-1"><a class="header-anchor" href="#工程模板"><span>工程模板</span></a></h2><p>程序 &gt; 新建 &gt; Windows动态链接库</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>.版本 2

.程序集 程序集1

.子程序 _启动子程序, 整数型, , 请在本子程序中放置动态链接库初始化代码

_临时子程序 ()  &#39; 在初始化代码执行完毕后调用测试代码
返回 (0)  &#39; 返回值被忽略。

.子程序 _临时子程序

&#39; 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改工程" tabindex="-1"><a class="header-anchor" href="#修改工程"><span>修改工程</span></a></h2><p>然后右键新建一个子程序或者用快捷键：Ctrl+N 。然后写上代码。</p><blockquote><p>子程序名 ：这个方法的名称。也是后面调用需要用到的哦。</p><p>返回值类型：自己根据需求填写。</p><p><strong>公开：这个必须打钩，不然会调用不到。</strong></p></blockquote><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>.版本 2

.子程序 EProgramDll, 文本型, 公开
.参数 str1, 文本型
.参数 str2, 文本型

返回 (str1 ＋ str2)

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>编译</span></a></h2><p>菜单 &gt; 编译 &gt; 静态编译</p><p>结果就生成一个dll文件，没其他文件生成</p><p>EProgramDll.dll</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>// Dependencies查看
|Name              |Ordinal|VA    |
|------------------|-------|------|
|EProgramDll       |1      |0x1140|
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12))])}const v=r(c,[["render",u],["__file","EProgram_Dll_Build.html.vue"]]),h=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/DLL/DLL%20Compiled%20By%20All%20Language/EProgram_Dll_Build.html","title":"DLL Compiled By All Language","lang":"zh-CN","frontmatter":{"description":"DLL Compiled By All Language 目录 EProgram_Dll_Build 参考：【博客园】易语言调用外部DLL详细实例教程 工程模板 程序 > 新建 > Windows动态链接库 修改工程 然后右键新建一个子程序或者用快捷键：Ctrl+N 。然后写上代码。 子程序名 ：这个方法的名称。也是后面调用需要用到的哦。 返回值类型：...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/DLL/DLL%20Compiled%20By%20All%20Language/EProgram_Dll_Build.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"DLL Compiled By All Language"}],["meta",{"property":"og:description","content":"DLL Compiled By All Language 目录 EProgram_Dll_Build 参考：【博客园】易语言调用外部DLL详细实例教程 工程模板 程序 > 新建 > Windows动态链接库 修改工程 然后右键新建一个子程序或者用快捷键：Ctrl+N 。然后写上代码。 子程序名 ：这个方法的名称。也是后面调用需要用到的哦。 返回值类型：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DLL Compiled By All Language\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"DLL Compiled By All Language","slug":"dll-compiled-by-all-language","link":"#dll-compiled-by-all-language","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"EProgram_Dll_Build","slug":"eprogram-dll-build","link":"#eprogram-dll-build","children":[{"level":2,"title":"工程模板","slug":"工程模板","link":"#工程模板","children":[]},{"level":2,"title":"修改工程","slug":"修改工程","link":"#修改工程","children":[]},{"level":2,"title":"编译","slug":"编译","link":"#编译","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.21,"words":363},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/DLL/DLL Compiled By All Language/EProgram_Dll_Build.md","excerpt":"\\n<h1>目录</h1>\\n<h1>EProgram_Dll_Build</h1>\\n<p>参考：<a href=\\"https://www.cnblogs.com/wurendao/p/10959007.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【博客园】易语言调用外部DLL详细实例教程</a></p>\\n<h2>工程模板</h2>\\n<p>程序 &gt; 新建 &gt; Windows动态链接库</p>\\n<div class=\\"language-c++\\" data-ext=\\"c++\\" data-title=\\"c++\\"><pre class=\\"language-c++\\"><code>.版本 2\\n\\n.程序集 程序集1\\n\\n.子程序 _启动子程序, 整数型, , 请在本子程序中放置动态链接库初始化代码\\n\\n_临时子程序 ()  ' 在初始化代码执行完毕后调用测试代码\\n返回 (0)  ' 返回值被忽略。\\n\\n.子程序 _临时子程序\\n\\n' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。\\n\\n</code></pre></div>","autoDesc":true}`);export{v as comp,h as data};
