import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,a as e}from"./app-BLOlimVU.js";const t={},p=e(`<h1 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="编译详解" tabindex="-1"><a class="header-anchor" href="#编译详解"><span>编译详解</span></a></h1><h2 id="代码的手动编译-javac工具" tabindex="-1"><a class="header-anchor" href="#代码的手动编译-javac工具"><span>代码的手动编译（javac工具）</span></a></h2><h3 id="helloworld-demo" tabindex="-1"><a class="header-anchor" href="#helloworld-demo"><span>HelloWorld_Demo</span></a></h3><p>Java应用程序</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * This program displays a greeting for the reader.
 * <span class="token keyword">@version</span> 1.30 2014-02-27
 * <span class="token keyword">@author</span> Cay Horstmann
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Welcome</span>
<span class="token punctuation">{</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
      <span class="token class-name">String</span> greeting <span class="token operator">=</span> <span class="token string">&quot;Welcome to Core Java!&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> greeting<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>javac Welcome.java	<span class="token comment"># 会生成Welcome.class文件</span>
<span class="token function">java</span> Welcome		<span class="token comment"># Java虚拟机将从指定类中的main方法开始执行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="imageviewer-demo" tabindex="-1"><a class="header-anchor" href="#imageviewer-demo"><span>ImageViewer_Demo</span></a></h3><p>Java应用程序</p><p>程序</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * A program for viewing images.
 * <span class="token keyword">@version</span> 1.30 2014-02-27
 * <span class="token keyword">@author</span> Cay Horstmann
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImageViewer</span>
<span class="token punctuation">{</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
      <span class="token class-name">EventQueue</span><span class="token punctuation">.</span><span class="token function">invokeLater</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
         <span class="token class-name">JFrame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageViewerFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         frame<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;ImageViewer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         frame<span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span><span class="token constant">EXIT_ON_CLOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * A frame with a label to show an image.
 */</span>
<span class="token keyword">class</span> <span class="token class-name">ImageViewerFrame</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span>
<span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token class-name">JLabel</span> label<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">JFileChooser</span> chooser<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEFAULT_WIDTH</span> <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEFAULT_HEIGHT</span> <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span>

   <span class="token keyword">public</span> <span class="token class-name">ImageViewerFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
      <span class="token function">setSize</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_WIDTH</span><span class="token punctuation">,</span> <span class="token constant">DEFAULT_HEIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// use a label to display the images</span>
      label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">add</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// set up the file chooser</span>
      chooser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JFileChooser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      chooser<span class="token punctuation">.</span><span class="token function">setCurrentDirectory</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// set up the menu bar</span>
      <span class="token class-name">JMenuBar</span> menuBar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setJMenuBar</span><span class="token punctuation">(</span>menuBar<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token class-name">JMenu</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenu</span><span class="token punctuation">(</span><span class="token string">&quot;File&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      menuBar<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token class-name">JMenuItem</span> openItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">&quot;Open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      menu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>openItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
      openItem<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
         <span class="token comment">// show file chooser dialog</span>
            <span class="token keyword">int</span> result <span class="token operator">=</span> chooser<span class="token punctuation">.</span><span class="token function">showOpenDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// if file selected, set it as icon of the label</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token class-name">JFileChooser</span><span class="token punctuation">.</span><span class="token constant">APPROVE_OPTION</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
               <span class="token class-name">String</span> name <span class="token operator">=</span> chooser<span class="token punctuation">.</span><span class="token function">getSelectedFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               label<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token class-name">JMenuItem</span> exitItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">&quot;Exit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      menu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>exitItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
      exitItem<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>javac ImageViewer.java
<span class="token comment"># 然后多了两个文件：ImageViewer.class和ImageViewerFrame.class</span>

<span class="token function">java</span> ImageViewer	<span class="token comment"># Java虚拟机将从指定类中的main方法开始执行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="applet" tabindex="-1"><a class="header-anchor" href="#applet"><span>applet</span></a></h3><p>applet项目</p><p>编译</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 原文件：makejar, RoadApplet.html, RoadApplet.jar, RoadApplet.java, RoadApplet.mf, RoadComponent.java</span>
javac RoadApplet.java
<span class="token comment"># 编译java文件</span>
<span class="token comment"># 生成文件：Road.class, RoadApplet.class, RoadComponent.class</span>

jar cvfm RoadApplet.jar RoadApplet.mf *.class
<span class="token comment"># 使用jar工具将类文件打包到一个“JAR文件”</span>
<span class="token comment"># 报错：&#39;jar&#39; 不是内部或外部命令，也不是可运行的程序</span>

appletiviewer RoadApplet.html
<span class="token comment"># 调用appletviewer程序，这是JDK自带的一个工具，可以用来快速测试applet</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中html内容</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/1999/xhtml<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!----&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>applet</span> <span class="token attr-name">code</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RoadApplet.class<span class="token punctuation">&quot;</span></span> <span class="token attr-name">archive</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RoadApplet.jar<span class="token punctuation">&quot;</span></span> 
                 <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Traffic jam visualization<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>applet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!----&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多文件编译-javac工具" tabindex="-1"><a class="header-anchor" href="#多文件编译-javac工具"><span>多文件编译（javac工具）</span></a></h2><p>如果一个源文件包含了两个类，直接编译该java文件即可</p><p>许多程序员习惯于将每一个类存在一个单独的源文件中</p><p>例如，将Employee类存放在文件Employee.java中，将EmployeeTest类存放在文件EmployeeTest.java中</p><p>可以有两种编译源程序的方法</p><h3 id="使用通配符调用java编译器" tabindex="-1"><a class="header-anchor" href="#使用通配符调用java编译器"><span>使用通配符调用Java编译器</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>javac Employee*.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="通过依赖自动编译关联文件" tabindex="-1"><a class="header-anchor" href="#通过依赖自动编译关联文件"><span>通过依赖自动编译关联文件</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>javac EmployeeTest.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>其他语言关联编译的方法（与C/C++不同） <ul><li>如果熟悉UNIX的“make”工具（或者是Windows中的“nmake”等工具），可以认为<strong>Java编译器内置了“make”功能</strong></li><li>C++一般是使用makefile，即qmake (QT) 或 cmake (通用) 来辅助变异</li></ul></li><li>详细过程 <ul><li>没有显式地编译Employee.java。然而，当Java编译器发现EmployeeTest.java使用了Employee类时会查找名为Employee.class的文件</li><li>如果没有找到这个文件，就会自动地搜索Employee.java，然后，对它进行编译</li><li>更重要的是：如果Employee.java版本较已有的Employee.class文件版本新，Java编译器就会自动地重新编译这个文件</li></ul></li></ul><h2 id="ide编译" tabindex="-1"><a class="header-anchor" href="#ide编译"><span>IDE编译</span></a></h2><p>略</p>`,33),l=[p];function o(c,i){return a(),s("div",null,l)}const d=n(t,[["render",o],["__file","02.2 编译详解_编译篇.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Java/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/02.2%20%E7%BC%96%E8%AF%91%E8%AF%A6%E8%A7%A3_%E7%BC%96%E8%AF%91%E7%AF%87.html","title":"Java","lang":"zh-CN","frontmatter":{"description":"Java 目录 编译详解 代码的手动编译（javac工具） HelloWorld_Demo Java应用程序 编译 ImageViewer_Demo Java应用程序 程序 编译 applet applet项目 编译 其中html内容 多文件编译（javac工具） 如果一个源文件包含了两个类，直接编译该java文件即可 许多程序员习惯于将每一个类存在一...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Java/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/02.2%20%E7%BC%96%E8%AF%91%E8%AF%A6%E8%A7%A3_%E7%BC%96%E8%AF%91%E7%AF%87.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Java"}],["meta",{"property":"og:description","content":"Java 目录 编译详解 代码的手动编译（javac工具） HelloWorld_Demo Java应用程序 编译 ImageViewer_Demo Java应用程序 程序 编译 applet applet项目 编译 其中html内容 多文件编译（javac工具） 如果一个源文件包含了两个类，直接编译该java文件即可 许多程序员习惯于将每一个类存在一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Java","slug":"java","link":"#java","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"编译详解","slug":"编译详解","link":"#编译详解","children":[{"level":2,"title":"代码的手动编译（javac工具）","slug":"代码的手动编译-javac工具","link":"#代码的手动编译-javac工具","children":[{"level":3,"title":"HelloWorld_Demo","slug":"helloworld-demo","link":"#helloworld-demo","children":[]},{"level":3,"title":"ImageViewer_Demo","slug":"imageviewer-demo","link":"#imageviewer-demo","children":[]},{"level":3,"title":"applet","slug":"applet","link":"#applet","children":[]}]},{"level":2,"title":"多文件编译（javac工具）","slug":"多文件编译-javac工具","link":"#多文件编译-javac工具","children":[{"level":3,"title":"使用通配符调用Java编译器","slug":"使用通配符调用java编译器","link":"#使用通配符调用java编译器","children":[]},{"level":3,"title":"通过依赖自动编译关联文件","slug":"通过依赖自动编译关联文件","link":"#通过依赖自动编译关联文件","children":[]}]},{"level":2,"title":"IDE编译","slug":"ide编译","link":"#ide编译","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.45,"words":736},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Java/01. 编程语言/02.2 编译详解_编译篇.md","autoDesc":true}');export{d as comp,k as data};
