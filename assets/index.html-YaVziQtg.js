import{_ as e,c as t,e as l,o as s}from"./app-BgHc8lP1.js";const n={};function a(r,i){return s(),t("div",null,i[0]||(i[0]=[l(`<h1 id="pyqt-node-editor" tabindex="-1"><a class="header-anchor" href="#pyqt-node-editor"><span>PyQt_Node_Editor</span></a></h1><p>参考</p><ul><li><p>github有个https://github.com/paceholder/nodeeditor，但是用了CMake，我不会CMake......跑不起来（2024的我：hhhh，我当年居然不会，笑死了，明明跑起来这个东西就能走少很多弯路了，不过也好，一步一步开发理解也更深了）</p></li><li><p><a href="https://www.youtube.com/watch?v=YV1mEYd7nyM&amp;list=PLZSNHzwDCOggHLThIbCxUhWTgrKVemZkz" target="_blank" rel="noopener noreferrer">【Youtube】Node Editor Tutorial</a>（目前学习进度：P51end/62，跳过：34~39。这里的数字是分p而非章节名）） 不过这个教程使用的是 PyQt，但换成PySide无伤大雅 作者的网站：https://www.blenderfreak.com/tutorials/node-editor-tutorial-series/</p><p>My Watched Note：</p><ul><li>32，不可用action变灰色</li><li>52，点击节点高亮 (自动选择) 所有连接边</li><li>53，拖拽线方式创建节点（创建节点的三种：右键/拖拽菜单/拖拽线）</li><li>54，自动生成文档和使用文档注释，pip install Sphinx</li><li>55，提高可复用性和修复bug，版本管理的可视化（Version Control窗口、Event Log窗口）</li><li>56，同上</li><li>57，同上</li><li>58，修复边缘的问题</li><li><strong>59，体系结构概述，总结（还分章节了）</strong></li><li><strong>60，教程总结（还分章节了）</strong></li><li>61，添加重路由边的功能（同blender效果）</li><li>62，向Socket添加捕捉（同blender效果）</li><li>国内观后笔记：https://blog.csdn.net/mahuatengmmp/article/details/118070362</li></ul></li><li><p>Qt Example 中有个比较类似的示例，叫 “elasticnodes”，使用的类</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QGraphicsItem&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QGraphicsView&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QGraphicsScene&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QGraphicsSceneMouseEvent&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QPainter&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;QtMath&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,3)]))}const o=e(n,[["render",a],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/05.%20%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E7%B1%BB/Node_Editor/","title":"PyQt_Node_Editor","lang":"zh-CN","frontmatter":{"description":"PyQt_Node_Editor 参考 github有个https://github.com/paceholder/nodeeditor，但是用了CMake，我不会CMake......跑不起来（2024的我：hhhh，我当年居然不会，笑死了，明明跑起来这个东西就能走少很多弯路了，不过也好，一步一步开发理解也更深了） 【Youtube】Node Edi...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/05.%20%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E7%B1%BB/Node_Editor/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"PyQt_Node_Editor"}],["meta",{"property":"og:description","content":"PyQt_Node_Editor 参考 github有个https://github.com/paceholder/nodeeditor，但是用了CMake，我不会CMake......跑不起来（2024的我：hhhh，我当年居然不会，笑死了，明明跑起来这个东西就能走少很多弯路了，不过也好，一步一步开发理解也更深了） 【Youtube】Node Edi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PyQt_Node_Editor\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"PyQt_Node_Editor","slug":"pyqt-node-editor","link":"#pyqt-node-editor","children":[]}],"git":{},"readingTime":{"minutes":1.11,"words":333},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/05. 功能实现类/Node_Editor/README.md","excerpt":"\\n<p>参考</p>\\n<ul>\\n<li>\\n<p>github有个https://github.com/paceholder/nodeeditor，但是用了CMake，我不会CMake......跑不起来（2024的我：hhhh，我当年居然不会，笑死了，明明跑起来这个东西就能走少很多弯路了，不过也好，一步一步开发理解也更深了）</p>\\n</li>\\n<li>\\n<p><a href=\\"https://www.youtube.com/watch?v=YV1mEYd7nyM&amp;list=PLZSNHzwDCOggHLThIbCxUhWTgrKVemZkz\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【Youtube】Node Editor Tutorial</a>（目前学习进度：P51end/62，跳过：34~39。这里的数字是分p而非章节名））\\n不过这个教程使用的是 PyQt，但换成PySide无伤大雅\\n作者的网站：https://www.blenderfreak.com/tutorials/node-editor-tutorial-series/</p>\\n<p>My Watched Note：</p>\\n<ul>\\n<li>32，不可用action变灰色</li>\\n<li>52，点击节点高亮 (自动选择) 所有连接边</li>\\n<li>53，拖拽线方式创建节点（创建节点的三种：右键/拖拽菜单/拖拽线）</li>\\n<li>54，自动生成文档和使用文档注释，pip install Sphinx</li>\\n<li>55，提高可复用性和修复bug，版本管理的可视化（Version Control窗口、Event Log窗口）</li>\\n<li>56，同上</li>\\n<li>57，同上</li>\\n<li>58，修复边缘的问题</li>\\n<li><strong>59，体系结构概述，总结（还分章节了）</strong></li>\\n<li><strong>60，教程总结（还分章节了）</strong></li>\\n<li>61，添加重路由边的功能（同blender效果）</li>\\n<li>62，向Socket添加捕捉（同blender效果）</li>\\n<li>国内观后笔记：https://blog.csdn.net/mahuatengmmp/article/details/118070362</li>\\n</ul>\\n</li>\\n<li>\\n<p>Qt Example 中有个比较类似的示例，叫 “elasticnodes”，使用的类</p>\\n<div class=\\"language-c++ line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"c++\\" data-title=\\"c++\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> &lt;QGraphicsItem&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> &lt;QGraphicsView&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> &lt;QGraphicsScene&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> &lt;QGraphicsSceneMouseEvent&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> &lt;QPainter&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> &lt;QtMath&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/05. 功能实现类/Node_Editor/README.md","value":{"title":"05. 功能实现类/","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/05. 功能实现类/Node_Editor/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{o as comp,p as data};
