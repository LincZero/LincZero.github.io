import{_ as i,c as t,e as l,o as n}from"./app-DQC9V0Al.js";const a="/assets/%E7%A9%BA%E9%97%B2%E8%A1%A8%E6%B3%95-Dxk2XAwL.png",o="/assets/%E7%A9%BA%E9%97%B2%E5%9D%97%E9%93%BE%E8%A1%A8-DEPu3eBH.png",p={};function s(r,e){return n(),t("div",null,e[0]||(e[0]=[l('<h1 id="空闲空间管理" tabindex="-1"><a class="header-anchor" href="#空闲空间管理"><span>空闲空间管理</span></a></h1><p>前面说到的文件的存储是针对已经被占用的数据块组织和管理，接下来的问题是，如果我要保存一个数据块，我应该放在硬盘上的哪个位置呢？难道需要将所有的块扫描一遍，找个空的地方随便放吗？</p><p>那这种方式效率就太低了，所以针对磁盘的空闲空间也是要引入管理的机制，接下来介绍几种常见的方法：</p><ul><li>空闲表法</li><li>空闲链表法</li><li>位图法 (当前采用)</li></ul><h2 id="_1-空闲表法" tabindex="-1"><a class="header-anchor" href="#_1-空闲表法"><span>(1) 空闲表法</span></a></h2><p>空闲表法就是为所有空闲空间建立一张表，表内容包括空闲区的第一个块号和该空闲区的块个数，注意，这个方式是连续分配的。如下图：</p><p><img src="'+a+'" alt="空闲表法" loading="lazy"></p><p>当请求分配磁盘空间时，系统依次扫描空闲表里的内容，直到找到一个合适的空闲区域为止。当用户撤销一个文件时，系统回收文件空间。这时，也需顺序扫描空闲表，寻找一个空闲表条目并将释放空间的第一个物理块号及它占用的块数填到这个条目中。</p><ul><li>缺点：这种方法仅当有少量的空闲区时才有较好的效果。因为，如果存储空间中有着大量的小的空闲区，则空闲表变得很大，这样查询效率会很低</li><li>应用：另外，这种分配技术适用于建立连续文件。</li></ul><h2 id="_2-空闲链表法" tabindex="-1"><a class="header-anchor" href="#_2-空闲链表法"><span>(2) 空闲链表法</span></a></h2><p>我们也可以使用「链表」的方式来管理空闲空间，每一个空闲块里有一个指针指向下一个空闲块，这样也能很方便的找到空闲块并管理起来。如下图：</p><p><img src="'+o+'" alt="空闲链表法" loading="lazy"></p><p>当创建文件需要一块或几块时，就从链头上依次取下一块或几块。反之，当回收空间时，把这些空闲块依次接到链头上。</p><p>这种技术只要在主存中保存一个指针，令它指向第一个空闲块。</p><ul><li>优点：简单</li><li>缺点：但不能随机访问，工作效率低，因为每当在链上增加或移动空闲块时需要做很多 I/O 操作，同时数据块的指针消耗了一定的存储空间。</li></ul><p><strong>空闲表法和空闲链表法都不适合用于大型文件系统</strong>，因为这会使空闲表或空闲链表太大。</p><h2 id="_3-位图法-当前采用" tabindex="-1"><a class="header-anchor" href="#_3-位图法-当前采用"><span>(3) 位图法 (当前采用)</span></a></h2><p>位图是利用二进制的一位来表示磁盘中一个盘块的使用情况，磁盘上所有的盘块都有一个二进制位与之对应。</p><p>当值为 0 时，表示对应的盘块空闲，值为 1 时，表示对应的盘块已分配。它形式如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1111110011111110001110110111111100111</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在 Linux 文件系统就采用了位图的方式来管理空闲空间，不仅用于数据空闲块的管理，还用于 inode 空闲块的管理，因为 inode 也是存储在磁盘的，自然也要有对其管理。</p>',21)]))}const B=i(p,[["render",s],["__file","05. 空闲空间管理.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E7%BA%BF%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%89%88/%E3%80%8A%E5%B0%8F%E6%9E%97coding_%E5%9B%BE%E8%A7%A3%E7%B3%BB%E5%88%97%E3%80%8B/01.%20%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F/07.%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/05.%20%E7%A9%BA%E9%97%B2%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86.html","title":"空闲空间管理","lang":"zh-CN","frontmatter":{"description":"空闲空间管理 前面说到的文件的存储是针对已经被占用的数据块组织和管理，接下来的问题是，如果我要保存一个数据块，我应该放在硬盘上的哪个位置呢？难道需要将所有的块扫描一遍，找个空的地方随便放吗？ 那这种方式效率就太低了，所以针对磁盘的空闲空间也是要引入管理的机制，接下来介绍几种常见的方法： 空闲表法 空闲链表法 位图法 (当前采用) (1) 空闲表法 空闲...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E7%BA%BF%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%89%88/%E3%80%8A%E5%B0%8F%E6%9E%97coding_%E5%9B%BE%E8%A7%A3%E7%B3%BB%E5%88%97%E3%80%8B/01.%20%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F/07.%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/05.%20%E7%A9%BA%E9%97%B2%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"空闲空间管理"}],["meta",{"property":"og:description","content":"空闲空间管理 前面说到的文件的存储是针对已经被占用的数据块组织和管理，接下来的问题是，如果我要保存一个数据块，我应该放在硬盘上的哪个位置呢？难道需要将所有的块扫描一遍，找个空的地方随便放吗？ 那这种方式效率就太低了，所以针对磁盘的空闲空间也是要引入管理的机制，接下来介绍几种常见的方法： 空闲表法 空闲链表法 位图法 (当前采用) (1) 空闲表法 空闲..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"空闲空间管理\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"空闲空间管理","slug":"空闲空间管理","link":"#空闲空间管理","children":[{"level":2,"title":"(1) 空闲表法","slug":"_1-空闲表法","link":"#_1-空闲表法","children":[]},{"level":2,"title":"(2) 空闲链表法","slug":"_2-空闲链表法","link":"#_2-空闲链表法","children":[]},{"level":2,"title":"(3) 位图法 (当前采用)","slug":"_3-位图法-当前采用","link":"#_3-位图法-当前采用","children":[]}]}],"git":{},"readingTime":{"minutes":2.73,"words":820},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 线性学习版/《小林coding_图解系列》/01. 图解系统/07. 文件系统/05. 空闲空间管理.md","excerpt":"\\n<p>前面说到的文件的存储是针对已经被占用的数据块组织和管理，接下来的问题是，如果我要保存一个数据块，我应该放在硬盘上的哪个位置呢？难道需要将所有的块扫描一遍，找个空的地方随便放吗？</p>\\n<p>那这种方式效率就太低了，所以针对磁盘的空闲空间也是要引入管理的机制，接下来介绍几种常见的方法：</p>\\n<ul>\\n<li>空闲表法</li>\\n<li>空闲链表法</li>\\n<li>位图法 (当前采用)</li>\\n</ul>\\n<h2>(1) 空闲表法</h2>\\n<p>空闲表法就是为所有空闲空间建立一张表，表内容包括空闲区的第一个块号和该空闲区的块个数，注意，这个方式是连续分配的。如下图：</p>\\n<p></p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 线性学习版/《小林coding_图解系列》/01. 图解系统/07. 文件系统/05. 空闲空间管理.md","value":{"title":"05. 空闲空间管理","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 线性学习版/《小林coding_图解系列》/01. 图解系统/07. 文件系统/05. 空闲空间管理.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{B as comp,d as data};
