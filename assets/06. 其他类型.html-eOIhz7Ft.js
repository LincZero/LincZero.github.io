import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,a as e}from"./app-pvGL4vXS.js";const t={},o=e(`<h1 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="其他类型" tabindex="-1"><a class="header-anchor" href="#其他类型"><span>其他类型</span></a></h1><h2 id="date类" tabindex="-1"><a class="header-anchor" href="#date类"><span>Date类</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>deadline <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="localdate类" tabindex="-1"><a class="header-anchor" href="#localdate类"><span>LocalDate类</span></a></h2><p>API: <code>java.time.LocalDate 8</code></p><p>时间是用距离一个固定时间点的毫秒数（可正可负）表示的，这个点就是所谓的纪元（epoch），它是UTC时间1970年1月1日00：00：00。UTC是Coordinated Universal Time的缩写，与大家熟悉的GMT（即Greenwich Mean Time，格林威治时间）一样，是一种具有实践意义的科学标准时间。</p><p>类库设计者决定将保存时间与给时间点命名分开。所以标准Java类库分别包含了两个类：一个是用来表示时间点的Date类；另一个是用来表示大家熟悉的日历表示法的LocalDate类</p><p>将时间与日历分开是一种很好的面向对象设计。通常，最好使用不同的类表示不同的概念。</p><p>LocalDate类封装了实例域来维护所设置的日期。如果不查看源代码，就不可能知道类内部的日期表示。</p><h3 id="静态工厂方法-factory-method" tabindex="-1"><a class="header-anchor" href="#静态工厂方法-factory-method"><span>静态工厂方法（factory method）</span></a></h3><p>不要使用构造器来构造LocalDate类的对象。实际上，应当使用<code>静态工厂方法</code>（factory method）代表你调用构造器。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>						<span class="token comment">// 构造一个新对象，表示构造这个对象时的日期</span>
<span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1999</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>				<span class="token comment">// 可以提供年、月和日来构造对应一个特定日期的对象</span>
<span class="token keyword">int</span> year <span class="token operator">=</span> newYearsEve<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// 1999</span>
<span class="token keyword">int</span> month <span class="token operator">=</span> newYearsEve<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 12</span>
<span class="token keyword">int</span> day <span class="token operator">=</span> newYearsEve<span class="token punctuation">.</span><span class="token function">getDayMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 31</span>

<span class="token comment">// 得到一个新的LocalDate，这个新日期对象则是距当前对象指定天数的一个新日期</span>
<span class="token class-name">LocalDate</span> aThousandDaysLater <span class="token operator">=</span> newYearsEve<span class="token punctuation">.</span><span class="token function">plusDays</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
year <span class="token operator">=</span> aThousandDaysLater<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// 2002</span>
month <span class="token operator">=</span> aThousandDaysLater<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 09</span>
day <span class="token operator">=</span> aThousandDaysLater<span class="token punctuation">.</span><span class="token function">getDayOfMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 26</span>

<span class="token comment">// Date类还有getDay、getMonth以及getYear等方法，然而并不推荐使用这些方法。当类库设计者意识到某个方法不应该存在时，就把它标记为不鼓励使用。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显示当前月的日历</p><p>[此略]，查书</p>`,16),p=[o];function c(l,i){return n(),s("div",null,p)}const d=a(t,[["render",c],["__file","06. 其他类型.html.vue"]]),m=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Java/02.%20%E6%95%B0%E6%8D%AE_%E7%AE%97%E6%B3%95/06.%20%E5%85%B6%E4%BB%96%E7%B1%BB%E5%9E%8B.html","title":"Java","lang":"zh-CN","frontmatter":{"description":"Java 目录 其他类型 Date类 LocalDate类 API: java.time.LocalDate 8 时间是用距离一个固定时间点的毫秒数（可正可负）表示的，这个点就是所谓的纪元（epoch），它是UTC时间1970年1月1日00：00：00。UTC是Coordinated Universal Time的缩写，与大家熟悉的GMT（即Green...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Java/02.%20%E6%95%B0%E6%8D%AE_%E7%AE%97%E6%B3%95/06.%20%E5%85%B6%E4%BB%96%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Java"}],["meta",{"property":"og:description","content":"Java 目录 其他类型 Date类 LocalDate类 API: java.time.LocalDate 8 时间是用距离一个固定时间点的毫秒数（可正可负）表示的，这个点就是所谓的纪元（epoch），它是UTC时间1970年1月1日00：00：00。UTC是Coordinated Universal Time的缩写，与大家熟悉的GMT（即Green..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Java","slug":"java","link":"#java","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"其他类型","slug":"其他类型","link":"#其他类型","children":[{"level":2,"title":"Date类","slug":"date类","link":"#date类","children":[]},{"level":2,"title":"LocalDate类","slug":"localdate类","link":"#localdate类","children":[{"level":3,"title":"静态工厂方法（factory method）","slug":"静态工厂方法-factory-method","link":"#静态工厂方法-factory-method","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.6,"words":481},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Java/02. 数据+算法/06. 其他类型.md","autoDesc":true}');export{d as comp,m as data};
