import{_ as t,c as d,e as s,a as e,d as n,b as l,o,r}from"./app-uEZYZ2I0.js";const c="/assets/373963834-4a50d30a-9bbe-4345-9d11-18eeef4fc59e-B-9-B2dO.png",p="/assets/c6af2a73eee905f984c09a07ab57efc6-CioUY6xA.png",u="/assets/373899534-3294f4f0-d595-4d8c-be5b-38857be8507e-BDv_XdAO.png",v="/assets/373980862-0b9f63ae-8a89-4b37-8142-5c9b70697576-CmYgulep.png",m="/assets/373899845-c2be060e-0a52-4fa4-a55e-3c6e60354836-BxG3--zG.png",b="/assets/Pasted image 20250112201743-DALAVmSh.png",h="/assets/373982690-ee4a9555-662e-41ca-bfd1-bcdeecece732-CcbmGbvQ.png",g={},k={href:"https://forum-zh.obsidian.md/u/chris132",target:"_blank",rel:"noopener noreferrer"},w={href:"https://forum-zh.obsidian.md/u/chris132",target:"_blank",rel:"noopener noreferrer"},f={href:"https://forum-zh.obsidian.md/t/topic/39261",target:"_blank",rel:"noopener noreferrer"};function B(x,a){const i=r("ExternalLinkIcon");return o(),d("div",null,[a[4]||(a[4]=s('<h1 id="精彩用例" tabindex="-1"><a class="header-anchor" href="#精彩用例"><span>精彩用例</span></a></h1><h2 id="配合其他插件" tabindex="-1"><a class="header-anchor" href="#配合其他插件"><span>配合其他插件</span></a></h2><p>用法大概有以下三大类：</p><h3 id="ab块内部包含其他插件" tabindex="-1"><a class="header-anchor" href="#ab块内部包含其他插件"><span>ab块内部包含其他插件</span></a></h3><h4 id="dataview" tabindex="-1"><a class="header-anchor" href="#dataview"><span>DataView</span></a></h4><p><img src="'+c+'" alt="" loading="lazy"></p><h4 id="meta-bind-v3-1-7-才支持-感谢-meta-bind-作者的帮助" tabindex="-1"><a class="header-anchor" href="#meta-bind-v3-1-7-才支持-感谢-meta-bind-作者的帮助"><span>Meta-Bind (V3.1.7+才支持，感谢 Meta-Bind 作者的帮助)</span></a></h4><p><img src="'+p+'" alt="" loading="lazy"></p><h4 id="buttons" tabindex="-1"><a class="header-anchor" href="#buttons"><span>Buttons</span></a></h4><p>与 Buttons 插件进行配合。不过该插件已经不再维护，目前代替之的是 Meta-Bind 插件</p><p><img src="'+u+'" alt="" loading="lazy"></p><h4 id="dataview的内联js-dataview-inline-dvjs-v3-1-7-才支持" tabindex="-1"><a class="header-anchor" href="#dataview的内联js-dataview-inline-dvjs-v3-1-7-才支持"><span>Dataview的内联js (dataview inline dvjs) (V3.1.7+才支持)</span></a></h4><p><img src="'+v+'" alt="" loading="lazy"></p><h3 id="ab块负责选择范围-其他插件渲染范围里的东西" tabindex="-1"><a class="header-anchor" href="#ab块负责选择范围-其他插件渲染范围里的东西"><span>ab块负责选择范围，其他插件渲染范围里的东西</span></a></h3><h4 id="mindmap-nexgen" tabindex="-1"><a class="header-anchor" href="#mindmap-nexgen"><span>Mindmap-Nexgen</span></a></h4><p>这个案例中，anyblock负责选择范围，mindmap nexgen负责渲染</p><p>（In this case, anyblock is responsible for selecting the scope and mindmap nexgen is responsible for rendering）</p><p><img src="'+m+'" alt="" loading="lazy"></p><h4 id="nodeflow" tabindex="-1"><a class="header-anchor" href="#nodeflow"><span>NodeFlow</span></a></h4><p>NodeFlow 也是与 AnyBlock 同一作者开发的，里面也支持列表语法。所以可以很方便地用 AnyBlock 选择一个列表，交由给 NodeFlow 的 <code>nodeflow-list</code> 或 <code>nodeflow-listitem</code> 代码块，进行渲染</p><p><img src="'+b+'" alt="" loading="lazy"></p><h3 id="被其他插件渲染ab块" tabindex="-1"><a class="header-anchor" href="#被其他插件渲染ab块"><span>被其他插件渲染ab块</span></a></h3><h4 id="callout语法" tabindex="-1"><a class="header-anchor" href="#callout语法"><span>Callout语法</span></a></h4><p>anyblock嵌套callout正常，callout嵌套anyblock在阅读模式下暂不正常</p><h4 id="dataviewjs-渲染-anyblock-块" tabindex="-1"><a class="header-anchor" href="#dataviewjs-渲染-anyblock-块"><span>Dataviewjs 渲染 anyblock 块</span></a></h4>',25)),e("p",null,[a[2]||(a[2]=n("作者：ob论坛：")),e("a",k,[a[0]||(a[0]=n("chris132")),l(i)]),e("a",w,[a[1]||(a[1]=n("Chris Martin")),l(i)])]),a[5]||(a[5]=s(`<p>一个简单测试的demo：</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">dataviewjs</span>
<span class="token code-block language-dataviewjs language-dataviewjs language-dataviewjs">const abcontent = \`[list2table]

- 1
  - 2
  - 3\`
dv.paragraph(abcontent)
dv.paragraph(abcontent)</span>
<span class="token punctuation">\`\`\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不行可以换用更稳定的写法：</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">dataviewjs</span>
<span class="token code-block language-dataviewjs language-dataviewjs language-dataviewjs">const abcontent = \`\\\`\\\`\\\`anyblock
[list2table]

- 1
  - 2
  - 3\`
dv.paragraph(abcontent)
dv.paragraph(abcontent)
\\\`\\\`\\\`</span>
<span class="token punctuation">\`\`\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以配合dv检索进一步使用：</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">dataviewjs</span>
<span class="token code-block language-dataviewjs language-dataviewjs language-dataviewjs">const term = &quot;[list2tab]&quot;;
let folderpath = &quot;01&quot;; // 更改为限定文件夹即可，留空为遍历所有笔记
const files = app.vault.getMarkdownFiles().filter(file =&gt; file.path.includes(folderpath));
const arr = files.map(async (file) =&gt; {
    const content = await app.vault.cachedRead(file);
    const lines = content.split(&quot;\\n&quot;);
    let results = [];
    lines.forEach((line, index) =&gt; {
        if (line.includes(term)) {
            let section = [line];
            for (let i = index + 1; i &lt; lines.length; i++) {
                if (lines[i].trim() === &quot;&quot;) break;
                section.push(lines[i]);
            }
            results.push(section.join(&quot;\\n&quot;));
        }
    });
    return results;
});
Promise.all(arr).then(values =&gt; {
    values.flat().forEach(value =&gt; dv.paragraph(value)); // 使用 dv.paragraph 输出原始文本
});</span>
<span class="token punctuation">\`\`\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再举一个例子</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">dataviewjs</span>
<span class="token code-block language-dataviewjs language-dataviewjs language-dataviewjs">const list = dv.markdownList(dv.pages(&#39;&quot;01-论文&quot;&#39;).file.link);
const dhow = &#39;\`\`\`anyblock\\n[card]\\n\\n&#39; + list + &#39;\\n\`\`\`&#39;</span>
<span class="token punctuation">\`\`\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h3><h4 id="diagram-zomm-drag-拖拽支持" tabindex="-1"><a class="header-anchor" href="#diagram-zomm-drag-拖拽支持"><span>Diagram-Zomm-Drag 拖拽支持</span></a></h4><p>可以配合DiagramZommDrag实现渲染结果的缩放与拖拽</p><p>（这里的处理器是nodes加超级样式ab-super-width）</p><p><img src="`+h+'" alt="" loading="lazy"></p><h2 id="其他妙用" tabindex="-1"><a class="header-anchor" href="#其他妙用"><span>其他妙用</span></a></h2><h3 id="假如obsidian不支持callout语法-如何自行开发" tabindex="-1"><a class="header-anchor" href="#假如obsidian不支持callout语法-如何自行开发"><span>假如Obsidian不支持Callout语法，如何自行开发</span></a></h3><p>略，自行想象</p><h3 id="代码块内的反链" tabindex="-1"><a class="header-anchor" href="#代码块内的反链"><span>代码块内的反链</span></a></h3><p>这个用法是用户开发出来的……并不是我一开始预设的行为：</p>',18)),e("p",null,[e("a",f,[a[3]||(a[3]=n("https://forum-zh.obsidian.md/t/topic/39261")),l(i)])]),a[6]||(a[6]=e("p",null,"有点 “歪门邪道”，虽然我个人不建议这样用，这里只是举例用于展示插件的灵活性",-1)),a[7]||(a[7]=e("h2",{id:"有待优化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#有待优化"},[e("span",null,"有待优化")])],-1)),a[8]||(a[8]=e("p",null,"兼容性问题：挺少的",-1)),a[9]||(a[9]=e("ul",null,[e("li",null,"表格类插件可能有一点影响"),e("li",null,"callout包含anyblock在阅读模式下存在问题")],-1))])}const y=t(g,[["render",B],["__file","05. 精彩用例.html.vue"]]),_=JSON.parse('{"path":"/MdNote_Public/ProductDoc/AnyBlock/docs/zh/05.%20%E7%B2%BE%E5%BD%A9%E7%94%A8%E4%BE%8B.html","title":"精彩用例","lang":"zh-CN","frontmatter":{"description":"精彩用例 配合其他插件 用法大概有以下三大类： ab块内部包含其他插件 DataView Meta-Bind (V3.1.7+才支持，感谢 Meta-Bind 作者的帮助) Buttons 与 Buttons 插件进行配合。不过该插件已经不再维护，目前代替之的是 Meta-Bind 插件 Dataview的内联js (dataview inline d...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/ProductDoc/AnyBlock/docs/zh/05.%20%E7%B2%BE%E5%BD%A9%E7%94%A8%E4%BE%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"精彩用例"}],["meta",{"property":"og:description","content":"精彩用例 配合其他插件 用法大概有以下三大类： ab块内部包含其他插件 DataView Meta-Bind (V3.1.7+才支持，感谢 Meta-Bind 作者的帮助) Buttons 与 Buttons 插件进行配合。不过该插件已经不再维护，目前代替之的是 Meta-Bind 插件 Dataview的内联js (dataview inline d..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"精彩用例\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"精彩用例","slug":"精彩用例","link":"#精彩用例","children":[{"level":2,"title":"配合其他插件","slug":"配合其他插件","link":"#配合其他插件","children":[{"level":3,"title":"ab块内部包含其他插件","slug":"ab块内部包含其他插件","link":"#ab块内部包含其他插件","children":[{"level":4,"title":"DataView","slug":"dataview","link":"#dataview","children":[]},{"level":4,"title":"Meta-Bind (V3.1.7+才支持，感谢 Meta-Bind 作者的帮助)","slug":"meta-bind-v3-1-7-才支持-感谢-meta-bind-作者的帮助","link":"#meta-bind-v3-1-7-才支持-感谢-meta-bind-作者的帮助","children":[]},{"level":4,"title":"Buttons","slug":"buttons","link":"#buttons","children":[]},{"level":4,"title":"Dataview的内联js (dataview inline dvjs) (V3.1.7+才支持)","slug":"dataview的内联js-dataview-inline-dvjs-v3-1-7-才支持","link":"#dataview的内联js-dataview-inline-dvjs-v3-1-7-才支持","children":[]}]},{"level":3,"title":"ab块负责选择范围，其他插件渲染范围里的东西","slug":"ab块负责选择范围-其他插件渲染范围里的东西","link":"#ab块负责选择范围-其他插件渲染范围里的东西","children":[{"level":4,"title":"Mindmap-Nexgen","slug":"mindmap-nexgen","link":"#mindmap-nexgen","children":[]},{"level":4,"title":"NodeFlow","slug":"nodeflow","link":"#nodeflow","children":[]}]},{"level":3,"title":"被其他插件渲染ab块","slug":"被其他插件渲染ab块","link":"#被其他插件渲染ab块","children":[{"level":4,"title":"Callout语法","slug":"callout语法","link":"#callout语法","children":[]},{"level":4,"title":"Dataviewjs 渲染 anyblock 块","slug":"dataviewjs-渲染-anyblock-块","link":"#dataviewjs-渲染-anyblock-块","children":[]}]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[{"level":4,"title":"Diagram-Zomm-Drag 拖拽支持","slug":"diagram-zomm-drag-拖拽支持","link":"#diagram-zomm-drag-拖拽支持","children":[]}]}]},{"level":2,"title":"其他妙用","slug":"其他妙用","link":"#其他妙用","children":[{"level":3,"title":"假如Obsidian不支持Callout语法，如何自行开发","slug":"假如obsidian不支持callout语法-如何自行开发","link":"#假如obsidian不支持callout语法-如何自行开发","children":[]},{"level":3,"title":"代码块内的反链","slug":"代码块内的反链","link":"#代码块内的反链","children":[]}]},{"level":2,"title":"有待优化","slug":"有待优化","link":"#有待优化","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.15,"words":644},"filePathRelative":"MdNote_Public/ProductDoc/AnyBlock/docs/zh/05. 精彩用例.md","excerpt":"\\n<h2>配合其他插件</h2>\\n<p>用法大概有以下三大类：</p>\\n<h3>ab块内部包含其他插件</h3>\\n<h4>DataView</h4>\\n<p></p>\\n<h4>Meta-Bind (V3.1.7+才支持，感谢 Meta-Bind 作者的帮助)</h4>\\n<p></p>\\n<h4>Buttons</h4>\\n<p>与 Buttons 插件进行配合。不过该插件已经不再维护，目前代替之的是 Meta-Bind 插件</p>\\n<p></p>\\n<h4>Dataview的内联js (dataview inline dvjs) (V3.1.7+才支持)</h4>\\n<p></p>\\n<h3>ab块负责选择范围，其他插件渲染范围里的东西</h3>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/ProductDoc/AnyBlock/docs/zh/05. 精彩用例.md","value":{"title":"05. 精彩用例","path":"MdNote_Public/ProductDoc/AnyBlock/docs/zh/05. 精彩用例.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{y as comp,_ as data};
