import{_ as s,e as a,g as e,o as n}from"./app-CuJixpuN.js";const l={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="ndpi" tabindex="-1"><a class="header-anchor" href="#ndpi"><span>nDPI</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="ndpi-1" tabindex="-1"><a class="header-anchor" href="#ndpi-1"><span>nDPI</span></a></h1><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><h3 id="dpi" tabindex="-1"><a class="header-anchor" href="#dpi"><span>DPI</span></a></h3><ul><li>文章（确实少） <ul><li><a href="https://cloud.tencent.com/developer/article/1079817" target="_blank" rel="noopener noreferrer">深度数据包检测DPI开发解析</a></li><li><a href="https://www.sdnlab.com/17370.html" target="_blank" rel="noopener noreferrer">漫谈DPI工具</a></li></ul></li></ul><h3 id="ndpi-2" tabindex="-1"><a class="header-anchor" href="#ndpi-2"><span>nDPI</span></a></h3><ul><li>github：https://github.com/ntop/nDPI <ul><li><s>Github Wiki：https://github.com/ntop/nDPI/wiki</s>，没啥内容，大概说了下支持协议</li></ul></li><li>Doxygen文档 <ul><li>网站文档：https://www.ntop.org/support/documentation/documentation/<br> 除了其他nTop的产品都能在上面这个页面中找到：如nProbe、nProbe Cento、n2disk、nEdge、nScrub、nBox、nTab、PF_RING</li><li>**【主要文档】**nDPI：https://www.ntop.org/guides/nDPI/</li><li>这个文档也能自己构建，官方README里有他教的方法。我最开始没看到上面那个文档，我还自己构建了一次</li></ul></li><li>作者：ntop <ul><li>相关产品：开源网络流量监控软件</li><li>tg群：http://t.me/ntop_community（但不知道为什么我刚join进去就被拉黑了？）</li><li>discord：https://discord.gg/frTanSPy6w</li><li>官网论坛：https://www.ntop.org/support/faq/howto-join-public-ntop-discussions/</li></ul></li><li>文章 <ul><li>感觉这玩意国内文章比国外的还多……国外的反而少了</li></ul></li></ul><h3 id="ntopng" tabindex="-1"><a class="header-anchor" href="#ntopng"><span>ntopng</span></a></h3><ul><li>官方资料，见上 nDPI，都是ntop维护的</li><li>文章 <ul><li>https://blog.csdn.net/HongkeTraining/article/details/108447830</li></ul></li></ul><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><h3 id="什么是-ndpi" tabindex="-1"><a class="header-anchor" href="#什么是-ndpi"><span>什么是 nDPI？</span></a></h3><p>nDPI® 是一个用于深度数据包检测的开源 LGPLv3 库。基于 <strong>OpenDPI</strong>，它包含 ntop 扩展。<br><em>我们尝试将它们推送到 OpenDPI 源代码树中，但没有人回复电子邮件，因此我们决定创建自己的源代码树</em></p><h3 id="如何编译-ndpi" tabindex="-1"><a class="header-anchor" href="#如何编译-ndpi"><span>如何编译 nDPI</span></a></h3><h4 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>,编译</span></a></h4><ul><li><p>完整编译</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./autogen.sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>或编译没有任何工具或测试的库</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./autogen.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --with-only-libndpi</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="运行测试程序" tabindex="-1"><a class="header-anchor" href="#运行测试程序"><span>运行测试程序</span></a></h4><ul><li><p>要运行测试，请另外执行以下操作：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./tests/do.sh</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 生成并检查 PCAP 文件中的差异</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./tests/do-unit.sh</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 运行单元测试</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./tests/do-dga.sh</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 运行DGA检测测试</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>或全部运行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> check</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="环境" tabindex="-1"><a class="header-anchor" href="#环境"><span>环境</span></a></h4><p>请注意，编译的（最低）先决条件包括</p><ul><li>GNU 工具（autoconf automake libtool pkg-config gettext flex bison）</li><li>GNU C 编译器 (gcc) 或 Clang</li></ul><p>各操作系统操作：</p><p>在 Debian/Ubuntu 系统上执行以下操作：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build-essential</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gettext</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bison</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libtool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> autoconf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> automake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pkg-config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libpcap-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libjson-c-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libnuma-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libpcre2-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libmaxminddb-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> librrd-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在 Arch Linux 上：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gcc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gettext</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bison</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libtool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> autoconf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> automake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pkg-config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libpcap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json-c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> numactl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pcre2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libmaxminddb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rrdtool</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在 FreeBSD 上：（请记住在 FreeBSD 上使用 <code>gmake</code> 而不是 <code>make</code>）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pkg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gcc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gettext</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bison</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libtool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> autoconf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> automake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> devel/pkgconf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libpcap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json-c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pcre2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libmaxminddb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rrdtool</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>On MacOS: 在 MacOS 上：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coreutils</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gcc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gettext</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bison</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libtool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> autoconf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> automake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pkg-config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libpcap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> json-c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pcre2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libmaxminddb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rrdtool</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在 Windows 上：（注意：所有 Windows 版本都需要 npcap 并启用 WinPcap 兼容模式）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 支持三种构建 nDPI 的方法：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1. MSYS2（假设MSYS2已安装）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">msys2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;pacman --noconfirm -S --needed --overwrite &#39;*&#39; git mingw-w64-x86_64-toolchain automake1.16 automake-wrapper autoconf libtool make mingw-w64-x86_64-json-c mingw-w64-x86_64-crt-git mingw-w64-x86_64-pcre mingw-w64-x86_64-libpcap&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2. Mingw-w64</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 3. Visual Studio (详见 windows/nDPI.sln)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何构建文档" tabindex="-1"><a class="header-anchor" href="#如何构建文档"><span>如何构建文档</span></a></h3><p><s>这个官方有点懒，可能人手不够……居然要自己构建doxygen文档</s>。自己有文档又不在这标注一下……相应的文档：https://www.ntop.org/guides/nDPI/（和自己构建出来的是一样的，都是v4.1）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --upgrade</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pip</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doc/requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用内置的python3网络服务器查看文档：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doc-view</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可能的错误：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git/public/nDPI$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doc</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> html</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make[1]:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Entering</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/home/linczero/git/public/nDPI/doc&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">doxygen</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Doxyfile.cfg</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make[1]:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doxygen:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> found</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make[1]:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ***</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [Makefile:58: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">html]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Error</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 127</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make[1]:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Leaving</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/home/linczero/git/public/nDPI/doc&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ***</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [Makefile:970: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">doc]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Error</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这是由于没有安装doxygen导致的，解决方法：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> doxygen</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译完成后，在 <code>/doc/_build/html</code> 路径</p><p>补充：</p><blockquote><p>这里顺便说一下文档构造完后，一个简单的开启http访问服务的方法：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># （安装了python就行，不需要额外安装其他东西）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http.server</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8000</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # python3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我WSL遇到了一个问题：</p><blockquote><p>主机无法访问wsl开放的8000端口的服务（该服务通过 python -m http.server 8000 开启）</p><p>一些调试：</p><ol><li>wsl2自己是能访问，wsl2中：<code>curl http://localhost:8000</code>，能正常响应html</li><li>主机能通过 <code>ssh name@localhost</code> 正常连接wsl2，也能通过 <code>ping 172.28.82.115</code> ping通wsl|</li><li>主机通过 <code>http://172.28.82.115:8000/</code> 无法正常访问wsl中的http服务，体现为一直等待响应</li></ol></blockquote><p>不过我没折腾，直接拷出来主机上了</p></blockquote><h3 id="如何添加新的协议解析器" tabindex="-1"><a class="header-anchor" href="#如何添加新的协议解析器"><span>如何添加新的协议解析器</span></a></h3><p>添加新协议的整个流程详细：</p><ol><li>将新协议及其唯一 ID 添加到： <code>src/include/ndpi_protocol_ids.h</code></li><li>在以下位置创建新协议： <code>src/lib/protocols/</code></li><li>在整个流程期间保留的变量（作为状态变量）需要放置在： <code>ndpi_flow_tcp_struct</code> 中的 <code>src/include/ndpi_typedefs.h</code> （仅适用于 TCP）、 <code>ndpi_flow_udp_struct</code> （仅适用于 UDP），或 <code>ndpi_flow_struct</code> （适用于两者）。</li><li>在以下位置添加新协议的搜索功能条目： <code>src/include/ndpi_protocols.h</code></li><li>从以下位置选择（不更改任何内容）选择位掩码： <code>src/include/ndpi_define.h</code></li><li>在 <code>ndpi_init_protocol_defaults</code> 中设置协议默认端口： <code>src/lib/ndpi_main.c</code></li><li>确保有 nBPF 支持，将 <code>PF_RING</code> 克隆到克隆 <code>nDPI</code> 的同一目录中： <code>git clone https://github.com/ntop/PF_RING/ &amp;&amp; cd PF_RING/userland/nbpf &amp;&amp; ./configure &amp;&amp; make</code></li><li>从 <code>nDPI</code> 根目录， <code>./autogen.sh --with-pcre</code> （nBPF 和 PCRE 通常是可选的，但需要它们来运行/更新所有单元测试）</li><li><code>make</code></li><li><code>make check</code></li><li>更新文档，将此新协议添加到 <code>doc/protocols.rst</code></li></ol><h3 id="如何使用-ndpi-阻止选定的流量" tabindex="-1"><a class="header-anchor" href="#如何使用-ndpi-阻止选定的流量"><span>如何使用 nDPI 阻止选定的流量</span></a></h3><p>您可以使用 nDPI 通过将选定的 Internet 流量嵌入到应用程序中来选择性地阻止该流量（请记住，nDPI 只是一个库）。 ntopng 和 nProbe cento 都可以做到这一点。</p><h3 id="ndpi-论文引用" tabindex="-1"><a class="header-anchor" href="#ndpi-论文引用"><span>nDPI 论文引用</span></a></h3><p>Deri, Luca, et al. <a href="http://luca.ntop.org/nDPI.pdf" target="_blank" rel="noopener noreferrer">nDPI: Open-source high-speed deep packet inspection</a> 2014 International Wireless Communications and Mobile Computing Conference (IWCMC). IEEE, 2014.</p><h3 id="视频和演示" tabindex="-1"><a class="header-anchor" href="#视频和演示"><span>视频和演示</span></a></h3><ul><li><a href="https://archive.fosdem.org/2021/schedule/event/nemondpi/" target="_blank" rel="noopener noreferrer">使用 nDPI 进行监控和安全</a></li><li><a href="https://fosdem.org/2022/schedule/event/using_ndpi_to_efficiently_classify_network_traffic/" target="_blank" rel="noopener noreferrer">用于网络安全和监控的网络流量分类</a></li></ul><h3 id="ndpi-相关项目" tabindex="-1"><a class="header-anchor" href="#ndpi-相关项目"><span>nDPI 相关项目</span></a></h3><ul><li><a href="https://github.com/aouinizied/nfstream" target="_blank" rel="noopener noreferrer">nfstream</a></li><li><a href="https://github.com/utoni/nDPId" target="_blank" rel="noopener noreferrer">nDPId</a></li></ul><h3 id="免责声明" tabindex="-1"><a class="header-anchor" href="#免责声明"><span>免责声明</span></a></h3><p>虽然我们尽最大努力检测网络协议，但我们不能保证我们的软件在协议检测方面没有错误且 100% 准确。请确保您尊重用户的隐私，并且您拥有监听、捕获和检查网络流量的适当授权。</p><p>nDPI 是在美国和欧盟的注册商标。</p>`,56)]))}const d=s(l,[["render",t],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/nDPI/","title":"nDPI","lang":"zh-CN","frontmatter":{"description":"nDPI 目录 nDPI 资料 DPI 文章（确实少） 深度数据包检测DPI开发解析 漫谈DPI工具 nDPI github：https://github.com/ntop/nDPI ，没啥内容，大概说了下支持协议 Doxygen文档 网站文档：https://www.ntop.org/support/documentation/documentati...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/nDPI/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"nDPI"}],["meta",{"property":"og:description","content":"nDPI 目录 nDPI 资料 DPI 文章（确实少） 深度数据包检测DPI开发解析 漫谈DPI工具 nDPI github：https://github.com/ntop/nDPI ，没啥内容，大概说了下支持协议 Doxygen文档 网站文档：https://www.ntop.org/support/documentation/documentati..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nDPI\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":4.91,"words":1473},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/nDPI/README.md","excerpt":"\\n<h1>目录</h1>\\n<h1>nDPI</h1>\\n<h2>资料</h2>\\n<h3>DPI</h3>\\n<ul>\\n<li>文章（确实少）\\n<ul>\\n<li><a href=\\"https://cloud.tencent.com/developer/article/1079817\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">深度数据包检测DPI开发解析</a></li>\\n<li><a href=\\"https://www.sdnlab.com/17370.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">漫谈DPI工具</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/nDPI/README.md","value":{"title":"无协议栈库/","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/nDPI/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,k as data};
