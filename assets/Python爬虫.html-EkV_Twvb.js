import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e}from"./app-BZVBD2QZ.js";const t="/assets/clipboard-B3h40haN.png",p="/assets/clipboard-1609456222741-DQdD85FQ.png",l={},i=e(`<h1 id="python爬虫" tabindex="-1"><a class="header-anchor" href="#python爬虫"><span>Python爬虫</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="入门" tabindex="-1"><a class="header-anchor" href="#入门"><span>入门</span></a></h1><h2 id="合法性" tabindex="-1"><a class="header-anchor" href="#合法性"><span>合法性</span></a></h2><ul><li>道德规范（Robots协议） <ul><li>查看robots.txt</li><li>https://www.taobao.com/robots.txt</li><li>里面有注明 Allow 和 Disallow</li></ul></li><li>引擎结果 <ul><li>由于该网站的robots.txt文件存在限制指令（限制搜索引擎抓取），系统无法提供该页面的内容描述</li></ul></li><li>自我约束 <ul><li>合理限定请求速度</li><li>“三月爬虫”的故事</li></ul></li></ul><h2 id="基本流程" tabindex="-1"><a class="header-anchor" href="#基本流程"><span>基本流程</span></a></h2><ol><li><p>获取网页</p><ul><li><p>基础技术：request，urllib，selenium（模拟浏览器）</p></li><li><p>进阶技术：多进程多线程抓取、登陆抓取、突破IP封禁和服务器抓取</p></li></ul></li><li><p>解析网页</p><ul><li>基础技术：re正则表达式、BeautifulSoup、lxml</li><li>进阶技术：解决中文乱码</li></ul></li><li><p>存储网页</p><ul><li>基础技术：存入txt文件和存入csv文件</li><li>进阶技术：存入MySQL数据库和存入MongoDB数据库</li></ul></li></ol><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><p>安装第三方包与开启服务器</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>安装Anaconda（Anaconda自带pip）
<span class="token builtin class-name">cd</span>
pip <span class="token function">install</span> bs4  <span class="token comment"># BeautifulSoup第三个模块，能解析网页</span>
pip <span class="token function">install</span> jupyter 或 conda <span class="token function">install</span> jupyter <span class="token punctuation">[</span>notebook<span class="token punctuation">]</span> <span class="token comment"># 安装jupyter</span>
jupyter notebook  <span class="token comment"># 启动jupyter服务器，默认是localhost:8888/tree</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="主要流程" tabindex="-1"><a class="header-anchor" href="#主要流程"><span>主要流程</span></a></h1><h2 id="静态网站抓取-requests标准模块" tabindex="-1"><a class="header-anchor" href="#静态网站抓取-requests标准模块"><span>静态网站抓取（Requests标准模块）</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 第一个爬虫</span>
<span class="token keyword">import</span> requests  <span class="token comment"># 请求库</span>
<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup  <span class="token comment"># bs库中的解析函数</span>

link <span class="token operator">=</span> <span class="token string">&#39;http://www.santostang.com/&#39;</span>
headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&#39;</span><span class="token punctuation">}</span>
r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>link<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>

soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&quot;lxml&quot;</span><span class="token punctuation">)</span>
title <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">&quot;post-title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>a<span class="token punctuation">.</span>text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span>title<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="requests库" tabindex="-1"><a class="header-anchor" href="#requests库"><span>Requests库</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;http://www.santostang.com/&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 其他参数都是可选的</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;文本编码:&#39;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>encoding<span class="token punctuation">)</span>  <span class="token comment"># 如 UTF-8</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;响应状态码:&#39;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>  <span class="token comment"># 如 200</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;url编码:&#39;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;字符串方式的响应体:&#39;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>  <span class="token comment"># 整个html文档</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;字节方式的响应体:&#39;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>content<span class="token punctuation">)</span>  <span class="token comment"># 自动解压gzip和deflate编码的响应数据</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;JSON解码器:&#39;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># Requests中内置的JSON解码器</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="requests请求参数" tabindex="-1"><a class="header-anchor" href="#requests请求参数"><span>Requests请求参数</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>key_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;val1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;val2&#39;</span><span class="token punctuation">}</span>  <span class="token comment"># 查询字符串</span>
headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&#39;</span><span class="token punctuation">}</span>
r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>  <span class="token comment"># get 请求可改为 post 请求</span>
    <span class="token string">&#39;http://httpbin.org/get&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 初始url，也可以是变量</span>
    params<span class="token operator">=</span>key_dict<span class="token punctuation">,</span>  <span class="token comment"># 查询字符串</span>
    headers <span class="token operator">=</span> headers<span class="token punctuation">,</span>  <span class="token comment"># 请求头参数</span>
    timeout <span class="token operator">=</span> <span class="token number">0.001</span>  <span class="token comment"># 请求超时</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="主要请求头-firefox-chrome" tabindex="-1"><a class="header-anchor" href="#主要请求头-firefox-chrome"><span>主要请求头（Firefox &amp; Chrome）</span></a></h3><p><img src="`+t+'" alt="img" style="zoom:80%;"><img src="'+p+`" alt="img" style="zoom:80%;"></p><h2 id="动态网页抓取-浏览器审查元素方案" tabindex="-1"><a class="header-anchor" href="#动态网页抓取-浏览器审查元素方案"><span>动态网页抓取（浏览器审查元素方案）</span></a></h2><p><strong>AJAX（Asynchronous Javascript And XML，异步 JavaScript 和 XML）</strong></p><p>通过js展示的JS不会显示在HTML源代码中 两种方法解决：</p><p>（1）通过浏览器审查元素解析地址</p><p>（2）通过Selenium模拟浏览器抓取</p><p>通过浏览器审查元素解析地址方案</p><p>浏览器Network看抓包，一般是json文件格式</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> json

link <span class="token operator">=</span> <span class="token triple-quoted-string string">&#39;&#39;&#39;https://api-zero.livere.com/v1/comments/list?callback=jQuery112407126659503587682_1584962537289&amp;limit=10&amp;repSeq=4272904
&amp;requestPath=%2Fv1%2Fcomments%2Flist&amp;consumerSeq=1020&amp;livereSeq=28583&amp;smartloginSeq=5154&amp;code=&amp;_=1584962537291
&#39;&#39;&#39;</span>
headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36&#39;</span>
<span class="token punctuation">}</span>

r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>link<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

<span class="token comment"># 获取 json 的 string</span>
json_string <span class="token operator">=</span> r<span class="token punctuation">.</span>text
json_string <span class="token operator">=</span> json_string<span class="token punctuation">[</span>json_string<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;{&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>  <span class="token comment"># 提取字符串中符合json格式的部分</span>
json_data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_string<span class="token punctuation">)</span>  <span class="token comment"># 把字符串格式的响应体数据转化为 json 数据</span>
comment_list <span class="token operator">=</span> json_data<span class="token punctuation">[</span><span class="token string">&#39;results&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;parents&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># 精简列表</span>
<span class="token keyword">for</span> eachone <span class="token keyword">in</span> comment_list<span class="token punctuation">:</span>
    message <span class="token operator">=</span> eachone<span class="token punctuation">[</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">print</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态网页抓取-selenium第三方模块" tabindex="-1"><a class="header-anchor" href="#动态网页抓取-selenium第三方模块"><span>动态网页抓取（Selenium第三方模块）</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># pip install selenium</span>
<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver
<span class="token keyword">import</span> time

browser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Firefox<span class="token punctuation">(</span>executable_path <span class="token operator">=</span> <span class="token string">r&#39;I:\\AProjects\\Jupyter\\geckodriver.exe&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 电脑geckodriver地址</span>
<span class="token comment"># driver.implicitly_wait(20) # 隐性等待，最长等20秒</span>
browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://www.santostang.com/2018/07/04/hello-world/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;【link success!】&#39;</span><span class="token punctuation">)</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
browser<span class="token punctuation">.</span>maximize_window<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#最大化窗口</span>

<span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 跳页、翻页部分 —— 下滑&gt; 转换iframel&gt; 定位&gt; 点击 &gt; 等待</span>
    browser<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">&quot;window.scrollTo(0, document.body.scrollHeight);&quot;</span><span class="token punctuation">)</span> <span class="token comment"># 下滑到页面底部 需要-700</span>
    browser<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>frame<span class="token punctuation">(</span>browser<span class="token punctuation">.</span>find_element_by_css_selector<span class="token punctuation">(</span><span class="token string">&quot;iframe[title=&#39;livere&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 转换iframe1</span>
    local <span class="token operator">=</span> <span class="token string">&#39;button[data-page=&quot;&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;&quot;]&#39;</span>
    <span class="token keyword">if</span> page <span class="token operator">==</span> <span class="token number">11</span><span class="token punctuation">:</span>
        local <span class="token operator">=</span> <span class="token string">&#39;button[data-page=&quot;next&quot;]&#39;</span>
    load_more <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_css_selector<span class="token punctuation">(</span>local<span class="token punctuation">)</span>
    load_more<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 点击</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># 等待加载</span>
    
    <span class="token comment"># 获取评论部分 —— 定位&gt; 循环获取并输出&gt; 转换回iframel</span>
    comments <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements_by_css_selector<span class="token punctuation">(</span><span class="token string">&#39;div.reply-content&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> each_comment <span class="token keyword">in</span> comments<span class="token punctuation">:</span>
        content <span class="token operator">=</span> each_comment<span class="token punctuation">.</span>find_element_by_tag_name<span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>default_content<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 转换iframe2</span>
    
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;【Python Over】&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="selenium模块详解" tabindex="-1"><a class="header-anchor" href="#selenium模块详解"><span>Selenium模块详解</span></a></h1><h2 id="selenium操作" tabindex="-1"><a class="header-anchor" href="#selenium操作"><span>Selenium操作</span></a></h2><h3 id="选择元素" tabindex="-1"><a class="header-anchor" href="#选择元素"><span>选择元素</span></a></h3><p>find_element_by_id ：通过元素的id选择，例如:driver.find_element_by_id(‘loginForm’) find_element_by_name ：通过元素的name选择，driver.find_element_by_name(‘password’) find_element_by_xpath ：通过xpath选择，driver.find_element_by_xpath(“//form[1]”)【荐】 find_element_by_link_text ：通过链接地址选择 find_element_by_partial_link_text ：通过链接的部分地址选择 find_element_by_tag_name ：通过元素的名称选择 find_element_by_class_name ：通过元素的id选择 find_element_by_css_selector ：通过css选择器选择【荐】</p><h3 id="选择多个元素" tabindex="-1"><a class="header-anchor" href="#选择多个元素"><span>选择多个元素</span></a></h3><p>查找多个元素，在上述的element后加上s，变成elements 其中xpath和css_selector是比较好的方法，一方面比较清晰，另一方面相对其他方法定位元素比较准确。 find_elements_by_name find_elements_by_xpath find_elements_by_link_text find_elements_by_partial_link_text find_elements_by_tag_name find_elements_by_class_name find_elements_by_css_selector</p><h3 id="操作元素方法-常见方法" tabindex="-1"><a class="header-anchor" href="#操作元素方法-常见方法"><span>操作元素方法（常见方法）</span></a></h3><p>clear 清除元素的内容 send_keys 模拟按键输入 click 点击元素 submit 提交表单</p><h3 id="选择元素的属性" tabindex="-1"><a class="header-anchor" href="#选择元素的属性"><span>选择元素的属性</span></a></h3><p>.get_attribute(&quot;href&quot;)，选择属性</p><p>.text()，选择标签内文本</p><h2 id="iframe问题【大坑】" tabindex="-1"><a class="header-anchor" href="#iframe问题【大坑】"><span><strong>iframe问题【大坑】</strong></span></a></h2><h4 id="定位iframe" tabindex="-1"><a class="header-anchor" href="#定位iframe"><span>定位iframe</span></a></h4><p>1.有id，并且唯一，直接写id driver.switch_to_frame(&quot;x-URS-iframe&quot;) driver.switch_to.frame(&quot;x-URS-iframe&quot;)</p><p>2.有name，并且唯一，直接写name driver.switch_to_frame(&quot;xxxx&quot;) driver.switch_to.frame(&quot;xxxx&quot;)</p><p>3.无id，无name,先定位iframe元素 iframe = driver.find_elements_by_tag_name(&quot;iframe&quot;)[0] driver.switch_to_frame(iframe) driver.switch_to.frame(iframe)</p><p>4.通常采用id和name就能够解决绝大多数问题。但有时候frame并无这两项属性，则可以用index和WebElement来定位：</p><ul><li>index从0开始，传入整型参数即判定为用index定位，传入str参数则判定为用id/name定位</li><li>WebElement对象，即用find_element系列方法所取得的对象，我们可以用tag_name、xpath等来定位frame对象</li></ul><h4 id="要记得退回来-哪怕跳转后" tabindex="-1"><a class="header-anchor" href="#要记得退回来-哪怕跳转后"><span>要记得退回来，哪怕跳转后</span></a></h4><h2 id="自动登录程序例子" tabindex="-1"><a class="header-anchor" href="#自动登录程序例子"><span>自动登录程序例子</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_name<span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span>  <span class="token comment">#找到用户名输入框</span>
user<span class="token punctuation">.</span>clear  <span class="token comment">#清除用户名输入框内容</span>
user<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">&quot;1234567&quot;</span><span class="token punctuation">)</span>  <span class="token comment">#在框中输入用户名</span>

pwd <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_name<span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span>  <span class="token comment">#找到密码输入框</span>
pwd<span class="token punctuation">.</span>clear  <span class="token comment">#清除密码输入框内容</span>
pwd<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">&quot;******&quot;</span><span class="token punctuation">)</span>    <span class="token comment">#在框中输入密码</span>

driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">&quot;loginBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#点击登录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="selenium的高级操作——限制-css-img-js-的加载" tabindex="-1"><a class="header-anchor" href="#selenium的高级操作——限制-css-img-js-的加载"><span>Selenium的高级操作——限制 css, img, js 的加载</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver
fp <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>FirefoxProfile<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 在这里加限制加载的配置！</span>
driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Firefox<span class="token punctuation">(</span>
    firefox_profile<span class="token operator">=</span>fp<span class="token punctuation">,</span>  <span class="token comment"># 这里把配置写进去</span>
    executable_path <span class="token operator">=</span> <span class="token string">r&#39;C:\\Users\\santostang\\Desktop\\geckodriver.exe&#39;</span>  <span class="token comment"># 电脑geckodriver.exe程序地址</span>
<span class="token punctuation">)</span>
driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://www.santostang.com/2018/07/04/hello-world/&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 控制 css</span>
    fp<span class="token punctuation">.</span>set_preference<span class="token punctuation">(</span><span class="token string">&quot;permissions.default.stylesheet&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 限制图片的加载</span>
    fp<span class="token punctuation">.</span>set_preference<span class="token punctuation">(</span><span class="token string">&quot;permissions.default.image&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>

<span class="token comment"># 限制 JavaScript 的执行</span>
    fp<span class="token punctuation">.</span>set_preference<span class="token punctuation">(</span><span class="token string">&quot;javascript.enabled&quot;</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="解析网页方案" tabindex="-1"><a class="header-anchor" href="#解析网页方案"><span>解析网页方案</span></a></h1><h2 id="正则" tabindex="-1"><a class="header-anchor" href="#正则"><span>正则</span></a></h2><h2 id="beautifulsoup第三方模块" tabindex="-1"><a class="header-anchor" href="#beautifulsoup第三方模块"><span>BeautifulSoup第三方模块</span></a></h2><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> bs4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="遍历文件树" tabindex="-1"><a class="header-anchor" href="#遍历文件树"><span>遍历文件树</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>soup<span class="token punctuation">.</span>header<span class="token punctuation">.</span>h3
soup<span class="token punctuation">.</span>header<span class="token punctuation">.</span>div<span class="token punctuation">.</span>contents  <span class="token comment"># contents表示内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="搜索文件树-find-all-和-find" tabindex="-1"><a class="header-anchor" href="#搜索文件树-find-all-和-find"><span>搜索文件树（find_all 和 find）</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>link<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>
soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&quot;lxml&quot;</span><span class="token punctuation">)</span>

soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;^h&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">&#39;hd&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">&#39;hd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>a<span class="token punctuation">.</span>span<span class="token punctuation">.</span>text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="css选择器-select" tabindex="-1"><a class="header-anchor" href="#css选择器-select"><span>CSS选择器（select）</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>link<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>
soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&quot;lxml&quot;</span><span class="token punctuation">)</span>

soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&quot;header h3&quot;</span><span class="token punctuation">)</span>
soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&quot;header &gt; h3&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&quot;header h3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lxml" tabindex="-1"><a class="header-anchor" href="#lxml"><span>lxml</span></a></h2><h1 id="数据存储方案" tabindex="-1"><a class="header-anchor" href="#数据存储方案"><span>数据存储方案</span></a></h1><h2 id="txt" tabindex="-1"><a class="header-anchor" href="#txt"><span>TXT</span></a></h2><h2 id="csv" tabindex="-1"><a class="header-anchor" href="#csv"><span>CSV</span></a></h2><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql"><span>MySQL</span></a></h2><h2 id="mongodb" tabindex="-1"><a class="header-anchor" href="#mongodb"><span>MongoDB</span></a></h2><h1 id="性能改善" tabindex="-1"><a class="header-anchor" href="#性能改善"><span>性能改善</span></a></h1><h2 id="提升速度" tabindex="-1"><a class="header-anchor" href="#提升速度"><span>提升速度</span></a></h2><h2 id="反爬虫问题" tabindex="-1"><a class="header-anchor" href="#反爬虫问题"><span>反爬虫问题</span></a></h2><h2 id="解决中文乱码" tabindex="-1"><a class="header-anchor" href="#解决中文乱码"><span>解决中文乱码</span></a></h2><h2 id="登录和验证码" tabindex="-1"><a class="header-anchor" href="#登录和验证码"><span>登录和验证码</span></a></h2><h2 id="分布式爬虫" tabindex="-1"><a class="header-anchor" href="#分布式爬虫"><span>分布式爬虫</span></a></h2><h1 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h1><h2 id="简单demo" tabindex="-1"><a class="header-anchor" href="#简单demo"><span>简单demo</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> requests  <span class="token comment"># 请求库，伪装成浏览器访问</span>
<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup  <span class="token comment"># bs库中的解析函数</span>

<span class="token comment"># 1. 获取页面部分，print (r.text) 可得到html内容</span>
link <span class="token operator">=</span> <span class="token string">&#39;http://www.santostang.com/&#39;</span>
headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&#39;</span><span class="token punctuation">}</span>
r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>link<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>

<span class="token comment"># 2. 解析html提取数据部分，print (title) 可得到提取后的内容</span>
soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&quot;lxml&quot;</span><span class="token punctuation">)</span>
title <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">&quot;post-title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>a<span class="token punctuation">.</span>text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 筛选h1且class=&quot;post-title&quot;里面的a标签里面的文字</span>

<span class="token comment"># 3. 存储数据部分</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;title.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>title<span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,78),o=[i];function c(u,r){return s(),a("div",null,o)}const m=n(l,[["render",c],["__file","Python爬虫.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Web/06.%20WebScript/Python%E7%88%AC%E8%99%AB.html","title":"Python爬虫","lang":"zh-CN","frontmatter":{"description":"Python爬虫 目录 入门 合法性 道德规范（Robots协议） 查看robots.txt https://www.taobao.com/robots.txt 里面有注明 Allow 和 Disallow 引擎结果 由于该网站的robots.txt文件存在限制指令（限制搜索引擎抓取），系统无法提供该页面的内容描述 自我约束 合理限定请求速度 “三月爬...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Web/06.%20WebScript/Python%E7%88%AC%E8%99%AB.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python爬虫"}],["meta",{"property":"og:description","content":"Python爬虫 目录 入门 合法性 道德规范（Robots协议） 查看robots.txt https://www.taobao.com/robots.txt 里面有注明 Allow 和 Disallow 引擎结果 由于该网站的robots.txt文件存在限制指令（限制搜索引擎抓取），系统无法提供该页面的内容描述 自我约束 合理限定请求速度 “三月爬..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python爬虫\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python爬虫","slug":"python爬虫","link":"#python爬虫","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"入门","slug":"入门","link":"#入门","children":[{"level":2,"title":"合法性","slug":"合法性","link":"#合法性","children":[]},{"level":2,"title":"基本流程","slug":"基本流程","link":"#基本流程","children":[]},{"level":2,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]}]},{"level":1,"title":"主要流程","slug":"主要流程","link":"#主要流程","children":[{"level":2,"title":"静态网站抓取（Requests标准模块）","slug":"静态网站抓取-requests标准模块","link":"#静态网站抓取-requests标准模块","children":[{"level":3,"title":"Requests库","slug":"requests库","link":"#requests库","children":[]},{"level":3,"title":"Requests请求参数","slug":"requests请求参数","link":"#requests请求参数","children":[]},{"level":3,"title":"主要请求头（Firefox & Chrome）","slug":"主要请求头-firefox-chrome","link":"#主要请求头-firefox-chrome","children":[]}]},{"level":2,"title":"动态网页抓取（浏览器审查元素方案）","slug":"动态网页抓取-浏览器审查元素方案","link":"#动态网页抓取-浏览器审查元素方案","children":[]},{"level":2,"title":"动态网页抓取（Selenium第三方模块）","slug":"动态网页抓取-selenium第三方模块","link":"#动态网页抓取-selenium第三方模块","children":[]}]},{"level":1,"title":"Selenium模块详解","slug":"selenium模块详解","link":"#selenium模块详解","children":[{"level":2,"title":"Selenium操作","slug":"selenium操作","link":"#selenium操作","children":[{"level":3,"title":"选择元素","slug":"选择元素","link":"#选择元素","children":[]},{"level":3,"title":"选择多个元素","slug":"选择多个元素","link":"#选择多个元素","children":[]},{"level":3,"title":"操作元素方法（常见方法）","slug":"操作元素方法-常见方法","link":"#操作元素方法-常见方法","children":[]},{"level":3,"title":"选择元素的属性","slug":"选择元素的属性","link":"#选择元素的属性","children":[]}]},{"level":2,"title":"iframe问题【大坑】","slug":"iframe问题【大坑】","link":"#iframe问题【大坑】","children":[{"level":4,"title":"定位iframe","slug":"定位iframe","link":"#定位iframe","children":[]},{"level":4,"title":"要记得退回来，哪怕跳转后","slug":"要记得退回来-哪怕跳转后","link":"#要记得退回来-哪怕跳转后","children":[]}]},{"level":2,"title":"自动登录程序例子","slug":"自动登录程序例子","link":"#自动登录程序例子","children":[]},{"level":2,"title":"Selenium的高级操作——限制 css, img, js 的加载","slug":"selenium的高级操作——限制-css-img-js-的加载","link":"#selenium的高级操作——限制-css-img-js-的加载","children":[]}]},{"level":1,"title":"解析网页方案","slug":"解析网页方案","link":"#解析网页方案","children":[{"level":2,"title":"正则","slug":"正则","link":"#正则","children":[]},{"level":2,"title":"BeautifulSoup第三方模块","slug":"beautifulsoup第三方模块","link":"#beautifulsoup第三方模块","children":[{"level":3,"title":"遍历文件树","slug":"遍历文件树","link":"#遍历文件树","children":[]},{"level":3,"title":"搜索文件树（find_all 和 find）","slug":"搜索文件树-find-all-和-find","link":"#搜索文件树-find-all-和-find","children":[]},{"level":3,"title":"CSS选择器（select）","slug":"css选择器-select","link":"#css选择器-select","children":[]}]},{"level":2,"title":"lxml","slug":"lxml","link":"#lxml","children":[]}]},{"level":1,"title":"数据存储方案","slug":"数据存储方案","link":"#数据存储方案","children":[{"level":2,"title":"TXT","slug":"txt","link":"#txt","children":[]},{"level":2,"title":"CSV","slug":"csv","link":"#csv","children":[]},{"level":2,"title":"MySQL","slug":"mysql","link":"#mysql","children":[]},{"level":2,"title":"MongoDB","slug":"mongodb","link":"#mongodb","children":[]}]},{"level":1,"title":"性能改善","slug":"性能改善","link":"#性能改善","children":[{"level":2,"title":"提升速度","slug":"提升速度","link":"#提升速度","children":[]},{"level":2,"title":"反爬虫问题","slug":"反爬虫问题","link":"#反爬虫问题","children":[]},{"level":2,"title":"解决中文乱码","slug":"解决中文乱码","link":"#解决中文乱码","children":[]},{"level":2,"title":"登录和验证码","slug":"登录和验证码","link":"#登录和验证码","children":[]},{"level":2,"title":"分布式爬虫","slug":"分布式爬虫","link":"#分布式爬虫","children":[]}]},{"level":1,"title":"实战","slug":"实战","link":"#实战","children":[{"level":2,"title":"简单demo","slug":"简单demo","link":"#简单demo","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.83,"words":1750},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Platform/Web/06. WebScript/Python爬虫.md","excerpt":"\\n<h1>目录</h1>\\n<h1>入门</h1>\\n<h2>合法性</h2>\\n<ul>\\n<li>道德规范（Robots协议）\\n<ul>\\n<li>查看robots.txt</li>\\n<li>https://www.taobao.com/robots.txt</li>\\n<li>里面有注明 Allow 和 Disallow</li>\\n</ul>\\n</li>\\n<li>引擎结果\\n<ul>\\n<li>由于该网站的robots.txt文件存在限制指令（限制搜索引擎抓取），系统无法提供该页面的内容描述</li>\\n</ul>\\n</li>\\n<li>自我约束\\n<ul>\\n<li>合理限定请求速度</li>\\n<li>“三月爬虫”的故事</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{m as comp,h as data};
