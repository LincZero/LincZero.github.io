import{_ as p,c as o,a,d as s,b as t,e as l,o as i,r as c}from"./app-3W0Z1LB3.js";const r={},u={href:"https://vuepress.github.io/zh/reference/theme-api.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://ecosystem.vuejs.press/zh/themes/default/extending.html",target:"_blank",rel:"noopener noreferrer"};function k(v,n){const e=c("ExternalLinkIcon");return i(),o("div",null,[n[6]||(n[6]=a("h1",{id:"开发一个可继承的主题",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#开发一个可继承的主题"},[a("span",null,"开发一个可继承的主题")])],-1)),n[7]||(n[7]=a("p",null,"有时用户可能希望对一个主题进行一些小改动，但是又不想 Fork 并修改整个项目。",-1)),a("p",null,[n[1]||(n[1]=s("借助于 ")),a("a",u,[n[0]||(n[0]=s("主题 API")),t(e)]),n[2]||(n[2]=s(" ，你可以让用户继承你的主题，允许用户对你的主题进行改动。"))]),a("p",null,[n[4]||(n[4]=s("你肯定已经知道了如何 ")),a("a",d,[n[3]||(n[3]=s("继承默认主题")),t(e)]),n[5]||(n[5]=s(" 。接下来我们将介绍如何让你的主题像默认主题一样被用户继承。"))]),n[8]||(n[8]=l(`<h2 id="布局插槽" tabindex="-1"><a class="header-anchor" href="#布局插槽"><span>布局插槽</span></a></h2><p>这种方式需要你来决定主题的哪些部分是可以被扩展的，它更适合用于一些常见的自定义需求，比如页眉或页脚。</p><p>你只需要在你的布局文件中提供 slots ，并告诉用户如何使用它们即可：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-theme-layout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-header<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-footer<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件别名" tabindex="-1"><a class="header-anchor" href="#组件别名"><span>组件别名</span></a></h2><p>这种方式需要你考虑清楚你的主题的哪些组件可以被替换，并且你需要将组件拆分到合适的粒度。</p><p>首先，为你主题的可替换组件设置 <code>alias</code> 别名：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>import type { Theme } from &#39;vuepress/core&#39;
import { getDirname, path } from &#39;vuepress/utils&#39;

const __dirname = getDirname(import.meta.url)

export const fooTheme = (options): Theme =&gt; ({
  name: &#39;vuepress-theme-foo&#39;,
  alias: {
    // 为可替换的组件设置别名
    &#39;@theme/Navbar.vue&#39;: path.resolve(__dirname, &#39;components/Navbar.vue&#39;),
    &#39;@theme/Sidebar.vue&#39;: path.resolve(__dirname, &#39;components/Sidebar.vue&#39;),
  },
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，在你的主题中通过别名来使用这些组件：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> Navbar <span class="token keyword">from</span> <span class="token string">&#39;@theme/Navbar.vue&#39;</span>
<span class="token keyword">import</span> Sidebar <span class="token keyword">from</span> <span class="token string">&#39;@theme/Sidebar.vue&#39;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-theme-layout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Navbar</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Sidebar</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，用户在继承或使用你的主题时，就可以通过覆盖 <code>alias</code> 来替换特定的组件了。</p>`,11))])}const g=p(r,[["render",k],["__file","04. 开发一个可继承的主题.html.vue"]]),b=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/04.%20Cookbook/04.%20%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E7%BB%A7%E6%89%BF%E7%9A%84%E4%B8%BB%E9%A2%98.html","title":"开发一个可继承的主题","lang":"zh-CN","frontmatter":{"description":"开发一个可继承的主题 有时用户可能希望对一个主题进行一些小改动，但是又不想 Fork 并修改整个项目。 借助于 主题 API ，你可以让用户继承你的主题，允许用户对你的主题进行改动。 你肯定已经知道了如何 继承默认主题 。接下来我们将介绍如何让你的主题像默认主题一样被用户继承。 布局插槽 这种方式需要你来决定主题的哪些部分是可以被扩展的，它更适合用于一...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/04.%20Cookbook/04.%20%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E7%BB%A7%E6%89%BF%E7%9A%84%E4%B8%BB%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"开发一个可继承的主题"}],["meta",{"property":"og:description","content":"开发一个可继承的主题 有时用户可能希望对一个主题进行一些小改动，但是又不想 Fork 并修改整个项目。 借助于 主题 API ，你可以让用户继承你的主题，允许用户对你的主题进行改动。 你肯定已经知道了如何 继承默认主题 。接下来我们将介绍如何让你的主题像默认主题一样被用户继承。 布局插槽 这种方式需要你来决定主题的哪些部分是可以被扩展的，它更适合用于一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发一个可继承的主题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"开发一个可继承的主题","slug":"开发一个可继承的主题","link":"#开发一个可继承的主题","children":[{"level":2,"title":"布局插槽","slug":"布局插槽","link":"#布局插槽","children":[]},{"level":2,"title":"组件别名","slug":"组件别名","link":"#组件别名","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.36,"words":408},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/04. Cookbook/04. 开发一个可继承的主题.md","excerpt":"\\n<p>有时用户可能希望对一个主题进行一些小改动，但是又不想 Fork 并修改整个项目。</p>\\n<p>借助于 <a href=\\"https://vuepress.github.io/zh/reference/theme-api.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">主题 API</a> ，你可以让用户继承你的主题，允许用户对你的主题进行改动。</p>\\n<p>你肯定已经知道了如何 <a href=\\"https://ecosystem.vuejs.press/zh/themes/default/extending.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">继承默认主题</a> 。接下来我们将介绍如何让你的主题像默认主题一样被用户继承。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/04. Cookbook/04. 开发一个可继承的主题.md","value":{"title":"04. 开发一个可继承的主题","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/04. Cookbook/04. 开发一个可继承的主题.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{g as comp,b as data};
