import{_ as i,e as a,g as n,f as t,h as r,r as d,o as p}from"./app-EuS-Ookm.js";const o={};function s(h,l){const e=d("Mermaid");return p(),a("div",null,[l[4]||(l[4]=n('<h1 id="面试八股文" tabindex="-1"><a class="header-anchor" href="#面试八股文"><span>面试八股文</span></a></h1><p>将操作系统按子系统分类：</p><ol><li>进程管理子系统：又大致包含调度模块；任务管理模块；同步模块；CPU模块。</li><li>内存管理子系统：又大致包含虚拟内存模块；内存映射模块；页表模块；物理内存模块。</li><li>文件子系统：又大致包含VFS模块；缓存模块；文件系统模块。</li><li>网络子系统：又大致包含套接字模块；协议栈模块；网络设备模块。</li><li>设备子系统：又大致包含字符设备模块；块设备模块。</li></ol><h2 id="操作系统调度相关" tabindex="-1"><a class="header-anchor" href="#操作系统调度相关"><span>操作系统调度相关</span></a></h2><h3 id="进程和线程" tabindex="-1"><a class="header-anchor" href="#进程和线程"><span>进程和线程</span></a></h3><p>区别</p><table><thead><tr><th></th><th>进程</th><th>线程</th></tr></thead><tbody><tr><td>基本单位 (本质区别)</td><td>资源分配的基本单位 ，重量</td><td>cpu调度基本单位，轻量</td></tr><tr><td>切换效率<br>并发性</td><td>低<br>并行</td><td>高，(上下文切换，现场运行环境)<br>并发</td></tr><tr><td>使用</td><td></td><td>pthread_create</td></tr><tr><td>内存<br>隔离性与健壮性</td><td>独立虚拟内存<br>更好</td><td>共用虚拟内存，仅有较小的独立空间，栈 PC 本地存储<br>更差</td></tr><tr><td>所属关系</td><td>一个进程包括多个线程</td><td>依附进程</td></tr><tr><td>落地</td><td>nginx<br>优点：一个进程宕机不影响其他</td><td>redis<br>优点：内存数据库可以共用一个虚拟内存<br>缺点：加锁负担</td></tr></tbody></table><p>上下文切换问题</p><ul><li><p>保存现场运行环境</p><p>（当同一进程之间的线程切换时，不需要全部进行切换）</p><ul><li>(都切) cpu寄存器、程序计数器</li><li>(线程不切) 用户空间的信息 (虚拟内存、堆栈等)、内核空间的信息、pcb (进程控制块)</li></ul></li></ul><p>调度核问题</p><ul><li>多核cpu的调度一般由操作系统自己来，程序本身没有去涉及。但是之前接触过是有这种相关的场景，去手动调度多核cpu</li></ul><h3 id="系统调用" tabindex="-1"><a class="header-anchor" href="#系统调用"><span>系统调用</span></a></h3><p><strong>这章讲得太烂了，另外找资料学了：见操作系统相关笔记</strong></p><p>描述系统调用整个流程</p><p>内核空间 用户态。</p><p>外部资源需要调用或操作内核的一些东西，如访问socket，则需要系统进行调用</p><p>系统调用的流程 (宏观上)</p><ul><li><p>软中断</p></li><li><p>应用程序</p></li><li><p>函数库</p></li><li><p>函数调用</p></li><li><p>内核</p></li></ul><p>中断</p><ul><li>中断号 int 0x80</li><li>中断处理程序</li><li>中断向量表</li></ul><p>系统调用的流程 (微观上)</p><ol><li>触发中断。系统调用号放入eax(寄存器)，并调用int 0x80</li><li>切换堆栈。用户态切换到内核态</li><li>执行中断程序。0x80-&gt;system_call，eax-&gt;系统调用号-&gt;系统调用表-&gt;处理函数，sys_read</li><li>从中断处理程序返回。iret将返回值返回并从内核态切换用户态</li></ol><p>系统调用是否引起进程或线程切换？</p><ul><li>不一定</li><li>如果阻塞io或io未就绪，将线程或进程切换。运行态-&gt;阻塞态</li><li>如果非阻塞io，会立刻返回，没线程或进程切换</li></ul><p>保存运行现场</p><ul><li>cpu寄存器</li><li>cpu存储的是用户态的指令</li><li>cpu存储的是内核态的指令</li></ul><h2 id="操作系统内存相关" tabindex="-1"><a class="header-anchor" href="#操作系统内存相关"><span>操作系统内存相关</span></a></h2><h3 id="malloc是如何分配内存的" tabindex="-1"><a class="header-anchor" href="#malloc是如何分配内存的"><span>malloc是如何分配内存的</span></a></h3><h3 id="free是如何释放内存的-怎么确定释放内存的大小" tabindex="-1"><a class="header-anchor" href="#free是如何释放内存的-怎么确定释放内存的大小"><span>free是如何释放内存的，怎么确定释放内存的大小</span></a></h3><h3 id="页式管理与段式管理" tabindex="-1"><a class="header-anchor" href="#页式管理与段式管理"><span>页式管理与段式管理</span></a></h3><p>这里讲得不好，另外找资料了。</p><p>参考：</p><ul><li><a href="https://www.bilibili.com/video/BV1uY411k73T" target="_blank" rel="noopener noreferrer">页式存储管理讲解</a></li><li><a href="https://www.bilibili.com/video/BV1H841167y5" target="_blank" rel="noopener noreferrer">操作系统中的分页</a></li></ul><p>内存条中的数据的管理分为</p><ul><li>页式管理</li><li>段式管理</li><li>段页式管理 (综合两者)</li></ul><h4 id="分页" tabindex="-1"><a class="header-anchor" href="#分页"><span>分页</span></a></h4><p>概念</p><p>分页是一种存储机制，它允许操作系统以页面的形式将进程从辅助存储器检索到主存储器中在分页方法中，</p><p>主内存被划分为小的固定大小的物理内存块，称为帧。帧的大小应与页的大小保持相同，以最大限度地利用主存并避免外部碎片。分页用于更快地访问数据，它是一个逻辑概念。</p><h4 id="页式存储管理" tabindex="-1"><a class="header-anchor" href="#页式存储管理"><span>页式存储管理</span></a></h4><p>页式管理的划分</p><p>页式存储管理需要将一整块连续的内存中划分为多段（每段等长）：目的是避免耗时地全部顺序查找</p><ul><li>进程划分：每段称为<strong>逻辑页面</strong>，id为<strong>逻辑页号</strong>，<strong>逻辑地址</strong> = 实际地址 = 逻辑页号*n + 页内地址</li><li>内存划分：每段称为<strong>页框</strong>，id为<strong>页框号</strong>，<strong>物理地址</strong> = 实际地址 = 页框号*n + 页内地址</li></ul><p>（我记得Windows好像还有个类似的叫簇的概念，但那个应该是文件系统相关的，不关内存事）</p><p>进程与内存的对应关系：<strong>页表</strong>（页表可通过寄存器加速，寄存器中的表叫<strong>块表</strong>）</p><p>多级页表：优化存放，解决越来越长的页表，如二级页表</p><p>反置页表：优化空间。传统页表id为进程，反置页表id是页框号，表里还多了进程号</p><h4 id="页面置换算法" tabindex="-1"><a class="header-anchor" href="#页面置换算法"><span>页面置换算法</span></a></h4>',48)),t("ul",null,[l[1]||(l[1]=t("li",null,[t("p",null,"什么是页面置换"),t("ul",null,[t("li",null,"缺页中断 -> 内存已满 -> 置换一部分数据到磁盘")])],-1)),l[2]||(l[2]=t("li",null,[t("p",null,"目标"),t("ul",null,[t("li",null,"尽量减少页面的换入换出次数")])],-1)),t("li",null,[l[0]||(l[0]=t("p",null,"流程细节",-1)),t("ul",null,[t("li",null,[r(e,{id:"mermaid-419",code:"eJxLL0osyFDwCeLKyU9MifdV0NU11HvWue/lwq0vFq54uXCnrq4dhK2ra6T3fM8uIOfpnqanO3YAJfyDdXWN9Z7NXwrU8Hxx4/PZM4CCXEAVL+cuerK39/nedbq6JnrPehc9bV36tGPD85W7Xk7f9HxWy/POlc8ntAHVAZUb6Oqa6j3Zv+7ZlJ1wO0FKurY9a2gEGgK3n0tX10zvZXvvs2kbnnUuf7GwBygDcTMXAG+Ma5I="})])])]),l[3]||(l[3]=t("li",null,[t("p",null,"页面置换算法有哪些"),t("ol",null,[t("li",null,"最佳页面置换算法，置换在未来最长时间不访问的页面"),t("li",null,"先进先出置换算法，选择在内存驻留时间最长的页面"),t("li",null,"最久未使用置换算法，选择最长时间没有被访问的页面"),t("li",null,"时钟页面置换算法（实现上为：LRU环形链表）"),t("li",null,"最不常用置换算法，选择访问次数最少的页面")])],-1))]),l[5]||(l[5]=n('<h2 id="操作系统网络相关" tabindex="-1"><a class="header-anchor" href="#操作系统网络相关"><span>操作系统网络相关</span></a></h2><p>见另一笔记</p><h2 id="操作系统设备相关" tabindex="-1"><a class="header-anchor" href="#操作系统设备相关"><span>操作系统设备相关</span></a></h2><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><h3 id="cas是怎么样的一种同步机制" tabindex="-1"><a class="header-anchor" href="#cas是怎么样的一种同步机制"><span>cas是怎么样的一种同步机制</span></a></h3>',5))])}const u=i(o,[["render",s],["__file","02. 操作系统相关.html.vue"]]),b=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/10.%20%E9%9D%A2%E8%AF%95/C__%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/02.%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3.html","title":"面试八股文","lang":"zh-CN","frontmatter":{"description":"面试八股文 将操作系统按子系统分类： 进程管理子系统：又大致包含调度模块；任务管理模块；同步模块；CPU模块。 内存管理子系统：又大致包含虚拟内存模块；内存映射模块；页表模块；物理内存模块。 文件子系统：又大致包含VFS模块；缓存模块；文件系统模块。 网络子系统：又大致包含套接字模块；协议栈模块；网络设备模块。 设备子系统：又大致包含字符设备模块；块设...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/10.%20%E9%9D%A2%E8%AF%95/C__%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/02.%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"面试八股文"}],["meta",{"property":"og:description","content":"面试八股文 将操作系统按子系统分类： 进程管理子系统：又大致包含调度模块；任务管理模块；同步模块；CPU模块。 内存管理子系统：又大致包含虚拟内存模块；内存映射模块；页表模块；物理内存模块。 文件子系统：又大致包含VFS模块；缓存模块；文件系统模块。 网络子系统：又大致包含套接字模块；协议栈模块；网络设备模块。 设备子系统：又大致包含字符设备模块；块设..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"面试八股文\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":5.05,"words":1515},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/10. 面试/C++面试八股文/02. 操作系统相关.md","excerpt":"\\n<p>将操作系统按子系统分类：</p>\\n<ol>\\n<li>进程管理子系统：又大致包含调度模块；任务管理模块；同步模块；CPU模块。</li>\\n<li>内存管理子系统：又大致包含虚拟内存模块；内存映射模块；页表模块；物理内存模块。</li>\\n<li>文件子系统：又大致包含VFS模块；缓存模块；文件系统模块。</li>\\n<li>网络子系统：又大致包含套接字模块；协议栈模块；网络设备模块。</li>\\n<li>设备子系统：又大致包含字符设备模块；块设备模块。</li>\\n</ol>\\n<h2>操作系统调度相关</h2>\\n<h3>进程和线程</h3>\\n<p>区别</p>\\n<table>\\n<thead>\\n<tr>\\n<th></th>\\n<th>进程</th>\\n<th>线程</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>基本单位 (本质区别)</td>\\n<td>资源分配的基本单位 ，重量</td>\\n<td>cpu调度基本单位，轻量</td>\\n</tr>\\n<tr>\\n<td>切换效率<br>并发性</td>\\n<td>低<br>并行</td>\\n<td>高，(上下文切换，现场运行环境)<br>并发</td>\\n</tr>\\n<tr>\\n<td>使用</td>\\n<td></td>\\n<td>pthread_create</td>\\n</tr>\\n<tr>\\n<td>内存<br>隔离性与健壮性</td>\\n<td>独立虚拟内存<br>更好</td>\\n<td>共用虚拟内存，仅有较小的独立空间，栈 PC 本地存储<br>更差</td>\\n</tr>\\n<tr>\\n<td>所属关系</td>\\n<td>一个进程包括多个线程</td>\\n<td>依附进程</td>\\n</tr>\\n<tr>\\n<td>落地</td>\\n<td>nginx<br>优点：一个进程宕机不影响其他</td>\\n<td>redis<br>优点：内存数据库可以共用一个虚拟内存<br>缺点：加锁负担</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/10. 面试/C++面试八股文/02. 操作系统相关.md","value":{"title":"02. 操作系统相关","path":"MdNote_Public/01. DesignAndDevelop/Develop/10. 面试/C++面试八股文/02. 操作系统相关.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{u as comp,b as data};
