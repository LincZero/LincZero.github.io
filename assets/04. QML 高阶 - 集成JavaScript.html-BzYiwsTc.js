import{_ as a,c as s,e as t,o as e}from"./app-D2u2UykU.js";const o={};function p(i,n){return e(),s("div",null,n[0]||(n[0]=[t(`<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>Qt</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="qml-高阶" tabindex="-1"><a class="header-anchor" href="#qml-高阶"><span>QML 高阶</span></a></h1><h2 id="qml集成javascript" tabindex="-1"><a class="header-anchor" href="#qml集成javascript"><span>QML集成JavaScript</span></a></h2><p>js代码可以被很容易地集成进QML，来提供用户界面逻辑、必要的控制及其他用途</p><p>QML集成js有两种方式</p><ul><li>(1) 直接在QML代码中写JavaScript函数，然后调用</li><li>(2) 把JavaScript代码写在外部文件中，需要使用import语句导入.qml源文件中使用</li></ul><h3 id="调用javascript函数" tabindex="-1"><a class="header-anchor" href="#调用javascript函数"><span>调用JavaScript函数</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>Rectangle<span class="token punctuation">{</span>
    id<span class="token operator">:</span>rect
    width<span class="token operator">:</span><span class="token number">60</span>
    height<span class="token operator">:</span><span class="token number">60</span>
    gradient<span class="token operator">:</span>Gradient<span class="token punctuation">{</span>          <span class="token comment">// 渐变色</span>
        GradientStop<span class="token punctuation">{</span>position<span class="token operator">:</span><span class="token number">0.0</span>; color<span class="token operator">:</span><span class="token string">&quot;yellow&quot;</span><span class="token punctuation">}</span>
        GradientStop<span class="token punctuation">{</span>position<span class="token operator">:</span><span class="token number">0.33</span>; color<span class="token operator">:</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">}</span>
        GradientStop<span class="token punctuation">{</span>position<span class="token operator">:</span><span class="token number">1.0</span>; color<span class="token operator">:</span><span class="token string">&quot;aqua&quot;</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    function getRandomNumber()<span class="token punctuation">{</span> <span class="token comment">// 定义JavaScript函数。注意可能会reorder，最好定义在外面</span>
        return Math.random()*<span class="token number">360</span><span class="token comment">// 随机旋转的角度</span>
    <span class="token punctuation">}</span>
    Behavior on rotation <span class="token punctuation">{</span>      <span class="token comment">// 行为动画</span>
        RotationAnimation<span class="token punctuation">{</span>
            direction<span class="token operator">:</span> RotationAnimation.Clockwise
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    MouseArea<span class="token punctuation">{</span>
        anchors.fill<span class="token operator">:</span>parent
        onClicked<span class="token operator">:</span> rect.rotation = getRandomNumber()
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入js文件" tabindex="-1"><a class="header-anchor" href="#导入js文件"><span>导入JS文件</span></a></h3><ul><li>(1) 添加js文件：资源 -&gt; qrc文件 -&gt; / -&gt; 添加新文件 -&gt; 新建文件 -&gt; 选择Qt下的JS File模板</li><li>(2) 导入js文件：在qml文件中 <code>import &quot;myscript.js&quot; as Logic</code>（话说这个Logic是啥意思？）</li><li>规模较大的QML程序中，这样可以使界面与功能分离</li></ul>`,11)]))}const l=a(o,[["render",p],["__file","04. QML 高阶 - 集成JavaScript.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/02.%20QtQuick/01.%20QML/04.%20QML%20%E9%AB%98%E9%98%B6%20-%20%E9%9B%86%E6%88%90JavaScript.html","title":"Qt","lang":"zh-CN","frontmatter":{"description":"Qt 目录 QML 高阶 QML集成JavaScript js代码可以被很容易地集成进QML，来提供用户界面逻辑、必要的控制及其他用途 QML集成js有两种方式 (1) 直接在QML代码中写JavaScript函数，然后调用 (2) 把JavaScript代码写在外部文件中，需要使用import语句导入.qml源文件中使用 调用JavaScript函数...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/02.%20QtQuick/01.%20QML/04.%20QML%20%E9%AB%98%E9%98%B6%20-%20%E9%9B%86%E6%88%90JavaScript.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Qt"}],["meta",{"property":"og:description","content":"Qt 目录 QML 高阶 QML集成JavaScript js代码可以被很容易地集成进QML，来提供用户界面逻辑、必要的控制及其他用途 QML集成js有两种方式 (1) 直接在QML代码中写JavaScript函数，然后调用 (2) 把JavaScript代码写在外部文件中，需要使用import语句导入.qml源文件中使用 调用JavaScript函数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Qt","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"QML 高阶","slug":"qml-高阶","link":"#qml-高阶","children":[{"level":2,"title":"QML集成JavaScript","slug":"qml集成javascript","link":"#qml集成javascript","children":[{"level":3,"title":"调用JavaScript函数","slug":"调用javascript函数","link":"#调用javascript函数","children":[]},{"level":3,"title":"导入JS文件","slug":"导入js文件","link":"#导入js文件","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.86,"words":258},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/02. QtQuick/01. QML/04. QML 高阶 - 集成JavaScript.md","excerpt":"\\n<h1>目录</h1>\\n<h1>QML 高阶</h1>\\n<h2>QML集成JavaScript</h2>\\n<p>js代码可以被很容易地集成进QML，来提供用户界面逻辑、必要的控制及其他用途</p>\\n<p>QML集成js有两种方式</p>\\n<ul>\\n<li>(1) 直接在QML代码中写JavaScript函数，然后调用</li>\\n<li>(2) 把JavaScript代码写在外部文件中，需要使用import语句导入.qml源文件中使用</li>\\n</ul>\\n<h3>调用JavaScript函数</h3>\\n<div class=\\"language-json\\" data-ext=\\"json\\" data-title=\\"json\\"><pre class=\\"language-json\\"><code>Rectangle<span class=\\"token punctuation\\">{</span>\\n    id<span class=\\"token operator\\">:</span>rect\\n    width<span class=\\"token operator\\">:</span><span class=\\"token number\\">60</span>\\n    height<span class=\\"token operator\\">:</span><span class=\\"token number\\">60</span>\\n    gradient<span class=\\"token operator\\">:</span>Gradient<span class=\\"token punctuation\\">{</span>          <span class=\\"token comment\\">// 渐变色</span>\\n        GradientStop<span class=\\"token punctuation\\">{</span>position<span class=\\"token operator\\">:</span><span class=\\"token number\\">0.0</span>; color<span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"yellow\\"</span><span class=\\"token punctuation\\">}</span>\\n        GradientStop<span class=\\"token punctuation\\">{</span>position<span class=\\"token operator\\">:</span><span class=\\"token number\\">0.33</span>; color<span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"blue\\"</span><span class=\\"token punctuation\\">}</span>\\n        GradientStop<span class=\\"token punctuation\\">{</span>position<span class=\\"token operator\\">:</span><span class=\\"token number\\">1.0</span>; color<span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"aqua\\"</span><span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    function getRandomNumber()<span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">// 定义JavaScript函数。注意可能会reorder，最好定义在外面</span>\\n        return Math.random()*<span class=\\"token number\\">360</span><span class=\\"token comment\\">// 随机旋转的角度</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    Behavior on rotation <span class=\\"token punctuation\\">{</span>      <span class=\\"token comment\\">// 行为动画</span>\\n        RotationAnimation<span class=\\"token punctuation\\">{</span>\\n            direction<span class=\\"token operator\\">:</span> RotationAnimation.Clockwise\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    MouseArea<span class=\\"token punctuation\\">{</span>\\n        anchors.fill<span class=\\"token operator\\">:</span>parent\\n        onClicked<span class=\\"token operator\\">:</span> rect.rotation = getRandomNumber()\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{l as comp,r as data};
