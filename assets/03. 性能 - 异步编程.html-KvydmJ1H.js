import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,a as t}from"./app-CsHIiQ5U.js";const e={},p=t(`<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>JavaScript</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="异步编程" tabindex="-1"><a class="header-anchor" href="#异步编程"><span>异步编程</span></a></h1><h2 id="callback函数" tabindex="-1"><a class="header-anchor" href="#callback函数"><span>callback函数</span></a></h2><h2 id="promise" tabindex="-1"><a class="header-anchor" href="#promise"><span>promise</span></a></h2><h2 id="es10-asyn-await" tabindex="-1"><a class="header-anchor" href="#es10-asyn-await"><span>ES10 - asyn - await</span></a></h2><h2 id="踩坑" tabindex="-1"><a class="header-anchor" href="#踩坑"><span>踩坑</span></a></h2><blockquote><h4 id="callback回调函数" tabindex="-1"><a class="header-anchor" href="#callback回调函数"><span>callback回调函数</span></a></h4></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>调用函数
<span class="token keyword">function</span> <span class="token function">functionA</span><span class="token punctuation">(</span><span class="token parameter">callbake</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token function">functionA</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
会识别为传入的是一个对象

改法：
<span class="token keyword">function</span> <span class="token function">functionA</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">null</span><span class="token punctuation">,</span> callbake</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token function">functionA</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

原因好像是因为第一个必须是Error，就算没有也要返回<span class="token keyword">null</span>
便于错误后不调用callback
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="promise执行顺序" tabindex="-1"><a class="header-anchor" href="#promise执行顺序"><span>promise执行顺序</span></a></h4></blockquote><p>then里嵌套的then优先级少于该then同级往下！即：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// 执行1</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token comment">// 执行3</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token comment">// 执行4</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// 执行2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),c=[p];function i(l,o){return a(),s("div",null,c)}const d=n(e,[["render",i],["__file","03. 性能 - 异步编程.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/JavaScript/04.%20%E4%BC%98%E5%8C%96/03.%20%E6%80%A7%E8%83%BD%20-%20%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B.html","title":"JavaScript","lang":"zh-CN","frontmatter":{"description":"JavaScript 目录 异步编程 callback函数 promise ES10 - asyn - await 踩坑 callback回调函数 promise执行顺序 then里嵌套的then优先级少于该then同级往下！即：","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/JavaScript/04.%20%E4%BC%98%E5%8C%96/03.%20%E6%80%A7%E8%83%BD%20-%20%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"JavaScript"}],["meta",{"property":"og:description","content":"JavaScript 目录 异步编程 callback函数 promise ES10 - asyn - await 踩坑 callback回调函数 promise执行顺序 then里嵌套的then优先级少于该then同级往下！即："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"JavaScript","slug":"javascript","link":"#javascript","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"异步编程","slug":"异步编程","link":"#异步编程","children":[{"level":2,"title":"callback函数","slug":"callback函数","link":"#callback函数","children":[]},{"level":2,"title":"promise","slug":"promise","link":"#promise","children":[]},{"level":2,"title":"ES10 - asyn - await","slug":"es10-asyn-await","link":"#es10-asyn-await","children":[]},{"level":2,"title":"踩坑","slug":"踩坑","link":"#踩坑","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.42,"words":126},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/JavaScript/04. 优化/03. 性能 - 异步编程.md","autoDesc":true}');export{d as comp,k as data};
