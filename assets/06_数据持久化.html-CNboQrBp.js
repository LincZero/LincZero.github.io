import{_ as n,c as s,b as a,o as i}from"./app-CWZ_wCfK.js";const l={};function t(d,e){return i(),s("div",null,e[0]||(e[0]=[a(`<h1 id="redis持久化" tabindex="-1"><a class="header-anchor" href="#redis持久化"><span>Redis持久化</span></a></h1><p>Redis持久化有两种方式</p><ul><li>RDB (Redis Database) <ul><li>在制定时间间隔内将内存数据快照写入磁盘，某一个</li></ul></li><li>AOF (Append Only File)</li></ul><h2 id="rdb-redis-database-快照" tabindex="-1"><a class="header-anchor" href="#rdb-redis-database-快照"><span>RDB (Redis Database)，快照</span></a></h2><h3 id="使用-配置文件自动触发快照" tabindex="-1"><a class="header-anchor" href="#使用-配置文件自动触发快照"><span>使用：配置文件自动触发快照</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">vi</span> redis.conf
<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.
<span class="token comment"># 时间和修改次数。推荐的三个配置：</span>
<span class="token comment"># 3600s (1h) 内只要有一次修改就进行一次快照</span>
<span class="token comment"># 300s (5min) 内只要有100次修改就进行一次快照</span>
<span class="token comment"># 60s (1min) 内只要有10000次修改就进行一次快照</span>
/save <span class="token number">3600</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-手动触发快照" tabindex="-1"><a class="header-anchor" href="#使用-手动触发快照"><span>使用：手动触发快照</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ redis-cli
<span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k1 v1
OK
<span class="token operator">&gt;</span> save				<span class="token comment"># 保存快照</span>
OK
<span class="token operator">&gt;</span> <span class="token builtin class-name">exit</span>

$ <span class="token function">ls</span>
dump.rdb	redis.conf
$ xxd dump.rdb		<span class="token comment"># xxd是一个查看2进制或16进制内容的 Linux 命令</span>
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点"><span>优缺点</span></a></h3><ul><li>缺点 <ul><li>丢失问题：意外宕机会丢失最后一次快照后的所有内容。更适合用来做定时备份</li><li>阻塞问题： <ul><li>save命令：备份期间 Redis 阻塞，无法接受请求。特别是Redis内存比较大时快照耗时较长</li><li>bgsave命令：会创建一个子进程来负责快照，主进程可以继续处理请求。但有性能损耗，并且fork子进程这段时间也无法接受请求</li><li>总而言之，无法做到秒级的非阻塞快照</li></ul></li></ul></li><li>适用 <ul><li>所以更适合用来做备份。例如每天用 crontab 来执行一次 save 命令（crontab是 Linux 系统中用于设置周期性被执行的指令的命令）</li></ul></li></ul><h2 id="aof-append-only-file" tabindex="-1"><a class="header-anchor" href="#aof-append-only-file"><span>AOF (Append Only File)</span></a></h2><h3 id="使用-配置文件" tabindex="-1"><a class="header-anchor" href="#使用-配置文件"><span>使用：配置文件</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">vi</span> redis.conf
<span class="token punctuation">..</span>.
appendonly <span class="token function">yes</span>		<span class="token comment"># 打开这个配置就可以了</span>
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优缺点-1" tabindex="-1"><a class="header-anchor" href="#优缺点-1"><span>优缺点</span></a></h3><ul><li>特点 <ul><li>在执行命令时，同时将命令写入到一个新文件中。Redis重启时会重新执行AOF文件中的命令来重建</li></ul></li></ul>`,15)]))}const p=n(l,[["render",t],["__file","06_数据持久化.html.vue"]]),o=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20Redis/03_%E5%85%B6%E4%BB%96/06_%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96.html","title":"Redis持久化","lang":"zh-CN","frontmatter":{"description":"Redis持久化 Redis持久化有两种方式 RDB (Redis Database) 在制定时间间隔内将内存数据快照写入磁盘，某一个 AOF (Append Only File) RDB (Redis Database)，快照 使用：配置文件自动触发快照 使用：手动触发快照 优缺点 缺点 丢失问题：意外宕机会丢失最后一次快照后的所有内容。更适合用来做...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20Redis/03_%E5%85%B6%E4%BB%96/06_%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Redis持久化"}],["meta",{"property":"og:description","content":"Redis持久化 Redis持久化有两种方式 RDB (Redis Database) 在制定时间间隔内将内存数据快照写入磁盘，某一个 AOF (Append Only File) RDB (Redis Database)，快照 使用：配置文件自动触发快照 使用：手动触发快照 优缺点 缺点 丢失问题：意外宕机会丢失最后一次快照后的所有内容。更适合用来做..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis持久化\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Redis持久化","slug":"redis持久化","link":"#redis持久化","children":[{"level":2,"title":"RDB (Redis Database)，快照","slug":"rdb-redis-database-快照","link":"#rdb-redis-database-快照","children":[{"level":3,"title":"使用：配置文件自动触发快照","slug":"使用-配置文件自动触发快照","link":"#使用-配置文件自动触发快照","children":[]},{"level":3,"title":"使用：手动触发快照","slug":"使用-手动触发快照","link":"#使用-手动触发快照","children":[]},{"level":3,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[]}]},{"level":2,"title":"AOF (Append Only File)","slug":"aof-append-only-file","link":"#aof-append-only-file","children":[{"level":3,"title":"使用：配置文件","slug":"使用-配置文件","link":"#使用-配置文件","children":[]},{"level":3,"title":"优缺点","slug":"优缺点-1","link":"#优缺点-1","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.46,"words":438},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/01. Redis/03_其他/06_数据持久化.md","excerpt":"\\n<p>Redis持久化有两种方式</p>\\n<ul>\\n<li>RDB (Redis Database)\\n<ul>\\n<li>在制定时间间隔内将内存数据快照写入磁盘，某一个</li>\\n</ul>\\n</li>\\n<li>AOF (Append Only File)</li>\\n</ul>\\n<h2>RDB (Redis Database)，快照</h2>\\n<h3>使用：配置文件自动触发快照</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>$ <span class=\\"token function\\">vi</span> redis.conf\\n<span class=\\"token punctuation\\">..</span>.\\n<span class=\\"token punctuation\\">..</span>.\\n<span class=\\"token comment\\"># 时间和修改次数。推荐的三个配置：</span>\\n<span class=\\"token comment\\"># 3600s (1h) 内只要有一次修改就进行一次快照</span>\\n<span class=\\"token comment\\"># 300s (5min) 内只要有100次修改就进行一次快照</span>\\n<span class=\\"token comment\\"># 60s (1min) 内只要有10000次修改就进行一次快照</span>\\n/save <span class=\\"token number\\">3600</span> <span class=\\"token number\\">1</span>\\n</code></pre></div>","autoDesc":true}');export{p as comp,o as data};
