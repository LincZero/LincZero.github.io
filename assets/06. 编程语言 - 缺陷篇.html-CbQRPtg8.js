import{_ as l,c as o,b as t,d as s,e as a,a as p,o as r,r as i}from"./app-Ci64BYEV.js";const c={},u={href:"https://docs.python.org/3/library/stdtypes.html#float.as_integer_ratio",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.python.org/3/library/stdtypes.html#float.hex",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.python.org/3/library/math.html#math.fsum",target:"_blank",rel:"noopener noreferrer"};function g(k,n){const e=i("ExternalLinkIcon");return r(),o("div",null,[n[13]||(n[13]=t('<h1 id="_06-编程语言-缺陷篇" tabindex="-1"><a class="header-anchor" href="#_06-编程语言-缺陷篇"><span>06. 编程语言 - 缺陷篇</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><p>[toc]</p><h1 id="_0-1-0-2-0-30000000000000004" tabindex="-1"><a class="header-anchor" href="#_0-1-0-2-0-30000000000000004"><span>0.1+0.2 = 0.30000000000000004</span></a></h1><p>参考：https://www.runoob.com/manual/pythontutorial3/docs/html/floatingpoint.html</p>',5)),s("ul",null,[n[12]||(n[12]=t('<li><p>类似情况，相同原理的还有：</p><ul><li>运算结果为0.3时 <ul><li><code>3*0.1 = 0.30000000000000004 != 0.3</code></li></ul></li><li>浮点加减运算 <ul><li><code>50.25f + 11.17f = 61.419998</code></li><li><code>50.25f - 11.14f = 39.080002</code></li></ul></li></ul></li><li><p>普遍性</p><ul><li>所有语言都存在这种问题（亲测<code>python</code>、<code>javascript</code>存在）</li><li>但计算器一般不会这样（亲测<code>casio fx82</code>、<code>uTools计算稿纸</code> 、<code>微软计算器</code>、<code>安卓多多计算器</code>无该问题）</li></ul></li><li><p>原理（以双浮点为例，小数点后面有效数字16位）</p><ul><li>0.1 = 0.0001100110011001</li><li>0.2 = 0.0011001100110011</li><li>0.3 = 0.0100110011001100</li><li>0.1+0.2 = 0.0100110011001100 = 0.3</li><li>即：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.3</mn><mo>=</mo><mn>0.0100110011001100</mn><mo mathvariant="normal">≠</mo><mn>0.3</mn></mrow><annotation encoding="application/x-tex">0.3 = 0.0100110011001100\\neq 0.3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0.0100110011001100</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.3</span></span></span></span></li></ul></li>',3)),s("li",null,[n[11]||(n[11]=s("p",null,"解决方案",-1)),s("ul",null,[s("li",null,[s("p",null,[n[1]||(n[1]=a("比如Python中，")),s("a",u,[n[0]||(n[0]=a("float.as_integer_ratio()")),p(e)]),n[2]||(n[2]=a(" 方法以分数的形式表示一个浮点数的值："))]),n[3]||(n[3]=t(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token number">3.14159</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>as_integer_ratio<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3537115888337719</span><span class="token punctuation">,</span> <span class="token number">1125899906842624</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">==</span> <span class="token number">3537115888337719</span> <span class="token operator">/</span> <span class="token number">1125899906842624</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),s("li",null,[s("p",null,[s("a",m,[n[4]||(n[4]=a("float.hex()")),p(e)]),n[5]||(n[5]=a(" 方法以十六进制表示浮点数，给出的同样是计算机存储的精确值："))]),n[6]||(n[6]=t(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token string">&#39;0x1.921f9f01b866ep+1&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">==</span> <span class="token builtin">float</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">&#39;0x1.921f9f01b866ep+1&#39;</span><span class="token punctuation">)</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),s("li",null,[s("p",null,[n[8]||(n[8]=a("另外一个有用的工具是 ")),s("a",d,[n[7]||(n[7]=a("math.fsum()")),p(e)]),n[9]||(n[9]=a(" 函数，它帮助求和过程中减少精度的损失。当数值在不停地相加的时候，它会跟踪“丢弃的数字”。这可以给总体的准确度带来不同，以至于错误不会累积到影响最终结果的点："))]),n[10]||(n[10]=t(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1.0</span>
<span class="token boolean">False</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> math<span class="token punctuation">.</span>fsum<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1.0</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])])])]),n[14]||(n[14]=s("h1",{id:"手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘"},[s("span",null,"手持两把锟斤拷 口中疾呼烫烫烫 脚踏千朵屯屯屯 笑看万物锘锘锘")])],-1)),n[15]||(n[15]=s("ul",null,[s("li",null,"C语言")],-1))])}const b=l(c,[["render",g],["__file","06. 编程语言 - 缺陷篇.html.vue"]]),y=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/01.%20ALL/06.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%20-%20%E7%BC%BA%E9%99%B7%E7%AF%87.html","title":"06. 编程语言 - 缺陷篇","lang":"zh-CN","frontmatter":{"description":"06. 编程语言 - 缺陷篇 目录 [toc] 0.1+0.2 = 0.30000000000000004 参考：https://www.runoob.com/manual/pythontutorial3/docs/html/floatingpoint.html 类似情况，相同原理的还有： 运算结果为0.3时 3*0.1 = 0.30000000000...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/01.%20ALL/06.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%20-%20%E7%BC%BA%E9%99%B7%E7%AF%87.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"06. 编程语言 - 缺陷篇"}],["meta",{"property":"og:description","content":"06. 编程语言 - 缺陷篇 目录 [toc] 0.1+0.2 = 0.30000000000000004 参考：https://www.runoob.com/manual/pythontutorial3/docs/html/floatingpoint.html 类似情况，相同原理的还有： 运算结果为0.3时 3*0.1 = 0.30000000000..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"06. 编程语言 - 缺陷篇\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"06. 编程语言 - 缺陷篇","slug":"_06-编程语言-缺陷篇","link":"#_06-编程语言-缺陷篇","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"0.1+0.2 = 0.30000000000000004","slug":"_0-1-0-2-0-30000000000000004","link":"#_0-1-0-2-0-30000000000000004","children":[]},{"level":1,"title":"手持两把锟斤拷 口中疾呼烫烫烫 脚踏千朵屯屯屯 笑看万物锘锘锘","slug":"手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘","link":"#手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.16,"words":347},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/06. 编程语言 - 缺陷篇.md","excerpt":"\\n<h1>目录</h1>\\n<p>[toc]</p>\\n<h1>0.1+0.2 = 0.30000000000000004</h1>\\n<p>参考：https://www.runoob.com/manual/pythontutorial3/docs/html/floatingpoint.html</p>\\n<ul>\\n<li>\\n<p>类似情况，相同原理的还有：</p>\\n<ul>\\n<li>运算结果为0.3时\\n<ul>\\n<li><code>3*0.1 = 0.30000000000000004 != 0.3</code></li>\\n</ul>\\n</li>\\n<li>浮点加减运算\\n<ul>\\n<li><code>50.25f + 11.17f = 61.419998</code></li>\\n<li><code>50.25f - 11.14f = 39.080002</code></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>普遍性</p>\\n<ul>\\n<li>所有语言都存在这种问题（亲测<code>python</code>、<code>javascript</code>存在）</li>\\n<li>但计算器一般不会这样（亲测<code>casio fx82</code>、<code>uTools计算稿纸</code> 、<code>微软计算器</code>、<code>安卓多多计算器</code>无该问题）</li>\\n</ul>\\n</li>\\n<li>\\n<p>原理（以双浮点为例，小数点后面有效数字16位）</p>\\n<ul>\\n<li>0.1 = 0.0001100110011001</li>\\n<li>0.2 = 0.0011001100110011</li>\\n<li>0.3 = 0.0100110011001100</li>\\n<li>0.1+0.2 = 0.0100110011001100 = 0.3</li>\\n<li>即：<span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mn>0.3</mn><mo>=</mo><mn>0.0100110011001100</mn><mo mathvariant=\\"normal\\">≠</mo><mn>0.3</mn></mrow><annotation encoding=\\"application/x-tex\\">0.3 = 0.0100110011001100\\\\neq 0.3</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6444em;\\"></span><span class=\\"mord\\">0.3</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">=</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8889em;vertical-align:-0.1944em;\\"></span><span class=\\"mord\\">0.0100110011001100</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\"><span class=\\"mrel\\"><span class=\\"mord vbox\\"><span class=\\"thinbox\\"><span class=\\"rlap\\"><span class=\\"strut\\" style=\\"height:0.8889em;vertical-align:-0.1944em;\\"></span><span class=\\"inner\\"><span class=\\"mord\\"><span class=\\"mrel\\"></span></span></span><span class=\\"fix\\"></span></span></span></span></span><span class=\\"mrel\\">=</span></span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6444em;\\"></span><span class=\\"mord\\">0.3</span></span></span></span></li>\\n</ul>\\n</li>\\n<li>\\n<p>解决方案</p>\\n<ul>\\n<li>\\n<p>比如Python中，<a href=\\"https://docs.python.org/3/library/stdtypes.html#float.as_integer_ratio\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">float.as_integer_ratio()</a> 方法以分数的形式表示一个浮点数的值：</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> x <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3.14159</span>\\n<span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> x<span class=\\"token punctuation\\">.</span>as_integer_ratio<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3537115888337719</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1125899906842624</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> x <span class=\\"token operator\\">==</span> <span class=\\"token number\\">3537115888337719</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">1125899906842624</span>\\n<span class=\\"token boolean\\">True</span>\\n</code></pre></div></li>\\n<li>\\n<p><a href=\\"https://docs.python.org/3/library/stdtypes.html#float.hex\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">float.hex()</a> 方法以十六进制表示浮点数，给出的同样是计算机存储的精确值：</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> x<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">hex</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token string\\">'0x1.921f9f01b866ep+1'</span>\\n<span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> x <span class=\\"token operator\\">==</span> <span class=\\"token builtin\\">float</span><span class=\\"token punctuation\\">.</span>fromhex<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'0x1.921f9f01b866ep+1'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token boolean\\">True</span>\\n</code></pre></div></li>\\n<li>\\n<p>另外一个有用的工具是 <a href=\\"https://docs.python.org/3/library/math.html#math.fsum\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">math.fsum()</a> 函数，它帮助求和过程中减少精度的损失。当数值在不停地相加的时候，它会跟踪“丢弃的数字”。这可以给总体的准确度带来不同，以至于错误不会累积到影响最终结果的点：</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token builtin\\">sum</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0.1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1.0</span>\\n<span class=\\"token boolean\\">False</span>\\n<span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> math<span class=\\"token punctuation\\">.</span>fsum<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0.1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1.0</span>\\n<span class=\\"token boolean\\">True</span>\\n</code></pre></div></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{b as comp,y as data};
