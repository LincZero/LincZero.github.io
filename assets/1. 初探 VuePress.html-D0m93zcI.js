import{_ as o,c as t,b as a,a as p,d as s,e as r,o as c,r as d}from"./app-U5mPla4b.js";const l={},i={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fcacjs%2Fcac",target:"_blank",rel:"noopener noreferrer"},u={href:"https://link.juejin.cn?target=",target:"_blank",rel:"noopener noreferrer"};function v(m,e){const n=d("ExternalLinkIcon");return c(),t("div",null,[e[10]||(e[10]=a(`<h1 id="初探-vuepress" tabindex="-1"><a class="header-anchor" href="#初探-vuepress"><span>初探 VuePress</span></a></h1><h2 id="最简起步" tabindex="-1"><a class="header-anchor" href="#最简起步"><span>最简起步</span></a></h2><p>首先按照 VuePress 的指导创建一个最小的网站：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> vuepress-ssr
<span class="token builtin class-name">cd</span> vuepress-ssr
<span class="token function">yarn</span> init <span class="token parameter variable">-y</span>
<span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> vuepress
<span class="token function">mkdir</span> docs
<span class="token builtin class-name">echo</span> <span class="token string">&#39;# Hello VuePress&#39;</span> <span class="token operator">&gt;</span> docs/README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着打开 packjge.json 并添加本地调试 &amp; 打包的命令：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;docs:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npx --node-arg=--inspect vuepress dev --debug docs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npx --node-arg=--inspect vuepress build --debug docs&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ok 这样最简单的准备就搞定了，不过我们暂时不急着调试，可以先来看看代码</p><h2 id="cli外壳-vuepress" tabindex="-1"><a class="header-anchor" href="#cli外壳-vuepress"><span>CLI外壳 - vuepress</span></a></h2><p>我们打开刚刚创建的项目的 node_modules，找到 vuepress 文件夹：</p><p>![image-20210114185426058](1.%20初探 VuePress.assets/4e003359baf34c0cb6755eec8007c4c9tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>看到主逻辑文件只有 cli.js 和 index.js 两个，再看看 package.json：</p><p>![image-20210114185924797](1.%20初探 VuePress.assets/f69854cbae4e4c9595ed8ab54778ad7ftplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>可知我们平常使用的 <code>vuepress</code> 调用的其实就是 cli.js 文件. 再来看看 cli.js 干了什么：</p><p>![image-20210114200503449](1.%20初探 VuePress.assets/b5bb02964e8a4d82b29e334a1fe2a0cetplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p>`,14)),p("blockquote",null,[p("p",null,[e[1]||(e[1]=s("这里的 cli 其实是npm包 ")),p("a",i,[e[0]||(e[0]=s("CAC")),r(n)]),e[2]||(e[2]=s(" (命令行工具)返回的操作实例，这里用到command、option、action 三个方法，执行逻辑在 action 中"))])]),e[11]||(e[11]=a('<p>暂时忽略命令行相关的预处理和后续处理操作，这里的重点关注 registerCoreCommands 这个方法，上面脚本中的 <code>vuepress dev docs</code> 和 <code>vuepress build docs</code> 的逻辑就在这里的 action 中：</p><p>![image-20210114201402659](1.%20初探 VuePress.assets/7cc8d36abd544200a5ad55855008f318tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>第 38 行开始就将运行方法作为参数放入 wrapcommand 准备执行，dev、build 都来自 node_modules/@vuepress 的 core 文件夹：</p><p>![image-20210114201607617](1.%20初探 VuePress.assets/ea1269c27294400c88f3e7eea448fd3dtplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>也就是说 node_modules/vuepress 其实只是个 CLI 壳子，而真正的 dev、build、eject 逻辑都在 node_modules/@vuepress 中！</p><p>接下来我们继续探究 @vuepress 内部的逻辑</p><h2 id="vuepress-探究" tabindex="-1"><a class="header-anchor" href="#vuepress-探究"><span>@vuepress 探究</span></a></h2><p>现在通过 node_modules/@vuepress 的代码来进一步了解：</p><p>![image-20210114211314418](1.%20初探 VuePress.assets/3c95125c147145baa331cedcec65f3d0tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>进入 @vuepress/core 的 index.js：</p><p>![image-20210114211430226](1.%20初探 VuePress.assets/89360f5dcee34d419d6711f98baa2073tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>在这里能看到对 dev 和 build 的预处理相同，都是通过 createApp() 创建一个 app，然后对 app 进行 process 处理， 但是之后 dev 和 build 就开始进入不同逻辑了.</p><h3 id="createapp" tabindex="-1"><a class="header-anchor" href="#createapp"><span>createApp</span></a></h3><p>createApp 就在 index.js 中，内部返回了 new App(options) 的结果，App类的构造器如下，主要负责环境判断和解析目录参数：</p><p>![image-20210114212219741](1.%20初探 VuePress.assets/4274383222ea4e538c0538ea6580051btplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>当然 App类携带了很多很多的方法，主最要的 process、dev、build 当然是都包括在内的.</p><h3 id="process" tabindex="-1"><a class="header-anchor" href="#process"><span>process</span></a></h3><p>process 则包含比较多功能，经过一番阅读后将每个阶段做的事情描述如下：</p><p>![截屏2021-01-14_下午11_22_44](1.%20初探 VuePress.assets/da60c0f2424a4da9b8c06be915ad564ctplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p>',19)),p("p",null,[e[4]||(e[4]=s("现在浏览器打开 ")),p("a",u,[e[3]||(e[3]=s("chrome://inspect/#devices")),r(n)]),e[5]||(e[5]=s("，然后运行 ")),e[6]||(e[6]=p("code",null,"yarn docs:dev",-1)),e[7]||(e[7]=s(" (直接运行 ")),e[8]||(e[8]=p("code",null,"npx --node-arg=--inspect vuepress dev --debug docs",-1)),e[9]||(e[9]=s(" 也行)，当 Remote Target 出现 Target 时 inspect 进到控制台："))]),e[12]||(e[12]=a("<p>![image-20210114224725966](1.%20初探 VuePress.assets/9a8fd35a36a94c93b995dee2ccebc575tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>进去之后应该什么都看不到，不慌，回刚刚代码的 process 函数里加上一行 debugger，然后重新运行 <code>yarn docs:dev</code>，现在回到调控制台就可以按照自己的需要调试了：</p><p>![image-20210114224939498](1.%20初探 VuePress.assets/a54474ab0b9f492fafa55a1cde624171tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>当执行完 118 行的 <code>await this.resolvePages()</code> 之后就可以看到 pages 添加了一个 Page，也就是我们最简网站的 README 文件中包含的 Hello VuePress.</p><p>![image-20210114225759622](1.%20初探 VuePress.assets/8be0d6b9032941d9851fde3a21602bf5tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>整个 process 函数走完之后，可以看到在 @vuepress/core 文件夹下生成了临时文件夹 .temp：</p><p>![image-20210114230232109](1.%20初探 VuePress.assets/a86ad7cd54ff4166b56e2565f6ce0165tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)</p><p>process 函数将项目资源 &amp; 配置进行解析，然后通过加载&amp;运行插件，最终生成了临时文件. <code>vuepress dev docs</code> 和 <code>vuepress build docs</code> 共享的逻辑就到此为止了.</p><p>接下来 <code>vuepress dev docs</code> 会通过引入 WebpackDevServer 来启动一个服务器， <code>vuepress build docs</code> 会根据 client &amp; server 的不同配置执行 Webpack 打包，最后还会做静态HTML渲染，这些内容会放在下一篇文章中，敬请期待~</p>",9))])}const k=o(l,[["render",v],["__file","1. 初探 VuePress.html.vue"]]),f=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/08.%20%E6%BA%90%E7%A0%81/%E6%BA%90%E7%A0%81/1.%20%E5%88%9D%E6%8E%A2%20VuePress.html","title":"初探 VuePress","lang":"zh-CN","frontmatter":{"description":"初探 VuePress 最简起步 首先按照 VuePress 的指导创建一个最小的网站： 接着打开 packjge.json 并添加本地调试 & 打包的命令： ok 这样最简单的准备就搞定了，不过我们暂时不急着调试，可以先来看看代码 CLI外壳 - vuepress 我们打开刚刚创建的项目的 node_modules，找到 vuepress 文件夹： ...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/08.%20%E6%BA%90%E7%A0%81/%E6%BA%90%E7%A0%81/1.%20%E5%88%9D%E6%8E%A2%20VuePress.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"初探 VuePress"}],["meta",{"property":"og:description","content":"初探 VuePress 最简起步 首先按照 VuePress 的指导创建一个最小的网站： 接着打开 packjge.json 并添加本地调试 & 打包的命令： ok 这样最简单的准备就搞定了，不过我们暂时不急着调试，可以先来看看代码 CLI外壳 - vuepress 我们打开刚刚创建的项目的 node_modules，找到 vuepress 文件夹： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初探 VuePress\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"初探 VuePress","slug":"初探-vuepress","link":"#初探-vuepress","children":[{"level":2,"title":"最简起步","slug":"最简起步","link":"#最简起步","children":[]},{"level":2,"title":"CLI外壳 - vuepress","slug":"cli外壳-vuepress","link":"#cli外壳-vuepress","children":[]},{"level":2,"title":"@vuepress 探究","slug":"vuepress-探究","link":"#vuepress-探究","children":[{"level":3,"title":"createApp","slug":"createapp","link":"#createapp","children":[]},{"level":3,"title":"process","slug":"process","link":"#process","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.32,"words":996},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/08. 源码/源码/1. 初探 VuePress.md","excerpt":"\\n<h2>最简起步</h2>\\n<p>首先按照 VuePress 的指导创建一个最小的网站：</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">mkdir</span> vuepress-ssr\\n<span class=\\"token builtin class-name\\">cd</span> vuepress-ssr\\n<span class=\\"token function\\">yarn</span> init <span class=\\"token parameter variable\\">-y</span>\\n<span class=\\"token function\\">yarn</span> <span class=\\"token function\\">add</span> <span class=\\"token parameter variable\\">-D</span> vuepress\\n<span class=\\"token function\\">mkdir</span> docs\\n<span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">'# Hello VuePress'</span> <span class=\\"token operator\\">&gt;</span> docs/README.md\\n</code></pre></div>","autoDesc":true}`);export{k as comp,f as data};
