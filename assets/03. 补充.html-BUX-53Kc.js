import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as c,c as l,a as n,b as s,d as e,e as t}from"./app-Y52ihg76.js";const i={},u=n("h1",{id:"插件开发补充",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插件开发补充"},[n("span",null,"插件开发补充")])],-1),r=n("h2",{id:"什么是插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是插件"},[n("span",null,"什么是插件？")])],-1),d=n("p",null,"插件是一种第三方应用程序，可让您根据自己的喜好扩展或修改 Obsidian。 通过构建插件，您可以：",-1),k=n("li",null,"扩展或修改用户界面。",-1),m={href:"https://marcus.se.net/obsidian-plugin-docs/vault",target:"_blank",rel:"noopener noreferrer"},v={href:"https://marcus.se.net/obsidian-plugin-docs/editor",target:"_blank",rel:"noopener noreferrer"},h={href:"https://marcus.se.net/obsidian-plugin-docs/examples/insert-link",target:"_blank",rel:"noopener noreferrer"},b=n("h2",{id:"插件生命周期",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插件生命周期"},[n("span",null,"插件生命周期")])],-1),g={href:"https://marcus.se.net/obsidian-plugin-docs/reference/typescript/classes/Component#onload",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"onload()",-1),f={href:"https://marcus.se.net/obsidian-plugin-docs/reference/typescript/classes/Component#onunload",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"onunload()",-1),E=t(`<h2 id="命令-addcommand" tabindex="-1"><a class="header-anchor" href="#命令-addcommand"><span>命令 <code>addCommand</code></span></a></h2><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Plugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;obsidian&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ExamplePlugin</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">onload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token string">&quot;print-greeting-to-console&quot;</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">&quot;Print greeting to console&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hey, you!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="条件命令-checkcallback" tabindex="-1"><a class="header-anchor" href="#条件命令-checkcallback"><span>条件命令 <code>checkCallback</code></span></a></h3>`,3),x={href:"https://marcus.se.net/obsidian-plugin-docs/reference/typescript/interfaces/Command#checkcallback",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"checkCallback",-1),C=t(`<p>这 <code>checkCallback</code>运行两次。 首先，执行初步检查以确定命令是否可以运行。 二是执行动作。</p><p>由于两次运行之间可能会经过时间，因此您需要在两次调用期间执行检查。</p><p>要确定回调是否应执行初步检查或操作，一个 <code>checking</code>参数传递给回调。</p><ul><li>如果 <code>checking</code>被设置为 <code>true</code>, 进行初步检查。</li><li>如果 <code>checking</code>被设置为 <code>false</code>, 执行一个动作。</li></ul><p>以下示例中的命令取决于所需的值。 在两次运行中，回调检查值是否存在，但仅在以下情况下执行操作 <code>checking</code>是 <code>false</code>.</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token string">&#39;example-command&#39;</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Example command&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">checkCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span>checking<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">getRequiredValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>checking<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">doCommand</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="editor命令" tabindex="-1"><a class="header-anchor" href="#editor命令"><span>Editor命令</span></a></h3>`,7),A={href:"https://marcus.se.net/obsidian-plugin-docs/reference/typescript/interfaces/Command#editorcallback",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"editorCallback",-1),V=t(`<div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token string">&#39;example-command&#39;</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Example command&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">editorCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span>editor<span class="token operator">:</span> Editor<span class="token punctuation">,</span> view<span class="token operator">:</span> MarkdownView<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> sel <span class="token operator">=</span> editor<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You have selected: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="热键" tabindex="-1"><a class="header-anchor" href="#热键"><span>热键</span></a></h3><p>在此示例中，用户可以通过同时按住 Ctrl（或 Mac 上的 Cmd）和 Shift，然后按下字母来运行命令 <code>a</code>在他们的键盘上。</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token string">&#39;example-command&#39;</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Example command&#39;</span><span class="token punctuation">,</span>
  hotkeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> modifiers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Mod&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Shift&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">&quot;a&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hey, you!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="库-vault" tabindex="-1"><a class="header-anchor" href="#库-vault"><span>库 <code>vault</code></span></a></h2>`,5),q={href:"https://help.obsidian.md/How+to/Working+with+multiple+vaults",target:"_blank",rel:"noopener noreferrer"},M=n("blockquote",null,[n("p",null,"Obsidian 中的每个笔记集合都称为 Vault。 保管库由一个文件夹和其中的所有子文件夹组成。")],-1),O={href:"https://marcus.se.net/obsidian-plugin-docs/reference/typescript/classes/Vault",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"Vault",-1),F=t(`<p>以下示例递归打印 Vault 中所有 Markdown 文件的路径：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span>vault<span class="token punctuation">.</span><span class="token function">getMarkdownFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TIPS</p>`,3),N=n("em",null,"所有",-1),j={href:"https://marcus.se.net/obsidian-plugin-docs/reference/typescript/classes/Vault#getfiles",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"getFiles()",-1),S=n("h3",{id:"读取文件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#读取文件"},[n("span",null,"读取文件")])],-1),T={href:"https://marcus.se.net/obsidian-plugin-docs/reference/typescript/classes/Vault#read",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"read()",-1),R={href:"https://marcus.se.net/obsidian-plugin-docs/reference/typescript/classes/Vault#cachedread",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"cachedRead()",-1),I=t(`<ul><li>如果只想向用户显示内容，则使用 <code>cachedRead()</code>避免多次从磁盘读取文件。</li><li>如果要读取内容，更改它，然后将其写回磁盘，则使用 <code>read()</code>以避免可能用陈旧的副本覆盖文件。</li></ul><p>信息</p><blockquote><p>之间的唯一区别 <code>cachedRead()</code>和 <code>read()</code>是在插件读取文件之前在 Obsidian 外部修改文件的时间。 一旦文件系统通知黑曜石文件已从外部更改， <code>cachedRead()</code>行为 <em>完全</em> 一样 <code>read()</code>. 同样，如果您将文件保存在 Obsidian 中，读取缓存也会被刷新。</p></blockquote><p>以下示例读取 Vault 中所有 Markdown 文件的内容并返回平均文档大小：</p><h2 id="执行顺序" tabindex="-1"><a class="header-anchor" href="#执行顺序"><span>执行顺序</span></a></h2><p>执行顺序（从上到下依次执行）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// async onload() {}</span>
<span class="token comment">// async onload() {} &gt; this.app.workspace.onLayoutReady(() =&gt; {});</span>
<span class="token comment">// ViewPlugin.fromClass(class {constructor(view: EditorView) {}}) // 执行多次，每个已经被打开的文档都会执行一次</span>
<span class="token comment">// ...</span>
<span class="token comment">// onunload() {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function Z(z,J){const a=p("ExternalLinkIcon");return c(),l("div",null,[u,r,d,n("ul",null,[k,n("li",null,[s("中编辑文件和文件夹 "),n("a",m,[s("在您的Vault "),e(a)]),s("。")]),n("li",null,[s("改进 "),n("a",v,[s("编辑器 "),e(a)]),s("以获得更好的笔记体验。")])]),n("p",null,[s("要查看插件的外观，请查看 "),n("a",h,[s("插入链接 "),e(a)]),s("示例。")]),b,n("ul",null,[n("li",null,[n("a",g,[_,e(a)]),s("每当用户开始使用 Obsidian 中的插件时运行。 您将在此处配置插件的大部分功能。")]),n("li",null,[n("a",f,[y,e(a)]),s("当插件被禁用时运行。 您的插件正在使用的任何资源都必须在此处释放，以避免在您的插件被禁用后影响 Obsidian 的性能。")])]),E,n("p",null,[s("如果您的命令只能在特定条件下运行，请考虑使用 "),n("a",x,[w,e(a)]),s("反而。")]),C,n("p",null,[s("如果您的命令需要访问编辑器，您还可以使用 "),n("a",A,[B,e(a)]),s("，它提供活动编辑器及其视图作为参数")]),V,n("p",null,[s("官方文档 "),n("a",q,[s("来自有关使用多个 Vault "),e(a)]),s("：")]),M,n("p",null,[s("虽然您的插件可以像任何其他 Node.js 应用程序一样访问文件系统，但 "),n("a",O,[P,e(a)]),s("模块旨在使在 Vault 中处理文件和文件夹变得更加容易。")]),F,n("blockquote",null,[n("p",null,[s("如果要列出 "),N,s(" 文件，而不仅仅是 Markdown 文档，请使用 "),n("a",j,[D,e(a)]),s("反而。")])]),S,n("p",null,[s("读取文件内容有两种方法： "),n("a",T,[L,e(a)]),s("和 "),n("a",R,[H,e(a)]),s(".")]),I])}const $=o(i,[["render",Z],["__file","03. 补充.html.vue"]]),G=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/Obsidian/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/03.%20%E8%A1%A5%E5%85%85.html","title":"插件开发补充","lang":"zh-CN","frontmatter":{"description":"插件开发补充 什么是插件？ 插件是一种第三方应用程序，可让您根据自己的喜好扩展或修改 Obsidian。 通过构建插件，您可以： 扩展或修改用户界面。 中编辑文件和文件夹 在您的Vault 。 改进 编辑器 以获得更好的笔记体验。 要查看插件的外观，请查看 插入链接 示例。 插件生命周期 onload()每当用户开始使用 Obsidian 中的插件时运...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/Obsidian/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/03.%20%E8%A1%A5%E5%85%85.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"插件开发补充"}],["meta",{"property":"og:description","content":"插件开发补充 什么是插件？ 插件是一种第三方应用程序，可让您根据自己的喜好扩展或修改 Obsidian。 通过构建插件，您可以： 扩展或修改用户界面。 中编辑文件和文件夹 在您的Vault 。 改进 编辑器 以获得更好的笔记体验。 要查看插件的外观，请查看 插入链接 示例。 插件生命周期 onload()每当用户开始使用 Obsidian 中的插件时运..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"插件开发补充\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"插件开发补充","slug":"插件开发补充","link":"#插件开发补充","children":[{"level":2,"title":"什么是插件？","slug":"什么是插件","link":"#什么是插件","children":[]},{"level":2,"title":"插件生命周期","slug":"插件生命周期","link":"#插件生命周期","children":[]},{"level":2,"title":"命令 addCommand","slug":"命令-addcommand","link":"#命令-addcommand","children":[{"level":3,"title":"条件命令 checkCallback","slug":"条件命令-checkcallback","link":"#条件命令-checkcallback","children":[]},{"level":3,"title":"Editor命令","slug":"editor命令","link":"#editor命令","children":[]},{"level":3,"title":"热键","slug":"热键","link":"#热键","children":[]}]},{"level":2,"title":"库 vault","slug":"库-vault","link":"#库-vault","children":[{"level":3,"title":"读取文件","slug":"读取文件","link":"#读取文件","children":[]}]},{"level":2,"title":"执行顺序","slug":"执行顺序","link":"#执行顺序","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.39,"words":1017},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/Obsidian/插件开发/03. 补充.md","autoDesc":true}');export{$ as comp,G as data};
