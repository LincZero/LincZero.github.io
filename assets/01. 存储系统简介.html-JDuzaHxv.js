import{_ as l,c as i,e as a,o as r}from"./app-DEUP2Tjk.js";const t="/assets/Image00055-CbVeL_xG.jpg",n="/assets/Image00060-BFftpJY9.jpg",o="/assets/Image00066-D9h4XK9G.jpg",s={};function m(c,e){return r(),i("div",null,e[0]||(e[0]=[a('<h1 id="存储系统简介" tabindex="-1"><a class="header-anchor" href="#存储系统简介"><span>存储系统简介</span></a></h1><p>一般而言，存储系统不仅仅指用于存储数据的<em>磁盘、磁带和光盘存储器等，还包括内存和CPU内部的Cache</em>。当处理完毕之后，系统还要提供数据存储的服务。存储系统的性能和系统的处理能力息息相关，如果CPU性能很好，处理速度很快，但是配备的存储系统吞吐率不够或者性能不够好，那CPU也只能处于忙等待，从而导致处理数据的能力下降。</p><p>接下来本章会讨论Cache和内存，对于磁盘和磁带等永久性存储系统，在此不作讨论。</p><h2 id="系统架构的演进" tabindex="-1"><a class="header-anchor" href="#系统架构的演进"><span>系统架构的演进</span></a></h2><p>在当今时代，一个处理器通常包含多个核心（Core），集成Cache子系统，内存子系统通过内部或外部总线与其通信。</p><h3 id="经典南北桥" tabindex="-1"><a class="header-anchor" href="#经典南北桥"><span>经典南北桥</span></a></h3><p>在经典计算机系统中一般都有两个标准化的部分：北桥和南桥。 它们是处理器和内存以及其他外设沟通的渠道。处理器和内存系统通过 前端总线 (FSB) 相连，当处理器需要读取或者写回数据时，就通过前端总线和内存控制器通信。图2-1给出了处理器、内存、南北桥以及其他总线之间的关系。</p><p>计算机系统中的南北桥示意图：</p><p><img src="'+t+'" alt="img" loading="lazy"></p><ul><li><strong>前端总线（Front Side Bus，FSB）</strong><ul><li>处理器和内存系统通过前端总线 (FSB) 相连</li><li>传统架构中所有的处理器共用一条前端总线与北桥相连</li></ul></li><li><strong>北桥（North Bridge），也称为主桥（Host Bridge）</strong><ul><li>主要用来处理高速信号，通常负责与处理器的联系，并控制内存AGP、PCI数据在北桥内部传输。而北桥中往往集成了一个内存控制器，根据不同的内存，比如SRAM、DRAM、SDRAM，集成的内存控制器也不一样。</li><li>（最近几年英特尔的处理器已经把内存控制器集成到了处理器内部，仅几年的主板一般没北桥了）</li></ul></li><li><strong>南桥（South Bridge），也称为IO桥（IO bridge）</strong><ul><li>负责I/O总线之间的通信，比如PCI总线、SATA、USB等，可以连接光驱、硬盘、键盘灯设备交换数据。</li></ul></li></ul><blockquote><p>缺点</p><p>在这种系统中，<em>所有的数据交换都需要通过北桥</em>：</p><ol><li>处理器访问内存需要通过北桥。</li><li>处理器访问所有的外设都需要通过北桥。</li><li>处理器之间的数据交换也需要通过北桥。</li><li>挂在南桥的所有设备访问内存也需要通过北桥。</li></ol><p>可以看出，这种系统的<strong>瓶颈就在北桥中</strong>。当北桥出现拥塞时，所有的设备和处理器都要瘫痪。这种系统设计的另外一个瓶颈体现在对内存的访问上。不管是处理器或者显卡，还是南桥的硬盘、网卡或者光驱，都需要频繁访问内存，当这些设备都争相访问内存时，增大了对北桥带宽的竞争，而且北桥到内存之间也只有一条总线。</p></blockquote><h3 id="复杂南北桥-独立出内存控制器" tabindex="-1"><a class="header-anchor" href="#复杂南北桥-独立出内存控制器"><span>复杂南北桥 - 独立出内存控制器</span></a></h3><p>更为复杂的南北桥示意图：</p><p><img src="'+n+'" alt="img" loading="lazy"></p><ul><li>特点 <ul><li>为了改善对内存的访问瓶颈，出现了另外一种系统设计，内存控制器并没有被集成在北桥中，而是被单独隔离出来以协调北桥与某个相应的内存之间的交互，如图2-2所示。</li></ul></li><li>优点 <ul><li>这样的话，北桥可以和多个内存相连。图2-2所示的这种架构增加了内存的访问带宽，缓解了不同设备对同一内存访问的拥塞问题，</li></ul></li><li>缺点 <ul><li>但是却没有改进单一北桥芯片的瓶颈的问题。为了解决这个瓶颈，产生了如图2-3所示的 NUMA 系统。</li></ul></li></ul><h3 id="numa-non-uniform-memory-architecture-非一致性内存架构-系统" tabindex="-1"><a class="header-anchor" href="#numa-non-uniform-memory-architecture-非一致性内存架构-系统"><span>NUMA（Non-Uniform Memory Architecture，非一致性内存架构）系统</span></a></h3><p><img src="'+o+'" alt="img" loading="lazy"></p><ul><li>特点 <ul><li>和之前的一个很明显的区别在于：<strong>北桥消失了</strong></li></ul></li><li>优点 <ul><li>在这种架构下，在一个配有四核的机器中，<em>不需要一个复杂的北桥就能将内存带宽增加到以前的四倍</em>。</li></ul></li><li>缺点 <ul><li>当然，这样的架构也存在缺点。该系统中，访问内存所花的时间和处理器相关。之所以和处理器相关是因为该系统每个处理器都有本地内存（Local memory），访问本地内存的时间很短，而访问远程内存（remote memory），即其他处理器的本地内存，需要通过额外的总线！ <em>对于某个处理器来说，当其要访问其他的内存时，轻者要经过另外一个处理器，重者要经过2个处理器</em>，才能达到访问非本地内存的目的，因此内存与处理器的“距离”不同，访问的时间也有所差异，对于NUMA，后续章节会给出更详细的介绍。</li></ul></li></ul><h3 id="【扩展】南北桥芯片的消失" tabindex="-1"><a class="header-anchor" href="#【扩展】南北桥芯片的消失"><span>【扩展】南北桥芯片的消失</span></a></h3><p>补充 by Linc：</p><p>在前面的例子中，我们可以发现 NUMA 架构下北桥的消失。实际上北桥和南桥中越来越多的功能在被CPU上实现。</p><p>详见 “Computer/计算机组成/南北桥芯片的消失” 部分的笔记，北桥和南桥都是可以没有的</p><h2 id="内存子系统" tabindex="-1"><a class="header-anchor" href="#内存子系统"><span>内存子系统</span></a></h2><h3 id="内存相关的常用用语" tabindex="-1"><a class="header-anchor" href="#内存相关的常用用语"><span>内存相关的常用用语</span></a></h3><p>为了了解内存子系统，首先需要解释一下和内存相关的常用用语：</p><ol><li><strong>RAM</strong>（Random Access Memory）：随机访问存储器</li><li><strong>SRAM</strong>（Static RAM）：静态随机访问存储器</li><li><strong>DRAM</strong>（Dynamic RAM）：动态随机访问存储器</li><li><strong>SDRAM</strong>（Synchronous DRAM）：同步动态随机访问存储器</li><li><strong>DDR</strong>（DDR-SRAM，Double Data Rate SDRAM）：双数据速率SDRAM <ul><li>DDR2：第二代DDR</li><li>DDR3：第三代DDR</li><li>DDR4：第四代DDR</li></ul></li></ol><h3 id="sram-static-ram-静态ram" tabindex="-1"><a class="header-anchor" href="#sram-static-ram-静态ram"><span>SRAM（Static RAM，静态RAM）</span></a></h3><ul><li>原理：SRAM内部有一块<em>芯片结构</em>维持信息</li><li>优点：通常非常快</li><li>缺点：成本相对DRAM很高，应用时容量不会很大，因而不能作用系统的主要内存</li><li>场景：一般处理器内部的<em>Cache</em>就是采用SRAM</li></ul><h3 id="dram-dynamic-ram-动态ram-已被淘汰" tabindex="-1"><a class="header-anchor" href="#dram-dynamic-ram-动态ram-已被淘汰"><span>DRAM（Dynamic RAM，动态RAM）（已被淘汰）</span></a></h3><ul><li>原理：动态表示信息是存储在集成电路的<em>电容器</em>内的，由于电容器会自动放电，为了避免数据丢失，需要定期充电。通常，内存控制器会负责定期充电的操作。</li><li>缺点：不过随着更好技术的提出，该技术已经被淘汰</li><li>场景：系统的<em>主要内存</em></li></ul><h3 id="sdram-synchronous-dram-同步动态ram" tabindex="-1"><a class="header-anchor" href="#sdram-synchronous-dram-同步动态ram"><span>SDRAM（Synchronous DRAM，同步动态RAM）</span></a></h3><ul><li>原理 <ul><li><strong>同步时钟</strong>：一般DRAM都是采用异步时钟进行同步，而SDRAM则是采用<em>同步时钟</em>进行同步。</li><li><strong>共享时钟</strong>：通常，采用SDRAM结构的系统会使处理器和内存通过一个相同的时钟锁在一起，从而使<em>处理器和内存能够共享一个时钟周期</em>，以相同的速度同步工作。该时钟会驱动一个内部的有限状态机，能够采用流水线的方式处理多个读写请求。</li><li><strong>分布式架构</strong>：SDRAM采用分布式架构，内含多个存储块（Bank），在一个时钟周期内，它能够独立地访问每个存储块，从而可以多次进行读写操作，增加了内存系统的吞吐率。</li></ul></li><li>优点：SDRAM技术广泛用在计算机行业中，随着该技术的提出，又出现了DDR（也称为DDR1），DDR2，DDR3。最新的DDR4技术标准也在2014年下半年发布。</li><li>场景：系统的<em>主要内存</em></li></ul>',32)]))}const p=l(s,[["render",m],["__file","01. 存储系统简介.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8ANFV%E7%9A%84%E5%9F%BA%E7%9F%B3_%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BADPDK%E3%80%8B/02.%20Cache%E5%92%8C%E5%86%85%E5%AD%98/01.%20%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B.html","title":"存储系统简介","lang":"zh-CN","frontmatter":{"description":"存储系统简介 一般而言，存储系统不仅仅指用于存储数据的磁盘、磁带和光盘存储器等，还包括内存和CPU内部的Cache。当处理完毕之后，系统还要提供数据存储的服务。存储系统的性能和系统的处理能力息息相关，如果CPU性能很好，处理速度很快，但是配备的存储系统吞吐率不够或者性能不够好，那CPU也只能处于忙等待，从而导致处理数据的能力下降。 接下来本章会讨论Ca...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8ANFV%E7%9A%84%E5%9F%BA%E7%9F%B3_%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BADPDK%E3%80%8B/02.%20Cache%E5%92%8C%E5%86%85%E5%AD%98/01.%20%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"存储系统简介"}],["meta",{"property":"og:description","content":"存储系统简介 一般而言，存储系统不仅仅指用于存储数据的磁盘、磁带和光盘存储器等，还包括内存和CPU内部的Cache。当处理完毕之后，系统还要提供数据存储的服务。存储系统的性能和系统的处理能力息息相关，如果CPU性能很好，处理速度很快，但是配备的存储系统吞吐率不够或者性能不够好，那CPU也只能处于忙等待，从而导致处理数据的能力下降。 接下来本章会讨论Ca..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"存储系统简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"存储系统简介","slug":"存储系统简介","link":"#存储系统简介","children":[{"level":2,"title":"系统架构的演进","slug":"系统架构的演进","link":"#系统架构的演进","children":[{"level":3,"title":"经典南北桥","slug":"经典南北桥","link":"#经典南北桥","children":[]},{"level":3,"title":"复杂南北桥 - 独立出内存控制器","slug":"复杂南北桥-独立出内存控制器","link":"#复杂南北桥-独立出内存控制器","children":[]},{"level":3,"title":"NUMA（Non-Uniform Memory Architecture，非一致性内存架构）系统","slug":"numa-non-uniform-memory-architecture-非一致性内存架构-系统","link":"#numa-non-uniform-memory-architecture-非一致性内存架构-系统","children":[]},{"level":3,"title":"【扩展】南北桥芯片的消失","slug":"【扩展】南北桥芯片的消失","link":"#【扩展】南北桥芯片的消失","children":[]}]},{"level":2,"title":"内存子系统","slug":"内存子系统","link":"#内存子系统","children":[{"level":3,"title":"内存相关的常用用语","slug":"内存相关的常用用语","link":"#内存相关的常用用语","children":[]},{"level":3,"title":"SRAM（Static RAM，静态RAM）","slug":"sram-static-ram-静态ram","link":"#sram-static-ram-静态ram","children":[]},{"level":3,"title":"DRAM（Dynamic RAM，动态RAM）（已被淘汰）","slug":"dram-dynamic-ram-动态ram-已被淘汰","link":"#dram-dynamic-ram-动态ram-已被淘汰","children":[]},{"level":3,"title":"SDRAM（Synchronous DRAM，同步动态RAM）","slug":"sdram-synchronous-dram-同步动态ram","link":"#sdram-synchronous-dram-同步动态ram","children":[]}]}]}],"git":{},"readingTime":{"minutes":6.57,"words":1971},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《NFV的基石_深入浅出DPDK》/02. Cache和内存/01. 存储系统简介.md","excerpt":"\\n<p>一般而言，存储系统不仅仅指用于存储数据的<em>磁盘、磁带和光盘存储器等，还包括内存和CPU内部的Cache</em>。当处理完毕之后，系统还要提供数据存储的服务。存储系统的性能和系统的处理能力息息相关，如果CPU性能很好，处理速度很快，但是配备的存储系统吞吐率不够或者性能不够好，那CPU也只能处于忙等待，从而导致处理数据的能力下降。</p>\\n<p>接下来本章会讨论Cache和内存，对于磁盘和磁带等永久性存储系统，在此不作讨论。</p>\\n<h2>系统架构的演进</h2>\\n<p>在当今时代，一个处理器通常包含多个核心（Core），集成Cache子系统，内存子系统通过内部或外部总线与其通信。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《NFV的基石_深入浅出DPDK》/02. Cache和内存/01. 存储系统简介.md","value":{"title":"01. 存储系统简介","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《NFV的基石_深入浅出DPDK》/02. Cache和内存/01. 存储系统简介.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,d as data};
