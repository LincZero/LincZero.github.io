import{_ as t,e as p,g as i,o as r}from"./app-BapqMaOt.js";const E={};function n(l,e){return r(),p("div",null,e[0]||(e[0]=[i("<ul><li><p>trace_print()</p><p>一个简单的内核工具，用于 printf() 到公共trace_pipe (/sys/kernel/debug/tracing/trace_pipe)。<br> 这对于一些快速示例来说是可以的，但有<strong>限制</strong>：</p><ul><li>最多 3 个参数</li><li>仅限 1 %s</li><li>并且 trace_pipe 是全局共享的，因此并发程序将产生冲突的输出</li></ul></li><li><p>b.trace_fields()</p><p>从trace_pipe返回一组固定的字段</p></li><li><p>BPF_PERF_OUTPUT()</p><p>建议使用</p></li></ul><p>trace_fields() 与 trace_print() 类似，这对于黑客攻击来说很方便，但对于真正的工具，我们应该切换到BPF_PERF_OUTPUT()</p>",2)]))}const B=t(E,[["render",n],["__file","【原创】对比BPF的输出工具.html.vue"]]),a=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/%E5%8E%9F%E5%88%9B/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E5%AF%B9%E6%AF%94BPF%E7%9A%84%E8%BE%93%E5%87%BA%E5%B7%A5%E5%85%B7.html","title":"【原创】对比BPF的输出工具","lang":"zh-CN","frontmatter":{"description":"trace_print() 一个简单的内核工具，用于 printf() 到公共trace_pipe (/sys/kernel/debug/tracing/trace_pipe)。 这对于一些快速示例来说是可以的，但有限制： 最多 3 个参数 仅限 1 %s 并且 trace_pipe 是全局共享的，因此并发程序将产生冲突的输出 b.trace_fiel...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/%E5%8E%9F%E5%88%9B/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E5%AF%B9%E6%AF%94BPF%E7%9A%84%E8%BE%93%E5%87%BA%E5%B7%A5%E5%85%B7.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:description","content":"trace_print() 一个简单的内核工具，用于 printf() 到公共trace_pipe (/sys/kernel/debug/tracing/trace_pipe)。 这对于一些快速示例来说是可以的，但有限制： 最多 3 个参数 仅限 1 %s 并且 trace_pipe 是全局共享的，因此并发程序将产生冲突的输出 b.trace_fiel..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.4,"words":120},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/原创/【原创】对比BPF的输出工具.md","excerpt":"<ul>\\n<li>\\n<p>trace_print()</p>\\n<p>一个简单的内核工具，用于 printf() 到公共trace_pipe  (/sys/kernel/debug/tracing/trace_pipe)。<br>\\n这对于一些快速示例来说是可以的，但有<strong>限制</strong>：</p>\\n<ul>\\n<li>最多 3 个参数</li>\\n<li>仅限 1 %s</li>\\n<li>并且 trace_pipe 是全局共享的，因此并发程序将产生冲突的输出</li>\\n</ul>\\n</li>\\n<li>\\n<p>b.trace_fields()</p>\\n<p>从trace_pipe返回一组固定的字段</p>\\n</li>\\n<li>\\n<p>BPF_PERF_OUTPUT()</p>\\n<p>建议使用</p>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/原创/【原创】对比BPF的输出工具.md","value":{"title":"【原创】对比BPF的输出工具","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/原创/【原创】对比BPF的输出工具.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{B as comp,a as data};
