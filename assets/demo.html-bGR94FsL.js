import{_ as s,c as a,e as t,o as e}from"./app-CgN_bpaE.js";const p={};function o(c,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h1 id="杂项" tabindex="-1"><a class="header-anchor" href="#杂项"><span>杂项</span></a></h1><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>demo</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    
    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">INPUT_TYPES</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;required&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            
            
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
 
    RETURN_TYPES <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    RETURN_NAMES <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
 
    FUNCTION <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span>
 
    <span class="token comment">#OUTPUT_NODE = False</span>
 
    CATEGORY <span class="token operator">=</span> <span class="token string">&quot;image/mynode2&quot;</span>
 
    <span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
 
 
<span class="token comment"># 包含要导出的所有节点及其名称的字典</span>
<span class="token comment"># NOTE: 名称应该是全局唯一的</span>
NODE_CLASS_MAPPINGS <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;MyNode&quot;</span><span class="token punctuation">:</span> MyNode
<span class="token punctuation">}</span>
 
<span class="token comment"># 包含节点的友好/人类可读标题的字典</span>
NODE_DISPLAY_NAME_MAPPINGS <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;FirstNode&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;My First Node&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">NodeKO</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    
    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">INPUT_TYPES</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;required&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">&quot;STRING&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Hey Hey!&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;text2&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">&quot;STRING&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;forceInput&quot;</span> <span class="token boolean">True</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>               
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
 
    RETURN_TYPES <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;STRING&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;INT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FLOAT&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;LATENT&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;CONDITIONING&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;IMAGE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MODEL&quot;</span><span class="token punctuation">)</span>
    RETURN_NAMES <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;TxtO&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;IntO&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FloatO&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Latent output. Really cool, huh?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A condition&quot;</span> <span class="token punctuation">,</span> <span class="token string">&quot;Our image.&quot;</span> <span class="token punctuation">,</span> <span class="token string">&quot;Mo mo modell!!!&quot;</span><span class="token punctuation">)</span>
 
    FUNCTION <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span>
 
    <span class="token comment">#OUTPUT_NODE = False</span>
 
    CATEGORY <span class="token operator">=</span> <span class="token string">&quot;nodeKO&quot;</span>
 
    <span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
 
 
<span class="token comment"># A dictionary that contains all nodes you want to export with their names</span>
<span class="token comment"># NOTE: names should be globally unique</span>
NODE_CLASS_MAPPINGS <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;My KO Node&quot;</span><span class="token punctuation">:</span> MyNode
<span class="token punctuation">}</span>
 
<span class="token comment"># A dictionary that contains the friendly/humanly readable titles for the nodes</span>
NODE_DISPLAY_NAME_MAPPINGS <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;FirstNode&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;My First Node&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)]))}const l=s(p,[["render",o],["__file","demo.html.vue"]]),u=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/Plugin_ComfyUI/%E6%9D%82%E9%A1%B9/demo.html","title":"杂项","lang":"zh-CN","frontmatter":{"description":"杂项 demo","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/Plugin_ComfyUI/%E6%9D%82%E9%A1%B9/demo.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"杂项"}],["meta",{"property":"og:description","content":"杂项 demo"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"杂项\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"杂项","slug":"杂项","link":"#杂项","children":[{"level":2,"title":"demo","slug":"demo","link":"#demo","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.59,"words":177},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Plugin_ComfyUI/杂项/demo.md","excerpt":"\\n<h2>demo</h2>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyNode</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__init__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">pass</span>\\n    \\n    <span class=\\"token decorator annotation punctuation\\">@classmethod</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">INPUT_TYPES</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token string\\">\\"required\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>\\n            \\n            \\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">}</span>\\n \\n    RETURN_TYPES <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    RETURN_NAMES <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n \\n    FUNCTION <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"test\\"</span>\\n \\n    <span class=\\"token comment\\">#OUTPUT_NODE = False</span>\\n \\n    CATEGORY <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"image/mynode2\\"</span>\\n \\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">test</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n \\n \\n<span class=\\"token comment\\"># 包含要导出的所有节点及其名称的字典</span>\\n<span class=\\"token comment\\"># NOTE: 名称应该是全局唯一的</span>\\nNODE_CLASS_MAPPINGS <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token string\\">\\"MyNode\\"</span><span class=\\"token punctuation\\">:</span> MyNode\\n<span class=\\"token punctuation\\">}</span>\\n \\n<span class=\\"token comment\\"># 包含节点的友好/人类可读标题的字典</span>\\nNODE_DISPLAY_NAME_MAPPINGS <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token string\\">\\"FirstNode\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"My First Node\\"</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{l as comp,u as data};
