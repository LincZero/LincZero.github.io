import{_ as n,c as s,b as t,o as e}from"./app-LWUC7FDp.js";const p={};function c(o,a){return e(),s("div",null,a[0]||(a[0]=[t(`<p>（ES5/ES6）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token constant">A</span><span class="token operator">?</span><span class="token constant">B</span><span class="token operator">:</span><span class="token constant">C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="循环" tabindex="-1"><a class="header-anchor" href="#循环"><span>循环</span></a></h2><h3 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>JavaScript</span></a></h3><h4 id="for循环" tabindex="-1"><a class="header-anchor" href="#for循环"><span>for循环</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> statement<span class="token punctuation">;</span>			<span class="token comment">// for</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach"><span>forEach</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">/**/</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// foreach，回调匿名函数</span>
array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token comment">/**/</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>				<span class="token comment">// foreach，回调箭头函数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="高级循环-filter、map、reduce" tabindex="-1"><a class="header-anchor" href="#高级循环-filter、map、reduce"><span>高级循环（filter、map、reduce）</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token parameter">e</span><span class="token operator">=&gt;</span>e<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>					<span class="token comment">// filter	[3]		返回布尔，可简写return</span>
array<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token operator">*</span>e<span class="token punctuation">}</span><span class="token punctuation">)</span>				<span class="token comment">// map		[1,4,9]	映射</span>
array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> pre<span class="token operator">+</span>next<span class="token punctuation">}</span><span class="token punctuation">)</span>	<span class="token comment">// reduce	6		将返回值重新赋值给pre</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="一些写过的高级循环" tabindex="-1"><a class="header-anchor" href="#一些写过的高级循环"><span>一些写过的高级循环</span></a></h4><p>Obsidian插件dataviewjs的一个</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// \`\`\`dataviewjs</span>
<span class="token keyword">let</span> pages <span class="token operator">=</span> dv<span class="token punctuation">.</span><span class="token function">pages</span><span class="token punctuation">(</span><span class="token string">&quot;#book&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

dv<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;File&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;alias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;从属于&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pages
	 <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">b</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		 <span class="token comment">// return &quot;#并夕夕&quot; == (b.从属于[1]) // 筛选以ck结尾的tag</span>
		 <span class="token keyword">return</span> b<span class="token punctuation">.</span>从属于<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;#并夕夕&quot;</span><span class="token punctuation">)</span>
	 <span class="token punctuation">}</span><span class="token punctuation">)</span>
	 <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">b</span> <span class="token operator">=&gt;</span> 
		 <span class="token punctuation">[</span>b<span class="token punctuation">.</span>file<span class="token punctuation">.</span>link<span class="token punctuation">,</span> b<span class="token punctuation">.</span>tag<span class="token punctuation">,</span> b<span class="token punctuation">.</span>alias<span class="token punctuation">,</span> b<span class="token punctuation">.</span>从属于<span class="token punctuation">]</span>
	 <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="javascript-query" tabindex="-1"><a class="header-anchor" href="#javascript-query"><span>JavaScript Query</span></a></h3>`,14)]))}const l=n(p,[["render",c],["__file","01. 结构 - 结构化编程.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/JavaScript/04.%20%E4%BC%98%E5%8C%96/01.%20%E7%BB%93%E6%9E%84%20-%20%E7%BB%93%E6%9E%84%E5%8C%96%E7%BC%96%E7%A8%8B.html","title":"","lang":"zh-CN","frontmatter":{"description":"（ES5/ES6） 循环 JavaScript for循环 forEach 高级循环（filter、map、reduce） 一些写过的高级循环 Obsidian插件dataviewjs的一个 JavaScript Query","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/JavaScript/04.%20%E4%BC%98%E5%8C%96/01.%20%E7%BB%93%E6%9E%84%20-%20%E7%BB%93%E6%9E%84%E5%8C%96%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:description","content":"（ES5/ES6） 循环 JavaScript for循环 forEach 高级循环（filter、map、reduce） 一些写过的高级循环 Obsidian插件dataviewjs的一个 JavaScript Query"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":2,"title":"循环","slug":"循环","link":"#循环","children":[{"level":3,"title":"JavaScript","slug":"javascript","link":"#javascript","children":[{"level":4,"title":"for循环","slug":"for循环","link":"#for循环","children":[]},{"level":4,"title":"forEach","slug":"foreach","link":"#foreach","children":[]},{"level":4,"title":"高级循环（filter、map、reduce）","slug":"高级循环-filter、map、reduce","link":"#高级循环-filter、map、reduce","children":[]},{"level":4,"title":"一些写过的高级循环","slug":"一些写过的高级循环","link":"#一些写过的高级循环","children":[]}]},{"level":3,"title":"JavaScript Query","slug":"javascript-query","link":"#javascript-query","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.61,"words":182},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/JavaScript/04. 优化/01. 结构 - 结构化编程.md","excerpt":"<p>（ES5/ES6）</p>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token constant\\">A</span><span class=\\"token operator\\">?</span><span class=\\"token constant\\">B</span><span class=\\"token operator\\">:</span><span class=\\"token constant\\">C</span>\\n</code></pre></div>","autoDesc":true}');export{l as comp,r as data};
