import{_ as s,c as a,e,o as t}from"./app-CR1DZRQy.js";const p={};function c(o,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="cmakelists-子项目问题" tabindex="-1"><a class="header-anchor" href="#cmakelists-子项目问题"><span>CMakeLists 子项目问题</span></a></h1><h2 id="关键语法" tabindex="-1"><a class="header-anchor" href="#关键语法"><span>关键语法</span></a></h2><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><pre class="language-cmake"><code><span class="token keyword">add_subdirectory</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="实战举例-tsdb" tabindex="-1"><a class="header-anchor" href="#实战举例-tsdb"><span>实战举例 - TSDB</span></a></h2><p>/CMakeLists.txt</p><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><pre class="language-cmake"><code><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.5</span><span class="token punctuation">)</span>
<span class="token keyword">project</span><span class="token punctuation">(</span>TimeSeriesDB C<span class="token punctuation">)</span>

<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_C_STANDARD</span> <span class="token number">11</span><span class="token punctuation">)</span>

<span class="token comment"># Install路径</span>
<span class="token comment"># 这里的相对路径是相对与build文件夹的。这里就在当前项目生成，就不生成到系统路径上了</span>
<span class="token comment"># 另外不知道为什么，这个设置放不进子CMakeLists.txt里，放进去的路径是不对了</span>
<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_INSTALL_PREFIX</span> <span class="token string">&quot;../&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 添加子项目</span>
<span class="token keyword">add_subdirectory</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
<span class="token keyword">add_subdirectory</span><span class="token punctuation">(</span>examples<span class="token punctuation">)</span>
<span class="token keyword">add_subdirectory</span><span class="token punctuation">(</span>tests<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/src/CMakeLists.txt</p><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><pre class="language-cmake"><code><span class="token comment"># 编译静态库</span>
<span class="token keyword">file</span><span class="token punctuation">(</span>GLOB TSDB_SRC *.c *.cpp<span class="token punctuation">)</span> <span class="token comment"># 抓取当前目录下的所有.c文件</span>
<span class="token keyword">add_library</span><span class="token punctuation">(</span>TSDB <span class="token punctuation">\${</span>TSDB_SRC<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">set_target_properties</span><span class="token punctuation">(</span>TSDB <span class="token namespace">PROPERTIES</span>
    <span class="token comment"># set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \${CMAKE_BINARY_DIR}/lib)</span>
    <span class="token property">ARCHIVE_OUTPUT_DIRECTORY</span> <span class="token punctuation">\${</span><span class="token variable">CMAKE_BINARY_DIR</span><span class="token punctuation">}</span>/lib
<span class="token punctuation">)</span>

<span class="token comment"># Install路径</span>
<span class="token comment"># 这里的相对路径是相对与build文件夹的。这里就在当前项目生成，就不生成到系统路径上了</span>
<span class="token comment"># 另外不知道为什么，这个设置放不进子CMakeLists.txt里，放进去的路径是不对了</span>
<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_INSTALL_PREFIX</span> <span class="token string">&quot;../&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 库安装以及依赖生成 (包括: 库、头文件依赖)</span>
<span class="token keyword">install</span><span class="token punctuation">(</span>DIRECTORY ./ DESTINATION include
        FILES_MATCHING PATTERN <span class="token string">&quot;*.h&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">install</span><span class="token punctuation">(</span>TARGETS TSDB DESTINATION lib<span class="token punctuation">)</span>
<span class="token comment"># file(GLOB HEADER_FILES &quot;src/*.h&quot;) # 旧版，不能递归</span>
<span class="token comment"># install(FILES \${HEADER_FILES} DESTINATION include) # 旧版，不能递归</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/examples/CMakeLists.txt</p><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><pre class="language-cmake"><code><span class="token keyword">add_executable</span><span class="token punctuation">(</span>Example ./example.c<span class="token punctuation">)</span>

<span class="token comment"># 依赖相关</span>
<span class="token keyword">add_dependencies</span><span class="token punctuation">(</span>Example TSDB<span class="token punctuation">)</span> <span class="token comment"># 库依赖</span>
<span class="token keyword">include_directories</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_SOURCE_DIR</span><span class="token punctuation">}</span>/include<span class="token punctuation">)</span> <span class="token comment"># 头文件依赖</span>
<span class="token comment"># target_link_libraries(Example PRIVATE TSDB) # 链接TSDB库</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>Example <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_SOURCE_DIR</span><span class="token punctuation">}</span>/lib/libTSDB.a<span class="token punctuation">)</span> <span class="token comment"># 链接TSDB库 (相对路径版)</span>

<span class="token comment"># 生成输出</span>
<span class="token keyword">set_target_properties</span><span class="token punctuation">(</span>Example <span class="token namespace">PROPERTIES</span>
    <span class="token comment"># set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \${CMAKE_BINARY_DIR}/build)</span>
    <span class="token property">RUNTIME_OUTPUT_DIRECTORY</span> <span class="token punctuation">\${</span><span class="token variable">CMAKE_BINARY_DIR</span><span class="token punctuation">}</span>/examples
<span class="token punctuation">)</span>
<span class="token keyword">install</span><span class="token punctuation">(</span>TARGETS Example DESTINATION bin<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/tests/CmakeLists.txt</p><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><pre class="language-cmake"><code><span class="token comment"># 编译单元测试程序</span>
<span class="token comment"># include_directories(\${PROJECT_SOURCE_DIR}/include) # 头文件依赖</span>
<span class="token comment"># add_dependencies(Test TSDB) # 库依赖</span>
<span class="token comment">#</span>
<span class="token comment"># enable_testing() # 开启CTest测试系统</span>
<span class="token comment"># add_executable(test_library tests/test_library.c)</span>
<span class="token comment"># target_link_libraries(test_library PRIVATE TimeSeriesDB)</span>
<span class="token comment"># add_test(NAME LibraryTest COMMAND test_library) # 添加测试</span>
<span class="token comment"># set_target_properties(test_library PROPERTIES</span>
<span class="token comment">#     RUNTIME_OUTPUT_DIRECTORY \${CMAKE_BINARY_DIR}/example</span>
<span class="token comment"># )</span>

<span class="token comment">#############################################</span>

<span class="token keyword">enable_testing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 开启CTest测试系统</span>
<span class="token keyword">add_executable</span><span class="token punctuation">(</span>Test ./test.c<span class="token punctuation">)</span>

<span class="token comment"># 依赖相关</span>
<span class="token keyword">add_dependencies</span><span class="token punctuation">(</span>Test TSDB<span class="token punctuation">)</span> <span class="token comment"># 库依赖</span>
<span class="token keyword">include_directories</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_SOURCE_DIR</span><span class="token punctuation">}</span>/include<span class="token punctuation">)</span> <span class="token comment"># 头文件依赖</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>Test <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_SOURCE_DIR</span><span class="token punctuation">}</span>/lib/libTSDB.a<span class="token punctuation">)</span> <span class="token comment"># 链接TSDB库</span>

<span class="token comment"># 生成输出</span>
<span class="token keyword">set_target_properties</span><span class="token punctuation">(</span>Example <span class="token namespace">PROPERTIES</span>
        <span class="token property">RUNTIME_OUTPUT_DIRECTORY</span> <span class="token punctuation">\${</span><span class="token variable">CMAKE_BINARY_DIR</span><span class="token punctuation">}</span>/test
        <span class="token punctuation">)</span>
<span class="token keyword">install</span><span class="token punctuation">(</span>TARGETS Test DESTINATION bin<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实战举例-recorder" tabindex="-1"><a class="header-anchor" href="#实战举例-recorder"><span>实战举例 - Recorder</span></a></h2><p>/CMakeLists.txt</p><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><pre class="language-cmake"><code><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.5</span><span class="token punctuation">)</span>

<span class="token comment"># 使用缓存节省编译时间</span>
<span class="token keyword">find_program</span><span class="token punctuation">(</span>CCACHE_FOUND ccache<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>CCACHE_FOUND<span class="token punctuation">)</span>
    <span class="token keyword">set_property</span><span class="token punctuation">(</span>GLOBAL PROPERTY <span class="token property">RULE_LAUNCH_COMPILE</span> ccache<span class="token punctuation">)</span>
    <span class="token keyword">set_property</span><span class="token punctuation">(</span>GLOBAL PROPERTY <span class="token property">RULE_LAUNCH_LINK</span> ccache<span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">PROJECT_NAME</span> recorder<span class="token punctuation">)</span>

<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">PROJECT_VERSION</span> <span class="token number">4.2.7</span><span class="token punctuation">)</span>

<span class="token comment"># 项目名和版本号</span>
<span class="token keyword">project</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token property">VERSION</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_VERSION</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment"># c++11 (最低g++-4.8)</span>
<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_CXX_STANDARD</span> <span class="token number">11</span><span class="token punctuation">)</span>
<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_C_STANDARD</span> <span class="token number">11</span><span class="token punctuation">)</span>

<span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_MODULE_PATH</span> <span class="token string">&quot;<span class="token interpolation"><span class="token punctuation">\${</span><span class="token variable">CMAKE_CURRENT_SOURCE_DIR</span><span class="token punctuation">}</span></span>/cmake;<span class="token interpolation"><span class="token punctuation">\${</span><span class="token variable">CMAKE_MODULE_PATH</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">include</span><span class="token punctuation">(</span>utils<span class="token punctuation">)</span>

<span class="token comment"># Checks for header files</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;stdbool.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;stdint.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;stdatomic.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;sys/types.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;sys/stat.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;sys/time.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;fcntl.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;pthread.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;endian.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_header</span><span class="token punctuation">(</span><span class="token string">&quot;sys/endian.h&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Checks for functions</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">NOT</span> <span class="token variable">MSVC</span><span class="token punctuation">)</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_REQUIRED_LIBRARIES</span> <span class="token string">&quot;-pthread&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;gettid&quot;</span> <span class="token string">&quot;unistd.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;strlcpy&quot;</span> <span class="token string">&quot;string.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;strlcat&quot;</span> <span class="token string">&quot;string.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;clock_gettime&quot;</span> <span class="token string">&quot;time.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;gettimeofday&quot;</span> <span class="token string">&quot;sys/time.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;pthread_spin_lock&quot;</span> <span class="token string">&quot;pthread.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;pthread_mutex_timedlock&quot;</span> <span class="token string">&quot;pthread.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;sem_timedwait&quot;</span> <span class="token string">&quot;semaphore.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;pipe&quot;</span> <span class="token string">&quot;unistd.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;socketpair&quot;</span> <span class="token string">&quot;sys/socket.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;eventfd&quot;</span> <span class="token string">&quot;sys/eventfd.h&quot;</span><span class="token punctuation">)</span>
<span class="token function">check_function</span><span class="token punctuation">(</span><span class="token string">&quot;setproctitle&quot;</span> <span class="token string">&quot;unistd.h&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">configure_file</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">CMAKE_CURRENT_SOURCE_DIR</span><span class="token punctuation">}</span>/hconfig.h.in hconfig.h<span class="token punctuation">)</span>

<span class="token comment">#编译后, 会在\${PROJECT_BINARY_DIR}里生成config.h文件</span>
<span class="token keyword">string</span><span class="token punctuation">(</span>TIMESTAMP COMPILE_DATA %Y%m%d<span class="token punctuation">)</span>
<span class="token keyword">string</span><span class="token punctuation">(</span>TIMESTAMP COMPILE_TIME %H%M%S<span class="token punctuation">)</span>
<span class="token keyword">configure_file</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">CMAKE_CURRENT_SOURCE_DIR</span><span class="token punctuation">}</span>/config.h.in config.h<span class="token punctuation">)</span>

<span class="token comment"># 将目录下的所有源文件包含进SRCS中</span>
<span class="token keyword">file</span><span class="token punctuation">(</span>GLOB_RECURSE SRCS src/*.cpp src/*.c<span class="token punctuation">)</span>

<span class="token comment"># 将目录下的所有头文件包含进PROJECT_BINARY_DIR中</span>
<span class="token function">include_sub_directories_recursively</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_SOURCE_DIR</span><span class="token punctuation">}</span>/src<span class="token punctuation">)</span>

<span class="token comment"># project</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">ANDROID</span><span class="token punctuation">)</span>
    <span class="token keyword">add_library</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token namespace">SHARED</span> main.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">add_executable</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> main.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 链接库</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">ANDROID</span><span class="token punctuation">)</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span>LIBS <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span> log android<span class="token punctuation">)</span>
<span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">UNIX</span><span class="token punctuation">)</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span>LIBS <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span> pthread m dl<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">CMAKE_COMPILER_IS_GNUCC</span><span class="token punctuation">)</span>
        <span class="token keyword">set</span><span class="token punctuation">(</span>LIBS <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span> rt<span class="token punctuation">)</span>
    <span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">WIN32</span><span class="token punctuation">)</span>
    <span class="token keyword">add_definitions</span><span class="token punctuation">(</span>-D_WIN32_WINNT=0x0600<span class="token punctuation">)</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span>LIBS <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span> winmm iphlpapi ws2_32 pathcch<span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">APPLE</span><span class="token punctuation">)</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span>LIBS <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span> <span class="token string">&quot;-framework CoreFoundation&quot;</span> <span class="token string">&quot;-framework Security&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">DEFINED</span> <span class="token variable">CMAKE_BUILD_TYPE</span> <span class="token operator">AND</span> <span class="token variable">CMAKE_BUILD_TYPE</span> <span class="token operator">STREQUAL</span> <span class="token string">&quot;Debug&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">message</span><span class="token punctuation">(</span><span class="token string">&quot;Debug mode is active&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># 输出详细信息</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_VERBOSE_MAKEFILE</span> <span class="token boolean">ON</span><span class="token punctuation">)</span>
    <span class="token comment">#    target_compile_definitions(\${PROJECT_NAME} PRIVATE PRINT_DEBUG) # libhv详细输出</span>
<span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">message</span><span class="token punctuation">(</span><span class="token string">&quot;Debug mode is not active&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">target_compile_definitions</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token namespace">PRIVATE</span> PRINT_ERROR<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">MSVC</span><span class="token punctuation">)</span>
    <span class="token keyword">target_compile_definitions</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token namespace">PRIVATE</span> NOMINMAX<span class="token punctuation">)</span>
    <span class="token keyword">target_compile_definitions</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token namespace">PRIVATE</span> HV_SOURCE<span class="token punctuation">)</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_MSVC_RUNTIME_LIBRARY</span> <span class="token string">&quot;MultiThreaded$&lt;$&lt;CONFIG:Debug&gt;:DebugDLL&gt;&quot;</span><span class="token punctuation">)</span> <span class="token comment"># Debug用DLL运行库，Release用静态链接运行库</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">MINGW</span><span class="token punctuation">)</span>
    <span class="token comment"># 启用静态运行时</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_CXX_FLAGS_RELEASE</span> <span class="token string">&quot;<span class="token interpolation"><span class="token punctuation">\${</span><span class="token variable">CMAKE_CXX_FLAGS_RELEASE</span><span class="token punctuation">}</span></span> -static-libgcc -static-libstdc++&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_C_FLAGS_RELEASE</span> <span class="token string">&quot;<span class="token interpolation"><span class="token punctuation">\${</span><span class="token variable">CMAKE_C_FLAGS_RELEASE</span><span class="token punctuation">}</span></span> -static-libgcc&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_EXE_LINKER_FLAGS_RELEASE</span> <span class="token string">&quot;<span class="token interpolation"><span class="token punctuation">\${</span><span class="token variable">CMAKE_EXE_LINKER_FLAGS_RELEASE</span><span class="token punctuation">}</span></span> -static&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># include</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span><span class="token punctuation">\${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">NOT</span> <span class="token variable">ANDROID</span><span class="token punctuation">)</span>
    <span class="token keyword">add_subdirectory</span><span class="token punctuation">(</span>demo<span class="token punctuation">)</span>

    <span class="token comment"># 更新前端文件</span>
    <span class="token keyword">message</span><span class="token punctuation">(</span><span class="token string">&quot;update web files&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">file</span><span class="token punctuation">(</span>REMOVE_RECURSE <span class="token punctuation">\${</span><span class="token variable">CMAKE_CURRENT_BINARY_DIR</span><span class="token punctuation">}</span>/web/<span class="token punctuation">)</span>
    <span class="token keyword">file</span><span class="token punctuation">(</span>MAKE_DIRECTORY <span class="token punctuation">\${</span><span class="token variable">CMAKE_CURRENT_BINARY_DIR</span><span class="token punctuation">}</span>/web/<span class="token punctuation">)</span>
    <span class="token keyword">file</span><span class="token punctuation">(</span>COPY <span class="token punctuation">\${</span><span class="token variable">PROJECT_SOURCE_DIR</span><span class="token punctuation">}</span>/web/release/ DESTINATION <span class="token punctuation">\${</span><span class="token variable">CMAKE_CURRENT_BINARY_DIR</span><span class="token punctuation">}</span>/web/<span class="token punctuation">)</span>
<span class="token keyword">endif</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/demo/CMakeLists.txt</p><div class="language-cmake line-numbers-mode" data-ext="cmake" data-title="cmake"><pre class="language-cmake"><code><span class="token comment">#demo</span>
<span class="token keyword">add_executable</span><span class="token punctuation">(</span>log_demo ./log_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>log_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>log_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>event_loop_demo ./event_loop_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>event_loop_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>event_loop_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>event_loop_thread_demo ./event_loop_thread_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>event_loop_thread_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>event_loop_thread_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>event_loop_thread_pool_demo ./event_loop_thread_pool_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>event_loop_thread_pool_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>event_loop_thread_pool_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>tcp_server_demo ./tcp_server_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>tcp_server_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>tcp_server_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>tcp_client_demo ./tcp_client_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>tcp_client_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>tcp_client_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>udp_server_demo ./udp_server_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>udp_server_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>udp_server_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>udp_client_demo ./udp_client_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>udp_client_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>udp_client_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>http_server_demo ./http_server_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>http_server_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>http_server_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>json_schema_demo ./json_schema_demo.cpp <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>json_schema_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>json_schema_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">add_executable</span><span class="token punctuation">(</span>ftp_demo ./ftp_demo.c <span class="token punctuation">\${</span>SRCS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>ftp_demo <span class="token namespace">PRIVATE</span> pthread <span class="token punctuation">\${</span>LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">target_include_directories</span><span class="token punctuation">(</span>ftp_demo <span class="token namespace">PRIVATE</span> <span class="token punctuation">\${</span><span class="token variable">PROJECT_BINARY_DIR</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17)]))}const l=s(p,[["render",c],["__file","CMakeLists 子项目问题.html.vue"]]),u=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/02.%20%E5%AD%90%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E7%B3%BB%E7%BB%9F/CMakeLists%20%E5%AD%90%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98.html","title":"CMakeLists 子项目问题","lang":"zh-CN","frontmatter":{"description":"CMakeLists 子项目问题 关键语法 实战举例 - TSDB /CMakeLists.txt /src/CMakeLists.txt /examples/CMakeLists.txt /tests/CmakeLists.txt 实战举例 - Recorder /CMakeLists.txt /demo/CMakeLists.txt","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/02.%20%E5%AD%90%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E7%B3%BB%E7%BB%9F/CMakeLists%20%E5%AD%90%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"CMakeLists 子项目问题"}],["meta",{"property":"og:description","content":"CMakeLists 子项目问题 关键语法 实战举例 - TSDB /CMakeLists.txt /src/CMakeLists.txt /examples/CMakeLists.txt /tests/CmakeLists.txt 实战举例 - Recorder /CMakeLists.txt /demo/CMakeLists.txt"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CMakeLists 子项目问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"CMakeLists 子项目问题","slug":"cmakelists-子项目问题","link":"#cmakelists-子项目问题","children":[{"level":2,"title":"关键语法","slug":"关键语法","link":"#关键语法","children":[]},{"level":2,"title":"实战举例 - TSDB","slug":"实战举例-tsdb","link":"#实战举例-tsdb","children":[]},{"level":2,"title":"实战举例 - Recorder","slug":"实战举例-recorder","link":"#实战举例-recorder","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.35,"words":1006},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/03. Tools/02. 管理层/03. 多项目管理/02. 子项目构建系统/CMakeLists 子项目问题.md","excerpt":"\\n<h2>关键语法</h2>\\n<div class=\\"language-cmake\\" data-ext=\\"cmake\\" data-title=\\"cmake\\"><pre class=\\"language-cmake\\"><code><span class=\\"token keyword\\">add_subdirectory</span><span class=\\"token punctuation\\">(</span>src<span class=\\"token punctuation\\">)</span>\\n</code></pre></div><h2>实战举例 - TSDB</h2>\\n<p>/CMakeLists.txt</p>","autoDesc":true}');export{l as comp,u as data};
