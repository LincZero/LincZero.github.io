import{_ as t,c as o,e as n,o as i}from"./app-BDGujT_T.js";const s={};function p(a,e){return i(),o("div",null,e[0]||(e[0]=[n('<h1 id="django" tabindex="-1"><a class="header-anchor" href="#django"><span>Django</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="setting类bug" tabindex="-1"><a class="header-anchor" href="#setting类bug"><span>Setting类bug</span></a></h1><h2 id="白字报错-forbidden-csrf-cookie-not-set-能get请求但不能post请求" tabindex="-1"><a class="header-anchor" href="#白字报错-forbidden-csrf-cookie-not-set-能get请求但不能post请求"><span>白字报错：Forbidden (CSRF cookie not set.):，能GET请求但不能POST请求</span></a></h2><p>解决参考：https://www.cnblogs.com/jixn/p/14110981.html</p><p><strong>CSRF 是啥？</strong></p><p>表示django全局发送post请求均需要字符串验证</p><p><strong>功能：</strong></p><p>防止跨站请求伪造的功能</p><p><strong>工作原理</strong></p><p>客户端访问服务器端，在服务器端正常返回给客户端数据的时候，而外返回给客户端一段字符串，等到客户端下次访问服务器<br> 端时，服务器端会到客户端查找先前返回的字符串，如果找到则继续，找不到就拒绝。</p><p><strong>访问流程</strong></p><p>客户端-》URL路由系统 - 》 CSRF -》视图函数</p><p>我这里要写的是一个内部使用的api接口，也不大会有 跨站请求伪造</p><p>所以这里提供两个不是很推荐，但是非常简单的方式解决这个问题</p><p>既然不需要 CSRF 这里我们就把CSRF检测关掉即可</p><p><strong>解决方案一</strong></p><p>方法一是注释掉 <code>settings.py</code> 文件中 <code>MIDDLEWARE </code>参数中的<code>&#39;django.middleware.csrf.CsrfViewMiddleware&#39;,</code></p>',18)]))}const g=t(s,[["render",p],["__file","10. setting类bug.html.vue"]]),l=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/04.%20Py-Django/%E6%94%B9/10.%20setting%E7%B1%BBbug.html","title":"Django","lang":"zh-CN","frontmatter":{"description":"Django 目录 Setting类bug 白字报错：Forbidden (CSRF cookie not set.):，能GET请求但不能POST请求 解决参考：https://www.cnblogs.com/jixn/p/14110981.html CSRF 是啥？ 表示django全局发送post请求均需要字符串验证 功能： 防止跨站请求伪造的功...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/04.%20Py-Django/%E6%94%B9/10.%20setting%E7%B1%BBbug.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Django"}],["meta",{"property":"og:description","content":"Django 目录 Setting类bug 白字报错：Forbidden (CSRF cookie not set.):，能GET请求但不能POST请求 解决参考：https://www.cnblogs.com/jixn/p/14110981.html CSRF 是啥？ 表示django全局发送post请求均需要字符串验证 功能： 防止跨站请求伪造的功..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Django\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Django","slug":"django","link":"#django","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"Setting类bug","slug":"setting类bug","link":"#setting类bug","children":[{"level":2,"title":"白字报错：Forbidden (CSRF cookie not set.):，能GET请求但不能POST请求","slug":"白字报错-forbidden-csrf-cookie-not-set-能get请求但不能post请求","link":"#白字报错-forbidden-csrf-cookie-not-set-能get请求但不能post请求","children":[]}]}],"git":{},"readingTime":{"minutes":0.9,"words":269},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/04. Py-Django/改/10. setting类bug.md","excerpt":"\\n<h1>目录</h1>\\n<h1>Setting类bug</h1>\\n<h2>白字报错：Forbidden (CSRF cookie not set.):，能GET请求但不能POST请求</h2>\\n<p>解决参考：https://www.cnblogs.com/jixn/p/14110981.html</p>\\n<p><strong>CSRF  是啥？</strong></p>\\n<p>表示django全局发送post请求均需要字符串验证</p>\\n<p><strong>功能：</strong></p>\\n<p>防止跨站请求伪造的功能</p>\\n<p><strong>工作原理</strong></p>\\n<p>客户端访问服务器端，在服务器端正常返回给客户端数据的时候，而外返回给客户端一段字符串，等到客户端下次访问服务器<br>\\n端时，服务器端会到客户端查找先前返回的字符串，如果找到则继续，找不到就拒绝。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/04. Py-Django/改/10. setting类bug.md","value":{"title":"10. setting类bug","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/04. Py-Django/改/10. setting类bug.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{g as comp,l as data};
