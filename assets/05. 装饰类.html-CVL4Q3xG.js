import{_ as a,c as n,e,o as t}from"./app-CLosF8Eu.js";const p={};function o(r,s){return t(),n("div",null,s[0]||(s[0]=[e(`<h1 id="装饰类" tabindex="-1"><a class="header-anchor" href="#装饰类"><span>装饰类</span></a></h1><p>装饰类的特点是将 html元素 转化为另一项 html元素。</p><p>大多数的装饰类只是在原有 html元素 的基础上，套一层具有特定css的外壳，以修改、增强原有的 html元素。所以叫做装饰类</p><h2 id="md" tabindex="-1"><a class="header-anchor" href="#md"><span>md</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;md&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;md&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>text<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="text" tabindex="-1"><a class="header-anchor" href="#text"><span>text</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;纯文本&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&quot;其实一般会更推荐用code()代替，那个更精确&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>text<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fold" tabindex="-1"><a class="header-anchor" href="#fold"><span>fold</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;fold&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;折叠&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scroll" tabindex="-1"><a class="header-anchor" href="#scroll"><span>scroll</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;scroll&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;滚动&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^scroll(\\((\\d+)\\))?(T)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
<span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;scroll(460)&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="overfold" tabindex="-1"><a class="header-anchor" href="#overfold"><span>overfold</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;overfold&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;超出折叠&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^overfold(\\((\\d+)\\))?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
<span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;overfold(380)&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="width" tabindex="-1"><a class="header-anchor" href="#width"><span>width</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;width&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;宽度控制&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^width\\(((?:\\d*\\.?\\d+(?:%|px|rem)?,\\s*)*\\d*\\.?\\d+(?:%|px|rem)?)\\)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  <span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
  <span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="addclass" tabindex="-1"><a class="header-anchor" href="#addclass"><span>addClass</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;addClass&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;增加class&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&quot;给当前块增加一个类名&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^addClass\\((.*)\\)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="adddiv" tabindex="-1"><a class="header-anchor" href="#adddiv"><span>addDiv</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;addDiv&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;增加div和class&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&quot;给当前块增加一个父类，需要给这个父类一个类名&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^addDiv\\((.*)\\)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="title" tabindex="-1"><a class="header-anchor" href="#title"><span>title</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;标题&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^#(.*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
<span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&quot;若直接处理代码或表格块，则会有特殊风格&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="transposition" tabindex="-1"><a class="header-anchor" href="#transposition"><span>transposition</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;transposition&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;表格转置&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token string">&quot;transposition&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&quot;将表格进行转置，就像矩阵转置那样。该版本不支持有跨行跨列单元格&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="transpose" tabindex="-1"><a class="header-anchor" href="#transpose"><span>transpose</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;transpose&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;表格转置&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token string">&quot;trs&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&quot;将表格进行转置，就像矩阵转置那样。该版本支持有跨行跨列单元格&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">process_param</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
<span class="token literal-property property">process_return</span><span class="token operator">:</span> ABConvert_IOEnum<span class="token punctuation">.</span>el<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25)]))}const i=a(p,[["render",o],["__file","05. 装饰类.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/ProductDoc/AnyBlock/docs/api/05.%20%E8%A3%85%E9%A5%B0%E7%B1%BB.html","title":"装饰类","lang":"zh-CN","frontmatter":{"description":"装饰类 装饰类的特点是将 html元素 转化为另一项 html元素。 大多数的装饰类只是在原有 html元素 的基础上，套一层具有特定css的外壳，以修改、增强原有的 html元素。所以叫做装饰类 md text fold scroll overfold width addClass addDiv title transposition transpose","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/ProductDoc/AnyBlock/docs/api/05.%20%E8%A3%85%E9%A5%B0%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"装饰类"}],["meta",{"property":"og:description","content":"装饰类 装饰类的特点是将 html元素 转化为另一项 html元素。 大多数的装饰类只是在原有 html元素 的基础上，套一层具有特定css的外壳，以修改、增强原有的 html元素。所以叫做装饰类 md text fold scroll overfold width addClass addDiv title transposition transpose"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"装饰类\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"装饰类","slug":"装饰类","link":"#装饰类","children":[{"level":2,"title":"md","slug":"md","link":"#md","children":[]},{"level":2,"title":"text","slug":"text","link":"#text","children":[]},{"level":2,"title":"fold","slug":"fold","link":"#fold","children":[]},{"level":2,"title":"scroll","slug":"scroll","link":"#scroll","children":[]},{"level":2,"title":"overfold","slug":"overfold","link":"#overfold","children":[]},{"level":2,"title":"width","slug":"width","link":"#width","children":[]},{"level":2,"title":"addClass","slug":"addclass","link":"#addclass","children":[]},{"level":2,"title":"addDiv","slug":"adddiv","link":"#adddiv","children":[]},{"level":2,"title":"title","slug":"title","link":"#title","children":[]},{"level":2,"title":"transposition","slug":"transposition","link":"#transposition","children":[]},{"level":2,"title":"transpose","slug":"transpose","link":"#transpose","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.28,"words":383},"filePathRelative":"MdNote_Public/ProductDoc/AnyBlock/docs/api/05. 装饰类.md","excerpt":"\\n<p>装饰类的特点是将 html元素 转化为另一项 html元素。</p>\\n<p>大多数的装饰类只是在原有 html元素 的基础上，套一层具有特定css的外壳，以修改、增强原有的 html元素。所以叫做装饰类</p>\\n<h2>md</h2>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token literal-property property\\">id</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"md\\"</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"md\\"</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token literal-property property\\">process_param</span><span class=\\"token operator\\">:</span> ABConvert_IOEnum<span class=\\"token punctuation\\">.</span>text<span class=\\"token punctuation\\">,</span>\\n<span class=\\"token literal-property property\\">process_return</span><span class=\\"token operator\\">:</span> ABConvert_IOEnum<span class=\\"token punctuation\\">.</span>el<span class=\\"token punctuation\\">,</span>\\n</code></pre></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/ProductDoc/AnyBlock/docs/api/05. 装饰类.md","value":{"title":"05. 装饰类","path":"MdNote_Public/ProductDoc/AnyBlock/docs/api/05. 装饰类.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{i as comp,c as data};
