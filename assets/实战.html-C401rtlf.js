import{_ as o,c as p,a,b as e,d as s,e as i,o as l,r as c}from"./app-G9P12kHM.js";const r={},u={href:"https://github.com/orgs/civitai/discussions/367",target:"_blank",rel:"noopener noreferrer"};function d(m,n){const t=c("ExternalLinkIcon");return l(),p("div",null,[n[3]||(n[3]=a(`<h1 id="comfyui实战-虚拟机" tabindex="-1"><a class="header-anchor" href="#comfyui实战-虚拟机"><span>ComfyUI实战_虚拟机</span></a></h1><p>如果是 Windows 的话，ComfyUI官方和秋叶大佬都有整合包</p><h2 id="虚拟机环境-vagrant-virtaulbox" tabindex="-1"><a class="header-anchor" href="#虚拟机环境-vagrant-virtaulbox"><span>虚拟机环境 (Vagrant+VirtaulBox)</span></a></h2><p>这里我用虚拟机试：</p><p>Vagrant：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># -*- mode: ruby -*-</span>
<span class="token comment"># vi: set ft=ruby :</span>

Vagrant<span class="token punctuation">.</span>configure<span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span> do <span class="token operator">|</span>config<span class="token operator">|</span>
  <span class="token comment"># 镜像设置。这里使用了镜像。若链接失效则到该链接更新:</span>
  <span class="token comment"># https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/jammy/</span>
  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>box <span class="token operator">=</span> <span class="token string">&quot;ubuntu/jammy64&quot;</span>
  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>box_url <span class="token operator">=</span> <span class="token string">&quot;https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/jammy/20240912/jammy-server-cloudimg-amd64-vagrant.box&quot;</span>

  <span class="token comment"># 设置内存和CPU数量等</span>
  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>network <span class="token string">&quot;private_network&quot;</span><span class="token punctuation">,</span> ip<span class="token punctuation">:</span> <span class="token string">&quot;192.168.56.2&quot;</span>
  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provider <span class="token string">&quot;virtualbox&quot;</span> do <span class="token operator">|</span>vb<span class="token operator">|</span>
    vb<span class="token punctuation">.</span>memory <span class="token operator">=</span> <span class="token string">&quot;2048&quot;</span>
    vb<span class="token punctuation">.</span>cpus <span class="token operator">=</span> <span class="token number">2</span>
  end

  <span class="token comment"># 在虚拟机启动时运行的 shell 命令</span>
  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provision <span class="token string">&quot;shell&quot;</span><span class="token punctuation">,</span> inline<span class="token punctuation">:</span> <span class="token operator">&lt;&lt;</span><span class="token operator">-</span>SHELL
    <span class="token comment"># 环境安装 - 基本</span>
    apt<span class="token operator">-</span>get update <span class="token operator">-</span>y <span class="token comment"># 更新包列表</span>
    apt<span class="token operator">-</span>get install <span class="token operator">-</span>y software<span class="token operator">-</span>properties<span class="token operator">-</span>common <span class="token comment"># 安装基础工具</span>
    apt<span class="token operator">-</span>get install <span class="token operator">-</span>y git
    
    <span class="token comment"># 环境安装 - python</span>
    <span class="token comment"># miniconda部分参考：https://docs.anaconda.com/miniconda/index.html#latest-miniconda-installer-links</span>
    <span class="token comment"># 目前我这个版本的conda会自动安装python3.12</span>
    mkdir <span class="token operator">-</span>p <span class="token operator">~</span><span class="token operator">/</span>miniconda3
    wget https<span class="token punctuation">:</span><span class="token operator">//</span>repo<span class="token punctuation">.</span>anaconda<span class="token punctuation">.</span>com<span class="token operator">/</span>miniconda<span class="token operator">/</span>Miniconda3<span class="token operator">-</span>latest<span class="token operator">-</span>Linux<span class="token operator">-</span>x86_64<span class="token punctuation">.</span>sh <span class="token operator">-</span>O <span class="token operator">~</span><span class="token operator">/</span>miniconda3<span class="token operator">/</span>miniconda<span class="token punctuation">.</span>sh
    bash <span class="token operator">~</span><span class="token operator">/</span>miniconda3<span class="token operator">/</span>miniconda<span class="token punctuation">.</span>sh <span class="token operator">-</span>b <span class="token operator">-</span>u <span class="token operator">-</span>p <span class="token operator">~</span><span class="token operator">/</span>miniconda3
    rm <span class="token operator">~</span><span class="token operator">/</span>miniconda3<span class="token operator">/</span>miniconda<span class="token punctuation">.</span>sh
    <span class="token comment"># PPA方案: https://www.sysgeek.cn/install-python-ubuntu/#0-%E7%AC%AC-1-%E6%AD%A5%EF%BC%9A%E9%80%9A%E8%BF%87-ppa-%E5%AE%89%E8%A3%85-python-312</span>
    <span class="token comment"># sudo add-apt-repository ppa:deadsnakes/ppa # 导入PPA - 仅稳定版本</span>
    <span class="token comment"># sudo apt update # 更新APT缓存</span>
    <span class="token comment"># sudo apt install -y python3.12 python3-pip</span>
    <span class="token comment"># 环境安装 - python常用包</span>
    pip3 install jupyter <span class="token comment"># 这个的时间也挺长的</span>
    <span class="token comment"># pip3 install torch</span>

    <span class="token comment"># 环境安装 - 前端</span>
    <span class="token comment"># PPA方案</span>
    <span class="token comment"># 为什么要执行这里的PPA：ubuntu到22也无法直接通过apt安装高版本，最多就到node12，而前端环境一般最少要node18，新一点甚至要node20。将PPA添加到配置中，就可以安装更高的版本</span>
    <span class="token comment"># 链接失效则到该链接更新: https://deb.nodesource.com/、https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-22-04</span>
    curl <span class="token operator">-</span>fsSL https<span class="token punctuation">:</span><span class="token operator">//</span>deb<span class="token punctuation">.</span>nodesource<span class="token punctuation">.</span>com<span class="token operator">/</span>setup_20<span class="token punctuation">.</span>x <span class="token operator">|</span> sudo bash <span class="token operator">-</span>
    sudo apt install <span class="token operator">-</span>y nodejs
    sudo apt install <span class="token operator">-</span>y npm
    sudo npm install <span class="token operator">-</span>g pnpm
    
    <span class="token comment"># 环境检查 - 版本打印</span>
    echo <span class="token string">&quot;-------------- env version check --------------&quot;</span>
    cat <span class="token operator">/</span>etc<span class="token operator">/</span>issue     <span class="token comment"># Ubuntu 22.04.5 LTS</span>
    apt <span class="token operator">-</span><span class="token operator">-</span>version      <span class="token comment"># apt 2.4.13 (amd64)</span>
    git <span class="token operator">-</span><span class="token operator">-</span>version      <span class="token comment"># git version 2.34.1</span>
    conda <span class="token operator">-</span><span class="token operator">-</span>version    <span class="token comment"># (这个好像不行)</span>
    <span class="token operator">~</span><span class="token operator">/</span>miniconda3<span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>conda <span class="token operator">-</span><span class="token operator">-</span>version <span class="token comment"># conda 24.7.1</span>
    python3 <span class="token operator">-</span><span class="token operator">-</span>version  <span class="token comment"># (默认的，好像是内置的) Python 3.10.12</span>
    python3<span class="token punctuation">.</span><span class="token number">12</span> <span class="token operator">-</span><span class="token operator">-</span>version <span class="token comment"># Python 3.12.7</span>
    pip <span class="token operator">-</span><span class="token operator">-</span>version      <span class="token comment"># pip 22.0.2 from /usr/lib/python3/dist-packages/pip (python 3.10)</span>
    jupyter <span class="token operator">-</span><span class="token operator">-</span>version  <span class="token comment"># 这里一串 (IPython 8.28.0 jupyter_core 5.7.2 notebook 7.2.2)</span>
    node <span class="token operator">-</span><span class="token operator">-</span>version     <span class="token comment"># v20.17.0 (注意默认只有12.22.9，完全不够用，要用PPA等方案)</span>
    npm <span class="token operator">-</span><span class="token operator">-</span>version      <span class="token comment"># 10.8.2</span>
    pnpm <span class="token operator">-</span><span class="token operator">-</span>version     <span class="token comment"># 9.12.0 # 这里似乎有问题</span>
    <span class="token comment"># 环境检查 - 网络打印</span>
    ping <span class="token operator">-</span>c <span class="token number">4</span> www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com
  SHELL
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>bash（如果没安装环境，先去看Vagrant笔记）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ vagrant up
$ vagrant <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>手动</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">passwd</span> root <span class="token comment"># 创建root账户</span>
$ <span class="token function">su</span> root

<span class="token comment"># 未开启ssh时可用的几种连接方式：</span>
$ <span class="token function">ssh</span> vagrant@localhost <span class="token parameter variable">-p</span> <span class="token number">2222</span> <span class="token parameter variable">-i</span> .vagrant/machines/default/virtualbox/private_key
$ <span class="token function">ssh</span> vagrant@192.168.56.20 <span class="token parameter variable">-i</span> .vagrant/machines/default/virtualbox/private_key

<span class="token comment"># conda环境</span>
$ <span class="token function">vim</span> ~/.bashrc  <span class="token comment"># 如果使用bash</span>
$ <span class="token function">vim</span> ~/.zshrc  <span class="token comment"># 如果使用zsh</span>
在文件末尾添加以下行，将路径替换为你的实际安装路径： 
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=~</span>/miniconda3/bin:<span class="token environment constant">$PATH</span>
$ <span class="token builtin class-name">source</span> ~/.bashrc <span class="token comment"># 或 source ~/.zshrc，使之生效</span>
$ conda <span class="token parameter variable">--version</span> <span class="token comment"># 验证</span>

$ pip list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装comfyui-jupyter方案" tabindex="-1"><a class="header-anchor" href="#安装comfyui-jupyter方案"><span>安装ComfyUI - Jupyter方案</span></a></h3><p><mark><strong>（先别急着操作，看完下面的 “优化” 一节再操作）</strong></mark></p><p>这里试一下JupyterNotebook方案</p><ol><li>脚本准备。先下载链接中对应的 <code>.ipynb</code> 文件到共享文件夹的 <code>./jupyter</code> 中</li></ol><p>https://github.com/comfyanonymous/ComfyUI?tab=readme-ov-file#jupyter-notebook</p><ol start="2"><li>运行JupyterNotebook</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> /vagrant/jupyter
$ jupyter notebook <span class="token parameter variable">--ip</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0 <span class="token comment"># 我这里是虚拟机，所以为了让主机访问加上了--ip参数</span>
                                <span class="token comment"># 然后注意这里会给出带token的令牌，主机访问时要带上token</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>依次运行Jupyter中的脚本</li></ol><h3 id="脚本分析" tabindex="-1"><a class="header-anchor" href="#脚本分析"><span>脚本分析</span></a></h3><p>其中Jupyte脚本一共分为三个环节：</p><ol><li>克隆仓库、安装依赖、编译</li><li>下载模型、checkpoints、vae</li><li>运行ComfyUI (三选一)</li></ol><ul><li>cloudflared 方式 (官方推荐)</li><li>localtunnel 方式</li><li>colab iframe 方式 (仅在先前使用localtunnel的方式不起作用时使用)</li></ul><h3 id="可选流程优化" tabindex="-1"><a class="header-anchor" href="#可选流程优化"><span>可选流程优化</span></a></h3><h4 id="conda虚拟环境优化" tabindex="-1"><a class="header-anchor" href="#conda虚拟环境优化"><span>conda虚拟环境优化</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ conda create <span class="token parameter variable">-n</span> comfyenv <span class="token comment"># 还可追加：python=x.x</span>
<span class="token comment"># $ conda activate comfyenv # windows</span>
$ <span class="token builtin class-name">source</span> activate comfyenv <span class="token comment"># linux/macOS</span>

$ conda <span class="token function">env</span> list 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后需要注意，在控制台显示在某个环境的时候再进jupyter</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>base<span class="token punctuation">)</span> vagrant@ubuntu-jammy:/vagrant/jupyter$ <span class="token builtin class-name">source</span> activate comfyenv
<span class="token punctuation">(</span>comfyenv<span class="token punctuation">)</span> vagrant@ubuntu-jammy:/vagrant/jupyter$ jupyter

<span class="token comment"># 然后进去后就可以用 \`!conda env list\` 来验证一下是否成功：(不建议在jupyter内部切换conda环境)</span>
<span class="token comment"># conda environments:</span>
<span class="token comment">#</span>
base                     /home/vagrant/miniconda3
comfyenv              *  /home/vagrant/miniconda3/envs/comfyenv <span class="token comment"># 这里有个 \`*\` 号表示成功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="环境检查" tabindex="-1"><a class="header-anchor" href="#环境检查"><span>环境检查</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">!</span>conda <span class="token function">env</span> list
<span class="token operator">!</span>pwd
<span class="token operator">!</span>ls <span class="token parameter variable">-a</span>
<span class="token operator">!</span>pip list

<span class="token comment"># 结果demo:</span>
<span class="token comment"># conda environments:</span>
<span class="token comment">#</span>
base                     /home/vagrant/miniconda3
comfyenv              *  /home/vagrant/miniconda3/envs/comfyenv <span class="token comment"># 这里有个 \`*\` 号表示现在在这个虚拟环境下</span>

/vagrant/jupyter
<span class="token builtin class-name">.</span>  <span class="token punctuation">..</span>  .ipynb_checkpoints  ComfyUI  ComfyUI2  comfyui_colab.ipynb
Package           Version
----------------- ----------- <span class="token comment"># 这里东西比较少，因为这里是刚刚创建的虚拟环境，很多torch什么的都还没装</span>
asttokens         <span class="token number">2.0</span>.5
<span class="token function">comm</span>              <span class="token number">0.2</span>.1
debugpy           <span class="token number">1.6</span>.7
decorator         <span class="token number">5.1</span>.1
executing         <span class="token number">0.8</span>.3
ipykernel         <span class="token number">6.28</span>.0
ipython           <span class="token number">8.27</span>.0
jedi              <span class="token number">0.19</span>.1
jupyter_client    <span class="token number">8.6</span>.0
jupyter_core      <span class="token number">5.7</span>.2
matplotlib-inline <span class="token number">0.1</span>.6
nest-asyncio      <span class="token number">1.6</span>.0
packaging         <span class="token number">24.1</span>
parso             <span class="token number">0.8</span>.3
pexpect           <span class="token number">4.8</span>.0
pip               <span class="token number">24.2</span>
platformdirs      <span class="token number">3.10</span>.0
prompt-toolkit    <span class="token number">3.0</span>.43
psutil            <span class="token number">5.9</span>.0
ptyprocess        <span class="token number">0.7</span>.0
pure-eval         <span class="token number">0.2</span>.2
Pygments          <span class="token number">2.15</span>.1
python-dateutil   <span class="token number">2.9</span>.0.post0
pyzmq             <span class="token number">25.1</span>.2
setuptools        <span class="token number">75.1</span>.0
six               <span class="token number">1.16</span>.0
stack-data        <span class="token number">0.2</span>.0
tornado           <span class="token number">6.4</span>.1
traitlets         <span class="token number">5.14</span>.3
wcwidth           <span class="token number">0.2</span>.5
wheel             <span class="token number">0.44</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="路径和权限问题" tabindex="-1"><a class="header-anchor" href="#路径和权限问题"><span>路径和权限问题</span></a></h4><p>注意：在root/其他用户环境下，<code>python</code>、<code>conda</code> 指向的目标有可能是不同的……</p><p>然后上下调试时要随时注意路径的变化，随时 <code>!pwd</code> 调试查看，如果不对则用 <code>%cd $WORKSPACE</code>、<code>%cd /</code> 返回去 (不能是 <code>!cd</code>)</p><h4 id="虚拟机显卡问题" tabindex="-1"><a class="header-anchor" href="#虚拟机显卡问题"><span>虚拟机显卡问题</span></a></h4><p>（显卡问题：见踩坑流程三，那会会遇到报错）</p><p>一方面，需要先将虚拟机关机，然后在virtualBox设置那边将 设置&gt;显示&gt;3D加速 打开</p><p>另一方面，需要有显卡驱动。见：https://docs.comfy.org/get_started/manual_install#nvidia (不过不知道虚拟机这里能不能用)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> pytorch torchvision torchaudio pytorch-cuda<span class="token operator">=</span><span class="token number">12.1</span> <span class="token parameter variable">-c</span> pytorch <span class="token parameter variable">-c</span> nvidia

pip <span class="token function">install</span> torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu121
<span class="token comment"># 或者</span>
pip <span class="token function">install</span> <span class="token parameter variable">--pre</span> torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu124
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三点，需要在虚拟机内识别到显卡……</p><p>我找了很多资料，但主要是VMWare和Hyper-V的比较多……VirtualBox的显卡直通教程几乎没有</p><p>检查：<code>nvidia-smi</code></p><h3 id="bug踩坑" tabindex="-1"><a class="header-anchor" href="#bug踩坑"><span>Bug踩坑</span></a></h3><h4 id="流程一-克隆仓库、安装依赖、编译" tabindex="-1"><a class="header-anchor" href="#流程一-克隆仓库、安装依赖、编译"><span>流程一（克隆仓库、安装依赖、编译）</span></a></h4><p>一开始报错</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-<span class="token operator">=</span> Initial setup ComfyUI <span class="token operator">=</span>-
Cloning into <span class="token string">&#39;ComfyUI&#39;</span><span class="token punctuation">..</span>.
fatal: unable to access <span class="token string">&#39;https://github.com/comfyanonymous/ComfyUI/&#39;</span><span class="token builtin class-name">:</span> GnuTLS recv error <span class="token punctuation">(</span>-110<span class="token punctuation">)</span>: The TLS connection was non-properly terminated.
<span class="token punctuation">[</span>Errno <span class="token number">2</span><span class="token punctuation">]</span> No such <span class="token function">file</span> or directory: <span class="token string">&#39;ComfyUI&#39;</span>
/vagrant/jupyter
-<span class="token operator">=</span> Updating ComfyUI <span class="token operator">=</span>-
fatal: not a <span class="token function">git</span> repository <span class="token punctuation">(</span>or any parent up to <span class="token function">mount</span> point /<span class="token punctuation">)</span>
Stopping at filesystem boundary <span class="token punctuation">(</span>GIT_DISCOVERY_ACROSS_FILESYSTEM not <span class="token builtin class-name">set</span><span class="token punctuation">)</span>.

/usr/local/lib/python3.10/dist-packages/IPython/core/magics/osm.py:393: UserWarning: This is now an optional IPython functionality, using bookmarks requires you to <span class="token function">install</span> the <span class="token variable"><span class="token variable">\`</span>pickleshare<span class="token variable">\`</span></span> library.
  bkms <span class="token operator">=</span> self.shell.db.get<span class="token punctuation">(</span><span class="token string">&#39;bookmarks&#39;</span>, <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

-<span class="token operator">=</span> Install dependencies <span class="token operator">=</span>-
Defaulting to user installation because normal site-packages is not writeable
ERROR: Could not <span class="token function">open</span> requirements file: <span class="token punctuation">[</span>Errno <span class="token number">2</span><span class="token punctuation">]</span> No such <span class="token function">file</span> or directory: <span class="token string">&#39;requirements.txt&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决：可能刚刚网不好，重新再运行一遍就OK了</p><ul><li>注意：这一步非常慢。 例如下载 torch 时，以两百KB的速度下载800MB的东西，这里就一个小时了</li><li>注意：执行完后可以检查一下安装了什么东西，和他那个 requirements.txt 内容对比下。主要看看torch在不在</li><li>注意：这里执行完后，路径修改了，到了进一层的 ComfyUI 路径里的，不要重复执行第一步了</li></ul><h4 id="流程二-下载模型、检查点、vae" tabindex="-1"><a class="header-anchor" href="#流程二-下载模型、检查点、vae"><span>流程二（下载模型、检查点、vae）</span></a></h4>`,47)),e("p",null,[n[1]||(n[1]=s("这里是从 huggingface 上面下载的，默认会下载一个 SD1.5(checkpoints) 和一个 VAE （注意这里是1.5版本，见 ")),e("a",u,[n[0]||(n[0]=s("Why many people choose SD1.5 instead of SD2.0? SD2.0 really unstable?")),i(t)]),n[2]||(n[2]=s(" ）"))]),n[4]||(n[4]=a(`<p>如果存在问题手动下载就是了，我这里就是下载不了，用主机的浏览器下载的</p><h4 id="流程三-运行comfyui" tabindex="-1"><a class="header-anchor" href="#流程三-运行comfyui"><span>流程三（运行ComfyUI）</span></a></h4><p>需要注意一下路径有没有问题</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>!sudo dpkg <span class="token operator">-</span>i cloudflared<span class="token operator">-</span>linux<span class="token operator">-</span>amd64<span class="token punctuation">.</span>deb <span class="token comment"># 这里要加sudo</span>
!python3 main<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>dont<span class="token operator">-</span><span class="token keyword">print</span><span class="token operator">-</span>server      <span class="token comment"># 这里的 python 修改成 python3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>部分 <code>!</code> 开头的jupyter命令如果运行不了，可以跳过并直接在终端运行</p><p>然后就是一个驱动报错：（解决：前面部分有说怎么安装驱动）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>Reading database <span class="token punctuation">..</span>. <span class="token number">76940</span> files and directories currently installed.<span class="token punctuation">)</span>
Preparing to unpack cloudflared-linux-amd64.deb <span class="token punctuation">..</span>.
Unpacking cloudflared <span class="token punctuation">(</span><span class="token number">2024.9</span>.1<span class="token punctuation">)</span> over <span class="token punctuation">(</span><span class="token number">2024.9</span>.1<span class="token punctuation">)</span> <span class="token punctuation">..</span>.
Setting up cloudflared <span class="token punctuation">(</span><span class="token number">2024.9</span>.1<span class="token punctuation">)</span> <span class="token punctuation">..</span>.
Processing triggers <span class="token keyword">for</span> man-db <span class="token punctuation">(</span><span class="token number">2.10</span>.2-1<span class="token punctuation">)</span> <span class="token punctuation">..</span>.
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>:
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/main.py&quot;</span>, line <span class="token number">90</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token function">import</span> execution
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/execution.py&quot;</span>, line <span class="token number">13</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token function">import</span> nodes
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/nodes.py&quot;</span>, line <span class="token number">21</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token function">import</span> comfy.diffusers_load
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/comfy/diffusers_load.py&quot;</span>, line <span class="token number">3</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token function">import</span> comfy.sd
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/comfy/sd.py&quot;</span>, line <span class="token number">5</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    from comfy <span class="token function">import</span> model_management
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/comfy/model_management.py&quot;</span>, line <span class="token number">143</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    total_vram <span class="token operator">=</span> get_total_memory<span class="token punctuation">(</span>get_torch_device<span class="token punctuation">(</span><span class="token punctuation">))</span> / <span class="token punctuation">(</span><span class="token number">1024</span> * <span class="token number">1024</span><span class="token punctuation">)</span>
                                  ^^^^^^^^^^^^^^^^^^
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/comfy/model_management.py&quot;</span>, line <span class="token number">112</span>, <span class="token keyword">in</span> get_torch_device
    <span class="token builtin class-name">return</span> torch.device<span class="token punctuation">(</span>torch.cuda.current_device<span class="token punctuation">(</span><span class="token punctuation">))</span>
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File <span class="token string">&quot;/home/vagrant/miniconda3/lib/python3.12/site-packages/torch/cuda/__init__.py&quot;</span>, line <span class="token number">878</span>, <span class="token keyword">in</span> current_device
    _lazy_init<span class="token punctuation">(</span><span class="token punctuation">)</span>
  File <span class="token string">&quot;/home/vagrant/miniconda3/lib/python3.12/site-packages/torch/cuda/__init__.py&quot;</span>, line <span class="token number">314</span>, <span class="token keyword">in</span> _lazy_init
    torch._C._cuda_init<span class="token punctuation">(</span><span class="token punctuation">)</span>
RuntimeError: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后安装驱动后，找不到GPU报错：（GPU没有直同虚拟机）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>Reading database <span class="token punctuation">..</span>. <span class="token number">106679</span> files and directories currently installed.<span class="token punctuation">)</span>
Preparing to unpack cloudflared-linux-amd64.deb <span class="token punctuation">..</span>.
Unpacking cloudflared <span class="token punctuation">(</span><span class="token number">2024.9</span>.1<span class="token punctuation">)</span> over <span class="token punctuation">(</span><span class="token number">2024.9</span>.1<span class="token punctuation">)</span> <span class="token punctuation">..</span>.
Setting up cloudflared <span class="token punctuation">(</span><span class="token number">2024.9</span>.1<span class="token punctuation">)</span> <span class="token punctuation">..</span>.
Processing triggers <span class="token keyword">for</span> man-db <span class="token punctuation">(</span><span class="token number">2.10</span>.2-1<span class="token punctuation">)</span> <span class="token punctuation">..</span>.
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>:
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/main.py&quot;</span>, line <span class="token number">90</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token function">import</span> execution
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/execution.py&quot;</span>, line <span class="token number">13</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token function">import</span> nodes
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/nodes.py&quot;</span>, line <span class="token number">21</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token function">import</span> comfy.diffusers_load
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/comfy/diffusers_load.py&quot;</span>, line <span class="token number">3</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token function">import</span> comfy.sd
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/comfy/sd.py&quot;</span>, line <span class="token number">5</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    from comfy <span class="token function">import</span> model_management
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/comfy/model_management.py&quot;</span>, line <span class="token number">143</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    total_vram <span class="token operator">=</span> get_total_memory<span class="token punctuation">(</span>get_torch_device<span class="token punctuation">(</span><span class="token punctuation">))</span> / <span class="token punctuation">(</span><span class="token number">1024</span> * <span class="token number">1024</span><span class="token punctuation">)</span>
                                  ^^^^^^^^^^^^^^^^^^
  File <span class="token string">&quot;/vagrant/jupyter/ComfyUI/comfy/model_management.py&quot;</span>, line <span class="token number">112</span>, <span class="token keyword">in</span> get_torch_device
    <span class="token builtin class-name">return</span> torch.device<span class="token punctuation">(</span>torch.cuda.current_device<span class="token punctuation">(</span><span class="token punctuation">))</span>
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File <span class="token string">&quot;/home/vagrant/miniconda3/envs/comfyenv/lib/python3.12/site-packages/torch/cuda/__init__.py&quot;</span>, line <span class="token number">878</span>, <span class="token keyword">in</span> current_device
    _lazy_init<span class="token punctuation">(</span><span class="token punctuation">)</span>
  File <span class="token string">&quot;/home/vagrant/miniconda3/envs/comfyenv/lib/python3.12/site-packages/torch/cuda/__init__.py&quot;</span>, line <span class="token number">314</span>, <span class="token keyword">in</span> _lazy_init
    torch._C._cuda_init<span class="token punctuation">(</span><span class="token punctuation">)</span>
RuntimeError: No CUDA GPUs are available
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="虚拟机环境2-vagrant-hyperv" tabindex="-1"><a class="header-anchor" href="#虚拟机环境2-vagrant-hyperv"><span>虚拟机环境2 (Vagrant+HyperV)</span></a></h2><p>HyperV的Box镜像没有国内源，下载好慢……</p><h2 id="虚拟机环境3-windows11-vyperv" tabindex="-1"><a class="header-anchor" href="#虚拟机环境3-windows11-vyperv"><span>虚拟机环境3 (Windows11+VyperV)</span></a></h2><p>手动安装了</p><p>Windows 用的秋叶大佬的整合包……这个下载也好慢</p>`,14))])}const v=o(r,[["render",d],["__file","实战.html.vue"]]),b=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Artificial_Intelligence/Project/Draw/ComfyUI/%E5%AE%9E%E6%88%98.html","title":"ComfyUI实战_虚拟机","lang":"zh-CN","frontmatter":{"description":"ComfyUI实战_虚拟机 如果是 Windows 的话，ComfyUI官方和秋叶大佬都有整合包 虚拟机环境 (Vagrant+VirtaulBox) 这里我用虚拟机试： Vagrant： bash（如果没安装环境，先去看Vagrant笔记） 手动 安装ComfyUI - Jupyter方案 （先别急着操作，看完下面的 “优化” 一节再操作） 这里试一...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/Pkmer-Math/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Artificial_Intelligence/Project/Draw/ComfyUI/%E5%AE%9E%E6%88%98.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"ComfyUI实战_虚拟机"}],["meta",{"property":"og:description","content":"ComfyUI实战_虚拟机 如果是 Windows 的话，ComfyUI官方和秋叶大佬都有整合包 虚拟机环境 (Vagrant+VirtaulBox) 这里我用虚拟机试： Vagrant： bash（如果没安装环境，先去看Vagrant笔记） 手动 安装ComfyUI - Jupyter方案 （先别急着操作，看完下面的 “优化” 一节再操作） 这里试一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ComfyUI实战_虚拟机\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"ComfyUI实战_虚拟机","slug":"comfyui实战-虚拟机","link":"#comfyui实战-虚拟机","children":[{"level":2,"title":"虚拟机环境 (Vagrant+VirtaulBox)","slug":"虚拟机环境-vagrant-virtaulbox","link":"#虚拟机环境-vagrant-virtaulbox","children":[{"level":3,"title":"安装ComfyUI - Jupyter方案","slug":"安装comfyui-jupyter方案","link":"#安装comfyui-jupyter方案","children":[]},{"level":3,"title":"脚本分析","slug":"脚本分析","link":"#脚本分析","children":[]},{"level":3,"title":"可选流程优化","slug":"可选流程优化","link":"#可选流程优化","children":[{"level":4,"title":"conda虚拟环境优化","slug":"conda虚拟环境优化","link":"#conda虚拟环境优化","children":[]},{"level":4,"title":"环境检查","slug":"环境检查","link":"#环境检查","children":[]},{"level":4,"title":"路径和权限问题","slug":"路径和权限问题","link":"#路径和权限问题","children":[]},{"level":4,"title":"虚拟机显卡问题","slug":"虚拟机显卡问题","link":"#虚拟机显卡问题","children":[]}]},{"level":3,"title":"Bug踩坑","slug":"bug踩坑","link":"#bug踩坑","children":[{"level":4,"title":"流程一（克隆仓库、安装依赖、编译）","slug":"流程一-克隆仓库、安装依赖、编译","link":"#流程一-克隆仓库、安装依赖、编译","children":[]},{"level":4,"title":"流程二（下载模型、检查点、vae）","slug":"流程二-下载模型、检查点、vae","link":"#流程二-下载模型、检查点、vae","children":[]},{"level":4,"title":"流程三（运行ComfyUI）","slug":"流程三-运行comfyui","link":"#流程三-运行comfyui","children":[]}]}]},{"level":2,"title":"虚拟机环境2 (Vagrant+HyperV)","slug":"虚拟机环境2-vagrant-hyperv","link":"#虚拟机环境2-vagrant-hyperv","children":[]},{"level":2,"title":"虚拟机环境3 (Windows11+VyperV)","slug":"虚拟机环境3-windows11-vyperv","link":"#虚拟机环境3-windows11-vyperv","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":7.16,"words":2149},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Artificial_Intelligence/Project/Draw/ComfyUI/实战.md","excerpt":"\\n<p>如果是 Windows 的话，ComfyUI官方和秋叶大佬都有整合包</p>\\n<h2>虚拟机环境 (Vagrant+VirtaulBox)</h2>\\n<p>这里我用虚拟机试：</p>\\n<p>Vagrant：</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\"># -*- mode: ruby -*-</span>\\n<span class=\\"token comment\\"># vi: set ft=ruby :</span>\\n\\nVagrant<span class=\\"token punctuation\\">.</span>configure<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"2\\"</span><span class=\\"token punctuation\\">)</span> do <span class=\\"token operator\\">|</span>config<span class=\\"token operator\\">|</span>\\n  <span class=\\"token comment\\"># 镜像设置。这里使用了镜像。若链接失效则到该链接更新:</span>\\n  <span class=\\"token comment\\"># https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/jammy/</span>\\n  config<span class=\\"token punctuation\\">.</span>vm<span class=\\"token punctuation\\">.</span>box <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"ubuntu/jammy64\\"</span>\\n  config<span class=\\"token punctuation\\">.</span>vm<span class=\\"token punctuation\\">.</span>box_url <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/jammy/20240912/jammy-server-cloudimg-amd64-vagrant.box\\"</span>\\n\\n  <span class=\\"token comment\\"># 设置内存和CPU数量等</span>\\n  config<span class=\\"token punctuation\\">.</span>vm<span class=\\"token punctuation\\">.</span>network <span class=\\"token string\\">\\"private_network\\"</span><span class=\\"token punctuation\\">,</span> ip<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"192.168.56.2\\"</span>\\n  config<span class=\\"token punctuation\\">.</span>vm<span class=\\"token punctuation\\">.</span>provider <span class=\\"token string\\">\\"virtualbox\\"</span> do <span class=\\"token operator\\">|</span>vb<span class=\\"token operator\\">|</span>\\n    vb<span class=\\"token punctuation\\">.</span>memory <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"2048\\"</span>\\n    vb<span class=\\"token punctuation\\">.</span>cpus <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span>\\n  end\\n\\n  <span class=\\"token comment\\"># 在虚拟机启动时运行的 shell 命令</span>\\n  config<span class=\\"token punctuation\\">.</span>vm<span class=\\"token punctuation\\">.</span>provision <span class=\\"token string\\">\\"shell\\"</span><span class=\\"token punctuation\\">,</span> inline<span class=\\"token punctuation\\">:</span> <span class=\\"token operator\\">&lt;&lt;</span><span class=\\"token operator\\">-</span>SHELL\\n    <span class=\\"token comment\\"># 环境安装 - 基本</span>\\n    apt<span class=\\"token operator\\">-</span>get update <span class=\\"token operator\\">-</span>y <span class=\\"token comment\\"># 更新包列表</span>\\n    apt<span class=\\"token operator\\">-</span>get install <span class=\\"token operator\\">-</span>y software<span class=\\"token operator\\">-</span>properties<span class=\\"token operator\\">-</span>common <span class=\\"token comment\\"># 安装基础工具</span>\\n    apt<span class=\\"token operator\\">-</span>get install <span class=\\"token operator\\">-</span>y git\\n    \\n    <span class=\\"token comment\\"># 环境安装 - python</span>\\n    <span class=\\"token comment\\"># miniconda部分参考：https://docs.anaconda.com/miniconda/index.html#latest-miniconda-installer-links</span>\\n    <span class=\\"token comment\\"># 目前我这个版本的conda会自动安装python3.12</span>\\n    mkdir <span class=\\"token operator\\">-</span>p <span class=\\"token operator\\">~</span><span class=\\"token operator\\">/</span>miniconda3\\n    wget https<span class=\\"token punctuation\\">:</span><span class=\\"token operator\\">//</span>repo<span class=\\"token punctuation\\">.</span>anaconda<span class=\\"token punctuation\\">.</span>com<span class=\\"token operator\\">/</span>miniconda<span class=\\"token operator\\">/</span>Miniconda3<span class=\\"token operator\\">-</span>latest<span class=\\"token operator\\">-</span>Linux<span class=\\"token operator\\">-</span>x86_64<span class=\\"token punctuation\\">.</span>sh <span class=\\"token operator\\">-</span>O <span class=\\"token operator\\">~</span><span class=\\"token operator\\">/</span>miniconda3<span class=\\"token operator\\">/</span>miniconda<span class=\\"token punctuation\\">.</span>sh\\n    bash <span class=\\"token operator\\">~</span><span class=\\"token operator\\">/</span>miniconda3<span class=\\"token operator\\">/</span>miniconda<span class=\\"token punctuation\\">.</span>sh <span class=\\"token operator\\">-</span>b <span class=\\"token operator\\">-</span>u <span class=\\"token operator\\">-</span>p <span class=\\"token operator\\">~</span><span class=\\"token operator\\">/</span>miniconda3\\n    rm <span class=\\"token operator\\">~</span><span class=\\"token operator\\">/</span>miniconda3<span class=\\"token operator\\">/</span>miniconda<span class=\\"token punctuation\\">.</span>sh\\n    <span class=\\"token comment\\"># PPA方案: https://www.sysgeek.cn/install-python-ubuntu/#0-%E7%AC%AC-1-%E6%AD%A5%EF%BC%9A%E9%80%9A%E8%BF%87-ppa-%E5%AE%89%E8%A3%85-python-312</span>\\n    <span class=\\"token comment\\"># sudo add-apt-repository ppa:deadsnakes/ppa # 导入PPA - 仅稳定版本</span>\\n    <span class=\\"token comment\\"># sudo apt update # 更新APT缓存</span>\\n    <span class=\\"token comment\\"># sudo apt install -y python3.12 python3-pip</span>\\n    <span class=\\"token comment\\"># 环境安装 - python常用包</span>\\n    pip3 install jupyter <span class=\\"token comment\\"># 这个的时间也挺长的</span>\\n    <span class=\\"token comment\\"># pip3 install torch</span>\\n\\n    <span class=\\"token comment\\"># 环境安装 - 前端</span>\\n    <span class=\\"token comment\\"># PPA方案</span>\\n    <span class=\\"token comment\\"># 为什么要执行这里的PPA：ubuntu到22也无法直接通过apt安装高版本，最多就到node12，而前端环境一般最少要node18，新一点甚至要node20。将PPA添加到配置中，就可以安装更高的版本</span>\\n    <span class=\\"token comment\\"># 链接失效则到该链接更新: https://deb.nodesource.com/、https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-22-04</span>\\n    curl <span class=\\"token operator\\">-</span>fsSL https<span class=\\"token punctuation\\">:</span><span class=\\"token operator\\">//</span>deb<span class=\\"token punctuation\\">.</span>nodesource<span class=\\"token punctuation\\">.</span>com<span class=\\"token operator\\">/</span>setup_20<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">|</span> sudo bash <span class=\\"token operator\\">-</span>\\n    sudo apt install <span class=\\"token operator\\">-</span>y nodejs\\n    sudo apt install <span class=\\"token operator\\">-</span>y npm\\n    sudo npm install <span class=\\"token operator\\">-</span>g pnpm\\n    \\n    <span class=\\"token comment\\"># 环境检查 - 版本打印</span>\\n    echo <span class=\\"token string\\">\\"-------------- env version check --------------\\"</span>\\n    cat <span class=\\"token operator\\">/</span>etc<span class=\\"token operator\\">/</span>issue     <span class=\\"token comment\\"># Ubuntu 22.04.5 LTS</span>\\n    apt <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version      <span class=\\"token comment\\"># apt 2.4.13 (amd64)</span>\\n    git <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version      <span class=\\"token comment\\"># git version 2.34.1</span>\\n    conda <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version    <span class=\\"token comment\\"># (这个好像不行)</span>\\n    <span class=\\"token operator\\">~</span><span class=\\"token operator\\">/</span>miniconda3<span class=\\"token operator\\">/</span><span class=\\"token builtin\\">bin</span><span class=\\"token operator\\">/</span>conda <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version <span class=\\"token comment\\"># conda 24.7.1</span>\\n    python3 <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version  <span class=\\"token comment\\"># (默认的，好像是内置的) Python 3.10.12</span>\\n    python3<span class=\\"token punctuation\\">.</span><span class=\\"token number\\">12</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version <span class=\\"token comment\\"># Python 3.12.7</span>\\n    pip <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version      <span class=\\"token comment\\"># pip 22.0.2 from /usr/lib/python3/dist-packages/pip (python 3.10)</span>\\n    jupyter <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version  <span class=\\"token comment\\"># 这里一串 (IPython 8.28.0 jupyter_core 5.7.2 notebook 7.2.2)</span>\\n    node <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version     <span class=\\"token comment\\"># v20.17.0 (注意默认只有12.22.9，完全不够用，要用PPA等方案)</span>\\n    npm <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version      <span class=\\"token comment\\"># 10.8.2</span>\\n    pnpm <span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>version     <span class=\\"token comment\\"># 9.12.0 # 这里似乎有问题</span>\\n    <span class=\\"token comment\\"># 环境检查 - 网络打印</span>\\n    ping <span class=\\"token operator\\">-</span>c <span class=\\"token number\\">4</span> www<span class=\\"token punctuation\\">.</span>baidu<span class=\\"token punctuation\\">.</span>com\\n  SHELL\\nend\\n</code></pre></div>","autoDesc":true}');export{v as comp,b as data};
