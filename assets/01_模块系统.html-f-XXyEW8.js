import{_ as s,e as a,g as n,o as e}from"./app-BapqMaOt.js";const l={};function t(p,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="模块系统" tabindex="-1"><a class="header-anchor" href="#模块系统"><span>模块系统</span></a></h1><p>为什么要包：</p><ul><li>分门别类</li><li>解决同名问题 (一个包内不能有同名的东西，不同包的东西可以同名)</li></ul><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><h3 id="包声明语句-package" tabindex="-1"><a class="header-anchor" href="#包声明语句-package"><span>包声明语句 (package)</span></a></h3><p>语法：</p><ul><li><p>通常是第一行</p></li><li><p>包名问题</p><p>尽量保持package的名字和目录名保持一致 (推荐一致，非强制，但若不遵守则该目录的其他文件也要有相同的包名)，<br> 尽量采取 有意义 简短 不与标准库冲突 的包名</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// goPorject/src/projtec1/uint2/demo06/xxx.go</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> demo06</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>main包</p><p>另外，main包规定是程序入口。有main包和main包里面的main函数才会得到可执行文件</p><p>(不建议做法：只要package XXX和下面的func XXX（）{}这两个一样就可以正常的编译运行。但最好还是要有个main包和main函数)</p><p>(可执行程序 必须要有main包及里面的main函数，否则报错)</p></li></ul><h3 id="包导入语句-import" tabindex="-1"><a class="header-anchor" href="#包导入语句-import"><span>包导入语句 (import)</span></a></h3><p>语法：</p><ul><li><p>import 导入语句通常在文件开头，包声名语句的下面。包名用双引号包括</p></li><li><p>import 语句有批量导入的语法糖</p></li><li><p>包名从 <code>$GOPATH/src/</code> 后开始计算，使用 <code>/</code> 进行路径分隔</p><p>补充：注意 GOPATH 是Windows的系统变量，所以标准库的导入不需要路径</p><p>补充：最新版本需要禁止GO111MODULE，否则无法用GOPATH</p></li></ul><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;...&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 或</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义包" tabindex="-1"><a class="header-anchor" href="#自定义包"><span>自定义包</span></a></h3><p>例如：</p><p>src/demo17/test/util.go</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> StuNo</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20034</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> GetConn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>src/demo17/main/test.go</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;demo17/test&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 将项目路径添加到 $GOPATH 系统变量的方法 (什么傻逼玩意，酱紫用? 一般自定义包不都先教用相对路径么)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">StuNo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetConn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用包" tabindex="-1"><a class="header-anchor" href="#常用包"><span>常用包</span></a></h2><p>这里建议看文档，中文文档：studygolang.com/pkgdoc</p><ul><li>fmt</li></ul>`,20)]))}const d=s(l,[["render",t],["__file","01_模块系统.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Go/07_%E6%A8%A1%E5%9D%97%E5%BA%93/01_%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F.html","title":"模块系统","lang":"zh-CN","frontmatter":{"description":"模块系统 为什么要包： 分门别类 解决同名问题 (一个包内不能有同名的东西，不同包的东西可以同名) 语法 包声明语句 (package) 语法： 通常是第一行 包名问题 尽量保持package的名字和目录名保持一致 (推荐一致，非强制，但若不遵守则该目录的其他文件也要有相同的包名)， 尽量采取 有意义 简短 不与标准库冲突 的包名 main包 另外，m...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Go/07_%E6%A8%A1%E5%9D%97%E5%BA%93/01_%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"模块系统"}],["meta",{"property":"og:description","content":"模块系统 为什么要包： 分门别类 解决同名问题 (一个包内不能有同名的东西，不同包的东西可以同名) 语法 包声明语句 (package) 语法： 通常是第一行 包名问题 尽量保持package的名字和目录名保持一致 (推荐一致，非强制，但若不遵守则该目录的其他文件也要有相同的包名)， 尽量采取 有意义 简短 不与标准库冲突 的包名 main包 另外，m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.45,"words":436},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Go/07_模块库/01_模块系统.md","excerpt":"\\n<p>为什么要包：</p>\\n<ul>\\n<li>分门别类</li>\\n<li>解决同名问题 (一个包内不能有同名的东西，不同包的东西可以同名)</li>\\n</ul>\\n<h2>语法</h2>\\n<h3>包声明语句 (package)</h3>\\n<p>语法：</p>\\n<ul>\\n<li>\\n<p>通常是第一行</p>\\n</li>\\n<li>\\n<p>包名问题</p>\\n<p>尽量保持package的名字和目录名保持一致 (推荐一致，非强制，但若不遵守则该目录的其他文件也要有相同的包名)，<br>\\n尽量采取 有意义 简短 不与标准库冲突 的包名</p>\\n<div class=\\"language-go line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"go\\" data-title=\\"go\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// goPorject/src/projtec1/uint2/demo06/xxx.go</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">package</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> demo06</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">...</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>main包</p>\\n<p>另外，main包规定是程序入口。有main包和main包里面的main函数才会得到可执行文件</p>\\n<p>(不建议做法：只要package XXX和下面的func XXX（）{}这两个一样就可以正常的编译运行。但最好还是要有个main包和main函数)</p>\\n<p>(可执行程序 必须要有main包及里面的main函数，否则报错)</p>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Go/07_模块库/01_模块系统.md","value":{"title":"01_模块系统","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Go/07_模块库/01_模块系统.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,k as data};
