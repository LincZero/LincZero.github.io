import{_ as p,c as l,a as s,b as o,e as a,d as e,o as i,r as u}from"./app-CxAoBuKS.js";const r={},d={class:"callout","data-callout":"tips"},c={class:"callout-content"},v={href:"https://vuepress.github.io/zh/advanced/plugin.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://vuepress.github.io/zh/reference/theme-api.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://vuepress.github.io/zh/reference/components.html#content",target:"_blank",rel:"noopener noreferrer"},g={href:"https://vuepress.github.io/zh/reference/frontmatter.html#layout",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.npmjs.com/cli/v8/configuring-npm/package-json",target:"_blank",rel:"noopener noreferrer"},f={href:"https://vuepress.github.io/zh/reference/theme-api.html#name",target:"_blank",rel:"noopener noreferrer"};function y(w,n){const t=u("ExternalLinkIcon");return i(),l("div",null,[n[36]||(n[36]=s("h1",{id:"开发主题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#开发主题"},[s("span",null,"开发主题")])],-1)),s("div",d,[n[4]||(n[4]=o('<div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pencil"><path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"></path><path d="m15 5 4 4"></path></svg></div><div class="callout-title-inner">Tips</div></div>',1)),s("div",c,[n[3]||(n[3]=s("p",null,null,-1)),s("p",null,[n[1]||(n[1]=a("在阅读该指南之前，你最好先了解一下 ")),s("a",v,[n[0]||(n[0]=a("开发插件")),e(t)]),n[2]||(n[2]=a(" 指南"))])])]),n[37]||(n[37]=s("h2",{id:"创建一个主题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#创建一个主题"},[s("span",null,"创建一个主题")])],-1)),s("p",null,[n[6]||(n[6]=a("VuePress 主题是一个")),n[7]||(n[7]=s("strong",null,"特殊的插件",-1)),n[8]||(n[8]=a("，它应该符合 ")),s("a",k,[n[5]||(n[5]=a("主题 API")),e(t)]),n[9]||(n[9]=a(" 。和插件一样，主题可以是一个 ")),n[10]||(n[10]=s("em",null,"主题对象",-1)),n[11]||(n[11]=a(" 或一个 ")),n[12]||(n[12]=s("em",null,"主题函数",-1)),n[13]||(n[13]=a(" ，并且通常通过一个函数来接收配置项："))]),n[38]||(n[38]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/utils&#39;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">fooTheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 返回一个主题对象</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-theme-foo&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// 主题的客户端配置文件的路径</span>
    clientConfigFile<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;client.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// 设置自定义 dev / build 模板</span>
    <span class="token comment">// 如果没有指定模板，将会使用 \`@vuepress/client\` 提供的默认模板</span>
    templateBuild<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;templates/build.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    templateDev<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;templates/dev.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// 使用插件</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>

    <span class="token comment">// 其他的插件 API 也都可用</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">barTheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 返回一个主题函数</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;vuepress-theme-bar&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，创建主题的客户端配置文件 <code>client.js</code> :</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;./layouts/Layout.vue&#39;</span>
<span class="token keyword">import</span> NotFound <span class="token keyword">from</span> <span class="token string">&#39;./layouts/NotFound.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
    Layout<span class="token punctuation">,</span>
    NotFound<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>layouts</code> 字段声明了你的主题提供的布局。一个主题必须提供至少两个布局：<code>Layout</code> 和 <code>NotFound</code> 。前者用于提供一般页面的默认布局，后者用于提供 404 页面的布局。</p>`,4)),s("p",null,[n[15]||(n[15]=s("code",null,"Layout",-1)),n[16]||(n[16]=a(" 布局应该包含 ")),s("a",m,[n[14]||(n[14]=a("Content")),e(t)]),n[17]||(n[17]=a(" 组件来展示 Markdown 内容："))]),n[39]||(n[39]=o(`<div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>NotFound</code> 布局会被用于 <code>404.html</code> 页面：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>404 Not Found<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),s("p",null,[n[19]||(n[19]=a("你可以提供多个布局，用户可以通过 ")),s("a",g,[n[18]||(n[18]=a("layout")),e(t)]),n[20]||(n[20]=a(" Frontmatter 来修改布局。"))]),n[40]||(n[40]=s("h2",{id:"发布到-npm",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#发布到-npm"},[s("span",null,"发布到 NPM")])],-1)),s("p",null,[n[22]||(n[22]=a("同样的，对于主题也有 ")),s("a",b,[n[21]||(n[21]=a("package.json")),e(t)]),n[23]||(n[23]=a(" 相关的约定："))]),n[41]||(n[41]=o(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-foo&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;vuepress-theme&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("ul",null,[s("li",null,[n[25]||(n[25]=a("将 ")),n[26]||(n[26]=s("code",null,"name",-1)),n[27]||(n[27]=a(" 按照约定命名： ")),n[28]||(n[28]=s("code",null,"vuepress-theme-xxx",-1)),n[29]||(n[29]=a(" 或 ")),n[30]||(n[30]=s("code",null,"@org/vuepress-theme-xxx",-1)),n[31]||(n[31]=a(" ，它应该和 ")),n[32]||(n[32]=s("em",null,"主题对象",-1)),n[33]||(n[33]=a(" 的 ")),s("a",f,[n[24]||(n[24]=a("name")),e(t)]),n[34]||(n[34]=a(" 字段保持一致。"))]),n[35]||(n[35]=s("li",null,[a("在 "),s("code",null,"keywords"),a(" 中包含 "),s("code",null,"vuepress-theme"),a(" ，这样用户可以在 NPM 上搜索到你的主题。")],-1))])])}const x=p(r,[["render",y],["__file","03. 开发主题.html.vue"]]),E=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/03.%20%E6%B7%B1%E5%85%A5/03.%20%E5%BC%80%E5%8F%91%E4%B8%BB%E9%A2%98.html","title":"开发主题","lang":"zh-CN","frontmatter":{"description":"开发主题 Tips 在阅读该指南之前，你最好先了解一下 开发插件 指南 创建一个主题 VuePress 主题是一个特殊的插件，它应该符合 主题 API 。和插件一样，主题可以是一个 主题对象 或一个 主题函数 ，并且通常通过一个函数来接收配置项： 然后，创建主题的客户端配置文件 client.js : layouts 字段声明了你的主题提供的布局。一个...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/03.%20%E6%B7%B1%E5%85%A5/03.%20%E5%BC%80%E5%8F%91%E4%B8%BB%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"开发主题"}],["meta",{"property":"og:description","content":"开发主题 Tips 在阅读该指南之前，你最好先了解一下 开发插件 指南 创建一个主题 VuePress 主题是一个特殊的插件，它应该符合 主题 API 。和插件一样，主题可以是一个 主题对象 或一个 主题函数 ，并且通常通过一个函数来接收配置项： 然后，创建主题的客户端配置文件 client.js : layouts 字段声明了你的主题提供的布局。一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发主题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"开发主题","slug":"开发主题","link":"#开发主题","children":[{"level":2,"title":"创建一个主题","slug":"创建一个主题","link":"#创建一个主题","children":[]},{"level":2,"title":"发布到 NPM","slug":"发布到-npm","link":"#发布到-npm","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.57,"words":472},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/03. 深入/03. 开发主题.md","excerpt":"\\n\\n<div class=\\"callout\\" data-callout=\\"tips\\">\\n<div class=\\"callout-title\\">\\n<div class=\\"callout-title-icon\\">\\n<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"24\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" class=\\"lucide lucide-pencil\\"><path d=\\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\\"></path><path d=\\"m15 5 4 4\\"></path></svg>\\n</div>\\n<div class=\\"callout-title-inner\\">Tips</div>\\n</div>\\n<div class=\\"callout-content\\"><p></p>\\n<p>在阅读该指南之前，你最好先了解一下 <a href=\\"https://vuepress.github.io/zh/advanced/plugin.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">开发插件</a> 指南</p>\\n</div></div>","autoDesc":true}');export{x as comp,E as data};
