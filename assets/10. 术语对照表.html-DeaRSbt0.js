import{_ as s,c as i,b as t,d as n,e,a as l,o as p,r as d}from"./app-CKRdBycm.js";const g={},f={id:"术语对照表¶",tabindex:"-1"},a={class:"header-anchor",href:"#术语对照表¶"},u={href:"https://docs.python.org/zh-cn/3/glossary.html#glossary",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.python.org/zh-cn/3/library/constants.html#Ellipsis",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.python.org/zh-cn/3/library/2to3.html#module-lib2to3",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.python.org/zh-cn/3/library/2to3.html#to3-reference",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.python.org/zh-cn/3/glossary.html#term-duck-typing",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.python.org/zh-cn/3/library/functions.html#hasattr",target:"_blank",rel:"noopener noreferrer"},z={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#special-lookup",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.python.org/zh-cn/3/library/functions.html#isinstance",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.python.org/zh-cn/3/library/functions.html#issubclass",target:"_blank",rel:"noopener noreferrer"},P={href:"https://docs.python.org/zh-cn/3/library/abc.html#module-abc",target:"_blank",rel:"noopener noreferrer"},w={href:"https://docs.python.org/zh-cn/3/library/collections.abc.html#module-collections.abc",target:"_blank",rel:"noopener noreferrer"},E={href:"https://docs.python.org/zh-cn/3/library/numbers.html#module-numbers",target:"_blank",rel:"noopener noreferrer"},j={href:"https://docs.python.org/zh-cn/3/library/io.html#module-io",target:"_blank",rel:"noopener noreferrer"},q={href:"https://docs.python.org/zh-cn/3/library/importlib.html#module-importlib.abc",target:"_blank",rel:"noopener noreferrer"},A={href:"https://docs.python.org/zh-cn/3/library/abc.html#module-abc",target:"_blank",rel:"noopener noreferrer"},C={href:"https://docs.python.org/zh-cn/3/glossary.html#term-type-hint",target:"_blank",rel:"noopener noreferrer"},D={href:"https://docs.python.org/zh-cn/3/glossary.html#term-variable-annotation",target:"_blank",rel:"noopener noreferrer"},I={href:"https://docs.python.org/zh-cn/3/glossary.html#term-function-annotation",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.python.org/dev/peps/pep-0484",target:"_blank",rel:"noopener noreferrer"},F={href:"https://www.python.org/dev/peps/pep-0526",target:"_blank",rel:"noopener noreferrer"},B={href:"https://docs.python.org/zh-cn/3/glossary.html#term-function",target:"_blank",rel:"noopener noreferrer"},M={href:"https://docs.python.org/zh-cn/3/glossary.html#term-method",target:"_blank",rel:"noopener noreferrer"},S={href:"https://docs.python.org/zh-cn/3/library/functions.html#complex",target:"_blank",rel:"noopener noreferrer"},N={href:"https://docs.python.org/zh-cn/3/glossary.html#term-iterable",target:"_blank",rel:"noopener noreferrer"},O={href:"https://docs.python.org/zh-cn/3/reference/expressions.html#calls",target:"_blank",rel:"noopener noreferrer"},T={href:"https://docs.python.org/zh-cn/3/glossary.html#term-parameter",target:"_blank",rel:"noopener noreferrer"},G={href:"https://docs.python.org/zh-cn/3/faq/programming.html#faq-argument-vs-parameter",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://www.python.org/dev/peps/pep-0362",target:"_blank",rel:"noopener noreferrer"},R={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__aenter__",target:"_blank",rel:"noopener noreferrer"},V={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__aexit__",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-with",target:"_blank",rel:"noopener noreferrer"},J={href:"https://www.python.org/dev/peps/pep-0492",target:"_blank",rel:"noopener noreferrer"},U={href:"https://docs.python.org/zh-cn/3/glossary.html#term-asynchronous-generator-iterator",target:"_blank",rel:"noopener noreferrer"},W={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-def",target:"_blank",rel:"noopener noreferrer"},H={href:"https://docs.python.org/zh-cn/3/reference/simple_stmts.html#yield",target:"_blank",rel:"noopener noreferrer"},K={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-for",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://docs.python.org/zh-cn/3/reference/expressions.html#await",target:"_blank",rel:"noopener noreferrer"},X={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-for",target:"_blank",rel:"noopener noreferrer"},$={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-with",target:"_blank",rel:"noopener noreferrer"},_={href:"https://docs.python.org/zh-cn/3/glossary.html#term-asynchronous-generator",target:"_blank",rel:"noopener noreferrer"},c={href:"https://docs.python.org/zh-cn/3/glossary.html#term-asynchronous-iterator",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__anext__",target:"_blank",rel:"noopener noreferrer"},tr={href:"https://docs.python.org/zh-cn/3/reference/simple_stmts.html#yield",target:"_blank",rel:"noopener noreferrer"},nr={href:"https://docs.python.org/zh-cn/3/reference/simple_stmts.html#yield",target:"_blank",rel:"noopener noreferrer"},or={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__anext__",target:"_blank",rel:"noopener noreferrer"},er={href:"https://www.python.org/dev/peps/pep-0492",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://www.python.org/dev/peps/pep-0525",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-for",target:"_blank",rel:"noopener noreferrer"},ir={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__aiter__",target:"_blank",rel:"noopener noreferrer"},pr={href:"https://docs.python.org/zh-cn/3/glossary.html#term-asynchronous-iterator",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://www.python.org/dev/peps/pep-0492",target:"_blank",rel:"noopener noreferrer"},gr={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__aiter__",target:"_blank",rel:"noopener noreferrer"},fr={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__anext__",target:"_blank",rel:"noopener noreferrer"},ar={href:"https://docs.python.org/zh-cn/3/glossary.html#term-awaitable",target:"_blank",rel:"noopener noreferrer"},ur={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-for",target:"_blank",rel:"noopener noreferrer"},yr={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__anext__",target:"_blank",rel:"noopener noreferrer"},mr={href:"https://docs.python.org/zh-cn/3/library/exceptions.html#StopAsyncIteration",target:"_blank",rel:"noopener noreferrer"},br={href:"https://www.python.org/dev/peps/pep-0492",target:"_blank",rel:"noopener noreferrer"},hr={href:"https://docs.python.org/zh-cn/3/reference/expressions.html#await",target:"_blank",rel:"noopener noreferrer"},kr={href:"https://docs.python.org/zh-cn/3/glossary.html#term-coroutine",target:"_blank",rel:"noopener noreferrer"},zr={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__await__",target:"_blank",rel:"noopener noreferrer"},vr={href:"https://www.python.org/dev/peps/pep-0492",target:"_blank",rel:"noopener noreferrer"},xr={href:"https://gvanrossum.github.io/",target:"_blank",rel:"noopener noreferrer"},Pr={href:"https://docs.python.org/zh-cn/3/glossary.html#term-file-object",target:"_blank",rel:"noopener noreferrer"},wr={href:"https://docs.python.org/zh-cn/3/glossary.html#term-bytes-like-object",target:"_blank",rel:"noopener noreferrer"},Er={href:"https://docs.python.org/zh-cn/3/library/io.html#io.BytesIO",target:"_blank",rel:"noopener noreferrer"},jr={href:"https://docs.python.org/zh-cn/3/library/gzip.html#gzip.GzipFile",target:"_blank",rel:"noopener noreferrer"},qr={href:"https://docs.python.org/zh-cn/3/glossary.html#term-text-file",target:"_blank",rel:"noopener noreferrer"},Ar={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#str",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://docs.python.org/zh-cn/3/c-api/buffer.html#bufferobjects",target:"_blank",rel:"noopener noreferrer"},Dr={href:"https://docs.python.org/zh-cn/3/glossary.html#term-contiguous",target:"_blank",rel:"noopener noreferrer"},Ir={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes",target:"_blank",rel:"noopener noreferrer"},Lr={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytearray",target:"_blank",rel:"noopener noreferrer"},Fr={href:"https://docs.python.org/zh-cn/3/library/array.html#array.array",target:"_blank",rel:"noopener noreferrer"},Br={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#memoryview",target:"_blank",rel:"noopener noreferrer"},Mr={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytearray",target:"_blank",rel:"noopener noreferrer"},Sr={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytearray",target:"_blank",rel:"noopener noreferrer"},Nr={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#memoryview",target:"_blank",rel:"noopener noreferrer"},Or={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes",target:"_blank",rel:"noopener noreferrer"},Tr={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes",target:"_blank",rel:"noopener noreferrer"},Gr={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#memoryview",target:"_blank",rel:"noopener noreferrer"},Zr={href:"https://docs.python.org/zh-cn/3/glossary.html#term-virtual-machine",target:"_blank",rel:"noopener noreferrer"},Rr={href:"https://docs.python.org/zh-cn/3/library/dis.html#bytecodes",target:"_blank",rel:"noopener noreferrer"},Vr={href:"https://docs.python.org/zh-cn/3/library/exceptions.html#TypeError",target:"_blank",rel:"noopener noreferrer"},Yr={href:"https://docs.python.org/zh-cn/3/library/math.html#module-math",target:"_blank",rel:"noopener noreferrer"},Jr={href:"https://docs.python.org/zh-cn/3/library/cmath.html#module-cmath",target:"_blank",rel:"noopener noreferrer"},Ur={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#with",target:"_blank",rel:"noopener noreferrer"},Wr={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__enter__",target:"_blank",rel:"noopener noreferrer"},Hr={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__exit__",target:"_blank",rel:"noopener noreferrer"},Kr={href:"https://www.python.org/dev/peps/pep-0343",target:"_blank",rel:"noopener noreferrer"},Qr={href:"https://docs.python.org/zh-cn/3/library/contextvars.html#module-contextvars",target:"_blank",rel:"noopener noreferrer"},Xr={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-def",target:"_blank",rel:"noopener noreferrer"},$r={href:"https://www.python.org/dev/peps/pep-0492",target:"_blank",rel:"noopener noreferrer"},_r={href:"https://docs.python.org/zh-cn/3/glossary.html#term-coroutine",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-def",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://docs.python.org/zh-cn/3/reference/expressions.html#await",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-for",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-with",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://www.python.org/dev/peps/pep-0492",target:"_blank",rel:"noopener noreferrer"},et={href:"https://www.python.org",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://docs.python.org/zh-cn/3/library/functions.html#classmethod",target:"_blank",rel:"noopener noreferrer"},st={href:"https://docs.python.org/zh-cn/3/library/functions.html#staticmethod",target:"_blank",rel:"noopener noreferrer"},it={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#function",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#class",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__get__",target:"_blank",rel:"noopener noreferrer"},gt={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__set__",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__delete__",target:"_blank",rel:"noopener noreferrer"},at={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#descriptors",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://docs.python.org/zh-cn/3/howto/descriptor.html#descriptorhowto",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__hash__",target:"_blank",rel:"noopener noreferrer"},mt={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__eq__",target:"_blank",rel:"noopener noreferrer"},bt={href:"https://docs.python.org/zh-cn/3/reference/expressions.html#comprehensions",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#dict.keys",target:"_blank",rel:"noopener noreferrer"},kt={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#dict.values",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#dict.items",target:"_blank",rel:"noopener noreferrer"},vt={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#dict-views",target:"_blank",rel:"noopener noreferrer"},xt={href:"https://docs.python.org/zh-cn/3/library/functions.html#type",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://docs.python.org/zh-cn/3/library/functions.html#isinstance",target:"_blank",rel:"noopener noreferrer"},wt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-abstract-base-class",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://docs.python.org/zh-cn/3/library/functions.html#hasattr",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-eafp",target:"_blank",rel:"noopener noreferrer"},qt={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try",target:"_blank",rel:"noopener noreferrer"},At={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except",target:"_blank",rel:"noopener noreferrer"},Ct={href:"https://docs.python.org/zh-cn/3/glossary.html#term-lbyl",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-statement",target:"_blank",rel:"noopener noreferrer"},It={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#while",target:"_blank",rel:"noopener noreferrer"},Lt={href:"https://docs.python.org/zh-cn/3/reference/lexical_analysis.html#f-strings",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://www.python.org/dev/peps/pep-0498",target:"_blank",rel:"noopener noreferrer"},Bt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-binary-file",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-binary-file",target:"_blank",rel:"noopener noreferrer"},St={href:"https://docs.python.org/zh-cn/3/glossary.html#term-text-file",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://docs.python.org/zh-cn/3/library/io.html#module-io",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://docs.python.org/zh-cn/3/library/functions.html#open",target:"_blank",rel:"noopener noreferrer"},Tt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-file-object",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-loader",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-meta-path-finder",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.meta_path",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-entry-finder",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.path_hooks",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://www.python.org/dev/peps/pep-0302",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://www.python.org/dev/peps/pep-0420",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://www.python.org/dev/peps/pep-0451",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://www.python.org/dev/peps/pep-0238",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-argument",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-parameter",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://docs.python.org/zh-cn/3/glossary.html#term-method",target:"_blank",rel:"noopener noreferrer"},$t={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#function",target:"_blank",rel:"noopener noreferrer"},_t={href:"https://docs.python.org/zh-cn/3/glossary.html#term-annotation",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://docs.python.org/zh-cn/3/glossary.html#term-type-hint",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://docs.python.org/zh-cn/3/library/functions.html#int",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://docs.python.org/zh-cn/3/library/functions.html#int",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#function",target:"_blank",rel:"noopener noreferrer"},on={href:"https://docs.python.org/zh-cn/3/glossary.html#term-variable-annotation",target:"_blank",rel:"noopener noreferrer"},en={href:"https://www.python.org/dev/peps/pep-0484",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://docs.python.org/zh-cn/3/library/__future__.html#module-__future__",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://docs.python.org/zh-cn/3/library/gc.html#module-gc",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-generator-iterator",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://docs.python.org/zh-cn/3/reference/simple_stmts.html#yield",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://docs.python.org/zh-cn/3/library/functions.html#next",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-generator",target:"_blank",rel:"noopener noreferrer"},an={href:"https://docs.python.org/zh-cn/3/reference/simple_stmts.html#yield",target:"_blank",rel:"noopener noreferrer"},un={href:"https://docs.python.org/zh-cn/3/glossary.html#term-single-dispatch",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://docs.python.org/zh-cn/3/library/functools.html#functools.singledispatch",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://www.python.org/dev/peps/pep-0443",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-type",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#list",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-type-hint",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-annotation",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://www.python.org/dev/peps/pep-0483",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://docs.python.org/zh-cn/3/library/typing.html#module-typing",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#types-genericalias",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-global-interpreter-lock",target:"_blank",rel:"noopener noreferrer"},En={href:"https://docs.python.org/zh-cn/3/glossary.html#term-cpython",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-bytecode",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#dict",target:"_blank",rel:"noopener noreferrer"},An={href:"https://docs.python.org/zh-cn/3/reference/import.html#pyc-invalidation",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__hash__",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__eq__",target:"_blank",rel:"noopener noreferrer"},In={href:"https://docs.python.org/zh-cn/3/library/functions.html#id",target:"_blank",rel:"noopener noreferrer"},Ln={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-entry",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-based-finder",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.path",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-finder",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-loader",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-interactive",target:"_blank",rel:"noopener noreferrer"},On={href:"https://docs.python.org/zh-cn/3/glossary.html#term-garbage-collection",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#list",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#str",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#tuple",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#dict",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-file-object",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__iter__",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-sequence",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__getitem__",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#for",target:"_blank",rel:"noopener noreferrer"},Hn={href:"https://docs.python.org/zh-cn/3/library/functions.html#zip",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://docs.python.org/zh-cn/3/library/functions.html#map",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://docs.python.org/zh-cn/3/library/functions.html#iter",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://docs.python.org/zh-cn/3/library/functions.html#iter",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://docs.python.org/zh-cn/3/glossary.html#term-iterator",target:"_blank",rel:"noopener noreferrer"},_n={href:"https://docs.python.org/zh-cn/3/glossary.html#term-sequence",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-generator",target:"_blank",rel:"noopener noreferrer"},ro={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#iterator.__next__",target:"_blank",rel:"noopener noreferrer"},to={href:"https://docs.python.org/zh-cn/3/library/functions.html#next",target:"_blank",rel:"noopener noreferrer"},no={href:"https://docs.python.org/zh-cn/3/library/exceptions.html#StopIteration",target:"_blank",rel:"noopener noreferrer"},oo={href:"https://docs.python.org/zh-cn/3/library/exceptions.html#StopIteration",target:"_blank",rel:"noopener noreferrer"},eo={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__iter__",target:"_blank",rel:"noopener noreferrer"},lo={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#list",target:"_blank",rel:"noopener noreferrer"},so={href:"https://docs.python.org/zh-cn/3/library/functions.html#iter",target:"_blank",rel:"noopener noreferrer"},io={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#for",target:"_blank",rel:"noopener noreferrer"},po={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#typeiter",target:"_blank",rel:"noopener noreferrer"},go={href:"https://docs.python.org/zh-cn/3/library/locale.html#locale.strxfrm",target:"_blank",rel:"noopener noreferrer"},fo={href:"https://docs.python.org/zh-cn/3/library/functions.html#min",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://docs.python.org/zh-cn/3/library/functions.html#max",target:"_blank",rel:"noopener noreferrer"},uo={href:"https://docs.python.org/zh-cn/3/library/functions.html#sorted",target:"_blank",rel:"noopener noreferrer"},yo={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#list.sort",target:"_blank",rel:"noopener noreferrer"},mo={href:"https://docs.python.org/zh-cn/3/library/heapq.html#heapq.merge",target:"_blank",rel:"noopener noreferrer"},bo={href:"https://docs.python.org/zh-cn/3/library/heapq.html#heapq.nsmallest",target:"_blank",rel:"noopener noreferrer"},ho={href:"https://docs.python.org/zh-cn/3/library/heapq.html#heapq.nlargest",target:"_blank",rel:"noopener noreferrer"},ko={href:"https://docs.python.org/zh-cn/3/library/itertools.html#itertools.groupby",target:"_blank",rel:"noopener noreferrer"},zo={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#str.lower",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://docs.python.org/zh-cn/3/reference/expressions.html#lambda",target:"_blank",rel:"noopener noreferrer"},xo={href:"https://docs.python.org/zh-cn/3/library/operator.html#module-operator",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://docs.python.org/zh-cn/3/library/operator.html#operator.attrgetter",target:"_blank",rel:"noopener noreferrer"},wo={href:"https://docs.python.org/zh-cn/3/library/operator.html#operator.itemgetter",target:"_blank",rel:"noopener noreferrer"},Eo={href:"https://docs.python.org/zh-cn/3/library/operator.html#operator.methodcaller",target:"_blank",rel:"noopener noreferrer"},jo={href:"https://docs.python.org/zh-cn/3/howto/sorting.html#sortinghowto",target:"_blank",rel:"noopener noreferrer"},qo={href:"https://docs.python.org/zh-cn/3/glossary.html#term-argument",target:"_blank",rel:"noopener noreferrer"},Ao={href:"https://docs.python.org/zh-cn/3/glossary.html#term-expression",target:"_blank",rel:"noopener noreferrer"},Co={href:"https://docs.python.org/zh-cn/3/glossary.html#term-eafp",target:"_blank",rel:"noopener noreferrer"},Do={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#if",target:"_blank",rel:"noopener noreferrer"},Io={href:"https://docs.python.org/zh-cn/3/glossary.html#term-sequence",target:"_blank",rel:"noopener noreferrer"},Lo={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#if",target:"_blank",rel:"noopener noreferrer"},Fo={href:"https://docs.python.org/zh-cn/3/glossary.html#term-finder",target:"_blank",rel:"noopener noreferrer"},Bo={href:"https://www.python.org/dev/peps/pep-0302",target:"_blank",rel:"noopener noreferrer"},Mo={href:"https://docs.python.org/zh-cn/3/glossary.html#term-abstract-base-class",target:"_blank",rel:"noopener noreferrer"},So={href:"https://docs.python.org/zh-cn/3/library/importlib.html#importlib.abc.Loader",target:"_blank",rel:"noopener noreferrer"},No={href:"https://docs.python.org/zh-cn/3/glossary.html#term-special-method",target:"_blank",rel:"noopener noreferrer"},Oo={href:"https://docs.python.org/zh-cn/3/library/collections.abc.html#collections.abc.Mapping",target:"_blank",rel:"noopener noreferrer"},To={href:"https://docs.python.org/zh-cn/3/library/collections.abc.html#collections.abc.MutableMapping",target:"_blank",rel:"noopener noreferrer"},Go={href:"https://docs.python.org/zh-cn/3/library/collections.abc.html#collections-abstract-base-classes",target:"_blank",rel:"noopener noreferrer"},Zo={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#dict",target:"_blank",rel:"noopener noreferrer"},Ro={href:"https://docs.python.org/zh-cn/3/library/collections.html#collections.defaultdict",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://docs.python.org/zh-cn/3/library/collections.html#collections.OrderedDict",target:"_blank",rel:"noopener noreferrer"},Yo={href:"https://docs.python.org/zh-cn/3/library/collections.html#collections.Counter",target:"_blank",rel:"noopener noreferrer"},Jo={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.meta_path",target:"_blank",rel:"noopener noreferrer"},Uo={href:"https://docs.python.org/zh-cn/3/glossary.html#term-finder",target:"_blank",rel:"noopener noreferrer"},Wo={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-entry-finder",target:"_blank",rel:"noopener noreferrer"},Ho={href:"https://docs.python.org/zh-cn/3/library/importlib.html#importlib.abc.MetaPathFinder",target:"_blank",rel:"noopener noreferrer"},Ko={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#metaclasses",target:"_blank",rel:"noopener noreferrer"},Qo={href:"https://docs.python.org/zh-cn/3/glossary.html#term-argument",target:"_blank",rel:"noopener noreferrer"},Xo={href:"https://docs.python.org/zh-cn/3/glossary.html#term-function",target:"_blank",rel:"noopener noreferrer"},$o={href:"https://docs.python.org/zh-cn/3/glossary.html#term-nested-scope",target:"_blank",rel:"noopener noreferrer"},_o={href:"https://www.python.org/download/releases/2.3/mro/",target:"_blank",rel:"noopener noreferrer"},co={href:"https://docs.python.org/zh-cn/3/glossary.html#term-importing",target:"_blank",rel:"noopener noreferrer"},re={href:"https://docs.python.org/zh-cn/3/glossary.html#term-package",target:"_blank",rel:"noopener noreferrer"},te={href:"https://docs.python.org/zh-cn/3/library/importlib.html#importlib.machinery.ModuleSpec",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://docs.python.org/zh-cn/3/glossary.html#term-method-resolution-order",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://docs.python.org/zh-cn/3/library/functions.html#id",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://docs.python.org/zh-cn/3/glossary.html#term-immutable",target:"_blank",rel:"noopener noreferrer"},le={href:"https://docs.python.org/zh-cn/3/library/time.html#time.localtime",target:"_blank",rel:"noopener noreferrer"},se={href:"https://docs.python.org/zh-cn/3/library/os.html#os.stat",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.float_info",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#tuple",target:"_blank",rel:"noopener noreferrer"},de={href:"https://docs.python.org/zh-cn/3/library/collections.html#collections.namedtuple",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://docs.python.org/zh-cn/3/library/functions.html#open",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://docs.python.org/zh-cn/3/library/os.html#os.open",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://docs.python.org/zh-cn/3/library/random.html#random.seed",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://docs.python.org/zh-cn/3/library/itertools.html#itertools.islice",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://docs.python.org/zh-cn/3/library/random.html#module-random",target:"_blank",rel:"noopener noreferrer"},me={href:"https://docs.python.org/zh-cn/3/library/itertools.html#module-itertools",target:"_blank",rel:"noopener noreferrer"},be={href:"https://www.python.org/dev/peps/pep-0420",target:"_blank",rel:"noopener noreferrer"},he={href:"https://docs.python.org/zh-cn/3/glossary.html#term-package",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://docs.python.org/zh-cn/3/glossary.html#term-regular-package",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://docs.python.org/zh-cn/3/glossary.html#term-module",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://docs.python.org/zh-cn/3/reference/simple_stmts.html#nonlocal",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__slots__",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__getattribute__",target:"_blank",rel:"noopener noreferrer"},we={href:"https://docs.python.org/zh-cn/3/glossary.html#term-new-style-class",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://docs.python.org/zh-cn/3/glossary.html#term-module",target:"_blank",rel:"noopener noreferrer"},je={href:"https://docs.python.org/zh-cn/3/glossary.html#term-regular-package",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://docs.python.org/zh-cn/3/glossary.html#term-namespace-package",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://docs.python.org/zh-cn/3/glossary.html#term-function",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://docs.python.org/zh-cn/3/glossary.html#term-argument",target:"_blank",rel:"noopener noreferrer"},De={href:"https://docs.python.org/zh-cn/3/glossary.html#term-argument",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://docs.python.org/zh-cn/3/glossary.html#term-argument",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://docs.python.org/zh-cn/3/glossary.html#term-argument",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://docs.python.org/zh-cn/3/faq/programming.html#faq-argument-vs-parameter",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://docs.python.org/zh-cn/3/library/inspect.html#inspect.Parameter",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#function",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://www.python.org/dev/peps/pep-0362",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://docs.python.org/zh-cn/3/glossary.html#term-import-path",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-based-finder",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.path_hooks",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-entry-hook",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://docs.python.org/zh-cn/3/glossary.html#term-finder",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-entry",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://docs.python.org/zh-cn/3/library/importlib.html#importlib.abc.PathEntryFinder",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-entry",target:"_blank",rel:"noopener noreferrer"},Je={href:"https://docs.python.org/zh-cn/3/glossary.html#term-path-entry-finder",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://docs.python.org/zh-cn/3/glossary.html#term-meta-path-finder",target:"_blank",rel:"noopener noreferrer"},We={href:"https://docs.python.org/zh-cn/3/glossary.html#term-import-path",target:"_blank",rel:"noopener noreferrer"},He={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#str",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://docs.python.org/zh-cn/3/library/os.html#os.PathLike",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://docs.python.org/zh-cn/3/library/os.html#os.PathLike",target:"_blank",rel:"noopener noreferrer"},$e={href:"https://docs.python.org/zh-cn/3/library/os.html#os.fspath",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#str",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes",target:"_blank",rel:"noopener noreferrer"},rl={href:"https://docs.python.org/zh-cn/3/library/os.html#os.fsdecode",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://docs.python.org/zh-cn/3/library/os.html#os.fsencode",target:"_blank",rel:"noopener noreferrer"},nl={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#str",target:"_blank",rel:"noopener noreferrer"},ol={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes",target:"_blank",rel:"noopener noreferrer"},el={href:"https://www.python.org/dev/peps/pep-0519",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://www.python.org/dev/peps/pep-0001",target:"_blank",rel:"noopener noreferrer"},sl={href:"https://www.python.org/dev/peps/pep-0420",target:"_blank",rel:"noopener noreferrer"},il={href:"https://docs.python.org/zh-cn/3/glossary.html#term-argument",target:"_blank",rel:"noopener noreferrer"},pl={href:"https://www.python.org/dev/peps/pep-0411",target:"_blank",rel:"noopener noreferrer"},dl={href:"https://docs.python.org/zh-cn/3/glossary.html#term-provisional-api",target:"_blank",rel:"noopener noreferrer"},gl={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#for",target:"_blank",rel:"noopener noreferrer"},fl={href:"https://www.python.org/dev/peps/pep-3155",target:"_blank",rel:"noopener noreferrer"},al={href:"https://docs.python.org/zh-cn/3/glossary.html#term-cpython",target:"_blank",rel:"noopener noreferrer"},ul={href:"https://docs.python.org/zh-cn/3/library/sys.html#module-sys",target:"_blank",rel:"noopener noreferrer"},yl={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.getrefcount",target:"_blank",rel:"noopener noreferrer"},ml={href:"https://docs.python.org/zh-cn/3/glossary.html#term-package",target:"_blank",rel:"noopener noreferrer"},bl={href:"https://docs.python.org/zh-cn/3/glossary.html#term-namespace-package",target:"_blank",rel:"noopener noreferrer"},hl={href:"https://docs.python.org/zh-cn/3/glossary.html#term-iterable",target:"_blank",rel:"noopener noreferrer"},kl={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__getitem__",target:"_blank",rel:"noopener noreferrer"},zl={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__len__",target:"_blank",rel:"noopener noreferrer"},vl={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#list",target:"_blank",rel:"noopener noreferrer"},xl={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#str",target:"_blank",rel:"noopener noreferrer"},Pl={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#tuple",target:"_blank",rel:"noopener noreferrer"},wl={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes",target:"_blank",rel:"noopener noreferrer"},El={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#dict",target:"_blank",rel:"noopener noreferrer"},jl={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__getitem__",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__len__",target:"_blank",rel:"noopener noreferrer"},Al={href:"https://docs.python.org/zh-cn/3/glossary.html#term-immutable",target:"_blank",rel:"noopener noreferrer"},Cl={href:"https://docs.python.org/zh-cn/3/library/collections.abc.html#collections.abc.Sequence",target:"_blank",rel:"noopener noreferrer"},Dl={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__getitem__",target:"_blank",rel:"noopener noreferrer"},Il={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__len__",target:"_blank",rel:"noopener noreferrer"},Ll={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__contains__",target:"_blank",rel:"noopener noreferrer"},Fl={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__reversed__",target:"_blank",rel:"noopener noreferrer"},Bl={href:"https://docs.python.org/zh-cn/3/library/abc.html#abc.ABCMeta.register",target:"_blank",rel:"noopener noreferrer"},Ml={href:"https://docs.python.org/zh-cn/3/reference/expressions.html#comprehensions",target:"_blank",rel:"noopener noreferrer"},Sl={href:"https://docs.python.org/zh-cn/3/glossary.html#term-generic-function",target:"_blank",rel:"noopener noreferrer"},Nl={href:"https://docs.python.org/zh-cn/3/glossary.html#term-sequence",target:"_blank",rel:"noopener noreferrer"},Ol={href:"https://docs.python.org/zh-cn/3/library/functions.html#slice",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#specialnames",target:"_blank",rel:"noopener noreferrer"},Gl={href:"https://docs.python.org/zh-cn/3/glossary.html#term-expression",target:"_blank",rel:"noopener noreferrer"},Zl={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#if",target:"_blank",rel:"noopener noreferrer"},Rl={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#while",target:"_blank",rel:"noopener noreferrer"},Vl={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#for",target:"_blank",rel:"noopener noreferrer"},Yl={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#str",target:"_blank",rel:"noopener noreferrer"},Jl={href:"https://docs.python.org/zh-cn/3/glossary.html#term-file-object",target:"_blank",rel:"noopener noreferrer"},Ul={href:"https://docs.python.org/zh-cn/3/glossary.html#term-text-encoding",target:"_blank",rel:"noopener noreferrer"},Wl={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.stdin",target:"_blank",rel:"noopener noreferrer"},Hl={href:"https://docs.python.org/zh-cn/3/library/sys.html#sys.stdout",target:"_blank",rel:"noopener noreferrer"},Kl={href:"https://docs.python.org/zh-cn/3/library/io.html#io.StringIO",target:"_blank",rel:"noopener noreferrer"},Ql={href:"https://docs.python.org/zh-cn/3/glossary.html#term-binary-file",target:"_blank",rel:"noopener noreferrer"},Xl={href:"https://docs.python.org/zh-cn/3/glossary.html#term-bytes-like-object",target:"_blank",rel:"noopener noreferrer"},$l={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#instance.__class__",target:"_blank",rel:"noopener noreferrer"},_l={href:"https://docs.python.org/zh-cn/3/glossary.html#term-type-hint",target:"_blank",rel:"noopener noreferrer"},cl={href:"https://docs.python.org/zh-cn/3/library/typing.html#module-typing",target:"_blank",rel:"noopener noreferrer"},rs={href:"https://www.python.org/dev/peps/pep-0484",target:"_blank",rel:"noopener noreferrer"},ts={href:"https://docs.python.org/zh-cn/3/glossary.html#term-annotation",target:"_blank",rel:"noopener noreferrer"},ns={href:"https://docs.python.org/zh-cn/3/library/typing.html#typing.get_type_hints",target:"_blank",rel:"noopener noreferrer"},os={href:"https://docs.python.org/zh-cn/3/library/typing.html#module-typing",target:"_blank",rel:"noopener noreferrer"},es={href:"https://www.python.org/dev/peps/pep-0484",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://www.python.org/dev/peps/pep-0278",target:"_blank",rel:"noopener noreferrer"},ss={href:"https://www.python.org/dev/peps/pep-3116",target:"_blank",rel:"noopener noreferrer"},is={href:"https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes.splitlines",target:"_blank",rel:"noopener noreferrer"},ps={href:"https://docs.python.org/zh-cn/3/glossary.html#term-annotation",target:"_blank",rel:"noopener noreferrer"},ds={href:"https://docs.python.org/zh-cn/3/glossary.html#term-type-hint",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://docs.python.org/zh-cn/3/library/functions.html#int",target:"_blank",rel:"noopener noreferrer"},fs={href:"https://docs.python.org/zh-cn/3/reference/simple_stmts.html#annassign",target:"_blank",rel:"noopener noreferrer"},as={href:"https://docs.python.org/zh-cn/3/glossary.html#term-function-annotation",target:"_blank",rel:"noopener noreferrer"},us={href:"https://www.python.org/dev/peps/pep-0484",target:"_blank",rel:"noopener noreferrer"},ys={href:"https://www.python.org/dev/peps/pep-0526",target:"_blank",rel:"noopener noreferrer"},ms={href:"https://docs.python.org/zh-cn/3/library/venv.html#module-venv",target:"_blank",rel:"noopener noreferrer"},bs={href:"https://docs.python.org/zh-cn/3/glossary.html#term-bytecode",target:"_blank",rel:"noopener noreferrer"};function hs(ks,r){const o=d("ExternalLinkIcon");return p(),i("div",null,[r[1039]||(r[1039]=t("h1",{id:"python",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#python"},[t("span",null,"Python")])],-1)),r[1040]||(r[1040]=t("h1",{id:"目录",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#目录"},[t("span",null,"目录")])],-1)),t("h1",f,[t("a",a,[t("span",null,[r[1]||(r[1]=n("术语对照表")),t("a",u,[r[0]||(r[0]=n("¶")),e(o)])])])]),r[1041]||(r[1041]=l('<h2 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span>Default</span></a></h2><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span><code>&gt;&gt;&gt;</code></span></a></h3><p>交互式终端中默认的 Python 提示符。往往会显示于能以交互方式在解释器里执行的样例代码之前。</p><h3 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span><code>...</code></span></a></h3>',4)),t("p",null,[r[3]||(r[3]=n("可以是指： 交互式终端中输入特殊代码行时默认的 Python 提示符，包括：缩进的代码块，成对的分隔符之内（圆括号、方括号、花括号或三重引号），或是指定一个装饰器之后。 ")),t("a",y,[r[2]||(r[2]=t("code",null,"Ellipsis",-1)),e(o)]),r[4]||(r[4]=n(" 内置常量。"))]),r[1042]||(r[1042]=t("h3",{id:"_2to3",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_2to3"},[t("span",null,"2to3")])],-1)),t("p",null,[r[7]||(r[7]=n("一个将 Python 2.x 代码转换为 Python 3.x 代码的工具，能够处理大部分通过解析源码并遍历解析树可检测到的不兼容问题。 2to3 包含在标准库中，模块名为 ")),t("a",m,[r[5]||(r[5]=t("code",null,"lib2to3",-1)),e(o)]),r[8]||(r[8]=n("；并提供一个独立入口点 ")),r[9]||(r[9]=t("code",null,"Tools/scripts/2to3",-1)),r[10]||(r[10]=n("。参见 ")),t("a",b,[r[6]||(r[6]=n("2to3 - 自动将 Python 2 代码转为 Python 3 代码")),e(o)]),r[11]||(r[11]=n("。"))]),r[1043]||(r[1043]=t("h3",{id:"abstract-base-class-抽象基类",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#abstract-base-class-抽象基类"},[t("span",null,"abstract base class -- 抽象基类")])],-1)),t("p",null,[r[23]||(r[23]=n("抽象基类简称 ABC，是对 ")),t("a",h,[r[12]||(r[12]=n("duck-typing")),e(o)]),r[24]||(r[24]=n(" 的补充，它提供了一种定义接口的新方式，相比之下其他技巧例如 ")),t("a",k,[r[13]||(r[13]=t("code",null,"hasattr()",-1)),e(o)]),r[25]||(r[25]=n(" 显得过于笨拙或有微妙错误（例如使用 ")),t("a",z,[r[14]||(r[14]=n("魔术方法")),e(o)]),r[26]||(r[26]=n("）。ABC 引入了虚拟子类，这种类并非继承自其他类，但却仍能被 ")),t("a",v,[r[15]||(r[15]=t("code",null,"isinstance()",-1)),e(o)]),r[27]||(r[27]=n(" 和 ")),t("a",x,[r[16]||(r[16]=t("code",null,"issubclass()",-1)),e(o)]),r[28]||(r[28]=n(" 所认可；详见 ")),t("a",P,[r[17]||(r[17]=t("code",null,"abc",-1)),e(o)]),r[29]||(r[29]=n(" 模块文档。Python 自带许多内置的 ABC 用于实现数据结构（在 ")),t("a",w,[r[18]||(r[18]=t("code",null,"collections.abc",-1)),e(o)]),r[30]||(r[30]=n(" 模块中）、数字（在 ")),t("a",E,[r[19]||(r[19]=t("code",null,"numbers",-1)),e(o)]),r[31]||(r[31]=n(" 模块中）、流（在 ")),t("a",j,[r[20]||(r[20]=t("code",null,"io",-1)),e(o)]),r[32]||(r[32]=n(" 模块中）、导入查找器和加载器（在 ")),t("a",q,[r[21]||(r[21]=t("code",null,"importlib.abc",-1)),e(o)]),r[33]||(r[33]=n(" 模块中）。你可以使用 ")),t("a",A,[r[22]||(r[22]=t("code",null,"abc",-1)),e(o)]),r[34]||(r[34]=n(" 模块来创建自己的 ABC。"))]),r[1044]||(r[1044]=t("h3",{id:"annotation-注解",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#annotation-注解"},[t("span",null,"annotation -- 注解")])],-1)),t("p",null,[r[40]||(r[40]=n("关联到某个变量、类属性、函数形参或返回值的标签，被约定作为 ")),t("a",C,[r[35]||(r[35]=n("type hint")),e(o)]),r[41]||(r[41]=n(" 来使用。 局部变量的标注在运行时不可访问，但全局变量、类属性和函数的标注会分别存放模块、类和函数的 ")),r[42]||(r[42]=t("code",null,"__annotations__",-1)),r[43]||(r[43]=n(" 特殊属性中。 参见 ")),t("a",D,[r[36]||(r[36]=n("variable annotation")),e(o)]),r[44]||(r[44]=n("、")),t("a",I,[r[37]||(r[37]=n("function annotation")),e(o)]),r[45]||(r[45]=n("、")),t("a",L,[r[38]||(r[38]=t("strong",null,"PEP 484",-1)),e(o)]),r[46]||(r[46]=n(" 和 ")),t("a",F,[r[39]||(r[39]=t("strong",null,"PEP 526",-1)),e(o)]),r[47]||(r[47]=n("，对此功能均有介绍。"))]),r[1045]||(r[1045]=t("h3",{id:"argument-参数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#argument-参数"},[t("span",null,"argument -- 参数")])],-1)),t("p",null,[r[56]||(r[56]=n("在调用函数时传给 ")),t("a",B,[r[48]||(r[48]=n("function")),e(o)]),r[57]||(r[57]=n(" （或 ")),t("a",M,[r[49]||(r[49]=n("method")),e(o)]),r[58]||(r[58]=n(" ）的值。参数分为两种： ")),r[59]||(r[59]=t("em",null,"关键字参数",-1)),r[60]||(r[60]=n(": 在函数调用中前面带有标识符（例如 ")),r[61]||(r[61]=t("code",null,"name=",-1)),r[62]||(r[62]=n("）或者作为包含在前面带有 ")),r[63]||(r[63]=t("code",null,"**",-1)),r[64]||(r[64]=n(" 的字典里的值传入。举例来说，")),r[65]||(r[65]=t("code",null,"3",-1)),r[66]||(r[66]=n(" 和 ")),r[67]||(r[67]=t("code",null,"5",-1)),r[68]||(r[68]=n(" 在以下对 ")),t("a",S,[r[50]||(r[50]=t("code",null,"complex()",-1)),e(o)]),r[69]||(r[69]=n(" 的调用中均属于关键字参数: ")),r[70]||(r[70]=t("code",null,"complex(real=3, imag=5) complex(**{'real': 3, 'imag': 5}) ",-1)),r[71]||(r[71]=n()),r[72]||(r[72]=t("em",null,"位置参数",-1)),r[73]||(r[73]=n(": 不属于关键字参数的参数。位置参数可出现于参数列表的开头以及/或者作为前面带有 ")),r[74]||(r[74]=t("code",null,"*",-1)),r[75]||(r[75]=n(" 的 ")),t("a",N,[r[51]||(r[51]=n("iterable")),e(o)]),r[76]||(r[76]=n(" 里的元素被传入。举例来说，")),r[77]||(r[77]=t("code",null,"3",-1)),r[78]||(r[78]=n(" 和 ")),r[79]||(r[79]=t("code",null,"5",-1)),r[80]||(r[80]=n(" 在以下调用中均属于位置参数: ")),r[81]||(r[81]=t("code",null,"complex(3, 5) complex(*(3, 5)) ",-1)),r[82]||(r[82]=n(" 参数会被赋值给函数体中对应的局部变量。有关赋值规则参见 ")),t("a",O,[r[52]||(r[52]=n("调用")),e(o)]),r[83]||(r[83]=n(" 一节。根据语法，任何表达式都可用来表示一个参数；最终算出的值会被赋给对应的局部变量。 另参见 ")),t("a",T,[r[53]||(r[53]=n("parameter")),e(o)]),r[84]||(r[84]=n(" 术语表条目，常见问题中 ")),t("a",G,[r[54]||(r[54]=n("参数与形参的区别")),e(o)]),r[85]||(r[85]=n(" 以及 ")),t("a",Z,[r[55]||(r[55]=t("strong",null,"PEP 362",-1)),e(o)]),r[86]||(r[86]=n("。"))]),r[1046]||(r[1046]=t("h3",{id:"asynchronous-context-manager-异步上下文管理器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#asynchronous-context-manager-异步上下文管理器"},[t("span",null,"asynchronous context manager -- 异步上下文管理器")])],-1)),t("p",null,[r[91]||(r[91]=n("此种对象通过定义 ")),t("a",R,[r[87]||(r[87]=t("code",null,"__aenter__()",-1)),e(o)]),r[92]||(r[92]=n(" 和 ")),t("a",V,[r[88]||(r[88]=t("code",null,"__aexit__()",-1)),e(o)]),r[93]||(r[93]=n(" 方法来对 ")),t("a",Y,[r[89]||(r[89]=t("code",null,"async with",-1)),e(o)]),r[94]||(r[94]=n(" 语句中的环境进行控制。由 ")),t("a",J,[r[90]||(r[90]=t("strong",null,"PEP 492",-1)),e(o)]),r[95]||(r[95]=n(" 引入。"))]),r[1047]||(r[1047]=t("h3",{id:"asynchronous-generator-异步生成器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#asynchronous-generator-异步生成器"},[t("span",null,"asynchronous generator -- 异步生成器")])],-1)),t("p",null,[r[103]||(r[103]=n("返回值为 ")),t("a",U,[r[96]||(r[96]=n("asynchronous generator iterator")),e(o)]),r[104]||(r[104]=n(" 的函数。它与使用 ")),t("a",W,[r[97]||(r[97]=t("code",null,"async def",-1)),e(o)]),r[105]||(r[105]=n(" 定义的协程函数很相似，不同之处在于它包含 ")),t("a",H,[r[98]||(r[98]=t("code",null,"yield",-1)),e(o)]),r[106]||(r[106]=n(" 表达式以产生一系列可在 ")),t("a",K,[r[99]||(r[99]=t("code",null,"async for",-1)),e(o)]),r[107]||(r[107]=n(" 循环中使用的值。 此术语通常是指异步生成器函数，但在某些情况下则可能是指 ")),r[108]||(r[108]=t("em",null,"异步生成器迭代器",-1)),r[109]||(r[109]=n("。如果需要清楚表达具体含义，请使用全称以避免歧义。 一个异步生成器函数可能包含 ")),t("a",Q,[r[100]||(r[100]=t("code",null,"await",-1)),e(o)]),r[110]||(r[110]=n(" 表达式或者 ")),t("a",X,[r[101]||(r[101]=t("code",null,"async for",-1)),e(o)]),r[111]||(r[111]=n(" 以及 ")),t("a",$,[r[102]||(r[102]=t("code",null,"async with",-1)),e(o)]),r[112]||(r[112]=n(" 语句。"))]),r[1048]||(r[1048]=t("h3",{id:"asynchronous-generator-iterator-异步生成器迭代器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#asynchronous-generator-iterator-异步生成器迭代器"},[t("span",null,"asynchronous generator iterator -- 异步生成器迭代器")])],-1)),t("p",null,[t("a",_,[r[113]||(r[113]=n("asynchronous generator")),e(o)]),r[121]||(r[121]=n(" 函数所创建的对象。 此对象属于 ")),t("a",c,[r[114]||(r[114]=n("asynchronous iterator")),e(o)]),r[122]||(r[122]=n("，当使用 ")),t("a",rr,[r[115]||(r[115]=t("code",null,"__anext__()",-1)),e(o)]),r[123]||(r[123]=n(" 方法调用时会返回一个可等待对象来执行异步生成器函数的代码直到下一个 ")),t("a",tr,[r[116]||(r[116]=t("code",null,"yield",-1)),e(o)]),r[124]||(r[124]=n(" 表达式。 每个 ")),t("a",nr,[r[117]||(r[117]=t("code",null,"yield",-1)),e(o)]),r[125]||(r[125]=n(" 会临时暂停处理，记住当前位置执行状态 (包括局部变量和挂起的 try 语句)。当该 ")),r[126]||(r[126]=t("em",null,"异步生成器迭代器",-1)),r[127]||(r[127]=n(" 与其他 ")),t("a",or,[r[118]||(r[118]=t("code",null,"__anext__()",-1)),e(o)]),r[128]||(r[128]=n(" 返回的可等待对象有效恢复时，它会从离开位置继续执行。参见 ")),t("a",er,[r[119]||(r[119]=t("strong",null,"PEP 492",-1)),e(o)]),r[129]||(r[129]=n(" 和 ")),t("a",lr,[r[120]||(r[120]=t("strong",null,"PEP 525",-1)),e(o)]),r[130]||(r[130]=n("。"))]),r[1049]||(r[1049]=t("h3",{id:"asynchronous-iterable-异步可迭代对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#asynchronous-iterable-异步可迭代对象"},[t("span",null,"asynchronous iterable -- 异步可迭代对象")])],-1)),t("p",null,[r[135]||(r[135]=n("可在 ")),t("a",sr,[r[131]||(r[131]=t("code",null,"async for",-1)),e(o)]),r[136]||(r[136]=n(" 语句中被使用的对象。必须通过它的 ")),t("a",ir,[r[132]||(r[132]=t("code",null,"__aiter__()",-1)),e(o)]),r[137]||(r[137]=n(" 方法返回一个 ")),t("a",pr,[r[133]||(r[133]=n("asynchronous iterator")),e(o)]),r[138]||(r[138]=n("。由 ")),t("a",dr,[r[134]||(r[134]=t("strong",null,"PEP 492",-1)),e(o)]),r[139]||(r[139]=n(" 引入。"))]),r[1050]||(r[1050]=t("h3",{id:"asynchronous-iterator-异步迭代器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#asynchronous-iterator-异步迭代器"},[t("span",null,"asynchronous iterator -- 异步迭代器")])],-1)),t("p",null,[r[147]||(r[147]=n("实现了 ")),t("a",gr,[r[140]||(r[140]=t("code",null,"__aiter__()",-1)),e(o)]),r[148]||(r[148]=n(" 和 ")),t("a",fr,[r[141]||(r[141]=t("code",null,"__anext__()",-1)),e(o)]),r[149]||(r[149]=n(" 方法的对象。")),r[150]||(r[150]=t("code",null,"__anext__",-1)),r[151]||(r[151]=n(" 必须返回一个 ")),t("a",ar,[r[142]||(r[142]=n("awaitable")),e(o)]),r[152]||(r[152]=n(" 对象。")),t("a",ur,[r[143]||(r[143]=t("code",null,"async for",-1)),e(o)]),r[153]||(r[153]=n(" 会处理异步迭代器的 ")),t("a",yr,[r[144]||(r[144]=t("code",null,"__anext__()",-1)),e(o)]),r[154]||(r[154]=n(" 方法所返回的可等待对象，直到其引发一个 ")),t("a",mr,[r[145]||(r[145]=t("code",null,"StopAsyncIteration",-1)),e(o)]),r[155]||(r[155]=n(" 异常。由 ")),t("a",br,[r[146]||(r[146]=t("strong",null,"PEP 492",-1)),e(o)]),r[156]||(r[156]=n(" 引入。"))]),r[1051]||(r[1051]=t("h3",{id:"attribute-属性",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#attribute-属性"},[t("span",null,"attribute -- 属性")])],-1)),r[1052]||(r[1052]=t("p",null,[n("关联到一个对象的值，可以使用点号表达式通过其名称来引用。例如，如果一个对象 "),t("em",null,"o"),n(" 具有一个属性 "),t("em",null,"a"),n("，就可以用 "),t("em",null,"o.a"),n(" 来引用它。")],-1)),r[1053]||(r[1053]=t("h3",{id:"awaitable-可等待对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#awaitable-可等待对象"},[t("span",null,"awaitable -- 可等待对象")])],-1)),t("p",null,[r[161]||(r[161]=n("能在 ")),t("a",hr,[r[157]||(r[157]=t("code",null,"await",-1)),e(o)]),r[162]||(r[162]=n(" 表达式中使用的对象。可以是 ")),t("a",kr,[r[158]||(r[158]=n("coroutine")),e(o)]),r[163]||(r[163]=n(" 或是具有 ")),t("a",zr,[r[159]||(r[159]=t("code",null,"__await__()",-1)),e(o)]),r[164]||(r[164]=n(" 方法的对象。参见 ")),t("a",vr,[r[160]||(r[160]=t("strong",null,"PEP 492",-1)),e(o)]),r[165]||(r[165]=n("。"))]),r[1054]||(r[1054]=t("h3",{id:"bdfl",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#bdfl"},[t("span",null,"BDFL")])],-1)),t("p",null,[r[167]||(r[167]=n("“终身仁慈独裁者”的英文缩写，即 ")),t("a",xr,[r[166]||(r[166]=n("Guido van Rossum")),e(o)]),r[168]||(r[168]=n("，Python 的创造者。"))]),r[1055]||(r[1055]=t("h3",{id:"binary-file-二进制文件",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#binary-file-二进制文件"},[t("span",null,"binary file -- 二进制文件")])],-1)),t("p",null,[t("a",Pr,[r[169]||(r[169]=n("file object")),e(o)]),r[175]||(r[175]=n(" 能够读写 ")),t("a",wr,[r[170]||(r[170]=n("字节类对象")),e(o)]),r[176]||(r[176]=n("。二进制文件的例子包括以二进制模式（")),r[177]||(r[177]=t("code",null,"'rb'",-1)),r[178]||(r[178]=n(", ")),r[179]||(r[179]=t("code",null,"'wb'",-1)),r[180]||(r[180]=n(" or ")),r[181]||(r[181]=t("code",null,"'rb+'",-1)),r[182]||(r[182]=n("）打开的文件、")),r[183]||(r[183]=t("code",null,"sys.stdin.buffer",-1)),r[184]||(r[184]=n("、")),r[185]||(r[185]=t("code",null,"sys.stdout.buffer",-1)),r[186]||(r[186]=n(" 以及 ")),t("a",Er,[r[171]||(r[171]=t("code",null,"io.BytesIO",-1)),e(o)]),r[187]||(r[187]=n(" 和 ")),t("a",jr,[r[172]||(r[172]=t("code",null,"gzip.GzipFile",-1)),e(o)]),r[188]||(r[188]=n(" 的实例。 另请参见 ")),t("a",qr,[r[173]||(r[173]=n("text file")),e(o)]),r[189]||(r[189]=n(" 了解能够读写 ")),t("a",Ar,[r[174]||(r[174]=t("code",null,"str",-1)),e(o)]),r[190]||(r[190]=n(" 对象的文件对象。"))]),r[1056]||(r[1056]=t("h3",{id:"bytes-like-object-字节类对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#bytes-like-object-字节类对象"},[t("span",null,"bytes-like object -- 字节类对象")])],-1)),t("p",null,[r[203]||(r[203]=n("支持 ")),t("a",Cr,[r[191]||(r[191]=n("缓冲协议")),e(o)]),r[204]||(r[204]=n(" 并且能导出 C-")),t("a",Dr,[r[192]||(r[192]=n("contiguous")),e(o)]),r[205]||(r[205]=n(" 缓冲的对象。这包括所有 ")),t("a",Ir,[r[193]||(r[193]=t("code",null,"bytes",-1)),e(o)]),r[206]||(r[206]=n("、")),t("a",Lr,[r[194]||(r[194]=t("code",null,"bytearray",-1)),e(o)]),r[207]||(r[207]=n(" 和 ")),t("a",Fr,[r[195]||(r[195]=t("code",null,"array.array",-1)),e(o)]),r[208]||(r[208]=n(" 对象，以及许多普通 ")),t("a",Br,[r[196]||(r[196]=t("code",null,"memoryview",-1)),e(o)]),r[209]||(r[209]=n(" 对象。字节类对象可在多种二进制数据操作中使用；这些操作包括压缩、保存为二进制文件以及通过套接字发送等。 某些操作需要可变的二进制数据。这种对象在文档中常被称为“可读写字节类对象”。可变缓冲对象的例子包括 ")),t("a",Mr,[r[197]||(r[197]=t("code",null,"bytearray",-1)),e(o)]),r[210]||(r[210]=n(" 以及 ")),t("a",Sr,[r[198]||(r[198]=t("code",null,"bytearray",-1)),e(o)]),r[211]||(r[211]=n(" 的 ")),t("a",Nr,[r[199]||(r[199]=t("code",null,"memoryview",-1)),e(o)]),r[212]||(r[212]=n('。其他操作要求二进制数据存放于不可变对象 ("只读字节类对象")；这种对象的例子包括 ')),t("a",Or,[r[200]||(r[200]=t("code",null,"bytes",-1)),e(o)]),r[213]||(r[213]=n(" 以及 ")),t("a",Tr,[r[201]||(r[201]=t("code",null,"bytes",-1)),e(o)]),r[214]||(r[214]=n(" 对象的 ")),t("a",Gr,[r[202]||(r[202]=t("code",null,"memoryview",-1)),e(o)]),r[215]||(r[215]=n("。"))]),r[1057]||(r[1057]=t("h3",{id:"bytecode-字节码",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#bytecode-字节码"},[t("span",null,"bytecode -- 字节码")])],-1)),t("p",null,[r[218]||(r[218]=n("Python 源代码会被编译为字节码，即 CPython 解释器中表示 Python 程序的内部代码。字节码还会缓存在 ")),r[219]||(r[219]=t("code",null,".pyc",-1)),r[220]||(r[220]=n(' 文件中，这样第二次执行同一文件时速度更快（可以免去将源码重新编译为字节码）。这种 "中间语言" 运行在根据字节码执行相应机器码的 ')),t("a",Zr,[r[216]||(r[216]=n("virtual machine")),e(o)]),r[221]||(r[221]=n(" 之上。请注意不同 Python 虚拟机上的字节码不一定通用，也不一定能在不同 Python 版本上兼容。 字节码指令列表可以在 ")),t("a",Rr,[r[217]||(r[217]=n("dis 模块")),e(o)]),r[222]||(r[222]=n(" 的文档中查看。"))]),r[1058]||(r[1058]=l('<h3 id="callback-回调" tabindex="-1"><a class="header-anchor" href="#callback-回调"><span>callback -- 回调</span></a></h3><p>一个作为参数被传入以用以在未来的某个时刻被调用的子例程函数。</p><h3 id="class-类" tabindex="-1"><a class="header-anchor" href="#class-类"><span>class -- 类</span></a></h3><p>用来创建用户定义对象的模板。类定义通常包含对该类的实例进行操作的方法定义。</p><h3 id="class-variable-类变量" tabindex="-1"><a class="header-anchor" href="#class-variable-类变量"><span>class variable -- 类变量</span></a></h3><p>在类中定义的变量，并且仅限在类的层级上修改 (而不是在类的实例中修改)。</p><h3 id="coercion-强制类型转换" tabindex="-1"><a class="header-anchor" href="#coercion-强制类型转换"><span>coercion -- 强制类型转换</span></a></h3>',7)),t("p",null,[r[224]||(r[224]=n("在包含两个相同类型参数的操作中，一种类型的实例隐式地转换为另一种类型。例如，")),r[225]||(r[225]=t("code",null,"int(3.15)",-1)),r[226]||(r[226]=n(" 是将原浮点数转换为整型数 ")),r[227]||(r[227]=t("code",null,"3",-1)),r[228]||(r[228]=n("，但在 ")),r[229]||(r[229]=t("code",null,"3+4.5",-1)),r[230]||(r[230]=n(" 中，参数的类型不一致（一个是 int, 一个是 float），两者必须转换为相同类型才能相加，否则将引发 ")),t("a",Vr,[r[223]||(r[223]=t("code",null,"TypeError",-1)),e(o)]),r[231]||(r[231]=n("。如果没有强制类型转换机制，程序员必须将所有可兼容参数归一化为相同类型，例如要写成 ")),r[232]||(r[232]=t("code",null,"float(3)+4.5",-1)),r[233]||(r[233]=n(" 而不是 ")),r[234]||(r[234]=t("code",null,"3+4.5",-1)),r[235]||(r[235]=n("。"))]),r[1059]||(r[1059]=t("h3",{id:"complex-number-复数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#complex-number-复数"},[t("span",null,"complex number -- 复数")])],-1)),t("p",null,[r[238]||(r[238]=n("对普通实数系统的扩展，其中所有数字都被表示为一个实部和一个虚部的和。虚数是虚数单位（")),r[239]||(r[239]=t("code",null,"-1",-1)),r[240]||(r[240]=n(" 的平方根）的实倍数，通常在数学中写为 ")),r[241]||(r[241]=t("code",null,"i",-1)),r[242]||(r[242]=n("，在工程学中写为 ")),r[243]||(r[243]=t("code",null,"j",-1)),r[244]||(r[244]=n("。Python 内置了对复数的支持，采用工程学标记方式；虚部带有一个 ")),r[245]||(r[245]=t("code",null,"j",-1)),r[246]||(r[246]=n(" 后缀，例如 ")),r[247]||(r[247]=t("code",null,"3+1j",-1)),r[248]||(r[248]=n("。如果需要 ")),t("a",Yr,[r[236]||(r[236]=t("code",null,"math",-1)),e(o)]),r[249]||(r[249]=n(" 模块内对象的对应复数版本，请使用 ")),t("a",Jr,[r[237]||(r[237]=t("code",null,"cmath",-1)),e(o)]),r[250]||(r[250]=n("，复数的使用是一个比较高级的数学特性。如果你感觉没有必要，忽略它们也几乎不会有任何问题。"))]),r[1060]||(r[1060]=t("h3",{id:"context-manager-上下文管理器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#context-manager-上下文管理器"},[t("span",null,"context manager -- 上下文管理器")])],-1)),t("p",null,[r[255]||(r[255]=n("在 ")),t("a",Ur,[r[251]||(r[251]=t("code",null,"with",-1)),e(o)]),r[256]||(r[256]=n(" 语句中使用，通过定义 ")),t("a",Wr,[r[252]||(r[252]=t("code",null,"__enter__()",-1)),e(o)]),r[257]||(r[257]=n(" 和 ")),t("a",Hr,[r[253]||(r[253]=t("code",null,"__exit__()",-1)),e(o)]),r[258]||(r[258]=n(" 方法来控制环境状态的对象。参见 ")),t("a",Kr,[r[254]||(r[254]=t("strong",null,"PEP 343",-1)),e(o)]),r[259]||(r[259]=n("。"))]),r[1061]||(r[1061]=t("h3",{id:"context-variable-上下文变量",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#context-variable-上下文变量"},[t("span",null,"context variable -- 上下文变量")])],-1)),t("p",null,[r[261]||(r[261]=n("一种根据其所属的上下文可以具有不同的值的变量。 这类似于在线程局部存储中每个执行线程可以具有不同的变量值。 不过，对于上下文变量来说，一个执行线程中可能会有多个上下文，而上下文变量的主要用途是对并发异步任务中变量进行追踪。 参见 ")),t("a",Qr,[r[260]||(r[260]=t("code",null,"contextvars",-1)),e(o)]),r[262]||(r[262]=n("。"))]),r[1062]||(r[1062]=t("h3",{id:"contiguous-连续",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#contiguous-连续"},[t("span",null,"contiguous -- 连续")])],-1)),r[1063]||(r[1063]=t("p",null,[n("一个缓冲如果是 "),t("em",null,"C 连续"),n(" 或 "),t("em",null,"Fortran 连续"),n(" 就会被认为是连续的。零维缓冲是 C 和 Fortran 连续的。在一维数组中，所有条目必须在内存中彼此相邻地排列，采用从零开始的递增索引顺序。在多维 C-连续数组中，当按内存地址排列时用最后一个索引访问条目时速度最快。但是在 Fortran 连续数组中则是用第一个索引最快。")],-1)),r[1064]||(r[1064]=t("h3",{id:"coroutine-协程",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#coroutine-协程"},[t("span",null,"coroutine -- 协程")])],-1)),t("p",null,[r[265]||(r[265]=n("协程是子例程的更一般形式。 子例程可以在某一点进入并在另一点退出。 协程则可以在许多不同的点上进入、退出和恢复。 它们可通过 ")),t("a",Xr,[r[263]||(r[263]=t("code",null,"async def",-1)),e(o)]),r[266]||(r[266]=n(" 语句来实现。 参见 ")),t("a",$r,[r[264]||(r[264]=t("strong",null,"PEP 492",-1)),e(o)]),r[267]||(r[267]=n("。"))]),r[1065]||(r[1065]=t("h3",{id:"coroutine-function-协程函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#coroutine-function-协程函数"},[t("span",null,"coroutine function -- 协程函数")])],-1)),t("p",null,[r[274]||(r[274]=n("返回一个 ")),t("a",_r,[r[268]||(r[268]=n("coroutine")),e(o)]),r[275]||(r[275]=n(" 对象的函数。协程函数可通过 ")),t("a",cr,[r[269]||(r[269]=t("code",null,"async def",-1)),e(o)]),r[276]||(r[276]=n(" 语句来定义，并可能包含 ")),t("a",rt,[r[270]||(r[270]=t("code",null,"await",-1)),e(o)]),r[277]||(r[277]=n("、")),t("a",tt,[r[271]||(r[271]=t("code",null,"async for",-1)),e(o)]),r[278]||(r[278]=n(" 和 ")),t("a",nt,[r[272]||(r[272]=t("code",null,"async with",-1)),e(o)]),r[279]||(r[279]=n(" 关键字。这些特性是由 ")),t("a",ot,[r[273]||(r[273]=t("strong",null,"PEP 492",-1)),e(o)]),r[280]||(r[280]=n(" 引入的。"))]),r[1066]||(r[1066]=t("h3",{id:"cpython",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#cpython"},[t("span",null,"CPython")])],-1)),t("p",null,[r[282]||(r[282]=n("Python 编程语言的规范实现，在 ")),t("a",et,[r[281]||(r[281]=n("python.org")),e(o)]),r[283]||(r[283]=n(' 上发布。"CPython" 一词用于在必要时将此实现与其他实现例如 Jython 或 IronPython 相区别。'))]),r[1067]||(r[1067]=t("h3",{id:"decorator-装饰器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#decorator-装饰器"},[t("span",null,"decorator -- 装饰器")])],-1)),t("p",null,[r[288]||(r[288]=n("返回值为另一个函数的函数，通常使用 ")),r[289]||(r[289]=t("code",null,"@wrapper",-1)),r[290]||(r[290]=n(" 语法形式来进行函数变换。 装饰器的常见例子包括 ")),t("a",lt,[r[284]||(r[284]=t("code",null,"classmethod()",-1)),e(o)]),r[291]||(r[291]=n(" 和 ")),t("a",st,[r[285]||(r[285]=t("code",null,"staticmethod()",-1)),e(o)]),r[292]||(r[292]=n("。 装饰器语法只是一种语法糖，以下两个函数定义在语义上完全等价: ")),r[293]||(r[293]=t("code",null,"def f(...): ... f = staticmethod(f) @staticmethod def f(...): ... ",-1)),r[294]||(r[294]=n(" 同的样概念也适用于类，但通常较少这样使用。有关装饰器的详情可参见 ")),t("a",it,[r[286]||(r[286]=n("函数定义")),e(o)]),r[295]||(r[295]=n(" 和 ")),t("a",pt,[r[287]||(r[287]=n("类定义")),e(o)]),r[296]||(r[296]=n(" 的文档。"))]),r[1068]||(r[1068]=t("h3",{id:"descriptor-描述器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#descriptor-描述器"},[t("span",null,"descriptor -- 描述器")])],-1)),t("p",null,[r[302]||(r[302]=n("任何定义了 ")),t("a",dt,[r[297]||(r[297]=t("code",null,"__get__()",-1)),e(o)]),r[303]||(r[303]=n(", ")),t("a",gt,[r[298]||(r[298]=t("code",null,"__set__()",-1)),e(o)]),r[304]||(r[304]=n(" 或 ")),t("a",ft,[r[299]||(r[299]=t("code",null,"__delete__()",-1)),e(o)]),r[305]||(r[305]=n(" 方法的对象。当一个类属性为描述器时，它的特殊绑定行为就会在属性查找时被触发。通常情况下，使用 ")),r[306]||(r[306]=t("em",null,"a.b",-1)),r[307]||(r[307]=n(" 来获取、设置或删除一个属性时会在 ")),r[308]||(r[308]=t("em",null,"a",-1)),r[309]||(r[309]=n(" 的类字典中查找名称为 ")),r[310]||(r[310]=t("em",null,"b",-1)),r[311]||(r[311]=n(" 的对象，但如果 ")),r[312]||(r[312]=t("em",null,"b",-1)),r[313]||(r[313]=n(" 是一个描述器，则会调用对应的描述器方法。理解描述器的概念是更深层次理解 Python 的关键，因为这是许多重要特性的基础，包括函数、方法、属性、类方法、静态方法以及对超类的引用等等。 有关描述器的方法的更多信息，请参阅 ")),t("a",at,[r[300]||(r[300]=n("实现描述器")),e(o)]),r[314]||(r[314]=n(" 或 ")),t("a",ut,[r[301]||(r[301]=n("描述器使用指南")),e(o)]),r[315]||(r[315]=n("。"))]),r[1069]||(r[1069]=t("h3",{id:"dictionary-字典",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#dictionary-字典"},[t("span",null,"dictionary -- 字典")])],-1)),t("p",null,[r[318]||(r[318]=n("一个关联数组，其中的任意键都映射到相应的值。键可以是任何具有 ")),t("a",yt,[r[316]||(r[316]=t("code",null,"__hash__()",-1)),e(o)]),r[319]||(r[319]=n(" 和 ")),t("a",mt,[r[317]||(r[317]=t("code",null,"__eq__()",-1)),e(o)]),r[320]||(r[320]=n(" 方法的对象。在 Perl 语言中称为 hash。"))]),r[1070]||(r[1070]=t("h3",{id:"dictionary-comprehension-字典推导式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#dictionary-comprehension-字典推导式"},[t("span",null,"dictionary comprehension -- 字典推导式")])],-1)),t("p",null,[r[322]||(r[322]=n("处理一个可迭代对象中的所有或部分元素并返回结果字典的一种紧凑写法。 ")),r[323]||(r[323]=t("code",null,"results = {n: n ** 2 for n in range(10)}",-1)),r[324]||(r[324]=n(" 将生成一个由键 ")),r[325]||(r[325]=t("code",null,"n",-1)),r[326]||(r[326]=n(" 到值 ")),r[327]||(r[327]=t("code",null,"n ** 2",-1)),r[328]||(r[328]=n(" 的映射构成的字典。 参见 ")),t("a",bt,[r[321]||(r[321]=n("列表、集合与字典的显示")),e(o)]),r[329]||(r[329]=n("。"))]),r[1071]||(r[1071]=t("h3",{id:"dictionary-view-字典视图",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#dictionary-view-字典视图"},[t("span",null,"dictionary view -- 字典视图")])],-1)),t("p",null,[r[334]||(r[334]=n("从 ")),t("a",ht,[r[330]||(r[330]=t("code",null,"dict.keys()",-1)),e(o)]),r[335]||(r[335]=n(", ")),t("a",kt,[r[331]||(r[331]=t("code",null,"dict.values()",-1)),e(o)]),r[336]||(r[336]=n(" 和 ")),t("a",zt,[r[332]||(r[332]=t("code",null,"dict.items()",-1)),e(o)]),r[337]||(r[337]=n(" 返回的对象被称为字典视图。它们提供了字典条目的一个动态视图，这意味着当字典改变时，视图也会相应改变。要将字典视图强制转换为真正的列表，可使用 ")),r[338]||(r[338]=t("code",null,"list(dictview)",-1)),r[339]||(r[339]=n("。参见 ")),t("a",vt,[r[333]||(r[333]=n("字典视图对象")),e(o)]),r[340]||(r[340]=n("。"))]),r[1072]||(r[1072]=t("h3",{id:"docstring-文档字符串",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#docstring-文档字符串"},[t("span",null,"docstring -- 文档字符串")])],-1)),r[1073]||(r[1073]=t("p",null,[n("作为类、函数或模块之内的第一个表达式出现的字符串字面值。它在代码执行时会被忽略，但会被解释器识别并放入所在类、函数或模块的 "),t("code",null,"__doc__"),n(" 属性中。由于它可用于代码内省，因此是对象存放文档的规范位置。")],-1)),r[1074]||(r[1074]=t("h3",{id:"duck-typing-鸭子类型",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#duck-typing-鸭子类型"},[t("span",null,"duck-typing -- 鸭子类型")])],-1)),t("p",null,[r[346]||(r[346]=n("指一种编程风格，它并不依靠查找对象类型来确定其是否具有正确的接口，而是直接调用或使用其方法或属性（“看起来像鸭子，叫起来也像鸭子，那么肯定就是鸭子。”）由于强调接口而非特定类型，设计良好的代码可通过允许多态替代来提升灵活性。鸭子类型避免使用 ")),t("a",xt,[r[341]||(r[341]=t("code",null,"type()",-1)),e(o)]),r[347]||(r[347]=n(" 或 ")),t("a",Pt,[r[342]||(r[342]=t("code",null,"isinstance()",-1)),e(o)]),r[348]||(r[348]=n(" 检测。(但要注意鸭子类型可以使用 ")),t("a",wt,[r[343]||(r[343]=n("抽象基类")),e(o)]),r[349]||(r[349]=n(" 作为补充。) 而往往会采用 ")),t("a",Et,[r[344]||(r[344]=t("code",null,"hasattr()",-1)),e(o)]),r[350]||(r[350]=n(" 检测或是 ")),t("a",jt,[r[345]||(r[345]=n("EAFP")),e(o)]),r[351]||(r[351]=n(" 编程。"))]),r[1075]||(r[1075]=t("h3",{id:"eafp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#eafp"},[t("span",null,"EAFP")])],-1)),t("p",null,[r[355]||(r[355]=n("“求原谅比求许可更容易”的英文缩写。这种 Python 常用代码编写风格会假定所需的键或属性存在，并在假定错误时捕获异常。这种简洁快速风格的特点就是大量运用 ")),t("a",qt,[r[352]||(r[352]=t("code",null,"try",-1)),e(o)]),r[356]||(r[356]=n(" 和 ")),t("a",At,[r[353]||(r[353]=t("code",null,"except",-1)),e(o)]),r[357]||(r[357]=n(" 语句。于其相对的则是所谓 ")),t("a",Ct,[r[354]||(r[354]=n("LBYL")),e(o)]),r[358]||(r[358]=n(" 风格，常见于 C 等许多其他语言。"))]),r[1076]||(r[1076]=t("h3",{id:"expression-表达式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#expression-表达式"},[t("span",null,"expression -- 表达式")])],-1)),t("p",null,[r[361]||(r[361]=n("可以求出某个值的语法单元。 换句话说，一个表达式就是表达元素例如字面值、名称、属性访问、运算符或函数调用的汇总，它们最终都会返回一个值。 与许多其他语言不同，并非所有语言构件都是表达式。 还存在不能被用作表达式的 ")),t("a",Dt,[r[359]||(r[359]=n("statement")),e(o)]),r[362]||(r[362]=n("，例如 ")),t("a",It,[r[360]||(r[360]=t("code",null,"while",-1)),e(o)]),r[363]||(r[363]=n("。 赋值也是属于语句而非表达式。"))]),r[1077]||(r[1077]=t("h3",{id:"extension-module-扩展模块",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#extension-module-扩展模块"},[t("span",null,"extension module -- 扩展模块")])],-1)),r[1078]||(r[1078]=t("p",null,"以 C 或 C++ 编写的模块，使用 Python 的 C API 来与语言核心以及用户代码进行交互。",-1)),r[1079]||(r[1079]=t("h3",{id:"f-string-f-字符串",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#f-string-f-字符串"},[t("span",null,"f-string -- f-字符串")])],-1)),t("p",null,[r[366]||(r[366]=n("带有 ")),r[367]||(r[367]=t("code",null,"'f'",-1)),r[368]||(r[368]=n(" 或 ")),r[369]||(r[369]=t("code",null,"'F'",-1)),r[370]||(r[370]=n(" 前缀的字符串字面值通常被称为“f-字符串”即 ")),t("a",Lt,[r[364]||(r[364]=n("格式化字符串字面值")),e(o)]),r[371]||(r[371]=n(" 的简写。参见 ")),t("a",Ft,[r[365]||(r[365]=t("strong",null,"PEP 498",-1)),e(o)]),r[372]||(r[372]=n("。"))]),r[1080]||(r[1080]=t("h3",{id:"file-object-文件对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#file-object-文件对象"},[t("span",null,"file object -- 文件对象")])],-1)),t("p",null,[r[378]||(r[378]=n("对外提供面向文件 API 以使用下层资源的对象（带有 ")),r[379]||(r[379]=t("code",null,"read()",-1)),r[380]||(r[380]=n(" 或 ")),r[381]||(r[381]=t("code",null,"write()",-1)),r[382]||(r[382]=n(" 这样的方法）。根据其创建方式的不同，文件对象可以处理对真实磁盘文件，对其他类型存储，或是对通讯设备的访问（例如标准输入/输出、内存缓冲区、套接字、管道等等）。文件对象也被称为 ")),r[383]||(r[383]=t("em",null,"文件类对象",-1)),r[384]||(r[384]=n(" 或 ")),r[385]||(r[385]=t("em",null,"流",-1)),r[386]||(r[386]=n("。 实际上共有三种类别的文件对象: 原始 ")),t("a",Bt,[r[373]||(r[373]=n("二进制文件")),e(o)]),r[387]||(r[387]=n(", 缓冲 ")),t("a",Mt,[r[374]||(r[374]=n("二进制文件")),e(o)]),r[388]||(r[388]=n(" 以及 ")),t("a",St,[r[375]||(r[375]=n("文本文件")),e(o)]),r[389]||(r[389]=n("。它们的接口定义均在 ")),t("a",Nt,[r[376]||(r[376]=t("code",null,"io",-1)),e(o)]),r[390]||(r[390]=n(" 模块中。创建文件对象的规范方式是使用 ")),t("a",Ot,[r[377]||(r[377]=t("code",null,"open()",-1)),e(o)]),r[391]||(r[391]=n(" 函数。"))]),r[1081]||(r[1081]=t("h3",{id:"file-like-object-文件类对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#file-like-object-文件类对象"},[t("span",null,"file-like object -- 文件类对象")])],-1)),t("p",null,[t("a",Tt,[r[392]||(r[392]=n("file object")),e(o)]),r[393]||(r[393]=n(" 的同义词。"))]),r[1082]||(r[1082]=t("h3",{id:"finder-查找器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#finder-查找器"},[t("span",null,"finder -- 查找器")])],-1)),t("p",null,[r[402]||(r[402]=n("一种会尝试查找被导入模块的 ")),t("a",Gt,[r[394]||(r[394]=n("loader")),e(o)]),r[403]||(r[403]=n(" 的对象。 从 Python 3.3 起存在两种类型的查找器: ")),t("a",Zt,[r[395]||(r[395]=n("元路径查找器")),e(o)]),r[404]||(r[404]=n(" 配合 ")),t("a",Rt,[r[396]||(r[396]=t("code",null,"sys.meta_path",-1)),e(o)]),r[405]||(r[405]=n(" 使用，以及 ")),t("a",Vt,[r[397]||(r[397]=n("path entry finders")),e(o)]),r[406]||(r[406]=n(" 配合 ")),t("a",Yt,[r[398]||(r[398]=t("code",null,"sys.path_hooks",-1)),e(o)]),r[407]||(r[407]=n(" 使用。 更多详情可参见 ")),t("a",Jt,[r[399]||(r[399]=t("strong",null,"PEP 302",-1)),e(o)]),r[408]||(r[408]=n(", ")),t("a",Ut,[r[400]||(r[400]=t("strong",null,"PEP 420",-1)),e(o)]),r[409]||(r[409]=n(" 和 ")),t("a",Wt,[r[401]||(r[401]=t("strong",null,"PEP 451",-1)),e(o)]),r[410]||(r[410]=n("。"))]),r[1083]||(r[1083]=t("h3",{id:"floor-division-向下取整除法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#floor-division-向下取整除法"},[t("span",null,"floor division -- 向下取整除法")])],-1)),t("p",null,[r[412]||(r[412]=l("向下舍入到最接近的整数的数学除法。向下取整除法的运算符是 <code>//</code> 。例如，表达式 <code>11 // 4</code> 的计算结果是 <code>2</code> ，而与之相反的是浮点数的真正除法返回 <code>2.75</code> 。注意 <code>(-11) // 4</code> 会返回 <code>-3</code> 因为这是 <code>-2.75</code> <em>向下</em> 舍入得到的结果。见 ",17)),t("a",Ht,[r[411]||(r[411]=t("strong",null,"PEP 238",-1)),e(o)]),r[413]||(r[413]=n(" 。"))]),r[1084]||(r[1084]=t("h3",{id:"function-函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#function-函数"},[t("span",null,"function -- 函数")])],-1)),t("p",null,[r[418]||(r[418]=n("可以向调用者返回某个值的一组语句。还可以向其传入零个或多个 ")),t("a",Kt,[r[414]||(r[414]=n("参数")),e(o)]),r[419]||(r[419]=n(" 并在函数体执行中被使用。另见 ")),t("a",Qt,[r[415]||(r[415]=n("parameter")),e(o)]),r[420]||(r[420]=n(", ")),t("a",Xt,[r[416]||(r[416]=n("method")),e(o)]),r[421]||(r[421]=n(" 和 ")),t("a",$t,[r[417]||(r[417]=n("函数定义")),e(o)]),r[422]||(r[422]=n(" 等节。"))]),r[1085]||(r[1085]=t("h3",{id:"function-annotation-函数标注",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#function-annotation-函数标注"},[t("span",null,"function annotation -- 函数标注")])],-1)),t("p",null,[r[430]||(r[430]=n("即针对函数形参或返回值的 ")),t("a",_t,[r[423]||(r[423]=n("annotation")),e(o)]),r[431]||(r[431]=n(" 。 函数标注通常用于 ")),t("a",ct,[r[424]||(r[424]=n("类型提示")),e(o)]),r[432]||(r[432]=n("：例如以下函数预期接受两个 ")),t("a",rn,[r[425]||(r[425]=t("code",null,"int",-1)),e(o)]),r[433]||(r[433]=n(" 参数并预期返回一个 ")),t("a",tn,[r[426]||(r[426]=t("code",null,"int",-1)),e(o)]),r[434]||(r[434]=n(" 值: ")),r[435]||(r[435]=t("code",null,"def sum_two_numbers(a: int, b: int) -> int: return a + b ",-1)),r[436]||(r[436]=n(" 函数标注语法的详解见 ")),t("a",nn,[r[427]||(r[427]=n("函数定义")),e(o)]),r[437]||(r[437]=n(" 一节。 请参看 ")),t("a",on,[r[428]||(r[428]=n("variable annotation")),e(o)]),r[438]||(r[438]=n(" 和 ")),t("a",en,[r[429]||(r[429]=t("strong",null,"PEP 484",-1)),e(o)]),r[439]||(r[439]=n(" 对此功能的描述。"))]),r[1086]||(r[1086]=t("h3",{id:"future",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#future"},[t("span",null,[t("code",null,"__future__")])])],-1)),t("p",null,[r[441]||(r[441]=n("一种伪模块，可被程序员用来启用与当前解释器不兼容的新语言特性。 通过导入 ")),t("a",ln,[r[440]||(r[440]=t("code",null,"__future__",-1)),e(o)]),r[442]||(r[442]=n(" 模块并对其中的变量求值，你可以查看新特性何时首次加入语言以及何时成为默认: >>>")),r[443]||(r[443]=t("code",null,">>> import __future__ >>> __future__.division _Feature((2, 2, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 8192) ",-1))]),r[1087]||(r[1087]=t("h3",{id:"garbage-collection-垃圾回收",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#garbage-collection-垃圾回收"},[t("span",null,"garbage collection -- 垃圾回收")])],-1)),t("p",null,[r[445]||(r[445]=n("释放不再被使用的内存空间的过程。Python 是通过引用计数和一个能够检测和打破循环引用的循环垃圾回收器来执行垃圾回收的。可以使用 ")),t("a",sn,[r[444]||(r[444]=t("code",null,"gc",-1)),e(o)]),r[446]||(r[446]=n(" 模块来控制垃圾回收器。"))]),r[1088]||(r[1088]=t("h3",{id:"generator-生成器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#generator-生成器"},[t("span",null,"generator -- 生成器")])],-1)),t("p",null,[r[450]||(r[450]=n("返回一个 ")),t("a",pn,[r[447]||(r[447]=n("generator iterator")),e(o)]),r[451]||(r[451]=n(" 的函数。它看起来很像普通函数，不同点在于其包含 ")),t("a",dn,[r[448]||(r[448]=t("code",null,"yield",-1)),e(o)]),r[452]||(r[452]=n(" 表达式以便产生一系列值供给 for-循环使用或是通过 ")),t("a",gn,[r[449]||(r[449]=t("code",null,"next()",-1)),e(o)]),r[453]||(r[453]=n(" 函数逐一获取。 通常是指生成器函数，但在某些情况下也可能是指 ")),r[454]||(r[454]=t("em",null,"生成器迭代器",-1)),r[455]||(r[455]=n("。如果需要清楚表达具体含义，请使用全称以避免歧义。"))]),r[1089]||(r[1089]=t("h3",{id:"generator-iterator-生成器迭代器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#generator-iterator-生成器迭代器"},[t("span",null,"generator iterator -- 生成器迭代器")])],-1)),t("p",null,[t("a",fn,[r[456]||(r[456]=n("generator")),e(o)]),r[458]||(r[458]=n(" 函数所创建的对象。 每个 ")),t("a",an,[r[457]||(r[457]=t("code",null,"yield",-1)),e(o)]),r[459]||(r[459]=n(" 会临时暂停处理，记住当前位置执行状态（包括局部变量和挂起的 try 语句）。当该 ")),r[460]||(r[460]=t("em",null,"生成器迭代器",-1)),r[461]||(r[461]=n(" 恢复时，它会从离开位置继续执行（这与每次调用都从新开始的普通函数差别很大）。"))]),r[1090]||(r[1090]=t("h3",{id:"generator-expression-生成器表达式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#generator-expression-生成器表达式"},[t("span",null,"generator expression -- 生成器表达式")])],-1)),r[1091]||(r[1091]=t("p",null,[n("返回一个迭代器的表达式。 它看起来很像普通表达式后面带有定义了一个循环变量、范围的 "),t("code",null,"for"),n(" 子句，以及一个可选的 "),t("code",null,"if"),n(" 子句。 以下复合表达式会为外层函数生成一系列值: >>>"),t("code",null,">>> sum(i*i for i in range(10)) # sum of squares 0, 1, 4, ... 81 285 ")],-1)),r[1092]||(r[1092]=t("h3",{id:"generic-function-泛型函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#generic-function-泛型函数"},[t("span",null,"generic function -- 泛型函数")])],-1)),t("p",null,[r[465]||(r[465]=n("为不同的类型实现相同操作的多个函数所组成的函数。在调用时会由调度算法来确定应该使用哪个实现。 另请参见 ")),t("a",un,[r[462]||(r[462]=n("single dispatch")),e(o)]),r[466]||(r[466]=n(" 术语表条目、")),t("a",yn,[r[463]||(r[463]=t("code",null,"functools.singledispatch()",-1)),e(o)]),r[467]||(r[467]=n(" 装饰器以及 ")),t("a",mn,[r[464]||(r[464]=t("strong",null,"PEP 443",-1)),e(o)]),r[468]||(r[468]=n("。"))]),r[1093]||(r[1093]=t("h3",{id:"generic-type-泛型类型",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#generic-type-泛型类型"},[t("span",null,"generic type -- 泛型类型")])],-1)),t("p",null,[r[476]||(r[476]=n("可以被形参化的 ")),t("a",bn,[r[469]||(r[469]=n("type")),e(o)]),r[477]||(r[477]=n("；通常为容器类型例如 ")),t("a",hn,[r[470]||(r[470]=t("code",null,"list",-1)),e(o)]),r[478]||(r[478]=n("。 可用于 ")),t("a",kn,[r[471]||(r[471]=n("类型提示")),e(o)]),r[479]||(r[479]=n(" 和 ")),t("a",zn,[r[472]||(r[472]=n("标注")),e(o)]),r[480]||(r[480]=n("。 请参阅 ")),t("a",vn,[r[473]||(r[473]=t("strong",null,"PEP 483",-1)),e(o)]),r[481]||(r[481]=n(" 来了解详情，以及 ")),t("a",xn,[r[474]||(r[474]=t("code",null,"typing",-1)),e(o)]),r[482]||(r[482]=n(" 或 ")),t("a",Pn,[r[475]||(r[475]=n("泛型别名类型")),e(o)]),r[483]||(r[483]=n(" 来了解其用法。"))]),r[1094]||(r[1094]=t("h3",{id:"gil",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#gil"},[t("span",null,"GIL")])],-1)),t("p",null,[r[485]||(r[485]=n("参见 ")),t("a",wn,[r[484]||(r[484]=n("global interpreter lock")),e(o)]),r[486]||(r[486]=n("。"))]),r[1095]||(r[1095]=t("h3",{id:"global-interpreter-lock-全局解释器锁",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#global-interpreter-lock-全局解释器锁"},[t("span",null,"global interpreter lock -- 全局解释器锁")])],-1)),t("p",null,[t("a",En,[r[487]||(r[487]=n("CPython")),e(o)]),r[490]||(r[490]=n(" 解释器所采用的一种机制，它确保同一时刻只有一个线程在执行 Python ")),t("a",jn,[r[488]||(r[488]=n("bytecode")),e(o)]),r[491]||(r[491]=n("。此机制通过设置对象模型（包括 ")),t("a",qn,[r[489]||(r[489]=t("code",null,"dict",-1)),e(o)]),r[492]||(r[492]=n(" 等重要内置类型）针对并发访问的隐式安全简化了 CPython 实现。给整个解释器加锁使得解释器多线程运行更方便，其代价则是牺牲了在多处理器上的并行性。 不过，某些标准库或第三方库的扩展模块被设计为在执行计算密集型任务如压缩或哈希时释放 GIL。此外，在执行 I/O 操作时也总是会释放 GIL。 创建一个（以更精细粒度来锁定共享数据的）“自由线程”解释器的努力从未获得成功，因为这会牺牲在普通单处理器情况下的性能。据信克服这种性能问题的措施将导致实现变得更复杂，从而更难以维护。"))]),r[1096]||(r[1096]=t("h3",{id:"hash-based-pyc-基于哈希的-pyc",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#hash-based-pyc-基于哈希的-pyc"},[t("span",null,"hash-based pyc -- 基于哈希的 pyc")])],-1)),t("p",null,[r[494]||(r[494]=n("使用对应源文件的哈希值而非最后修改时间来确定其有效性的字节码缓存文件。 参见 ")),t("a",An,[r[493]||(r[493]=n("已缓存字节码的失效")),e(o)]),r[495]||(r[495]=n("。"))]),r[1097]||(r[1097]=t("h3",{id:"hashable-可哈希",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#hashable-可哈希"},[t("span",null,"hashable -- 可哈希")])],-1)),t("p",null,[r[499]||(r[499]=n("一个对象的哈希值如果在其生命周期内绝不改变，就被称为 ")),r[500]||(r[500]=t("em",null,"可哈希",-1)),r[501]||(r[501]=n(" （它需要具有 ")),t("a",Cn,[r[496]||(r[496]=t("code",null,"__hash__()",-1)),e(o)]),r[502]||(r[502]=n(" 方法），并可以同其他对象进行比较（它需要具有 ")),t("a",Dn,[r[497]||(r[497]=t("code",null,"__eq__()",-1)),e(o)]),r[503]||(r[503]=n(" 方法）。可哈希对象必须具有相同的哈希值比较结果才会相同。 可哈希性使得对象能够作为字典键或集合成员使用，因为这些数据结构要在内部使用哈希值。 大多数 Python 中的不可变内置对象都是可哈希的；可变容器（例如列表或字典）都不可哈希；不可变容器（例如元组和 frozenset）仅当它们的元素均为可哈希时才是可哈希的。 用户定义类的实例对象默认是可哈希的。 它们在比较时一定不相同（除非是与自己比较），它们的哈希值的生成是基于它们的 ")),t("a",In,[r[498]||(r[498]=t("code",null,"id()",-1)),e(o)]),r[504]||(r[504]=n("。"))]),r[1098]||(r[1098]=l('<h3 id="idle" tabindex="-1"><a class="header-anchor" href="#idle"><span>IDLE</span></a></h3><p>Python 的 IDE，“集成开发与学习环境”的英文缩写。是 Python 标准发行版附带的基本编辑器和解释器环境。</p><h3 id="immutable-不可变" tabindex="-1"><a class="header-anchor" href="#immutable-不可变"><span>immutable -- 不可变</span></a></h3><p>具有固定值的对象。不可变对象包括数字、字符串和元组。这样的对象不能被改变。如果必须存储一个不同的值，则必须创建新的对象。它们在需要常量哈希值的地方起着重要作用，例如作为字典中的键。</p><h3 id="import-path-导入路径" tabindex="-1"><a class="header-anchor" href="#import-path-导入路径"><span>import path -- 导入路径</span></a></h3>',5)),t("p",null,[r[508]||(r[508]=n("由多个位置（或 ")),t("a",Ln,[r[505]||(r[505]=n("路径条目")),e(o)]),r[509]||(r[509]=n("）组成的列表，会被模块的 ")),t("a",Fn,[r[506]||(r[506]=n("path based finder")),e(o)]),r[510]||(r[510]=n(" 用来查找导入目标。在导入时，此位置列表通常来自 ")),t("a",Bn,[r[507]||(r[507]=t("code",null,"sys.path",-1)),e(o)]),r[511]||(r[511]=n("，但对次级包来说也可能来自上级包的 ")),r[512]||(r[512]=t("code",null,"__path__",-1)),r[513]||(r[513]=n(" 属性。"))]),r[1099]||(r[1099]=t("h3",{id:"importing-导入",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#importing-导入"},[t("span",null,"importing -- 导入")])],-1)),r[1100]||(r[1100]=t("p",null,"令一个模块中的 Python 代码能为另一个模块中的 Python 代码所使用的过程。",-1)),r[1101]||(r[1101]=t("h3",{id:"importer-导入器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#importer-导入器"},[t("span",null,"importer -- 导入器")])],-1)),t("p",null,[r[516]||(r[516]=n("查找并加载模块的对象；此对象既属于 ")),t("a",Mn,[r[514]||(r[514]=n("finder")),e(o)]),r[517]||(r[517]=n(" 又属于 ")),t("a",Sn,[r[515]||(r[515]=n("loader")),e(o)]),r[518]||(r[518]=n("。"))]),r[1102]||(r[1102]=t("h3",{id:"interactive-交互",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#interactive-交互"},[t("span",null,"interactive -- 交互")])],-1)),r[1103]||(r[1103]=t("p",null,[n("Python 带有一个交互式解释器，即你可以在解释器提示符后输入语句和表达式，立即执行并查看其结果。只需不带参数地启动 "),t("code",null,"python"),n(" 命令（也可以在你的计算机开始菜单中选择相应菜单项）。在测试新想法或检验模块和包的时候用这种方式会非常方便（请记得使用 "),t("code",null,"help(x)"),n("）。")],-1)),r[1104]||(r[1104]=t("h3",{id:"interpreted-解释型",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#interpreted-解释型"},[t("span",null,"interpreted -- 解释型")])],-1)),t("p",null,[r[520]||(r[520]=n("Python 一是种解释型语言，与之相对的是编译型语言，虽然两者的区别由于字节码编译器的存在而会有所模糊。这意味着源文件可以直接运行而不必显式地创建可执行文件再运行。解释型语言通常具有比编译型语言更短的开发/调试周期，但是其程序往往运行得更慢。参见 ")),t("a",Nn,[r[519]||(r[519]=n("interactive")),e(o)]),r[521]||(r[521]=n("。"))]),r[1105]||(r[1105]=t("h3",{id:"interpreter-shutdown-解释器关闭",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#interpreter-shutdown-解释器关闭"},[t("span",null,"interpreter shutdown -- 解释器关闭")])],-1)),t("p",null,[r[523]||(r[523]=n("当被要求关闭时，Python 解释器将进入一个特殊运行阶段并逐步释放所有已分配资源，例如模块和各种关键内部结构等。它还会多次调用 ")),t("a",On,[r[522]||(r[522]=n("垃圾回收器")),e(o)]),r[524]||(r[524]=n("。这会触发用户定义析构器或弱引用回调中的代码执行。在关闭阶段执行的代码可能会遇到各种异常，因为其所依赖的资源已不再有效（常见的例子有库模块或警告机制等）。 解释器需要关闭的主要原因有 ")),r[525]||(r[525]=t("code",null,"__main__",-1)),r[526]||(r[526]=n(" 模块或所运行的脚本已完成执行。"))]),r[1106]||(r[1106]=t("h3",{id:"iterable-可迭代对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#iterable-可迭代对象"},[t("span",null,"iterable -- 可迭代对象")])],-1)),t("p",null,[r[543]||(r[543]=n("能够逐一返回其成员项的对象。 可迭代对象的例子包括所有序列类型 (例如 ")),t("a",Tn,[r[527]||(r[527]=t("code",null,"list",-1)),e(o)]),r[544]||(r[544]=n(", ")),t("a",Gn,[r[528]||(r[528]=t("code",null,"str",-1)),e(o)]),r[545]||(r[545]=n(" 和 ")),t("a",Zn,[r[529]||(r[529]=t("code",null,"tuple",-1)),e(o)]),r[546]||(r[546]=n(") 以及某些非序列类型例如 ")),t("a",Rn,[r[530]||(r[530]=t("code",null,"dict",-1)),e(o)]),r[547]||(r[547]=n(", ")),t("a",Vn,[r[531]||(r[531]=n("文件对象")),e(o)]),r[548]||(r[548]=n(" 以及定义了 ")),t("a",Yn,[r[532]||(r[532]=t("code",null,"__iter__()",-1)),e(o)]),r[549]||(r[549]=n(" 方法或是实现了 ")),t("a",Jn,[r[533]||(r[533]=n("序列")),e(o)]),r[550]||(r[550]=n(" 语义的 ")),t("a",Un,[r[534]||(r[534]=t("code",null,"__getitem__()",-1)),e(o)]),r[551]||(r[551]=n(" 方法的任意自定义类对象。 可迭代对象被可用于 ")),t("a",Wn,[r[535]||(r[535]=t("code",null,"for",-1)),e(o)]),r[552]||(r[552]=n(" 循环以及许多其他需要一个序列的地方（")),t("a",Hn,[r[536]||(r[536]=t("code",null,"zip()",-1)),e(o)]),r[553]||(r[553]=n("、")),t("a",Kn,[r[537]||(r[537]=t("code",null,"map()",-1)),e(o)]),r[554]||(r[554]=n(" ...）。当一个可迭代对象作为参数传给内置函数 ")),t("a",Qn,[r[538]||(r[538]=t("code",null,"iter()",-1)),e(o)]),r[555]||(r[555]=n(" 时，它会返回该对象的迭代器。这种迭代器适用于对值集合的一次性遍历。在使用可迭代对象时，你通常不需要调用 ")),t("a",Xn,[r[539]||(r[539]=t("code",null,"iter()",-1)),e(o)]),r[556]||(r[556]=n(" 或者自己处理迭代器对象。")),r[557]||(r[557]=t("code",null,"for",-1)),r[558]||(r[558]=n(" 语句会为你自动处理那些操作，创建一个临时的未命名变量用来在循环期间保存迭代器。参见 ")),t("a",$n,[r[540]||(r[540]=n("iterator")),e(o)]),r[559]||(r[559]=n("、")),t("a",_n,[r[541]||(r[541]=n("sequence")),e(o)]),r[560]||(r[560]=n(" 以及 ")),t("a",cn,[r[542]||(r[542]=n("generator")),e(o)]),r[561]||(r[561]=n("。"))]),r[1107]||(r[1107]=t("h3",{id:"iterator-迭代器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#iterator-迭代器"},[t("span",null,"iterator -- 迭代器")])],-1)),t("p",null,[r[571]||(r[571]=n("用来表示一连串数据流的对象。重复调用迭代器的 ")),t("a",ro,[r[562]||(r[562]=t("code",null,"__next__()",-1)),e(o)]),r[572]||(r[572]=n(" 方法（或将其传给内置函数 ")),t("a",to,[r[563]||(r[563]=t("code",null,"next()",-1)),e(o)]),r[573]||(r[573]=n("）将逐个返回流中的项。当没有数据可用时则将引发 ")),t("a",no,[r[564]||(r[564]=t("code",null,"StopIteration",-1)),e(o)]),r[574]||(r[574]=n(" 异常。到这时迭代器对象中的数据项已耗尽，继续调用其 ")),r[575]||(r[575]=t("code",null,"__next__()",-1)),r[576]||(r[576]=n(" 方法只会再次引发 ")),t("a",oo,[r[565]||(r[565]=t("code",null,"StopIteration",-1)),e(o)]),r[577]||(r[577]=n(" 异常。迭代器必须具有 ")),t("a",eo,[r[566]||(r[566]=t("code",null,"__iter__()",-1)),e(o)]),r[578]||(r[578]=n(" 方法用来返回该迭代器对象自身，因此迭代器必定也是可迭代对象，可被用于其他可迭代对象适用的大部分场合。一个显著的例外是那些会多次重复访问迭代项的代码。容器对象（例如 ")),t("a",lo,[r[567]||(r[567]=t("code",null,"list",-1)),e(o)]),r[579]||(r[579]=n("）在你每次向其传入 ")),t("a",so,[r[568]||(r[568]=t("code",null,"iter()",-1)),e(o)]),r[580]||(r[580]=n(" 函数或是在 ")),t("a",io,[r[569]||(r[569]=t("code",null,"for",-1)),e(o)]),r[581]||(r[581]=n(" 循环中使用它时都会产生一个新的迭代器。如果在此情况下你尝试用迭代器则会返回在之前迭代过程中被耗尽的同一迭代器对象，使其看起来就像是一个空容器。 更多信息可查看 ")),t("a",po,[r[570]||(r[570]=n("迭代器类型")),e(o)]),r[582]||(r[582]=n("。"))]),r[1108]||(r[1108]=t("h3",{id:"key-function-键函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#key-function-键函数"},[t("span",null,"key function -- 键函数")])],-1)),t("p",null,[r[599]||(r[599]=n("键函数或称整理函数，是能够返回用于排序或排位的值的可调用对象。例如，")),t("a",go,[r[583]||(r[583]=t("code",null,"locale.strxfrm()",-1)),e(o)]),r[600]||(r[600]=n(" 可用于生成一个符合特定区域排序约定的排序键。 Python 中有许多工具都允许用键函数来控制元素的排位或分组方式。其中包括 ")),t("a",fo,[r[584]||(r[584]=t("code",null,"min()",-1)),e(o)]),r[601]||(r[601]=n(", ")),t("a",ao,[r[585]||(r[585]=t("code",null,"max()",-1)),e(o)]),r[602]||(r[602]=n(", ")),t("a",uo,[r[586]||(r[586]=t("code",null,"sorted()",-1)),e(o)]),r[603]||(r[603]=n(", ")),t("a",yo,[r[587]||(r[587]=t("code",null,"list.sort()",-1)),e(o)]),r[604]||(r[604]=n(", ")),t("a",mo,[r[588]||(r[588]=t("code",null,"heapq.merge()",-1)),e(o)]),r[605]||(r[605]=n(", ")),t("a",bo,[r[589]||(r[589]=t("code",null,"heapq.nsmallest()",-1)),e(o)]),r[606]||(r[606]=n(", ")),t("a",ho,[r[590]||(r[590]=t("code",null,"heapq.nlargest()",-1)),e(o)]),r[607]||(r[607]=n(" 以及 ")),t("a",ko,[r[591]||(r[591]=t("code",null,"itertools.groupby()",-1)),e(o)]),r[608]||(r[608]=n("。 要创建一个键函数有多种方式。例如，")),t("a",zo,[r[592]||(r[592]=t("code",null,"str.lower()",-1)),e(o)]),r[609]||(r[609]=n(" 方法可以用作忽略大小写排序的键函数。另外，键函数也可通过 ")),t("a",vo,[r[593]||(r[593]=t("code",null,"lambda",-1)),e(o)]),r[610]||(r[610]=n(" 表达式来创建，例如 ")),r[611]||(r[611]=t("code",null,"lambda r: (r[0], r[2])",-1)),r[612]||(r[612]=n("。还有 ")),t("a",xo,[r[594]||(r[594]=t("code",null,"operator",-1)),e(o)]),r[613]||(r[613]=n(" 模块提供了三个键函数构造器：")),t("a",Po,[r[595]||(r[595]=t("code",null,"attrgetter()",-1)),e(o)]),r[614]||(r[614]=n("、")),t("a",wo,[r[596]||(r[596]=t("code",null,"itemgetter()",-1)),e(o)]),r[615]||(r[615]=n(" 和 ")),t("a",Eo,[r[597]||(r[597]=t("code",null,"methodcaller()",-1)),e(o)]),r[616]||(r[616]=n("。请查看 ")),t("a",jo,[r[598]||(r[598]=n("如何排序")),e(o)]),r[617]||(r[617]=n(" 一节以获取创建和使用键函数的示例。"))]),r[1109]||(r[1109]=t("h3",{id:"keyword-argument-关键字参数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#keyword-argument-关键字参数"},[t("span",null,"keyword argument -- 关键字参数")])],-1)),t("p",null,[r[619]||(r[619]=n("参见 ")),t("a",qo,[r[618]||(r[618]=n("argument")),e(o)]),r[620]||(r[620]=n("。"))]),r[1110]||(r[1110]=t("h3",{id:"lambda",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#lambda"},[t("span",null,"lambda")])],-1)),t("p",null,[r[622]||(r[622]=n("由一个单独 ")),t("a",Ao,[r[621]||(r[621]=n("expression")),e(o)]),r[623]||(r[623]=n(" 构成的匿名内联函数，表达式会在调用时被求值。创建 lambda 函数的句法为 ")),r[624]||(r[624]=t("code",null,"lambda [parameters]: expression",-1))]),r[1111]||(r[1111]=t("h3",{id:"lbyl",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#lbyl"},[t("span",null,"LBYL")])],-1)),t("p",null,[r[627]||(r[627]=n("“先查看后跳跃”的英文缩写。这种代码编写风格会在进行调用或查找之前显式地检查前提条件。此风格与 ")),t("a",Co,[r[625]||(r[625]=n("EAFP")),e(o)]),r[628]||(r[628]=n(" 方式恰成对比，其特点是大量使用 ")),t("a",Do,[r[626]||(r[626]=t("code",null,"if",-1)),e(o)]),r[629]||(r[629]=n(" 语句。 在多线程环境中，LBYL 方式会导致“查看”和“跳跃”之间发生条件竞争风险。例如，以下代码 ")),r[630]||(r[630]=t("code",null,"if key in mapping: return mapping[key]",-1)),r[631]||(r[631]=n(" 可能由于在检查操作之后其他线程从 ")),r[632]||(r[632]=t("em",null,"mapping",-1)),r[633]||(r[633]=n(" 中移除了 ")),r[634]||(r[634]=t("em",null,"key",-1)),r[635]||(r[635]=n(" 而出错。这种问题可通过加锁或使用 EAFP 方式来解决。"))]),r[1112]||(r[1112]=t("h3",{id:"list-列表",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#list-列表"},[t("span",null,"list -- 列表")])],-1)),t("p",null,[r[637]||(r[637]=n("Python 内置的一种 ")),t("a",Io,[r[636]||(r[636]=n("sequence")),e(o)]),r[638]||(r[638]=n("。虽然名为列表，但更类似于其他语言中的数组而非链接列表，因为访问元素的时间复杂度为 O(1)。"))]),r[1113]||(r[1113]=t("h3",{id:"list-comprehension-列表推导式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#list-comprehension-列表推导式"},[t("span",null,"list comprehension -- 列表推导式")])],-1)),t("p",null,[r[640]||(r[640]=n("处理一个序列中的所有或部分元素并返回结果列表的一种紧凑写法。")),r[641]||(r[641]=t("code",null,"result = ['{:#04x}'.format(x) for x in range(256) if x % 2 == 0]",-1)),r[642]||(r[642]=n(" 将生成一个 0 到 255 范围内的十六进制偶数对应字符串（0x..）的列表。其中 ")),t("a",Lo,[r[639]||(r[639]=t("code",null,"if",-1)),e(o)]),r[643]||(r[643]=n(" 子句是可选的，如果省略则 ")),r[644]||(r[644]=t("code",null,"range(256)",-1)),r[645]||(r[645]=n(" 中的所有元素都会被处理。"))]),r[1114]||(r[1114]=t("h3",{id:"loader-加载器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#loader-加载器"},[t("span",null,"loader -- 加载器")])],-1)),t("p",null,[r[650]||(r[650]=n("负责加载模块的对象。它必须定义名为 ")),r[651]||(r[651]=t("code",null,"load_module()",-1)),r[652]||(r[652]=n(" 的方法。加载器通常由一个 ")),t("a",Fo,[r[646]||(r[646]=n("finder")),e(o)]),r[653]||(r[653]=n(" 返回。详情参见 ")),t("a",Bo,[r[647]||(r[647]=t("strong",null,"PEP 302",-1)),e(o)]),r[654]||(r[654]=n("，对于 ")),t("a",Mo,[r[648]||(r[648]=n("abstract base class")),e(o)]),r[655]||(r[655]=n(" 可参见 ")),t("a",So,[r[649]||(r[649]=t("code",null,"importlib.abc.Loader",-1)),e(o)]),r[656]||(r[656]=n("。"))]),r[1115]||(r[1115]=t("h3",{id:"magic-method-魔术方法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#magic-method-魔术方法"},[t("span",null,"magic method -- 魔术方法")])],-1)),t("p",null,[t("a",No,[r[657]||(r[657]=n("special method")),e(o)]),r[658]||(r[658]=n(" 的非正式同义词 。"))]),r[1116]||(r[1116]=t("h3",{id:"mapping-映射",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mapping-映射"},[t("span",null,"mapping -- 映射")])],-1)),t("p",null,[r[666]||(r[666]=n("一种支持任意键查找并实现了 ")),t("a",Oo,[r[659]||(r[659]=t("code",null,"Mapping",-1)),e(o)]),r[667]||(r[667]=n(" 或 ")),t("a",To,[r[660]||(r[660]=t("code",null,"MutableMapping",-1)),e(o)]),r[668]||(r[668]=n()),t("a",Go,[r[661]||(r[661]=n("抽象基类")),e(o)]),r[669]||(r[669]=n(" 中所规定方法的容器对象。 此类对象的例子包括 ")),t("a",Zo,[r[662]||(r[662]=t("code",null,"dict",-1)),e(o)]),r[670]||(r[670]=n(", ")),t("a",Ro,[r[663]||(r[663]=t("code",null,"collections.defaultdict",-1)),e(o)]),r[671]||(r[671]=n(", ")),t("a",Vo,[r[664]||(r[664]=t("code",null,"collections.OrderedDict",-1)),e(o)]),r[672]||(r[672]=n(" 以及 ")),t("a",Yo,[r[665]||(r[665]=t("code",null,"collections.Counter",-1)),e(o)]),r[673]||(r[673]=n("。"))]),r[1117]||(r[1117]=t("h3",{id:"meta-path-finder-元路径查找器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#meta-path-finder-元路径查找器"},[t("span",null,"meta path finder -- 元路径查找器")])],-1)),t("p",null,[t("a",Jo,[r[674]||(r[674]=t("code",null,"sys.meta_path",-1)),e(o)]),r[678]||(r[678]=n(" 的搜索所返回的 ")),t("a",Uo,[r[675]||(r[675]=n("finder")),e(o)]),r[679]||(r[679]=n("。元路径查找器与 ")),t("a",Wo,[r[676]||(r[676]=n("path entry finders")),e(o)]),r[680]||(r[680]=n(" 存在关联但并不相同。 请查看 ")),t("a",Ho,[r[677]||(r[677]=t("code",null,"importlib.abc.MetaPathFinder",-1)),e(o)]),r[681]||(r[681]=n(" 了解元路径查找器所实现的方法。"))]),r[1118]||(r[1118]=t("h3",{id:"metaclass-元类",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#metaclass-元类"},[t("span",null,"metaclass -- 元类")])],-1)),t("p",null,[r[683]||(r[683]=n("一种用于创建类的类。类定义包含类名、类字典和基类列表。元类负责接受上述三个参数并创建相应的类。大部分面向对象的编程语言都会提供一个默认实现。Python 的特别之处在于可以创建自定义元类。大部分用户永远不需要这个工具，但当需要出现时，元类可提供强大而优雅的解决方案。它们已被用于记录属性访问日志、添加线程安全性、跟踪对象创建、实现单例，以及其他许多任务。 更多详情参见 ")),t("a",Ko,[r[682]||(r[682]=n("元类")),e(o)]),r[684]||(r[684]=n("。"))]),r[1119]||(r[1119]=t("h3",{id:"method-方法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#method-方法"},[t("span",null,"method -- 方法")])],-1)),t("p",null,[r[688]||(r[688]=n("在类内部定义的函数。如果作为该类的实例的一个属性来调用，方法将会获取实例对象作为其第一个 ")),t("a",Qo,[r[685]||(r[685]=n("argument")),e(o)]),r[689]||(r[689]=n(" (通常命名为 ")),r[690]||(r[690]=t("code",null,"self",-1)),r[691]||(r[691]=n(")。参见 ")),t("a",Xo,[r[686]||(r[686]=n("function")),e(o)]),r[692]||(r[692]=n(" 和 ")),t("a",$o,[r[687]||(r[687]=n("nested scope")),e(o)]),r[693]||(r[693]=n("。"))]),r[1120]||(r[1120]=t("h3",{id:"method-resolution-order-方法解析顺序",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#method-resolution-order-方法解析顺序"},[t("span",null,"method resolution order -- 方法解析顺序")])],-1)),t("p",null,[r[695]||(r[695]=n("方法解析顺序就是在查找成员时搜索全部基类所用的先后顺序。请查看 ")),t("a",_o,[r[694]||(r[694]=n("Python 2.3 方法解析顺序")),e(o)]),r[696]||(r[696]=n(" 了解自 2.3 版起 Python 解析器所用相关算法的详情。"))]),r[1121]||(r[1121]=t("h3",{id:"module-模块",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#module-模块"},[t("span",null,"module -- 模块")])],-1)),t("p",null,[r[699]||(r[699]=n("此对象是 Python 代码的一种组织单位。各模块具有独立的命名空间，可包含任意 Python 对象。模块可通过 ")),t("a",co,[r[697]||(r[697]=n("importing")),e(o)]),r[700]||(r[700]=n(" 操作被加载到 Python 中。 另见 ")),t("a",re,[r[698]||(r[698]=n("package")),e(o)]),r[701]||(r[701]=n("。"))]),r[1122]||(r[1122]=t("h3",{id:"module-spec-模块规格",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#module-spec-模块规格"},[t("span",null,"module spec -- 模块规格")])],-1)),t("p",null,[r[703]||(r[703]=n("一个命名空间，其中包含用于加载模块的相关导入信息。是 ")),t("a",te,[r[702]||(r[702]=t("code",null,"importlib.machinery.ModuleSpec",-1)),e(o)]),r[704]||(r[704]=n(" 的实例。"))]),r[1123]||(r[1123]=t("h3",{id:"mro",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mro"},[t("span",null,"MRO")])],-1)),t("p",null,[r[706]||(r[706]=n("参见 ")),t("a",ne,[r[705]||(r[705]=n("method resolution order")),e(o)]),r[707]||(r[707]=n("。"))]),r[1124]||(r[1124]=t("h3",{id:"mutable-可变",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mutable-可变"},[t("span",null,"mutable -- 可变")])],-1)),t("p",null,[r[710]||(r[710]=n("可变对象可以在其 ")),t("a",oe,[r[708]||(r[708]=t("code",null,"id()",-1)),e(o)]),r[711]||(r[711]=n(" 保持固定的情况下改变其取值。另请参见 ")),t("a",ee,[r[709]||(r[709]=n("immutable")),e(o)]),r[712]||(r[712]=n("。"))]),r[1125]||(r[1125]=t("h3",{id:"named-tuple-具名元组",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#named-tuple-具名元组"},[t("span",null,"named tuple -- 具名元组")])],-1)),t("p",null,[r[718]||(r[718]=n("术语“具名元组”可用于任何继承自元组，并且其中的可索引元素还能使用名称属性来访问的类型或类。 这样的类型或类还可能拥有其他特性。 有些内置类型属于具名元组，包括 ")),t("a",le,[r[713]||(r[713]=t("code",null,"time.localtime()",-1)),e(o)]),r[719]||(r[719]=n(" 和 ")),t("a",se,[r[714]||(r[714]=t("code",null,"os.stat()",-1)),e(o)]),r[720]||(r[720]=n(" 的返回值。 另一个例子是 ")),t("a",ie,[r[715]||(r[715]=t("code",null,"sys.float_info",-1)),e(o)]),r[721]||(r[721]=n(": >>>")),r[722]||(r[722]=t("code",null,">>> sys.float_info[1] # indexed access 1024 >>> sys.float_info.max_exp # named field access 1024 >>> isinstance(sys.float_info, tuple) # kind of tuple True ",-1)),r[723]||(r[723]=n(" 有些具名元组是内置类型（例如上面的例子）。 此外，具名元组还可通过常规类定义从 ")),t("a",pe,[r[716]||(r[716]=t("code",null,"tuple",-1)),e(o)]),r[724]||(r[724]=n(" 继承并定义名称字段的方式来创建。 这样的类可以手工编写，或者使用工厂函数 ")),t("a",de,[r[717]||(r[717]=t("code",null,"collections.namedtuple()",-1)),e(o)]),r[725]||(r[725]=n(" 创建。 后一种方式还会添加一些手工编写或内置具名元组所没有的额外方法。"))]),r[1126]||(r[1126]=t("h3",{id:"namespace-命名空间",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#namespace-命名空间"},[t("span",null,"namespace -- 命名空间")])],-1)),t("p",null,[r[732]||(r[732]=n("命名空间是存放变量的场所。命名空间有局部、全局和内置的，还有对象中的嵌套命名空间（在方法之内）。命名空间通过防止命名冲突来支持模块化。例如，函数 ")),t("a",ge,[r[726]||(r[726]=t("code",null,"builtins.open",-1)),e(o)]),r[733]||(r[733]=n(" 与 ")),t("a",fe,[r[727]||(r[727]=t("code",null,"os.open()",-1)),e(o)]),r[734]||(r[734]=n(" 可通过各自的命名空间来区分。命名空间还通过明确哪个模块实现那个函数来帮助提高可读性和可维护性。例如，")),t("a",ae,[r[728]||(r[728]=t("code",null,"random.seed()",-1)),e(o)]),r[735]||(r[735]=n(" 或 ")),t("a",ue,[r[729]||(r[729]=t("code",null,"itertools.islice()",-1)),e(o)]),r[736]||(r[736]=n(" 这种写法明确了这些函数是由 ")),t("a",ye,[r[730]||(r[730]=t("code",null,"random",-1)),e(o)]),r[737]||(r[737]=n(" 与 ")),t("a",me,[r[731]||(r[731]=t("code",null,"itertools",-1)),e(o)]),r[738]||(r[738]=n(" 模块分别实现的。"))]),r[1127]||(r[1127]=t("h3",{id:"namespace-package-命名空间包",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#namespace-package-命名空间包"},[t("span",null,"namespace package -- 命名空间包")])],-1)),t("p",null,[t("a",be,[r[739]||(r[739]=t("strong",null,"PEP 420",-1)),e(o)]),r[743]||(r[743]=n(" 所引入的一种仅被用作子包的容器的 ")),t("a",he,[r[740]||(r[740]=n("package")),e(o)]),r[744]||(r[744]=n("，命名空间包可以没有实体表示物，其描述方式与 ")),t("a",ke,[r[741]||(r[741]=n("regular package")),e(o)]),r[745]||(r[745]=n(" 不同，因为它们没有 ")),r[746]||(r[746]=t("code",null,"__init__.py",-1)),r[747]||(r[747]=n(" 文件。 另可参见 ")),t("a",ze,[r[742]||(r[742]=n("module")),e(o)]),r[748]||(r[748]=n("。"))]),r[1128]||(r[1128]=t("h3",{id:"nested-scope-嵌套作用域",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nested-scope-嵌套作用域"},[t("span",null,"nested scope -- 嵌套作用域")])],-1)),t("p",null,[r[750]||(r[750]=n("在一个定义范围内引用变量的能力。例如，在另一函数之内定义的函数可以引用前者的变量。请注意嵌套作用域默认只对引用有效而对赋值无效。局部变量的读写都受限于最内层作用域。类似的，全局变量的读写则作用于全局命名空间。通过 ")),t("a",ve,[r[749]||(r[749]=t("code",null,"nonlocal",-1)),e(o)]),r[751]||(r[751]=n(" 关键字可允许写入外层作用域。"))]),r[1129]||(r[1129]=t("h3",{id:"new-style-class-新式类",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#new-style-class-新式类"},[t("span",null,"new-style class -- 新式类")])],-1)),t("p",null,[r[754]||(r[754]=n("对于目前已被应于所有类对象的类形式的旧称谓。在早先的 Python 版本中，只有新式类能够使用 Python 新增的更灵活特性，例如 ")),t("a",xe,[r[752]||(r[752]=t("code",null,"__slots__",-1)),e(o)]),r[755]||(r[755]=n("、描述符、特征属性、")),t("a",Pe,[r[753]||(r[753]=t("code",null,"__getattribute__()",-1)),e(o)]),r[756]||(r[756]=n("、类方法和静态方法等。"))]),r[1130]||(r[1130]=t("h3",{id:"object-对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#object-对象"},[t("span",null,"object -- 对象")])],-1)),t("p",null,[r[758]||(r[758]=n("任何具有状态（属性或值）以及预定义行为（方法）的数据。object 也是任何 ")),t("a",we,[r[757]||(r[757]=n("new-style class")),e(o)]),r[759]||(r[759]=n(" 的最顶层基类名。"))]),r[1131]||(r[1131]=t("h3",{id:"package-包",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#package-包"},[t("span",null,"package -- 包")])],-1)),t("p",null,[r[763]||(r[763]=n("一种可包含子模块或递归地包含子包的 Python ")),t("a",Ee,[r[760]||(r[760]=n("module")),e(o)]),r[764]||(r[764]=n("。从技术上说，包是带有 ")),r[765]||(r[765]=t("code",null,"__path__",-1)),r[766]||(r[766]=n(" 属性的 Python 模块。 另参见 ")),t("a",je,[r[761]||(r[761]=n("regular package")),e(o)]),r[767]||(r[767]=n(" 和 ")),t("a",qe,[r[762]||(r[762]=n("namespace package")),e(o)]),r[768]||(r[768]=n("。"))]),r[1132]||(r[1132]=t("h3",{id:"parameter-形参",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameter-形参"},[t("span",null,"parameter -- 形参")])],-1)),t("p",null,[t("a",Ae,[r[769]||(r[769]=n("function")),e(o)]),r[778]||(r[778]=n(" （或方法）定义中的命名实体，它指定函数可以接受的一个 ")),t("a",Ce,[r[770]||(r[770]=n("argument")),e(o)]),r[779]||(r[779]=n(" （或在某些情况下，多个实参）。有五种形参： ")),r[780]||(r[780]=t("em",null,"positional-or-keyword",-1)),r[781]||(r[781]=n("：位置或关键字，指定一个可以作为 ")),t("a",De,[r[771]||(r[771]=n("位置参数")),e(o)]),r[782]||(r[782]=n(" 传入也可以作为 ")),t("a",Ie,[r[772]||(r[772]=n("关键字参数")),e(o)]),r[783]||(r[783]=l(" 传入的实参。这是默认的形参类型，例如下面的 <em>foo</em> 和 <em>bar</em>: <code>def func(foo, bar=None): ... </code> <em>positional-only</em>：仅限位置，指定一个只能通过位置传入的参数。 仅限位置形参可通过在函数定义的形参列表中它们之后包含一个 <code>/</code> 字符来定义，例如下面的 <em>posonly1</em> 和 <em>posonly2</em>: <code>def func(posonly1, posonly2, /, positional_or_keyword): ... </code> <em>keyword-only</em>：仅限关键字，指定一个只能通过关键字传入的参数。仅限关键字形参可通过在函数定义的形参列表中包含单个可变位置形参或者在多个可变位置形参之前放一个 <code>*</code> 来定义，例如下面的 <em>kw_only1</em> 和 <em>kw_only2</em>: <code>def func(arg, *, kw_only1, kw_only2): ... </code> <em>var-positional</em>：可变位置，指定可以提供由一个任意数量的位置参数构成的序列（附加在其他形参已接受的位置参数之后）。这种形参可通过在形参名称前加缀 <code>*</code> 来定义，例如下面的 <em>args</em>: <code>def func(*args, **kwargs): ... </code> <em>var-keyword</em>：可变关键字，指定可以提供任意数量的关键字参数（附加在其他形参已接受的关键字参数之后）。这种形参可通过在形参名称前加缀 <code>**</code> 来定义，例如上面的 <em>kwargs</em>。 形参可以同时指定可选和必选参数，也可以为某些可选参数指定默认值。 另参见 ",41)),t("a",Le,[r[773]||(r[773]=n("argument")),e(o)]),r[784]||(r[784]=n(" 术语表条目、")),t("a",Fe,[r[774]||(r[774]=n("参数与形参的区别")),e(o)]),r[785]||(r[785]=n(" 中的常见问题、")),t("a",Be,[r[775]||(r[775]=t("code",null,"inspect.Parameter",-1)),e(o)]),r[786]||(r[786]=n(" 类、")),t("a",Me,[r[776]||(r[776]=n("函数定义")),e(o)]),r[787]||(r[787]=n(" 一节以及 ")),t("a",Se,[r[777]||(r[777]=t("strong",null,"PEP 362",-1)),e(o)]),r[788]||(r[788]=n("。"))]),r[1133]||(r[1133]=t("h3",{id:"path-entry-路径入口",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#path-entry-路径入口"},[t("span",null,"path entry -- 路径入口")])],-1)),t("p",null,[t("a",Ne,[r[789]||(r[789]=n("import path")),e(o)]),r[791]||(r[791]=n(" 中的一个单独位置，会被 ")),t("a",Oe,[r[790]||(r[790]=n("path based finder")),e(o)]),r[792]||(r[792]=n(" 用来查找要导入的模块。"))]),r[1134]||(r[1134]=t("h3",{id:"path-entry-finder-路径入口查找器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#path-entry-finder-路径入口查找器"},[t("span",null,"path entry finder -- 路径入口查找器")])],-1)),t("p",null,[r[798]||(r[798]=n("任一可调用对象使用 ")),t("a",Te,[r[793]||(r[793]=t("code",null,"sys.path_hooks",-1)),e(o)]),r[799]||(r[799]=n(" (即 ")),t("a",Ge,[r[794]||(r[794]=n("path entry hook")),e(o)]),r[800]||(r[800]=n(") 返回的 ")),t("a",Ze,[r[795]||(r[795]=n("finder")),e(o)]),r[801]||(r[801]=n("，此种对象能通过 ")),t("a",Re,[r[796]||(r[796]=n("path entry")),e(o)]),r[802]||(r[802]=n(" 来定位模块。 请参看 ")),t("a",Ve,[r[797]||(r[797]=t("code",null,"importlib.abc.PathEntryFinder",-1)),e(o)]),r[803]||(r[803]=n(" 以了解路径入口查找器所实现的各个方法。"))]),r[1135]||(r[1135]=t("h3",{id:"path-entry-hook-路径入口钩子",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#path-entry-hook-路径入口钩子"},[t("span",null,"path entry hook -- 路径入口钩子")])],-1)),t("p",null,[r[806]||(r[806]=n("一种可调用对象，在知道如何查找特定 ")),t("a",Ye,[r[804]||(r[804]=n("path entry")),e(o)]),r[807]||(r[807]=n(" 中的模块的情况下能够使用 ")),r[808]||(r[808]=t("code",null,"sys.path_hook",-1)),r[809]||(r[809]=n(" 列表返回一个 ")),t("a",Je,[r[805]||(r[805]=n("path entry finder")),e(o)]),r[810]||(r[810]=n("。"))]),r[1136]||(r[1136]=t("h3",{id:"path-based-finder-基于路径的查找器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#path-based-finder-基于路径的查找器"},[t("span",null,"path based finder -- 基于路径的查找器")])],-1)),t("p",null,[r[813]||(r[813]=n("默认的一种 ")),t("a",Ue,[r[811]||(r[811]=n("元路径查找器")),e(o)]),r[814]||(r[814]=n("，可在一个 ")),t("a",We,[r[812]||(r[812]=n("import path")),e(o)]),r[815]||(r[815]=n(" 中查找模块。"))]),r[1137]||(r[1137]=t("h3",{id:"path-like-object-路径类对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#path-like-object-路径类对象"},[t("span",null,"path-like object -- 路径类对象")])],-1)),t("p",null,[r[828]||(r[828]=n("代表一个文件系统路径的对象。类路径对象可以是一个表示路径的 ")),t("a",He,[r[816]||(r[816]=t("code",null,"str",-1)),e(o)]),r[829]||(r[829]=n(" 或者 ")),t("a",Ke,[r[817]||(r[817]=t("code",null,"bytes",-1)),e(o)]),r[830]||(r[830]=n(" 对象，还可以是一个实现了 ")),t("a",Qe,[r[818]||(r[818]=t("code",null,"os.PathLike",-1)),e(o)]),r[831]||(r[831]=n(" 协议的对象。一个支持 ")),t("a",Xe,[r[819]||(r[819]=t("code",null,"os.PathLike",-1)),e(o)]),r[832]||(r[832]=n(" 协议的对象可通过调用 ")),t("a",$e,[r[820]||(r[820]=t("code",null,"os.fspath()",-1)),e(o)]),r[833]||(r[833]=n(" 函数转换为 ")),t("a",_e,[r[821]||(r[821]=t("code",null,"str",-1)),e(o)]),r[834]||(r[834]=n(" 或者 ")),t("a",ce,[r[822]||(r[822]=t("code",null,"bytes",-1)),e(o)]),r[835]||(r[835]=n(" 类型的文件系统路径；")),t("a",rl,[r[823]||(r[823]=t("code",null,"os.fsdecode()",-1)),e(o)]),r[836]||(r[836]=n(" 和 ")),t("a",tl,[r[824]||(r[824]=t("code",null,"os.fsencode()",-1)),e(o)]),r[837]||(r[837]=n(" 可被分别用来确保获得 ")),t("a",nl,[r[825]||(r[825]=t("code",null,"str",-1)),e(o)]),r[838]||(r[838]=n(" 或 ")),t("a",ol,[r[826]||(r[826]=t("code",null,"bytes",-1)),e(o)]),r[839]||(r[839]=n(" 类型的结果。此对象是由 ")),t("a",el,[r[827]||(r[827]=t("strong",null,"PEP 519",-1)),e(o)]),r[840]||(r[840]=n(" 引入的。"))]),r[1138]||(r[1138]=t("h3",{id:"pep",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#pep"},[t("span",null,"PEP")])],-1)),t("p",null,[r[842]||(r[842]=n("“Python 增强提议”的英文缩写。一个 PEP 就是一份设计文档，用来向 Python 社区提供信息，或描述一个 Python 的新增特性及其进度或环境。PEP 应当提供精确的技术规格和所提议特性的原理说明。 PEP 应被作为提出主要新特性建议、收集社区对特定问题反馈以及为必须加入 Python 的设计决策编写文档的首选机制。PEP 的作者有责任在社区内部建立共识，并应将不同意见也记入文档。 参见 ")),t("a",ll,[r[841]||(r[841]=t("strong",null,"PEP 1",-1)),e(o)]),r[843]||(r[843]=n("。"))]),r[1139]||(r[1139]=t("h3",{id:"portion-部分",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#portion-部分"},[t("span",null,"portion -- 部分")])],-1)),t("p",null,[r[845]||(r[845]=n("构成一个命名空间包的单个目录内文件集合（也可能存放于一个 zip 文件内），具体定义见 ")),t("a",sl,[r[844]||(r[844]=t("strong",null,"PEP 420",-1)),e(o)]),r[846]||(r[846]=n("。"))]),r[1140]||(r[1140]=t("h3",{id:"positional-argument-位置参数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#positional-argument-位置参数"},[t("span",null,"positional argument -- 位置参数")])],-1)),t("p",null,[r[848]||(r[848]=n("参见 ")),t("a",il,[r[847]||(r[847]=n("argument")),e(o)]),r[849]||(r[849]=n("。"))]),r[1141]||(r[1141]=t("h3",{id:"provisional-api-暂定-api",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#provisional-api-暂定-api"},[t("span",null,"provisional API -- 暂定 API")])],-1)),t("p",null,[r[851]||(r[851]=n("暂定 API 是指被有意排除在标准库的向后兼容性保证之外的应用编程接口。虽然此类接口通常不会再有重大改变，但只要其被标记为暂定，就可能在核心开发者确定有必要的情况下进行向后不兼容的更改（甚至包括移除该接口）。此种更改并不会随意进行 -- 仅在 API 被加入之前未考虑到的严重基础性缺陷被发现时才可能会这样做。 即便是对暂定 API 来说，向后不兼容的更改也会被视为“最后的解决方案” —— 任何问题被确认时都会尽可能先尝试找到一种向后兼容的解决方案。 这种处理过程允许标准库持续不断地演进，不至于被有问题的长期性设计缺陷所困。详情见 ")),t("a",pl,[r[850]||(r[850]=t("strong",null,"PEP 411",-1)),e(o)]),r[852]||(r[852]=n("。"))]),r[1142]||(r[1142]=t("h3",{id:"provisional-package-暂定包",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#provisional-package-暂定包"},[t("span",null,"provisional package -- 暂定包")])],-1)),t("p",null,[r[854]||(r[854]=n("参见 ")),t("a",dl,[r[853]||(r[853]=n("provisional API")),e(o)]),r[855]||(r[855]=n("。"))]),r[1143]||(r[1143]=t("h3",{id:"python-3000",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#python-3000"},[t("span",null,"Python 3000")])],-1)),r[1144]||(r[1144]=t("p",null,"Python 3.x 发布路线的昵称（这个名字在版本 3 的发布还遥遥无期的时候就已出现了）。有时也被缩写为“Py3k”。",-1)),r[1145]||(r[1145]=t("h3",{id:"pythonic",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#pythonic"},[t("span",null,"Pythonic")])],-1)),t("p",null,[r[857]||(r[857]=n("指一个思路或一段代码紧密遵循了 Python 语言最常用的风格和理念，而不是使用其他语言中通用的概念来实现代码。例如，Python 的常用风格是使用 ")),t("a",gl,[r[856]||(r[856]=t("code",null,"for",-1)),e(o)]),r[858]||(r[858]=n(" 语句循环来遍历一个可迭代对象中的所有元素。许多其他语言没有这样的结构，因此不熟悉 Python 的人有时会选择使用一个数字计数器: ")),r[859]||(r[859]=t("code",null,"for i in range(len(food)): print(food[i]) ",-1)),r[860]||(r[860]=n(" 而相应的更简洁更 Pythonic 的方法是这样的: ")),r[861]||(r[861]=t("code",null,"for piece in food: print(piece) ",-1))]),r[1146]||(r[1146]=t("h3",{id:"qualified-name-限定名称",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#qualified-name-限定名称"},[t("span",null,"qualified name -- 限定名称")])],-1)),t("p",null,[r[863]||(r[863]=n("一个以点号分隔的名称，显示从模块的全局作用域到该模块中定义的某个类、函数或方法的“路径”，相关定义见 ")),t("a",fl,[r[862]||(r[862]=t("strong",null,"PEP 3155",-1)),e(o)]),r[864]||(r[864]=n("。对于最高层级的函数和类，限定名称与对象名称一致: >>>")),r[865]||(r[865]=t("code",null,">>> class C: ... class D: ... def meth(self): ... pass ... >>> C.__qualname__ 'C' >>> C.D.__qualname__ 'C.D' >>> C.D.meth.__qualname__ 'C.D.meth' ",-1)),r[866]||(r[866]=n(" 当被用于引用模块时，")),r[867]||(r[867]=t("em",null,"完整限定名称",-1)),r[868]||(r[868]=n(" 意为标示该模块的以点号分隔的整个路径，其中包含其所有的父包，例如 ")),r[869]||(r[869]=t("code",null,"email.mime.text",-1)),r[870]||(r[870]=n(": >>>")),r[871]||(r[871]=t("code",null,">>> import email.mime.text >>> email.mime.text.__name__ 'email.mime.text' ",-1))]),r[1147]||(r[1147]=t("h3",{id:"reference-count-引用计数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reference-count-引用计数"},[t("span",null,"reference count -- 引用计数")])],-1)),t("p",null,[r[875]||(r[875]=n("对特定对象的引用的数量。当一个对象的引用计数降为零时，所分配资源将被释放。引用计数对 Python 代码来说通常是不可见的，但它是 ")),t("a",al,[r[872]||(r[872]=n("CPython")),e(o)]),r[876]||(r[876]=n(" 实现的一个关键元素。")),t("a",ul,[r[873]||(r[873]=t("code",null,"sys",-1)),e(o)]),r[877]||(r[877]=n(" 模块定义了一个 ")),t("a",yl,[r[874]||(r[874]=t("code",null,"getrefcount()",-1)),e(o)]),r[878]||(r[878]=n(" 函数，程序员可调用它来返回特定对象的引用计数。"))]),r[1148]||(r[1148]=t("h3",{id:"regular-package-常规包",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#regular-package-常规包"},[t("span",null,"regular package -- 常规包")])],-1)),t("p",null,[r[881]||(r[881]=n("传统型的 ")),t("a",ml,[r[879]||(r[879]=n("package")),e(o)]),r[882]||(r[882]=n("，例如包含有一个 ")),r[883]||(r[883]=t("code",null,"__init__.py",-1)),r[884]||(r[884]=n(" 文件的目录。 另参见 ")),t("a",bl,[r[880]||(r[880]=n("namespace package")),e(o)]),r[885]||(r[885]=n("。"))]),r[1149]||(r[1149]=t("h3",{id:"slots",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#slots"},[t("span",null,[t("code",null,"__slots__")])])],-1)),r[1150]||(r[1150]=t("p",null,"一种写在类内部的声明，通过预先声明实例属性等对象并移除实例字典来节省内存。虽然这种技巧很流行，但想要用好却并不容易，最好是只保留在少数情况下采用，例如极耗内存的应用程序，并且其中包含大量实例。",-1)),r[1151]||(r[1151]=t("h3",{id:"sequence-序列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#sequence-序列"},[t("span",null,"sequence -- 序列")])],-1)),t("p",null,[r[903]||(r[903]=n("一种 ")),t("a",hl,[r[886]||(r[886]=n("iterable")),e(o)]),r[904]||(r[904]=n("，它支持通过 ")),t("a",kl,[r[887]||(r[887]=t("code",null,"__getitem__()",-1)),e(o)]),r[905]||(r[905]=n(" 特殊方法来使用整数索引进行高效的元素访问，并定义了一个返回序列长度的 ")),t("a",zl,[r[888]||(r[888]=t("code",null,"__len__()",-1)),e(o)]),r[906]||(r[906]=n(" 方法。内置的序列类型有 ")),t("a",vl,[r[889]||(r[889]=t("code",null,"list",-1)),e(o)]),r[907]||(r[907]=n("、")),t("a",xl,[r[890]||(r[890]=t("code",null,"str",-1)),e(o)]),r[908]||(r[908]=n("、")),t("a",Pl,[r[891]||(r[891]=t("code",null,"tuple",-1)),e(o)]),r[909]||(r[909]=n(" 和 ")),t("a",wl,[r[892]||(r[892]=t("code",null,"bytes",-1)),e(o)]),r[910]||(r[910]=n("。注意虽然 ")),t("a",El,[r[893]||(r[893]=t("code",null,"dict",-1)),e(o)]),r[911]||(r[911]=n(" 也支持 ")),t("a",jl,[r[894]||(r[894]=t("code",null,"__getitem__()",-1)),e(o)]),r[912]||(r[912]=n(" 和 ")),t("a",ql,[r[895]||(r[895]=t("code",null,"__len__()",-1)),e(o)]),r[913]||(r[913]=n("，但它被认为属于映射而非序列，因为它查找时使用任意的 ")),t("a",Al,[r[896]||(r[896]=n("immutable")),e(o)]),r[914]||(r[914]=n(" 键而非整数。 ")),t("a",Cl,[r[897]||(r[897]=t("code",null,"collections.abc.Sequence",-1)),e(o)]),r[915]||(r[915]=n(" 抽象基类定义了一个更丰富的接口，它在 ")),t("a",Dl,[r[898]||(r[898]=t("code",null,"__getitem__()",-1)),e(o)]),r[916]||(r[916]=n(" 和 ")),t("a",Il,[r[899]||(r[899]=t("code",null,"__len__()",-1)),e(o)]),r[917]||(r[917]=n(" 之外又添加了 ")),r[918]||(r[918]=t("code",null,"count()",-1)),r[919]||(r[919]=n(", ")),r[920]||(r[920]=t("code",null,"index()",-1)),r[921]||(r[921]=n(", ")),t("a",Ll,[r[900]||(r[900]=t("code",null,"__contains__()",-1)),e(o)]),r[922]||(r[922]=n(" 和 ")),t("a",Fl,[r[901]||(r[901]=t("code",null,"__reversed__()",-1)),e(o)]),r[923]||(r[923]=n("。 实现此扩展接口的类型可以使用 ")),t("a",Bl,[r[902]||(r[902]=t("code",null,"register()",-1)),e(o)]),r[924]||(r[924]=n(" 来显式地注册。"))]),r[1152]||(r[1152]=t("h3",{id:"set-comprehension-集合推导式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#set-comprehension-集合推导式"},[t("span",null,"set comprehension -- 集合推导式")])],-1)),t("p",null,[r[926]||(r[926]=n("处理一个可迭代对象中的所有或部分元素并返回结果集合的一种紧凑写法。 ")),r[927]||(r[927]=t("code",null,"results = {c for c in 'abracadabra' if c not in 'abc'}",-1)),r[928]||(r[928]=n(" 将生成字符串集合 ")),r[929]||(r[929]=t("code",null,"{'r', 'd'}",-1)),r[930]||(r[930]=n("。 参见 ")),t("a",Ml,[r[925]||(r[925]=n("列表、集合与字典的显示")),e(o)]),r[931]||(r[931]=n("。"))]),r[1153]||(r[1153]=t("h3",{id:"single-dispatch-单分派",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#single-dispatch-单分派"},[t("span",null,"single dispatch -- 单分派")])],-1)),t("p",null,[r[933]||(r[933]=n("一种 ")),t("a",Sl,[r[932]||(r[932]=n("generic function")),e(o)]),r[934]||(r[934]=n(" 分派形式，其实现是基于单个参数的类型来选择的。"))]),r[1154]||(r[1154]=t("h3",{id:"slice-切片",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#slice-切片"},[t("span",null,"slice -- 切片")])],-1)),t("p",null,[r[937]||(r[937]=n("通常只包含了特定 ")),t("a",Nl,[r[935]||(r[935]=n("sequence")),e(o)]),r[938]||(r[938]=n(" 的一部分的对象。切片是通过使用下标标记来创建的，在 ")),r[939]||(r[939]=t("code",null,"[]",-1)),r[940]||(r[940]=n(" 中给出几个以冒号分隔的数字，例如 ")),r[941]||(r[941]=t("code",null,"variable_name[1:3:5]",-1)),r[942]||(r[942]=n("。方括号（下标）标记在内部使用 ")),t("a",Ol,[r[936]||(r[936]=t("code",null,"slice",-1)),e(o)]),r[943]||(r[943]=n(" 对象。"))]),r[1155]||(r[1155]=t("h3",{id:"special-method-特殊方法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#special-method-特殊方法"},[t("span",null,"special method -- 特殊方法")])],-1)),t("p",null,[r[945]||(r[945]=n("一种由 Python 隐式调用的方法，用来对某个类型执行特定操作例如相加等等。这种方法的名称的首尾都为双下划线。特殊方法的文档参见 ")),t("a",Tl,[r[944]||(r[944]=n("特殊方法名称")),e(o)]),r[946]||(r[946]=n("。"))]),r[1156]||(r[1156]=t("h3",{id:"statement-语句",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#statement-语句"},[t("span",null,"statement -- 语句")])],-1)),t("p",null,[r[951]||(r[951]=n("语句是程序段（一个代码“块”）的组成单位。一条语句可以是一个 ")),t("a",Gl,[r[947]||(r[947]=n("expression")),e(o)]),r[952]||(r[952]=n(" 或某个带有关键字的结构，例如 ")),t("a",Zl,[r[948]||(r[948]=t("code",null,"if",-1)),e(o)]),r[953]||(r[953]=n("、")),t("a",Rl,[r[949]||(r[949]=t("code",null,"while",-1)),e(o)]),r[954]||(r[954]=n(" 或 ")),t("a",Vl,[r[950]||(r[950]=t("code",null,"for",-1)),e(o)]),r[955]||(r[955]=n("。"))]),r[1157]||(r[1157]=t("h3",{id:"text-encoding-文本编码",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#text-encoding-文本编码"},[t("span",null,"text encoding -- 文本编码")])],-1)),r[1158]||(r[1158]=t("p",null,"用于将Unicode字符串编码为字节串的编码器。",-1)),r[1159]||(r[1159]=t("h3",{id:"text-file-文本文件",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#text-file-文本文件"},[t("span",null,"text file -- 文本文件")])],-1)),t("p",null,[r[964]||(r[964]=n("一种能够读写 ")),t("a",Yl,[r[956]||(r[956]=t("code",null,"str",-1)),e(o)]),r[965]||(r[965]=n(" 对象的 ")),t("a",Jl,[r[957]||(r[957]=n("file object")),e(o)]),r[966]||(r[966]=n("。通常一个文本文件实际是访问一个面向字节的数据流并自动处理 ")),t("a",Ul,[r[958]||(r[958]=n("text encoding")),e(o)]),r[967]||(r[967]=n("。文本文件的例子包括以文本模式（")),r[968]||(r[968]=t("code",null,"'r'",-1)),r[969]||(r[969]=n(" 或 ")),r[970]||(r[970]=t("code",null,"'w'",-1)),r[971]||(r[971]=n("）打开的文件、")),t("a",Wl,[r[959]||(r[959]=t("code",null,"sys.stdin",-1)),e(o)]),r[972]||(r[972]=n("、")),t("a",Hl,[r[960]||(r[960]=t("code",null,"sys.stdout",-1)),e(o)]),r[973]||(r[973]=n(" 以及 ")),t("a",Kl,[r[961]||(r[961]=t("code",null,"io.StringIO",-1)),e(o)]),r[974]||(r[974]=n(" 的实例。 另请参看 ")),t("a",Ql,[r[962]||(r[962]=n("binary file")),e(o)]),r[975]||(r[975]=n(" 了解能够读写 ")),t("a",Xl,[r[963]||(r[963]=n("字节类对象")),e(o)]),r[976]||(r[976]=n(" 的文件对象。"))]),r[1160]||(r[1160]=t("h3",{id:"triple-quoted-string-三引号字符串",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#triple-quoted-string-三引号字符串"},[t("span",null,"triple-quoted string -- 三引号字符串")])],-1)),r[1161]||(r[1161]=t("p",null,`首尾各带三个连续双引号（"）或者单引号（'）的字符串。它们在功能上与首尾各用一个引号标注的字符串没有什么不同，但是有多种用处。它们允许你在字符串内包含未经转义的单引号和双引号，并且可以跨越多行而无需使用连接符，在编写文档字符串时特别好用。`,-1)),r[1162]||(r[1162]=t("h3",{id:"type-类型",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-类型"},[t("span",null,"type -- 类型")])],-1)),t("p",null,[r[978]||(r[978]=n("类型决定一个 Python 对象属于什么种类；每个对象都具有一种类型。要知道对象的类型，可以访问它的 ")),t("a",$l,[r[977]||(r[977]=t("code",null,"__class__",-1)),e(o)]),r[979]||(r[979]=n(" 属性，或是通过 ")),r[980]||(r[980]=t("code",null,"type(obj)",-1)),r[981]||(r[981]=n(" 来获取。"))]),r[1163]||(r[1163]=t("h3",{id:"type-alias-类型别名",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-alias-类型别名"},[t("span",null,"type alias -- 类型别名")])],-1)),t("p",null,[r[985]||(r[985]=n("一个类型的同义词，创建方式是把类型赋值给特定的标识符。 类型别名的作用是简化 ")),t("a",_l,[r[982]||(r[982]=n("类型提示")),e(o)]),r[986]||(r[986]=n("。例如: ")),r[987]||(r[987]=t("code",null,"def remove_gray_shades( colors: list[tuple[int, int, int]]) -> list[tuple[int, int, int]]: pass ",-1)),r[988]||(r[988]=n(" 可以这样提高可读性: ")),r[989]||(r[989]=t("code",null,"Color = tuple[int, int, int] def remove_gray_shades(colors: list[Color]) -> list[Color]: pass ",-1)),r[990]||(r[990]=n(" 参见 ")),t("a",cl,[r[983]||(r[983]=t("code",null,"typing",-1)),e(o)]),r[991]||(r[991]=n(" 和 ")),t("a",rs,[r[984]||(r[984]=t("strong",null,"PEP 484",-1)),e(o)]),r[992]||(r[992]=n("，其中有对此功能的详细描述。"))]),r[1164]||(r[1164]=t("h3",{id:"type-hint-类型提示",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-hint-类型提示"},[t("span",null,"type hint -- 类型提示")])],-1)),t("p",null,[t("a",ts,[r[993]||(r[993]=n("annotation")),e(o)]),r[997]||(r[997]=n(" 为变量、类属性、函数的形参或返回值指定预期的类型。 类型提示属于可选项，Python 不要求提供，但其可对静态类型分析工具起作用，并可协助 IDE 实现代码补全与重构。 全局变量、类属性和函数的类型提示可以使用 ")),t("a",ns,[r[994]||(r[994]=t("code",null,"typing.get_type_hints()",-1)),e(o)]),r[998]||(r[998]=n(" 来访问，但局部变量则不可以。 参见 ")),t("a",os,[r[995]||(r[995]=t("code",null,"typing",-1)),e(o)]),r[999]||(r[999]=n(" 和 ")),t("a",es,[r[996]||(r[996]=t("strong",null,"PEP 484",-1)),e(o)]),r[1e3]||(r[1e3]=n("，其中有对此功能的详细描述。"))]),r[1165]||(r[1165]=t("h3",{id:"universal-newlines-通用换行",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#universal-newlines-通用换行"},[t("span",null,"universal newlines -- 通用换行")])],-1)),t("p",null,[r[1004]||(r[1004]=n("一种解读文本流的方式，将以下所有符号都识别为行结束标志：Unix 的行结束约定 ")),r[1005]||(r[1005]=t("code",null,"'\\n'",-1)),r[1006]||(r[1006]=n("、Windows 的约定 ")),r[1007]||(r[1007]=t("code",null,"'\\r\\n'",-1)),r[1008]||(r[1008]=n(" 以及旧版 Macintosh 的约定 ")),r[1009]||(r[1009]=t("code",null,"'\\r'",-1)),r[1010]||(r[1010]=n("。参见 ")),t("a",ls,[r[1001]||(r[1001]=t("strong",null,"PEP 278",-1)),e(o)]),r[1011]||(r[1011]=n(" 和 ")),t("a",ss,[r[1002]||(r[1002]=t("strong",null,"PEP 3116",-1)),e(o)]),r[1012]||(r[1012]=n(" 和 ")),t("a",is,[r[1003]||(r[1003]=t("code",null,"bytes.splitlines()",-1)),e(o)]),r[1013]||(r[1013]=n(" 了解更多用法说明。"))]),r[1166]||(r[1166]=t("h3",{id:"variable-annotation-变量注解",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#variable-annotation-变量注解"},[t("span",null,"variable annotation -- 变量注解")])],-1)),t("p",null,[r[1021]||(r[1021]=n("对变量或类属性的 ")),t("a",ps,[r[1014]||(r[1014]=n("annotation")),e(o)]),r[1022]||(r[1022]=n("。 在标注变量或类属性时，还可选择为其赋值: ")),r[1023]||(r[1023]=t("code",null,"class C: field: 'annotation' ",-1)),r[1024]||(r[1024]=n(" 变量标注通常被用作 ")),t("a",ds,[r[1015]||(r[1015]=n("类型提示")),e(o)]),r[1025]||(r[1025]=n("：例如以下变量预期接受 ")),t("a",gs,[r[1016]||(r[1016]=t("code",null,"int",-1)),e(o)]),r[1026]||(r[1026]=n(" 类型的值: ")),r[1027]||(r[1027]=t("code",null,"count: int = 0 ",-1)),r[1028]||(r[1028]=n(" 变量标注语法的详细解释见 ")),t("a",fs,[r[1017]||(r[1017]=n("带标注的赋值语句")),e(o)]),r[1029]||(r[1029]=n(" 一节。 请参看 ")),t("a",as,[r[1018]||(r[1018]=n("function annotation")),e(o)]),r[1030]||(r[1030]=n("、")),t("a",us,[r[1019]||(r[1019]=t("strong",null,"PEP 484",-1)),e(o)]),r[1031]||(r[1031]=n(" 和 ")),t("a",ys,[r[1020]||(r[1020]=t("strong",null,"PEP 526",-1)),e(o)]),r[1032]||(r[1032]=n("，其中对此功能有详细描述。"))]),r[1167]||(r[1167]=t("h3",{id:"virtual-environment-虚拟环境",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#virtual-environment-虚拟环境"},[t("span",null,"virtual environment -- 虚拟环境")])],-1)),t("p",null,[r[1034]||(r[1034]=n("一种采用协作式隔离的运行时环境，允许 Python 用户和应用程序在安装和升级 Python 分发包时不会干扰到同一系统上运行的其他 Python 应用程序的行为。 另参见 ")),t("a",ms,[r[1033]||(r[1033]=t("code",null,"venv",-1)),e(o)]),r[1035]||(r[1035]=n("。"))]),r[1168]||(r[1168]=t("h3",{id:"virtual-machine-虚拟机",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#virtual-machine-虚拟机"},[t("span",null,"virtual machine -- 虚拟机")])],-1)),t("p",null,[r[1037]||(r[1037]=n("一台完全通过软件定义的计算机。Python 虚拟机可执行字节码编译器所生成的 ")),t("a",bs,[r[1036]||(r[1036]=n("bytecode")),e(o)]),r[1038]||(r[1038]=n("。"))]),r[1169]||(r[1169]=t("h3",{id:"zen-of-python-python-之禅",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#zen-of-python-python-之禅"},[t("span",null,"Zen of Python -- Python 之禅")])],-1)),r[1170]||(r[1170]=t("p",null,[n('列出 Python 设计的原则与哲学，有助于理解与使用这种语言。查看其具体内容可在交互模式提示符中输入 "'),t("code",null,"import this"),n('"。')],-1))])}const vs=s(g,[["render",hs],["__file","10. 术语对照表.html.vue"]]),xs=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/10.%20%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 术语对照表¶ Default >>> 交互式终端中默认的 Python 提示符。往往会显示于能以交互方式在解释器里执行的样例代码之前。 ... 可以是指： 交互式终端中输入特殊代码行时默认的 Python 提示符，包括：缩进的代码块，成对的分隔符之内（圆括号、方括号、花括号或三重引号），或是指定一个装饰器之后。 Ellipsis 内...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/10.%20%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 术语对照表¶ Default >>> 交互式终端中默认的 Python 提示符。往往会显示于能以交互方式在解释器里执行的样例代码之前。 ... 可以是指： 交互式终端中输入特殊代码行时默认的 Python 提示符，包括：缩进的代码块，成对的分隔符之内（圆括号、方括号、花括号或三重引号），或是指定一个装饰器之后。 Ellipsis 内..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"术语对照表¶","slug":"术语对照表¶","link":"#术语对照表¶","children":[{"level":2,"title":"Default","slug":"default","link":"#default","children":[{"level":3,"title":">>>","slug":"","link":"#","children":[]},{"level":3,"title":"...","slug":"-1","link":"#-1","children":[]},{"level":3,"title":"2to3","slug":"_2to3","link":"#_2to3","children":[]},{"level":3,"title":"abstract base class -- 抽象基类","slug":"abstract-base-class-抽象基类","link":"#abstract-base-class-抽象基类","children":[]},{"level":3,"title":"annotation -- 注解","slug":"annotation-注解","link":"#annotation-注解","children":[]},{"level":3,"title":"argument -- 参数","slug":"argument-参数","link":"#argument-参数","children":[]},{"level":3,"title":"asynchronous context manager -- 异步上下文管理器","slug":"asynchronous-context-manager-异步上下文管理器","link":"#asynchronous-context-manager-异步上下文管理器","children":[]},{"level":3,"title":"asynchronous generator -- 异步生成器","slug":"asynchronous-generator-异步生成器","link":"#asynchronous-generator-异步生成器","children":[]},{"level":3,"title":"asynchronous generator iterator -- 异步生成器迭代器","slug":"asynchronous-generator-iterator-异步生成器迭代器","link":"#asynchronous-generator-iterator-异步生成器迭代器","children":[]},{"level":3,"title":"asynchronous iterable -- 异步可迭代对象","slug":"asynchronous-iterable-异步可迭代对象","link":"#asynchronous-iterable-异步可迭代对象","children":[]},{"level":3,"title":"asynchronous iterator -- 异步迭代器","slug":"asynchronous-iterator-异步迭代器","link":"#asynchronous-iterator-异步迭代器","children":[]},{"level":3,"title":"attribute -- 属性","slug":"attribute-属性","link":"#attribute-属性","children":[]},{"level":3,"title":"awaitable -- 可等待对象","slug":"awaitable-可等待对象","link":"#awaitable-可等待对象","children":[]},{"level":3,"title":"BDFL","slug":"bdfl","link":"#bdfl","children":[]},{"level":3,"title":"binary file -- 二进制文件","slug":"binary-file-二进制文件","link":"#binary-file-二进制文件","children":[]},{"level":3,"title":"bytes-like object -- 字节类对象","slug":"bytes-like-object-字节类对象","link":"#bytes-like-object-字节类对象","children":[]},{"level":3,"title":"bytecode -- 字节码","slug":"bytecode-字节码","link":"#bytecode-字节码","children":[]},{"level":3,"title":"callback -- 回调","slug":"callback-回调","link":"#callback-回调","children":[]},{"level":3,"title":"class -- 类","slug":"class-类","link":"#class-类","children":[]},{"level":3,"title":"class variable -- 类变量","slug":"class-variable-类变量","link":"#class-variable-类变量","children":[]},{"level":3,"title":"coercion -- 强制类型转换","slug":"coercion-强制类型转换","link":"#coercion-强制类型转换","children":[]},{"level":3,"title":"complex number -- 复数","slug":"complex-number-复数","link":"#complex-number-复数","children":[]},{"level":3,"title":"context manager -- 上下文管理器","slug":"context-manager-上下文管理器","link":"#context-manager-上下文管理器","children":[]},{"level":3,"title":"context variable -- 上下文变量","slug":"context-variable-上下文变量","link":"#context-variable-上下文变量","children":[]},{"level":3,"title":"contiguous -- 连续","slug":"contiguous-连续","link":"#contiguous-连续","children":[]},{"level":3,"title":"coroutine -- 协程","slug":"coroutine-协程","link":"#coroutine-协程","children":[]},{"level":3,"title":"coroutine function -- 协程函数","slug":"coroutine-function-协程函数","link":"#coroutine-function-协程函数","children":[]},{"level":3,"title":"CPython","slug":"cpython","link":"#cpython","children":[]},{"level":3,"title":"decorator -- 装饰器","slug":"decorator-装饰器","link":"#decorator-装饰器","children":[]},{"level":3,"title":"descriptor -- 描述器","slug":"descriptor-描述器","link":"#descriptor-描述器","children":[]},{"level":3,"title":"dictionary -- 字典","slug":"dictionary-字典","link":"#dictionary-字典","children":[]},{"level":3,"title":"dictionary comprehension -- 字典推导式","slug":"dictionary-comprehension-字典推导式","link":"#dictionary-comprehension-字典推导式","children":[]},{"level":3,"title":"dictionary view -- 字典视图","slug":"dictionary-view-字典视图","link":"#dictionary-view-字典视图","children":[]},{"level":3,"title":"docstring -- 文档字符串","slug":"docstring-文档字符串","link":"#docstring-文档字符串","children":[]},{"level":3,"title":"duck-typing -- 鸭子类型","slug":"duck-typing-鸭子类型","link":"#duck-typing-鸭子类型","children":[]},{"level":3,"title":"EAFP","slug":"eafp","link":"#eafp","children":[]},{"level":3,"title":"expression -- 表达式","slug":"expression-表达式","link":"#expression-表达式","children":[]},{"level":3,"title":"extension module -- 扩展模块","slug":"extension-module-扩展模块","link":"#extension-module-扩展模块","children":[]},{"level":3,"title":"f-string -- f-字符串","slug":"f-string-f-字符串","link":"#f-string-f-字符串","children":[]},{"level":3,"title":"file object -- 文件对象","slug":"file-object-文件对象","link":"#file-object-文件对象","children":[]},{"level":3,"title":"file-like object -- 文件类对象","slug":"file-like-object-文件类对象","link":"#file-like-object-文件类对象","children":[]},{"level":3,"title":"finder -- 查找器","slug":"finder-查找器","link":"#finder-查找器","children":[]},{"level":3,"title":"floor division -- 向下取整除法","slug":"floor-division-向下取整除法","link":"#floor-division-向下取整除法","children":[]},{"level":3,"title":"function -- 函数","slug":"function-函数","link":"#function-函数","children":[]},{"level":3,"title":"function annotation -- 函数标注","slug":"function-annotation-函数标注","link":"#function-annotation-函数标注","children":[]},{"level":3,"title":"__future__","slug":"future","link":"#future","children":[]},{"level":3,"title":"garbage collection -- 垃圾回收","slug":"garbage-collection-垃圾回收","link":"#garbage-collection-垃圾回收","children":[]},{"level":3,"title":"generator -- 生成器","slug":"generator-生成器","link":"#generator-生成器","children":[]},{"level":3,"title":"generator iterator -- 生成器迭代器","slug":"generator-iterator-生成器迭代器","link":"#generator-iterator-生成器迭代器","children":[]},{"level":3,"title":"generator expression -- 生成器表达式","slug":"generator-expression-生成器表达式","link":"#generator-expression-生成器表达式","children":[]},{"level":3,"title":"generic function -- 泛型函数","slug":"generic-function-泛型函数","link":"#generic-function-泛型函数","children":[]},{"level":3,"title":"generic type -- 泛型类型","slug":"generic-type-泛型类型","link":"#generic-type-泛型类型","children":[]},{"level":3,"title":"GIL","slug":"gil","link":"#gil","children":[]},{"level":3,"title":"global interpreter lock -- 全局解释器锁","slug":"global-interpreter-lock-全局解释器锁","link":"#global-interpreter-lock-全局解释器锁","children":[]},{"level":3,"title":"hash-based pyc -- 基于哈希的 pyc","slug":"hash-based-pyc-基于哈希的-pyc","link":"#hash-based-pyc-基于哈希的-pyc","children":[]},{"level":3,"title":"hashable -- 可哈希","slug":"hashable-可哈希","link":"#hashable-可哈希","children":[]},{"level":3,"title":"IDLE","slug":"idle","link":"#idle","children":[]},{"level":3,"title":"immutable -- 不可变","slug":"immutable-不可变","link":"#immutable-不可变","children":[]},{"level":3,"title":"import path -- 导入路径","slug":"import-path-导入路径","link":"#import-path-导入路径","children":[]},{"level":3,"title":"importing -- 导入","slug":"importing-导入","link":"#importing-导入","children":[]},{"level":3,"title":"importer -- 导入器","slug":"importer-导入器","link":"#importer-导入器","children":[]},{"level":3,"title":"interactive -- 交互","slug":"interactive-交互","link":"#interactive-交互","children":[]},{"level":3,"title":"interpreted -- 解释型","slug":"interpreted-解释型","link":"#interpreted-解释型","children":[]},{"level":3,"title":"interpreter shutdown -- 解释器关闭","slug":"interpreter-shutdown-解释器关闭","link":"#interpreter-shutdown-解释器关闭","children":[]},{"level":3,"title":"iterable -- 可迭代对象","slug":"iterable-可迭代对象","link":"#iterable-可迭代对象","children":[]},{"level":3,"title":"iterator -- 迭代器","slug":"iterator-迭代器","link":"#iterator-迭代器","children":[]},{"level":3,"title":"key function -- 键函数","slug":"key-function-键函数","link":"#key-function-键函数","children":[]},{"level":3,"title":"keyword argument -- 关键字参数","slug":"keyword-argument-关键字参数","link":"#keyword-argument-关键字参数","children":[]},{"level":3,"title":"lambda","slug":"lambda","link":"#lambda","children":[]},{"level":3,"title":"LBYL","slug":"lbyl","link":"#lbyl","children":[]},{"level":3,"title":"list -- 列表","slug":"list-列表","link":"#list-列表","children":[]},{"level":3,"title":"list comprehension -- 列表推导式","slug":"list-comprehension-列表推导式","link":"#list-comprehension-列表推导式","children":[]},{"level":3,"title":"loader -- 加载器","slug":"loader-加载器","link":"#loader-加载器","children":[]},{"level":3,"title":"magic method -- 魔术方法","slug":"magic-method-魔术方法","link":"#magic-method-魔术方法","children":[]},{"level":3,"title":"mapping -- 映射","slug":"mapping-映射","link":"#mapping-映射","children":[]},{"level":3,"title":"meta path finder -- 元路径查找器","slug":"meta-path-finder-元路径查找器","link":"#meta-path-finder-元路径查找器","children":[]},{"level":3,"title":"metaclass -- 元类","slug":"metaclass-元类","link":"#metaclass-元类","children":[]},{"level":3,"title":"method -- 方法","slug":"method-方法","link":"#method-方法","children":[]},{"level":3,"title":"method resolution order -- 方法解析顺序","slug":"method-resolution-order-方法解析顺序","link":"#method-resolution-order-方法解析顺序","children":[]},{"level":3,"title":"module -- 模块","slug":"module-模块","link":"#module-模块","children":[]},{"level":3,"title":"module spec -- 模块规格","slug":"module-spec-模块规格","link":"#module-spec-模块规格","children":[]},{"level":3,"title":"MRO","slug":"mro","link":"#mro","children":[]},{"level":3,"title":"mutable -- 可变","slug":"mutable-可变","link":"#mutable-可变","children":[]},{"level":3,"title":"named tuple -- 具名元组","slug":"named-tuple-具名元组","link":"#named-tuple-具名元组","children":[]},{"level":3,"title":"namespace -- 命名空间","slug":"namespace-命名空间","link":"#namespace-命名空间","children":[]},{"level":3,"title":"namespace package -- 命名空间包","slug":"namespace-package-命名空间包","link":"#namespace-package-命名空间包","children":[]},{"level":3,"title":"nested scope -- 嵌套作用域","slug":"nested-scope-嵌套作用域","link":"#nested-scope-嵌套作用域","children":[]},{"level":3,"title":"new-style class -- 新式类","slug":"new-style-class-新式类","link":"#new-style-class-新式类","children":[]},{"level":3,"title":"object -- 对象","slug":"object-对象","link":"#object-对象","children":[]},{"level":3,"title":"package -- 包","slug":"package-包","link":"#package-包","children":[]},{"level":3,"title":"parameter -- 形参","slug":"parameter-形参","link":"#parameter-形参","children":[]},{"level":3,"title":"path entry -- 路径入口","slug":"path-entry-路径入口","link":"#path-entry-路径入口","children":[]},{"level":3,"title":"path entry finder -- 路径入口查找器","slug":"path-entry-finder-路径入口查找器","link":"#path-entry-finder-路径入口查找器","children":[]},{"level":3,"title":"path entry hook -- 路径入口钩子","slug":"path-entry-hook-路径入口钩子","link":"#path-entry-hook-路径入口钩子","children":[]},{"level":3,"title":"path based finder -- 基于路径的查找器","slug":"path-based-finder-基于路径的查找器","link":"#path-based-finder-基于路径的查找器","children":[]},{"level":3,"title":"path-like object -- 路径类对象","slug":"path-like-object-路径类对象","link":"#path-like-object-路径类对象","children":[]},{"level":3,"title":"PEP","slug":"pep","link":"#pep","children":[]},{"level":3,"title":"portion -- 部分","slug":"portion-部分","link":"#portion-部分","children":[]},{"level":3,"title":"positional argument -- 位置参数","slug":"positional-argument-位置参数","link":"#positional-argument-位置参数","children":[]},{"level":3,"title":"provisional API -- 暂定 API","slug":"provisional-api-暂定-api","link":"#provisional-api-暂定-api","children":[]},{"level":3,"title":"provisional package -- 暂定包","slug":"provisional-package-暂定包","link":"#provisional-package-暂定包","children":[]},{"level":3,"title":"Python 3000","slug":"python-3000","link":"#python-3000","children":[]},{"level":3,"title":"Pythonic","slug":"pythonic","link":"#pythonic","children":[]},{"level":3,"title":"qualified name -- 限定名称","slug":"qualified-name-限定名称","link":"#qualified-name-限定名称","children":[]},{"level":3,"title":"reference count -- 引用计数","slug":"reference-count-引用计数","link":"#reference-count-引用计数","children":[]},{"level":3,"title":"regular package -- 常规包","slug":"regular-package-常规包","link":"#regular-package-常规包","children":[]},{"level":3,"title":"__slots__","slug":"slots","link":"#slots","children":[]},{"level":3,"title":"sequence -- 序列","slug":"sequence-序列","link":"#sequence-序列","children":[]},{"level":3,"title":"set comprehension -- 集合推导式","slug":"set-comprehension-集合推导式","link":"#set-comprehension-集合推导式","children":[]},{"level":3,"title":"single dispatch -- 单分派","slug":"single-dispatch-单分派","link":"#single-dispatch-单分派","children":[]},{"level":3,"title":"slice -- 切片","slug":"slice-切片","link":"#slice-切片","children":[]},{"level":3,"title":"special method -- 特殊方法","slug":"special-method-特殊方法","link":"#special-method-特殊方法","children":[]},{"level":3,"title":"statement -- 语句","slug":"statement-语句","link":"#statement-语句","children":[]},{"level":3,"title":"text encoding -- 文本编码","slug":"text-encoding-文本编码","link":"#text-encoding-文本编码","children":[]},{"level":3,"title":"text file -- 文本文件","slug":"text-file-文本文件","link":"#text-file-文本文件","children":[]},{"level":3,"title":"triple-quoted string -- 三引号字符串","slug":"triple-quoted-string-三引号字符串","link":"#triple-quoted-string-三引号字符串","children":[]},{"level":3,"title":"type -- 类型","slug":"type-类型","link":"#type-类型","children":[]},{"level":3,"title":"type alias -- 类型别名","slug":"type-alias-类型别名","link":"#type-alias-类型别名","children":[]},{"level":3,"title":"type hint -- 类型提示","slug":"type-hint-类型提示","link":"#type-hint-类型提示","children":[]},{"level":3,"title":"universal newlines -- 通用换行","slug":"universal-newlines-通用换行","link":"#universal-newlines-通用换行","children":[]},{"level":3,"title":"variable annotation -- 变量注解","slug":"variable-annotation-变量注解","link":"#variable-annotation-变量注解","children":[]},{"level":3,"title":"virtual environment -- 虚拟环境","slug":"virtual-environment-虚拟环境","link":"#virtual-environment-虚拟环境","children":[]},{"level":3,"title":"virtual machine -- 虚拟机","slug":"virtual-machine-虚拟机","link":"#virtual-machine-虚拟机","children":[]},{"level":3,"title":"Zen of Python -- Python 之禅","slug":"zen-of-python-python-之禅","link":"#zen-of-python-python-之禅","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":43.47,"words":13042},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/01. 编程语言/10. 术语对照表.md","excerpt":"\\n<h1>目录</h1>\\n<h1><a class=\\"header-anchor\\" href=\\"#术语对照表¶\\"><span>术语对照表</span></a><a href=\\"https://docs.python.org/zh-cn/3/glossary.html#glossary\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">¶</a></h1>\\n<h2>Default</h2>\\n<h3><code>&gt;&gt;&gt;</code></h3>\\n<p>交互式终端中默认的 Python 提示符。往往会显示于能以交互方式在解释器里执行的样例代码之前。</p>","autoDesc":true}');export{vs as comp,xs as data};
