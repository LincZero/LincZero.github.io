import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Bl6HAa8e.js";const p={},o=t(`<p>这里我使用的是python脚本，这里参考的是一个段久远的机器人插件记忆</p><p>核心代码：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request
<span class="token keyword">import</span> importlib<span class="token punctuation">.</span>util
<span class="token keyword">import</span> os

current_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>

client <span class="token operator">=</span> Flask<span class="token punctuation">(</span><span class="token string">&quot;client&quot;</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@client<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/plugins/&lt;path:path&gt;&#39;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">route_plugins</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; 在plugins文件夹中查找&lt;plugin_name&gt;目录，并调用里面main.py里的main()，进行返回 &quot;&quot;&quot;</span>
    path_parts <span class="token operator">=</span> path<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
    plugin_name <span class="token operator">=</span> path_parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    plugin_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>current_dir<span class="token punctuation">,</span> <span class="token string">&#39;plugins&#39;</span><span class="token punctuation">,</span> plugin_name<span class="token punctuation">,</span> <span class="token string">&#39;main.py&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>plugin_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;插件不存在: </span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token number">404</span>

    spec <span class="token operator">=</span> importlib<span class="token punctuation">.</span>util<span class="token punctuation">.</span>spec_from_file_location<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.main&quot;</span></span><span class="token punctuation">,</span> plugin_path<span class="token punctuation">)</span>
    main_module <span class="token operator">=</span> importlib<span class="token punctuation">.</span>util<span class="token punctuation">.</span>module_from_spec<span class="token punctuation">(</span>spec<span class="token punctuation">)</span>
    spec<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>exec_module<span class="token punctuation">(</span>main_module<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>main_module<span class="token punctuation">,</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;插件没有入口函数: </span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token number">400</span>

    params <span class="token operator">=</span> request<span class="token punctuation">.</span>args <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;GET&#39;</span> <span class="token keyword">else</span> request<span class="token punctuation">.</span>form
    <span class="token keyword">return</span> main_module<span class="token punctuation">.</span>main<span class="token punctuation">(</span>path<span class="token punctuation">,</span> params<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    client<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">15000</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","01. python调用python.html.vue"]]),d=JSON.parse(`{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/05.%20%E6%8F%92%E4%BB%B6%E4%BD%93%E7%B3%BB/01.%20python%E8%B0%83%E7%94%A8python.html","title":"","lang":"zh-CN","frontmatter":{"description":"这里我使用的是python脚本，这里参考的是一个段久远的机器人插件记忆 核心代码：","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/05.%20%E6%8F%92%E4%BB%B6%E4%BD%93%E7%B3%BB/01.%20python%E8%B0%83%E7%94%A8python.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:description","content":"这里我使用的是python脚本，这里参考的是一个段久远的机器人插件记忆 核心代码："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.52,"words":155},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/03. Tools/02. 管理层/03. 多项目管理/05. 插件体系/01. python调用python.md","excerpt":"<p>这里我使用的是python脚本，这里参考的是一个段久远的机器人插件记忆</p>\\n<p>核心代码：</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> flask <span class=\\"token keyword\\">import</span> Flask<span class=\\"token punctuation\\">,</span> request\\n<span class=\\"token keyword\\">import</span> importlib<span class=\\"token punctuation\\">.</span>util\\n<span class=\\"token keyword\\">import</span> os\\n\\ncurrent_dir <span class=\\"token operator\\">=</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>dirname<span class=\\"token punctuation\\">(</span>os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>abspath<span class=\\"token punctuation\\">(</span>__file__<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\nclient <span class=\\"token operator\\">=</span> Flask<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"client\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@client<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/plugins/&lt;path:path&gt;'</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'GET'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'POST'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">route_plugins</span><span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token triple-quoted-string string\\">\\"\\"\\" 在plugins文件夹中查找&lt;plugin_name&gt;目录，并调用里面main.py里的main()，进行返回 \\"\\"\\"</span>\\n    path_parts <span class=\\"token operator\\">=</span> path<span class=\\"token punctuation\\">.</span>split<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/'</span><span class=\\"token punctuation\\">)</span>\\n    plugin_name <span class=\\"token operator\\">=</span> path_parts<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span>\\n\\n    plugin_path <span class=\\"token operator\\">=</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>join<span class=\\"token punctuation\\">(</span>current_dir<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'plugins'</span><span class=\\"token punctuation\\">,</span> plugin_name<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'main.py'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>exists<span class=\\"token punctuation\\">(</span>plugin_path<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"插件不存在: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>plugin_name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">404</span>\\n\\n    spec <span class=\\"token operator\\">=</span> importlib<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span>spec_from_file_location<span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>plugin_name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">.main\\"</span></span><span class=\\"token punctuation\\">,</span> plugin_path<span class=\\"token punctuation\\">)</span>\\n    main_module <span class=\\"token operator\\">=</span> importlib<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span>module_from_spec<span class=\\"token punctuation\\">(</span>spec<span class=\\"token punctuation\\">)</span>\\n    spec<span class=\\"token punctuation\\">.</span>loader<span class=\\"token punctuation\\">.</span>exec_module<span class=\\"token punctuation\\">(</span>main_module<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> <span class=\\"token builtin\\">hasattr</span><span class=\\"token punctuation\\">(</span>main_module<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'main'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"插件没有入口函数: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>plugin_name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">400</span>\\n\\n    params <span class=\\"token operator\\">=</span> request<span class=\\"token punctuation\\">.</span>args <span class=\\"token keyword\\">if</span> request<span class=\\"token punctuation\\">.</span>method <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'GET'</span> <span class=\\"token keyword\\">else</span> request<span class=\\"token punctuation\\">.</span>form\\n    <span class=\\"token keyword\\">return</span> main_module<span class=\\"token punctuation\\">.</span>main<span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">,</span> params<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    client<span class=\\"token punctuation\\">.</span>run<span class=\\"token punctuation\\">(</span>host<span class=\\"token operator\\">=</span><span class=\\"token string\\">'127.0.0.1'</span><span class=\\"token punctuation\\">,</span> port<span class=\\"token operator\\">=</span><span class=\\"token number\\">15000</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre></div>","autoDesc":true}`);export{k as comp,d as data};
