import{_ as i,c as e,e as a,o as t}from"./app-DQC9V0Al.js";const n={};function l(h,s){return t(),e("div",null,s[0]||(s[0]=[a(`<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="sys-命令行参数" tabindex="-1"><a class="header-anchor" href="#sys-命令行参数"><span>sys 命令行参数</span></a></h1><h2 id="命令行参数" tabindex="-1"><a class="header-anchor" href="#命令行参数"><span>命令行参数</span></a></h2><p>参考文档：https://docs.python.org/3/library/sys.html#module-sys</p><p>通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量</p><p>例如在命令行中执行 <code>python demo.py one two three</code> 后可以得到以下输出结果：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sys.argv)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;demo.py&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;one&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;two&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;three&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://docs.python.org/3/library/getopt.html#module-getopt" target="_blank" rel="noopener noreferrer">getopt</a> 模块使用 Unix <a href="https://docs.python.org/3/library/getopt.html#module-getopt" target="_blank" rel="noopener noreferrer">getopt()</a> 函数处理 <em>sys.argv</em>。更多的复杂命令行处理由 <a href="https://docs.python.org/3/library/argparse.html#module-argparse" target="_blank" rel="noopener noreferrer">argparse</a> 模块提供</p><h2 id="错误输出重定向和程序终止" tabindex="-1"><a class="header-anchor" href="#错误输出重定向和程序终止"><span>错误输出重定向和程序终止</span></a></h2><p><a href="https://docs.python.org/3/library/sys.html#module-sys" target="_blank" rel="noopener noreferrer">sys</a> 还有 <em>stdin</em>， <em>stdout</em> 和 <em>stderr</em> 属性，即使在 <em>stdout</em> 被重定向时，后者也可以用于显示警告和错误信息：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys.stderr.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Warning, log file not found starting a new one</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">Warning</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, log </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> found starting a new one</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>大多脚本的直接终止都使用 <code>sys.exit()</code></p><p>即类似于C++的修改错误默认行为</p><h2 id="【标准】sys模块" tabindex="-1"><a class="header-anchor" href="#【标准】sys模块"><span>【标准】sys模块</span></a></h2><ul><li>官网模块文档：http://docs.python.org/library/sys</li><li>作用：能访问到由Python解释器使用或维护的对象，其中包括： <ul><li>标志、版本、整型数最大尺寸、可用的模块、hook路径、标准错误/输入/输出的位置、调用解释器的命令行参数</li></ul></li><li>demo：<code>$ python vuln-scanner.py vuln-banners.txt</code>调用python时：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># python vuln-scanner.py vuln-banners.txt调用时</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sys.argv)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># python启动的参数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	filename </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys.argv[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 第二个启动的参数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17)]))}const r=i(n,[["render",l],["__file","sys 命令行参数.html.vue"]]),k=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/%E6%A0%87%E5%87%86%E5%BA%93/sys%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 sys 命令行参数 命令行参数 参考文档：https://docs.python.org/3/library/sys.html#module-sys 通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量 例如在命令行中执行 python demo.py one two three 后可以得到...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/%E6%A0%87%E5%87%86%E5%BA%93/sys%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 sys 命令行参数 命令行参数 参考文档：https://docs.python.org/3/library/sys.html#module-sys 通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量 例如在命令行中执行 python demo.py one two three 后可以得到..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"sys 命令行参数","slug":"sys-命令行参数","link":"#sys-命令行参数","children":[{"level":2,"title":"命令行参数","slug":"命令行参数","link":"#命令行参数","children":[]},{"level":2,"title":"错误输出重定向和程序终止","slug":"错误输出重定向和程序终止","link":"#错误输出重定向和程序终止","children":[]},{"level":2,"title":"【标准】sys模块","slug":"【标准】sys模块","link":"#【标准】sys模块","children":[]}]}],"git":{},"readingTime":{"minutes":1.17,"words":352},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/07. 模块库/标准库/sys 命令行参数.md","excerpt":"\\n<h1>目录</h1>\\n<h1>sys 命令行参数</h1>\\n<h2>命令行参数</h2>\\n<p>参考文档：https://docs.python.org/3/library/sys.html#module-sys</p>\\n<p>通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量</p>\\n<p>例如在命令行中执行 <code>python demo.py one two three</code> 后可以得到以下输出结果：</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> import</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> sys</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">&gt;&gt;&gt;</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> print</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(sys.argv)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">[</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'demo.py'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'one'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'two'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'three'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">]</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/07. 模块库/标准库/sys 命令行参数.md","value":{"title":"sys 命令行参数","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/07. 模块库/标准库/sys 命令行参数.md","outlink":[],"backlink":[]}}],"links":[]}}}`);export{r as comp,k as data};
