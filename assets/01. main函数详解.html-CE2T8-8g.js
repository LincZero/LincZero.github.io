import{_ as i,c as n,e as a,o as t}from"./app-DEUP2Tjk.js";const l={};function o(s,e){return t(),n("div",null,e[0]||(e[0]=[a('<h1 id="different" tabindex="-1"><a class="header-anchor" href="#different"><span>Different</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="main函数" tabindex="-1"><a class="header-anchor" href="#main函数"><span>main函数</span></a></h1><h3 id="模块系统-main函数" tabindex="-1"><a class="header-anchor" href="#模块系统-main函数"><span>模块系统 - main函数</span></a></h3><p><code>Python</code>、<code>Java</code>、<code>C/C++</code>中的main函数有所不同</p><ul><li><p>Python：作为一门较为灵活的解释型脚本语言，其中定义的main()函数只有当该Python脚本直接作为执行程序时才会执行，当该python脚本被作为模块(module)引入(import)时，其中的main()函数将不会被执行</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 当作为入口函数时执行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>js：解释型语言像js，函数外面的代码会被立即执行，即从文件的开头一直执行到文件的结尾</p></li><li><p>Java需要一个外壳类，而C++不需要</p><ul><li>Java中的所有函数都属于某个类的方法（标准术语将其称为方法，而不是成员函数）。 因此，<strong>Java中的main方法必须有一个外壳类</strong>。</li><li>比较像是C++中的静态成员函数（static member functions），定义在类的内部，并且不对对象进行操作。 <strong>Java中的main方法必须是静态的</strong>。</li><li>与C/C++一样，关键字void表示这个方法没有返回值，所<strong>不同的是main方法没有为操作系统返回“退出代码”</strong>。 如果main方法正常退出，那么Java应用程序的退出代码为0，表示成功地运行了程序。 如果希望在终止程序时返回其他的代码，那就需要调用System.exit方法。</li></ul></li></ul>',6)]))}const h=i(l,[["render",o],["__file","01. main函数详解.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Different/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/01.%20main%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3.html","title":"Different","lang":"zh-CN","frontmatter":{"description":"Different 目录 main函数 模块系统 - main函数 Python、Java、C/C++中的main函数有所不同 Python：作为一门较为灵活的解释型脚本语言，其中定义的main()函数只有当该Python脚本直接作为执行程序时才会执行，当该python脚本被作为模块(module)引入(import)时，其中的main()函数将不会被...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Different/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/01.%20main%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Different"}],["meta",{"property":"og:description","content":"Different 目录 main函数 模块系统 - main函数 Python、Java、C/C++中的main函数有所不同 Python：作为一门较为灵活的解释型脚本语言，其中定义的main()函数只有当该Python脚本直接作为执行程序时才会执行，当该python脚本被作为模块(module)引入(import)时，其中的main()函数将不会被..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Different\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Different","slug":"different","link":"#different","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"main函数","slug":"main函数","link":"#main函数","children":[{"level":3,"title":"模块系统 - main函数","slug":"模块系统-main函数","link":"#模块系统-main函数","children":[]}]}],"git":{},"readingTime":{"minutes":1.17,"words":352},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Different/07. 模块库/01. main函数详解.md","excerpt":"\\n<h1>目录</h1>\\n<h1>main函数</h1>\\n<h3>模块系统 - main函数</h3>\\n<p><code>Python</code>、<code>Java</code>、<code>C/C++</code>中的main函数有所不同</p>\\n<ul>\\n<li>\\n<p>Python：作为一门较为灵活的解释型脚本语言，其中定义的main()函数只有当该Python脚本直接作为执行程序时才会执行，当该python脚本被作为模块(module)引入(import)时，其中的main()函数将不会被执行</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\"># 当作为入口函数时执行</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>js：解释型语言像js，函数外面的代码会被立即执行，即从文件的开头一直执行到文件的结尾</p>\\n</li>\\n<li>\\n<p>Java需要一个外壳类，而C++不需要</p>\\n<ul>\\n<li>Java中的所有函数都属于某个类的方法（标准术语将其称为方法，而不是成员函数）。\\n因此，<strong>Java中的main方法必须有一个外壳类</strong>。</li>\\n<li>比较像是C++中的静态成员函数（static member functions），定义在类的内部，并且不对对象进行操作。\\n<strong>Java中的main方法必须是静态的</strong>。</li>\\n<li>与C/C++一样，关键字void表示这个方法没有返回值，所<strong>不同的是main方法没有为操作系统返回“退出代码”</strong>。\\n如果main方法正常退出，那么Java应用程序的退出代码为0，表示成功地运行了程序。\\n如果希望在终止程序时返回其他的代码，那就需要调用System.exit方法。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Different/07. 模块库/01. main函数详解.md","value":{"title":"01. main函数详解","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Different/07. 模块库/01. main函数详解.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{h as comp,d as data};
