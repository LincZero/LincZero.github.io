import{_ as a,c as r,e as o,a as s,b as t,d as l,o as p,r as i}from"./app-C8sq8h30.js";const u={},d={href:"https://docs.python.org/3/library/exceptions.html#ZeroDivisionError",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.python.org/3/library/exceptions.html#NameError",target:"_blank",rel:"noopener noreferrer"},c={href:"https://docs.python.org/3/library/exceptions.html#TypeError",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.python.org/3/reference/compound_stmts.html#try",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.python.org/3/reference/compound_stmts.html#except",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.python.org/3/reference/compound_stmts.html#try",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.python.org/3/reference/compound_stmts.html#except",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.python.org/3/reference/compound_stmts.html#try",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.python.org/3/reference/compound_stmts.html#except",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.python.org/3/reference/compound_stmts.html#try",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.python.org/3/reference/compound_stmts.html#try",target:"_blank",rel:"noopener noreferrer"},E={href:"https://docs.python.org/3/reference/compound_stmts.html#else",target:"_blank",rel:"noopener noreferrer"},B={href:"https://docs.python.org/3/reference/compound_stmts.html#try",target:"_blank",rel:"noopener noreferrer"},P={href:"https://docs.python.org/3/reference/compound_stmts.html#try",target:"_blank",rel:"noopener noreferrer"},w={href:"https://docs.python.org/3/reference/compound_stmts.html#except",target:"_blank",rel:"noopener noreferrer"},A={href:"https://docs.python.org/3/reference/simple_stmts.html#raise",target:"_blank",rel:"noopener noreferrer"},N={href:"https://docs.python.org/3/reference/simple_stmts.html#raise",target:"_blank",rel:"noopener noreferrer"},C={href:"https://docs.python.org/3/library/exceptions.html#Exception",target:"_blank",rel:"noopener noreferrer"},M={href:"https://docs.python.org/3/library/exceptions.html#Exception",target:"_blank",rel:"noopener noreferrer"};function L(D,n){const e=i("ExternalLinkIcon");return p(),r("div",null,[n[62]||(n[62]=o('<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="异常" tabindex="-1"><a class="header-anchor" href="#异常"><span>异常</span></a></h1><h2 id="语法错误和异常" tabindex="-1"><a class="header-anchor" href="#语法错误和异常"><span>语法错误和异常</span></a></h2><p>Python 中（至少）有两种错误</p><ul><li><code>语法错误</code>（<em>syntax errors</em>） <ul><li>也被称为解析错误，<code>语法分析器</code>指出错误行，并且在检测到错误的位置前面显示一个小“箭头”</li></ul></li><li><code>异常</code>（<em>exceptions</em>） <ul><li>运行期检测到的错误称为异常，最终会产生一个错误信息，错误信息的最后一行指出发生了什么错误</li></ul></li></ul><h2 id="异常类型" tabindex="-1"><a class="header-anchor" href="#异常类型"><span>异常类型</span></a></h2><p>异常有不同的类型，异常类型做为错误信息的一部分显示出来</p><p>常见的有</p>',9)),s("ul",null,[s("li",null,[n[1]||(n[1]=t("零除错误（ ")),s("a",d,[n[0]||(n[0]=t("ZeroDivisionError")),l(e)]),n[2]||(n[2]=t(" ）"))]),s("li",null,[n[4]||(n[4]=t("命名错误（ ")),s("a",k,[n[3]||(n[3]=t("NameError")),l(e)]),n[5]||(n[5]=t("）"))]),s("li",null,[n[7]||(n[7]=t("类型错误（ ")),s("a",c,[n[6]||(n[6]=t("TypeError")),l(e)]),n[8]||(n[8]=t(" ）"))])]),n[63]||(n[63]=s("h2",{id:"异常处理-try-except-else-raise",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#异常处理-try-except-else-raise"},[s("span",null,"异常处理（try-except-else & raise）")])],-1)),n[64]||(n[64]=s("h3",{id:"try-except-else-使用",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#try-except-else-使用"},[s("span",null,"try-except-else 使用")])],-1)),s("ul",null,[n[39]||(n[39]=s("li",null,[s("p",null,"使用"),s("ul",null,[s("li",null,[s("code",null,"try-except-else"),t(" & "),s("code",null,"raise")])])],-1)),s("li",null,[n[33]||(n[33]=s("p",null,"处理流程",-1)),s("ul",null,[s("li",null,[s("p",null,[n[11]||(n[11]=t("首先，执行 ")),n[12]||(n[12]=s("em",null,"try",-1)),n[13]||(n[13]=t(" 子句 （在 ")),s("a",y,[n[9]||(n[9]=t("try")),l(e)]),n[14]||(n[14]=t(" 和 ")),s("a",m,[n[10]||(n[10]=t("except")),l(e)]),n[15]||(n[15]=t(" 关键字之间的部分）。"))])]),s("li",null,[s("p",null,[n[17]||(n[17]=t("如果没有异常发生， ")),n[18]||(n[18]=s("em",null,"except",-1)),n[19]||(n[19]=t(" 子句 在 ")),s("a",f,[n[16]||(n[16]=t("try")),l(e)]),n[20]||(n[20]=t(" 语句执行完毕后就被忽略了。"))])]),s("li",null,[n[26]||(n[26]=s("p",null,"如果在 try 子句执行过程中发生了异常，那么该子句其余的部分就会被忽略。",-1)),s("p",null,[n[23]||(n[23]=t("如果异常匹配于 ")),s("a",g,[n[21]||(n[21]=t("except")),l(e)]),n[24]||(n[24]=t(" 关键字后面指定的异常类型，就执行对应的except子句。然后继续执行 ")),s("a",x,[n[22]||(n[22]=t("try")),l(e)]),n[25]||(n[25]=t(" 语句之后的代码。"))])]),s("li",null,[s("p",null,[n[29]||(n[29]=t("如果发生了一个异常，在 ")),s("a",b,[n[27]||(n[27]=t("except")),l(e)]),n[30]||(n[30]=t(" 子句中没有与之匹配的分支，它就会传递到上一级 ")),s("a",h,[n[28]||(n[28]=t("try")),l(e)]),n[31]||(n[31]=t(" 语句中。"))]),n[32]||(n[32]=s("p",null,[t("如果最终仍找不到对应的处理语句，它就成为一个 "),s("em",null,"未处理异常"),t("，终止程序运行，显示提示信息")],-1))])])]),s("li",null,[n[38]||(n[38]=s("p",null,"使用补充",-1)),s("ul",null,[s("li",null,[n[35]||(n[35]=t("一个 ")),s("a",v,[n[34]||(n[34]=t("try")),l(e)]),n[36]||(n[36]=t(" 语句可能包含多个 except 子句，分别指定处理不同的异常。至多只会有一个分支被执行"))]),n[37]||(n[37]=s("li",null,[t("最后一个 except 子句可以"),s("strong",null,"省略异常名称"),t("，以作为通配符使用")],-1))])])]),n[65]||(n[65]=s("h3",{id:"else子句-使用",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#else子句-使用"},[s("span",null,"else子句 使用")])],-1)),s("ul",null,[n[50]||(n[50]=s("li",null,[s("p",null,"作用"),s("ul",null,[s("li",null,[s("p",null,[t("可以带有一个"),s("code",null,"else"),t("子句，该子句只能出现在所有 except 子句之后")])]),s("li",null,[s("p",null,"当 try 语句没有抛出异常时，需要执行一些代码，可以使用这个子句")])])],-1)),s("li",null,[n[49]||(n[49]=s("p",null,"使用场景",-1)),s("ul",null,[s("li",null,[n[44]||(n[44]=t("使用 ")),s("a",E,[n[40]||(n[40]=t("else")),l(e)]),n[45]||(n[45]=t(" 子句比在 ")),s("a",B,[n[41]||(n[41]=t("try")),l(e)]),n[46]||(n[46]=t(" 子句中附加代码要好，因为这样可以避免 ")),s("a",P,[n[42]||(n[42]=t("try")),l(e)]),n[47]||(n[47]=t(" … ")),s("a",w,[n[43]||(n[43]=t("except")),l(e)]),n[48]||(n[48]=t(" 意外的截获本来不属于它们保护的那些代码抛出的异常"))])])])]),n[66]||(n[66]=o('<h3 id="finally子句-使用" tabindex="-1"><a class="header-anchor" href="#finally子句-使用"><span>finally子句 使用</span></a></h3><ul><li><p>作用</p><ul><li><p>语句还有另一个可选的子句<code>finally</code>，目的在于定义在任何情况下都一定要执行的功能</p><p>（不管有没有发生异常、不管异常有没有被捕捉到、不管以break/continue/return等任何方式退出）</p></li></ul></li><li><p>处理流程：</p><ul><li>若发生了未被except捕获的异常，则先执行finally子句，然后再重新抛出</li></ul></li><li><p>使用场景</p><ul><li>定义清理行为。比如用于释放外部资源，无论它们在使用过程中是否出错</li></ul></li><li><p>使用实例</p><ul><li><code>with open(&quot;...&quot;) as f:</code>的本质就是<code>try-finally</code>，即该语句能确保发生异常时也能顺利关闭文件f</li></ul></li></ul><h3 id="raise-使用" tabindex="-1"><a class="header-anchor" href="#raise-使用"><span>raise 使用</span></a></h3>',3)),s("ul",null,[s("li",null,[n[58]||(n[58]=s("p",null,"作用",-1)),s("ul",null,[s("li",null,[s("p",null,[s("a",A,[n[51]||(n[51]=s("code",null,"raise",-1)),l(e)]),n[52]||(n[52]=t("语句允许程序员强制抛出一个指定的异常"))])]),s("li",null,[s("p",null,[n[55]||(n[55]=t("要抛出的异常由 ")),s("a",N,[n[53]||(n[53]=t("raise")),l(e)]),n[56]||(n[56]=t(" 的唯一参数标识。它必需是一个异常实例或异常类（继承自 ")),s("a",C,[n[54]||(n[54]=t("Exception")),l(e)]),n[57]||(n[57]=t(" 的类）"))])])])])]),n[67]||(n[67]=s("h2",{id:"用户自定义异常",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#用户自定义异常"},[s("span",null,"用户自定义异常")])],-1)),s("p",null,[n[60]||(n[60]=t("异常类通常应该直接或间接的从 ")),s("a",M,[n[59]||(n[59]=t("Exception")),l(e)]),n[61]||(n[61]=t(" 类派生"))]),n[68]||(n[68]=o(`<p>例如：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">class</span> <span class="token class-name">MyError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         self<span class="token punctuation">.</span>value <span class="token operator">=</span> value
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">return</span> <span class="token builtin">repr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">try</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">raise</span> MyError<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">except</span> MyError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;My exception occurred, value:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
My exception occurred<span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token number">4</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">raise</span> MyError<span class="token punctuation">(</span><span class="token string">&#39;oops!&#39;</span><span class="token punctuation">)</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;&lt;stdin&gt;&quot;</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> ?
__main__<span class="token punctuation">.</span>MyError<span class="token punctuation">:</span> <span class="token string">&#39;oops!&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const F=a(u,[["render",L],["__file","02. 异常.html.vue"]]),Z=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Python/04.%20%E4%BC%98%E5%8C%96/02.%20%E5%BC%82%E5%B8%B8.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 异常 语法错误和异常 Python 中（至少）有两种错误 语法错误（syntax errors） 也被称为解析错误，语法分析器指出错误行，并且在检测到错误的位置前面显示一个小“箭头” 异常（exceptions） 运行期检测到的错误称为异常，最终会产生一个错误信息，错误信息的最后一行指出发生了什么错误 异常类型 异常有不同的类型，异...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Python/04.%20%E4%BC%98%E5%8C%96/02.%20%E5%BC%82%E5%B8%B8.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 异常 语法错误和异常 Python 中（至少）有两种错误 语法错误（syntax errors） 也被称为解析错误，语法分析器指出错误行，并且在检测到错误的位置前面显示一个小“箭头” 异常（exceptions） 运行期检测到的错误称为异常，最终会产生一个错误信息，错误信息的最后一行指出发生了什么错误 异常类型 异常有不同的类型，异..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"异常","slug":"异常","link":"#异常","children":[{"level":2,"title":"语法错误和异常","slug":"语法错误和异常","link":"#语法错误和异常","children":[]},{"level":2,"title":"异常类型","slug":"异常类型","link":"#异常类型","children":[]},{"level":2,"title":"异常处理（try-except-else & raise）","slug":"异常处理-try-except-else-raise","link":"#异常处理-try-except-else-raise","children":[{"level":3,"title":"try-except-else 使用","slug":"try-except-else-使用","link":"#try-except-else-使用","children":[]},{"level":3,"title":"else子句 使用","slug":"else子句-使用","link":"#else子句-使用","children":[]},{"level":3,"title":"finally子句 使用","slug":"finally子句-使用","link":"#finally子句-使用","children":[]},{"level":3,"title":"raise 使用","slug":"raise-使用","link":"#raise-使用","children":[]}]},{"level":2,"title":"用户自定义异常","slug":"用户自定义异常","link":"#用户自定义异常","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.09,"words":927},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Python/04. 优化/02. 异常.md","excerpt":"\\n<h1>目录</h1>\\n<h1>异常</h1>\\n<h2>语法错误和异常</h2>\\n<p>Python 中（至少）有两种错误</p>\\n<ul>\\n<li><code>语法错误</code>（<em>syntax errors</em>）\\n<ul>\\n<li>也被称为解析错误，<code>语法分析器</code>指出错误行，并且在检测到错误的位置前面显示一个小“箭头”</li>\\n</ul>\\n</li>\\n<li><code>异常</code>（<em>exceptions</em>）\\n<ul>\\n<li>运行期检测到的错误称为异常，最终会产生一个错误信息，错误信息的最后一行指出发生了什么错误</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{F as comp,Z as data};
