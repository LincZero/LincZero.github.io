import{_ as s,c as e,e as a,o as l}from"./app-BHdORQJ2.js";const n={};function t(h,i){return l(),e("div",null,i[0]||(i[0]=[a(`<h1 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h1><p>参考：https://www.bilibili.com/video/BV1s54y1n7Ev</p><p>docker的出现，让应用环境的配置、发布、测试变得轻松</p><p>像 Kubernetes (k8s)、Docker Swarm、Podman 等都与Docker有关</p><p>课程介绍Docker基本概念、安装、使用，以及如何用 docker compose 来同时管理多个容器</p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><h3 id="解决什么问题" tabindex="-1"><a class="header-anchor" href="#解决什么问题"><span>解决什么问题？</span></a></h3><p>本地调试没问题，那么需要给云服务器一个相同的环境（比如Linux发行版不同、或同一个发行版的小版本不同）</p><p>模拟完全相同本地环境，Windows通常会用虚拟机（VMware、VirtualBox、Hyper-V、QEMU），但较臃肿且性能不高</p><p>Docker在概念上相当于虚拟机，但更轻量。提供隔离的环境</p><p>（介于虚拟机和沙盒 Sandbox 之间？anaconda？java？）</p><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h3><p>三个概念</p><ul><li>Dockerfile</li><li>Image / 镜像 <ul><li>理解成虚拟机的快照（Snapshot），包含要部署的应用程序和相关库 Docker Hub 上也提供了很多高质量的操作系统镜像</li></ul></li><li>Container / 容器 <ul><li>镜像可以创建多个不同的容器（通过Dockerfile完成），每个容器都是独立运行 类比于多个虚拟机使用同一个镜像去创建，类比于多个实例使用一个类来创建</li></ul></li></ul><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><h4 id="windows-mac" tabindex="-1"><a class="header-anchor" href="#windows-mac"><span>Windows/Mac</span></a></h4><p>官网下载 <code>Docker Desktop</code> 的应用。 这个图形化界面可以查看应用在后台的所有输出以便调试，同时也可以看到一些状态（cpu内存等） 以及可以图形化管理所有创建的容器。</p><p>Windows 10 以上也可以使用 WSL2 子系统来运行</p><h4 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h4><p>使用包管理工具</p><p>按官网一步一步按</p><p>不同的Linux操作系统有不同的包管理工具</p><ul><li>Ubuntu：apt</li><li>Fedora：dnf</li></ul><p>也有针对于不同语言的包管理工具</p><ul><li>nginx</li><li>redis</li><li>node</li><li>python</li><li>tomcat</li></ul><h4 id="vscode插件" tabindex="-1"><a class="header-anchor" href="#vscode插件"><span>VSCode插件</span></a></h4><p>提供Dockerfile的语法检测和补全</p><h3 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h3><p>这里是一个python flash的自动记账的demo：</p><p>应用的根目录创建一个 <code>Dockerfile</code> 文件</p><div class="language-dockerfile line-numbers-mode" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> python:3.8-slim-buster</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WORKDIR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /app</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;本地路径&gt; &lt;目标路径&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pip install -r requirements.txt # RUN创建镜像时使用的</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;python3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;app.py&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] 			# CMD是运行容器时使用的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在命令行运行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-finance</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 第一次调用 docker build 会较慢，第二次就快很多</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 80:5000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-finance</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 然后就可以在浏览器访问这个docker应用了</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    						# 列举所有容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">容器</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">D&gt;					</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">容器</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">D&gt;				</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重启容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">容器</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">D&gt;					</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">容器</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">D&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/bin/bash</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 启动一个远程Shell</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据卷相关" tabindex="-1"><a class="header-anchor" href="#数据卷相关"><span>数据卷相关</span></a></h2>`,36)]))}const r=s(n,[["render",t],["__file","Docker.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E8%99%9A%E6%8B%9F%E6%9C%BA/Docker/Docker2/Docker.html","title":"Docker","lang":"zh-CN","frontmatter":{"description":"Docker 参考：https://www.bilibili.com/video/BV1s54y1n7Ev docker的出现，让应用环境的配置、发布、测试变得轻松 像 Kubernetes (k8s)、Docker Swarm、Podman 等都与Docker有关 课程介绍Docker基本概念、安装、使用，以及如何用 docker compose 来...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E8%99%9A%E6%8B%9F%E6%9C%BA/Docker/Docker2/Docker.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Docker"}],["meta",{"property":"og:description","content":"Docker 参考：https://www.bilibili.com/video/BV1s54y1n7Ev docker的出现，让应用环境的配置、发布、测试变得轻松 像 Kubernetes (k8s)、Docker Swarm、Podman 等都与Docker有关 课程介绍Docker基本概念、安装、使用，以及如何用 docker compose 来..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Docker","slug":"docker","link":"#docker","children":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[{"level":3,"title":"解决什么问题？","slug":"解决什么问题","link":"#解决什么问题","children":[]},{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[{"level":4,"title":"Windows/Mac","slug":"windows-mac","link":"#windows-mac","children":[]},{"level":4,"title":"Linux","slug":"linux","link":"#linux","children":[]},{"level":4,"title":"VSCode插件","slug":"vscode插件","link":"#vscode插件","children":[]}]},{"level":3,"title":"部署","slug":"部署","link":"#部署","children":[]}]},{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":2,"title":"数据卷相关","slug":"数据卷相关","link":"#数据卷相关","children":[]}]}],"git":{},"readingTime":{"minutes":2.19,"words":656},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Virtual/虚拟机/Docker/Docker2/Docker.md","excerpt":"\\n<p>参考：https://www.bilibili.com/video/BV1s54y1n7Ev</p>\\n<p>docker的出现，让应用环境的配置、发布、测试变得轻松</p>\\n<p>像 Kubernetes (k8s)、Docker Swarm、Podman 等都与Docker有关</p>\\n<p>课程介绍Docker基本概念、安装、使用，以及如何用 docker compose 来同时管理多个容器</p>\\n<h2>介绍</h2>\\n<h3>解决什么问题？</h3>\\n<p>本地调试没问题，那么需要给云服务器一个相同的环境（比如Linux发行版不同、或同一个发行版的小版本不同）</p>\\n<p>模拟完全相同本地环境，Windows通常会用虚拟机（VMware、VirtualBox、Hyper-V、QEMU），但较臃肿且性能不高</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Virtual/虚拟机/Docker/Docker2/Docker.md","value":{"title":"Docker","path":"MdNote_Public/01. DesignAndDevelop/Virtual/虚拟机/Docker/Docker2/Docker.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,p as data};
