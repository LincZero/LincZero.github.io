import{_ as a,e as r,f as o,g as s,j as t,h as n,i,r as p,o as d}from"./app-EuS-Ookm.js";const g={};function u(m,e){const l=p("RouteLink");return d(),r("div",null,[e[75]||(e[75]=o("h1",{id:"nonebot-adapters",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#nonebot-adapters"},[o("span",null,"nonebot.adapters")])],-1)),e[76]||(e[76]=o("p",null,"本模块定义了协议适配基类，各协议请继承以下基类。",-1)),o("p",null,[e[1]||(e[1]=t("使用 ")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Driver-register-adapter"},{default:i(()=>e[0]||(e[0]=[t("Driver.register_adapter")])),_:1}),e[2]||(e[2]=t(" 注册适配器。"))]),e[77]||(e[77]=o("h2",{id:"Adapter",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#Adapter"},[o("span",null,[o("em",null,"abstract class"),t(),o("code",null,"Adapter(driver, **kwargs)")])])],-1)),o("ul",null,[e[14]||(e[14]=o("li",null,[o("p",null,[o("strong",null,"说明")]),o("p",null,"协议适配器基类。"),o("p",null,"通常，在 Adapter 中编写协议通信相关代码，如: 建立通信连接、处理接收与发送 data 等。")],-1)),o("li",null,[e[13]||(e[13]=o("p",null,[o("strong",null,"参数")],-1)),o("ul",null,[o("li",null,[o("p",null,[e[5]||(e[5]=o("code",null,"driver",-1)),e[6]||(e[6]=t(" (")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Driver"},{default:i(()=>e[3]||(e[3]=[t("Driver")])),_:1}),e[7]||(e[7]=t("): ")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Driver"},{default:i(()=>e[4]||(e[4]=[t("Driver")])),_:1}),e[8]||(e[8]=t(" 实例"))])]),o("li",null,[o("p",null,[e[10]||(e[10]=o("code",null,"**kwargs",-1)),e[11]||(e[11]=t(" (Any): 其他由 ")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Driver-register-adapter"},{default:i(()=>e[9]||(e[9]=[t("Driver.register_adapter")])),_:1}),e[12]||(e[12]=t(" 传入的额外参数"))])])])])]),e[78]||(e[78]=o("h3",{id:"Adapter-driver",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#Adapter-driver"},[o("span",null,[o("em",null,"instance-var"),t(),o("code",null,"driver")])])],-1)),o("ul",null,[o("li",null,[o("p",null,[e[16]||(e[16]=o("strong",null,"类型:",-1)),e[17]||(e[17]=t()),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Driver"},{default:i(()=>e[15]||(e[15]=[t("Driver")])),_:1})])]),e[18]||(e[18]=o("li",null,[o("p",null,[o("strong",null,"说明:"),t(" 实例")])],-1))]),e[79]||(e[79]=s('<h3 id="Adapter-bots" tabindex="-1"><a class="header-anchor" href="#Adapter-bots"><span><em>instance-var</em> <code>bots</code></span></a></h3><ul><li><p><strong>类型:</strong> dict[str, <a href="#Bot">Bot</a>]</p></li><li><p><strong>说明:</strong> 本协议适配器已建立连接的 <a href="#Bot">Bot</a> 实例</p></li></ul><h3 id="Adapter-get-name" tabindex="-1"><a class="header-anchor" href="#Adapter-get-name"><span><em>abstract classmethod</em> <code>get_name()</code></span></a></h3><ul><li><p><strong>说明:</strong> 当前协议适配器的名称</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="Adapter-config" tabindex="-1"><a class="header-anchor" href="#Adapter-config"><span><em>property</em> <code>config</code></span></a></h3>',5)),o("ul",null,[o("li",null,[o("p",null,[e[20]||(e[20]=o("strong",null,"类型:",-1)),e[21]||(e[21]=t()),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/config.html#Config"},{default:i(()=>e[19]||(e[19]=[t("Config")])),_:1})])]),e[22]||(e[22]=o("li",null,[o("p",null,[o("strong",null,"说明:"),t(" 全局 NoneBot 配置")])],-1))]),e[80]||(e[80]=s('<h3 id="Adapter-bot-connect" tabindex="-1"><a class="header-anchor" href="#Adapter-bot-connect"><span><em>method</em> <code>bot_connect(bot)</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>告知 NoneBot 建立了一个新的 <a href="#Bot">Bot</a> 连接。</p><p>当有新的 <a href="#Bot">Bot</a> 实例连接建立成功时调用。</p></li><li><p><strong>参数</strong></p><ul><li><code>bot</code> (<a href="#Bot">Bot</a>): <a href="#Bot">Bot</a> 实例</li></ul></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h3 id="Adapter-bot-disconnect" tabindex="-1"><a class="header-anchor" href="#Adapter-bot-disconnect"><span><em>method</em> <code>bot_disconnect(bot)</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>告知 NoneBot <a href="#Bot">Bot</a> 连接已断开。</p><p>当有 <a href="#Bot">Bot</a> 实例连接断开时调用。</p></li><li><p><strong>参数</strong></p><ul><li><code>bot</code> (<a href="#Bot">Bot</a>): <a href="#Bot">Bot</a> 实例</li></ul></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h3 id="Adapter-setup-http-server" tabindex="-1"><a class="header-anchor" href="#Adapter-setup-http-server"><span><em>method</em> <code>setup_http_server(setup)</code></span></a></h3>',5)),o("ul",null,[e[28]||(e[28]=o("li",null,[o("p",null,[o("strong",null,"说明:"),t(" 设置一个 HTTP 服务器路由配置")])],-1)),o("li",null,[e[27]||(e[27]=o("p",null,[o("strong",null,"参数")],-1)),o("ul",null,[o("li",null,[e[24]||(e[24]=o("code",null,"setup",-1)),e[25]||(e[25]=t(" (")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#HTTPServerSetup"},{default:i(()=>e[23]||(e[23]=[t("HTTPServerSetup")])),_:1}),e[26]||(e[26]=t(")"))])])]),e[29]||(e[29]=o("li",null,[o("p",null,[o("strong",null,"返回")]),o("ul",null,[o("li",null,"untyped")])],-1))]),e[81]||(e[81]=o("h3",{id:"Adapter-setup-websocket-server",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#Adapter-setup-websocket-server"},[o("span",null,[o("em",null,"method"),t(),o("code",null,"setup_websocket_server(setup)")])])],-1)),o("ul",null,[e[35]||(e[35]=o("li",null,[o("p",null,[o("strong",null,"说明:"),t(" 设置一个 WebSocket 服务器路由配置")])],-1)),o("li",null,[e[34]||(e[34]=o("p",null,[o("strong",null,"参数")],-1)),o("ul",null,[o("li",null,[e[31]||(e[31]=o("code",null,"setup",-1)),e[32]||(e[32]=t(" (")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#WebSocketServerSetup"},{default:i(()=>e[30]||(e[30]=[t("WebSocketServerSetup")])),_:1}),e[33]||(e[33]=t(")"))])])]),e[36]||(e[36]=o("li",null,[o("p",null,[o("strong",null,"返回")]),o("ul",null,[o("li",null,"untyped")])],-1))]),e[82]||(e[82]=o("h3",{id:"Adapter-request",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#Adapter-request"},[o("span",null,[o("em",null,"async method"),t(),o("code",null,"request(setup)")])])],-1)),o("ul",null,[e[44]||(e[44]=o("li",null,[o("p",null,[o("strong",null,"说明:"),t(" 进行一个 HTTP 客户端请求")])],-1)),o("li",null,[e[41]||(e[41]=o("p",null,[o("strong",null,"参数")],-1)),o("ul",null,[o("li",null,[e[38]||(e[38]=o("code",null,"setup",-1)),e[39]||(e[39]=t(" (")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Request"},{default:i(()=>e[37]||(e[37]=[t("Request")])),_:1}),e[40]||(e[40]=t(")"))])])]),o("li",null,[e[43]||(e[43]=o("p",null,[o("strong",null,"返回")],-1)),o("ul",null,[o("li",null,[n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Response"},{default:i(()=>e[42]||(e[42]=[t("Response")])),_:1})])])])]),e[83]||(e[83]=o("h3",{id:"Adapter-websocket",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#Adapter-websocket"},[o("span",null,[o("em",null,"method"),t(),o("code",null,"websocket(setup)")])])],-1)),o("ul",null,[e[54]||(e[54]=o("li",null,[o("p",null,[o("strong",null,"说明:"),t(" 建立一个 WebSocket 客户端连接请求")])],-1)),o("li",null,[e[49]||(e[49]=o("p",null,[o("strong",null,"参数")],-1)),o("ul",null,[o("li",null,[e[46]||(e[46]=o("code",null,"setup",-1)),e[47]||(e[47]=t(" (")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Request"},{default:i(()=>e[45]||(e[45]=[t("Request")])),_:1}),e[48]||(e[48]=t(")"))])])]),o("li",null,[e[53]||(e[53]=o("p",null,[o("strong",null,"返回")],-1)),o("ul",null,[o("li",null,[e[51]||(e[51]=t("AsyncGenerator[")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#WebSocket"},{default:i(()=>e[50]||(e[50]=[t("WebSocket")])),_:1}),e[52]||(e[52]=t(", None]"))])])])]),e[84]||(e[84]=s('<h3 id="Adapter-on-ready" tabindex="-1"><a class="header-anchor" href="#Adapter-on-ready"><span><em>method</em> <code>on_ready(func)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><code>func</code> (LIFESPAN_FUNC)</li></ul></li><li><p><strong>返回</strong></p><ul><li>LIFESPAN_FUNC</li></ul></li></ul><h2 id="Bot" tabindex="-1"><a class="header-anchor" href="#Bot"><span><em>abstract class</em> <code>Bot(adapter, self_id)</code></span></a></h2><ul><li><p><strong>说明</strong></p><p>Bot 基类。</p><p>用于处理上报消息，并提供 API 调用接口。</p></li><li><p><strong>参数</strong></p><ul><li><p><code>adapter</code> (<a href="#Adapter">Adapter</a>): 协议适配器实例</p></li><li><p><code>self_id</code> (str): 机器人 ID</p></li></ul></li></ul><h3 id="Bot-adapter" tabindex="-1"><a class="header-anchor" href="#Bot-adapter"><span><em>instance-var</em> <code>adapter</code></span></a></h3><ul><li><p><strong>类型:</strong> <a href="#Adapter">Adapter</a></p></li><li><p><strong>说明:</strong> 协议适配器实例</p></li></ul><h3 id="Bot-self-id" tabindex="-1"><a class="header-anchor" href="#Bot-self-id"><span><em>instance-var</em> <code>self_id</code></span></a></h3><ul><li><p><strong>类型:</strong> str</p></li><li><p><strong>说明:</strong> 机器人 ID</p></li></ul><h3 id="Bot-type" tabindex="-1"><a class="header-anchor" href="#Bot-type"><span><em>property</em> <code>type</code></span></a></h3><ul><li><p><strong>类型:</strong> str</p></li><li><p><strong>说明:</strong> 协议适配器名称</p></li></ul><h3 id="Bot-config" tabindex="-1"><a class="header-anchor" href="#Bot-config"><span><em>property</em> <code>config</code></span></a></h3>',11)),o("ul",null,[o("li",null,[o("p",null,[e[56]||(e[56]=o("strong",null,"类型:",-1)),e[57]||(e[57]=t()),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/config.html#Config"},{default:i(()=>e[55]||(e[55]=[t("Config")])),_:1})])]),e[58]||(e[58]=o("li",null,[o("p",null,[o("strong",null,"说明:"),t(" 全局 NoneBot 配置")])],-1))]),e[85]||(e[85]=s(`<h3 id="Bot-call-api" tabindex="-1"><a class="header-anchor" href="#Bot-call-api"><span><em>async method</em> <code>call_api(api, **data)</code></span></a></h3><ul><li><p><strong>说明:</strong> 调用机器人 API 接口，可以通过该函数或直接通过 bot 属性进行调用</p></li><li><p><strong>参数</strong></p><ul><li><p><code>api</code> (str): API 名称</p></li><li><p><code>**data</code> (Any): API 数据</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li><li><p><strong>用法</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">call_api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;send_msg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello world&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">send_msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello world&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="Bot-send" tabindex="-1"><a class="header-anchor" href="#Bot-send"><span><em>abstract async method</em> <code>send(event, message, **kwargs)</code></span></a></h3><ul><li><p><strong>说明:</strong> 调用机器人基础发送消息接口</p></li><li><p><strong>参数</strong></p><ul><li><p><code>event</code> (<a href="#Event">Event</a>): 上报事件</p></li><li><p><code>message</code> (str | <a href="#Message">Message</a> | <a href="#MessageSegment">MessageSegment</a>): 要发送的消息</p></li><li><p><code>**kwargs</code> (Any): 任意额外参数</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h3 id="Bot-on-calling-api" tabindex="-1"><a class="header-anchor" href="#Bot-on-calling-api"><span><em>classmethod</em> <code>on_calling_api(func)</code></span></a></h3>`,5)),o("ul",null,[e[66]||(e[66]=o("li",null,[o("p",null,[o("strong",null,"说明")]),o("p",null,"调用 api 预处理。"),o("p",null,"钩子函数参数:"),o("ul",null,[o("li",null,"bot: 当前 bot 对象"),o("li",null,"api: 调用的 api 名称"),o("li",null,"data: api 调用的参数字典")])],-1)),o("li",null,[e[63]||(e[63]=o("p",null,[o("strong",null,"参数")],-1)),o("ul",null,[o("li",null,[e[60]||(e[60]=o("code",null,"func",-1)),e[61]||(e[61]=t(" (")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/typing.html#T-CallingAPIHook"},{default:i(()=>e[59]||(e[59]=[t("T_CallingAPIHook")])),_:1}),e[62]||(e[62]=t(")"))])])]),o("li",null,[e[65]||(e[65]=o("p",null,[o("strong",null,"返回")],-1)),o("ul",null,[o("li",null,[n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/typing.html#T-CallingAPIHook"},{default:i(()=>e[64]||(e[64]=[t("T_CallingAPIHook")])),_:1})])])])]),e[86]||(e[86]=o("h3",{id:"Bot-on-called-api",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#Bot-on-called-api"},[o("span",null,[o("em",null,"classmethod"),t(),o("code",null,"on_called_api(func)")])])],-1)),o("ul",null,[e[74]||(e[74]=o("li",null,[o("p",null,[o("strong",null,"说明")]),o("p",null,"调用 api 后处理。"),o("p",null,"钩子函数参数:"),o("ul",null,[o("li",null,"bot: 当前 bot 对象"),o("li",null,"exception: 调用 api 时发生的错误"),o("li",null,"api: 调用的 api 名称"),o("li",null,"data: api 调用的参数字典"),o("li",null,"result: api 调用的返回")])],-1)),o("li",null,[e[71]||(e[71]=o("p",null,[o("strong",null,"参数")],-1)),o("ul",null,[o("li",null,[e[68]||(e[68]=o("code",null,"func",-1)),e[69]||(e[69]=t(" (")),n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/typing.html#T-CalledAPIHook"},{default:i(()=>e[67]||(e[67]=[t("T_CalledAPIHook")])),_:1}),e[70]||(e[70]=t(")"))])])]),o("li",null,[e[73]||(e[73]=o("p",null,[o("strong",null,"返回")],-1)),o("ul",null,[o("li",null,[n(l,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/typing.html#T-CalledAPIHook"},{default:i(()=>e[72]||(e[72]=[t("T_CalledAPIHook")])),_:1})])])])]),e[87]||(e[87]=s('<h2 id="Event" tabindex="-1"><a class="header-anchor" href="#Event"><span><em>abstract class</em> <code>Event(&lt;auto&gt;)</code></span></a></h2><ul><li><p><strong>说明:</strong> Event 基类。提供获取关键信息的方法，其余信息可直接获取。</p></li><li><p><strong>参数</strong></p><p>auto</p></li></ul><h3 id="Event-get-type" tabindex="-1"><a class="header-anchor" href="#Event-get-type"><span><em>abstract method</em> <code>get_type()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取事件类型的方法，类型通常为 NoneBot 内置的四种类型。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="Event-get-event-name" tabindex="-1"><a class="header-anchor" href="#Event-get-event-name"><span><em>abstract method</em> <code>get_event_name()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取事件名称的方法。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="Event-get-event-description" tabindex="-1"><a class="header-anchor" href="#Event-get-event-description"><span><em>abstract method</em> <code>get_event_description()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取事件描述的方法，通常为事件具体内容。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="Event-get-log-string" tabindex="-1"><a class="header-anchor" href="#Event-get-log-string"><span><em>method</em> <code>get_log_string()</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>获取事件日志信息的方法。</p><p>通常你不需要修改这个方法，只有当希望 NoneBot 隐藏该事件日志时，<br> 可以抛出 <code>NoLogException</code> 异常。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li><li><p><strong>异常</strong></p><ul><li>NoLogException: 希望 NoneBot 隐藏该事件日志</li></ul></li></ul><h3 id="Event-get-user-id" tabindex="-1"><a class="header-anchor" href="#Event-get-user-id"><span><em>abstract method</em> <code>get_user_id()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取事件主体 id 的方法，通常是用户 id 。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="Event-get-session-id" tabindex="-1"><a class="header-anchor" href="#Event-get-session-id"><span><em>abstract method</em> <code>get_session_id()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取会话 id 的方法，用于判断当前事件属于哪一个会话， 通常是用户 id、群组 id 组合。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="Event-get-message" tabindex="-1"><a class="header-anchor" href="#Event-get-message"><span><em>abstract method</em> <code>get_message()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取事件消息内容的方法。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li><a href="#Message">Message</a></li></ul></li></ul><h3 id="Event-get-plaintext" tabindex="-1"><a class="header-anchor" href="#Event-get-plaintext"><span><em>method</em> <code>get_plaintext()</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>获取消息纯文本的方法。</p><p>通常不需要修改，默认通过 <code>get_message().extract_plain_text</code> 获取。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="Event-is-tome" tabindex="-1"><a class="header-anchor" href="#Event-is-tome"><span><em>abstract method</em> <code>is_tome()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取事件是否与机器人有关的方法。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="Message" tabindex="-1"><a class="header-anchor" href="#Message"><span><em>abstract class</em> <code>Message(&lt;auto&gt;)</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息序列</p></li><li><p><strong>参数</strong></p><ul><li><code>message</code>: 消息内容</li></ul></li></ul><h3 id="Message-template" tabindex="-1"><a class="header-anchor" href="#Message-template"><span><em>classmethod</em> <code>template(format_string)</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>创建消息模板。</p><p>用法和 <code>str.format</code> 大致相同，支持以 <code>Message</code> 对象作为消息模板并输出消息对象。<br> 并且提供了拓展的格式化控制符，<br> 可以通过该消息类型的 <code>MessageSegment</code> 工厂方法创建消息。</p></li><li><p><strong>参数</strong></p><ul><li><code>format_string</code> (str | TM): 格式化模板</li></ul></li><li><p><strong>返回</strong></p><ul><li><a href="#MessageTemplate">MessageTemplate</a>[Self]: 消息格式化器</li></ul></li></ul><h3 id="Message-get-segment-class" tabindex="-1"><a class="header-anchor" href="#Message-get-segment-class"><span><em>abstract classmethod</em> <code>get_segment_class()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取消息段类型</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>type[TMS]</li></ul></li></ul><h3 id="Message--construct" tabindex="-1"><a class="header-anchor" href="#Message--construct"><span><em>abstract staticmethod</em> <code>_construct(msg)</code></span></a></h3><ul><li><p><strong>说明:</strong> 构造消息数组</p></li><li><p><strong>参数</strong></p><ul><li><code>msg</code> (str)</li></ul></li><li><p><strong>返回</strong></p><ul><li>Iterable[TMS]</li></ul></li></ul><h3 id="Message---getitem--" tabindex="-1"><a class="header-anchor" href="#Message---getitem--"><span><em>method</em> <code>__getitem__(args)</code></span></a></h3><ul><li><p><strong>重载</strong></p><p><strong>1.</strong> <code>(args) -&gt; Self</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>args</code> (str): 消息段类型</li></ul></li><li><p><strong>返回</strong></p><ul><li>Self: 所有类型为 <code>args</code> 的消息段</li></ul></li></ul><p><strong>2.</strong> <code>(args) -&gt; TMS</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>args</code> (tuple[str, int]): 消息段类型和索引</li></ul></li><li><p><strong>返回</strong></p><ul><li>TMS: 类型为 <code>args[0]</code> 的消息段第 <code>args[1]</code> 个</li></ul></li></ul><p><strong>3.</strong> <code>(args) -&gt; Self</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>args</code> (tuple[str, slice]): 消息段类型和切片</li></ul></li><li><p><strong>返回</strong></p><ul><li>Self: 类型为 <code>args[0]</code> 的消息段切片 <code>args[1]</code></li></ul></li></ul><p><strong>4.</strong> <code>(args) -&gt; TMS</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>args</code> (int): 索引</li></ul></li><li><p><strong>返回</strong></p><ul><li>TMS: 第 <code>args</code> 个消息段</li></ul></li></ul><p><strong>5.</strong> <code>(args) -&gt; Self</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>args</code> (slice): 切片</li></ul></li><li><p><strong>返回</strong></p><ul><li>Self: 消息切片 <code>args</code></li></ul></li></ul></li></ul><h3 id="Message---contains--" tabindex="-1"><a class="header-anchor" href="#Message---contains--"><span><em>method</em> <code>__contains__(value)</code></span></a></h3><ul><li><p><strong>说明:</strong> 检查消息段是否存在</p></li><li><p><strong>参数</strong></p><ul><li><code>value</code> (TMS | str): 消息段或消息段类型</li></ul></li><li><p><strong>返回</strong></p><ul><li>bool: 消息内是否存在给定消息段或给定类型的消息段</li></ul></li></ul><h3 id="Message-has" tabindex="-1"><a class="header-anchor" href="#Message-has"><span><em>method</em> <code>has(value)</code></span></a></h3><ul><li><p><strong>说明:</strong> 与 <a href="#Message---contains--"><code>__contains__</code></a> 相同</p></li><li><p><strong>参数</strong></p><ul><li><code>value</code> (TMS | str)</li></ul></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h3 id="Message-index" tabindex="-1"><a class="header-anchor" href="#Message-index"><span><em>method</em> <code>index(value, *args)</code></span></a></h3><ul><li><p><strong>说明:</strong> 索引消息段</p></li><li><p><strong>参数</strong></p><ul><li><p><code>value</code> (TMS | str): 消息段或者消息段类型</p></li><li><p><code>*args</code> (SupportsIndex)</p></li><li><p><code>arg</code>: start 与 end</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>int: 索引 index</li></ul></li><li><p><strong>异常</strong></p><ul><li>ValueError: 消息段不存在</li></ul></li></ul><h3 id="Message-get" tabindex="-1"><a class="header-anchor" href="#Message-get"><span><em>method</em> <code>get(type_, count=None)</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取指定类型的消息段</p></li><li><p><strong>参数</strong></p><ul><li><p><code>type_</code> (str): 消息段类型</p></li><li><p><code>count</code> (int | None): 获取个数</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>Self: 构建的新消息</li></ul></li></ul><h3 id="Message-count" tabindex="-1"><a class="header-anchor" href="#Message-count"><span><em>method</em> <code>count(value)</code></span></a></h3><ul><li><p><strong>说明:</strong> 计算指定消息段的个数</p></li><li><p><strong>参数</strong></p><ul><li><code>value</code> (TMS | str): 消息段或消息段类型</li></ul></li><li><p><strong>返回</strong></p><ul><li>int: 个数</li></ul></li></ul><h3 id="Message-only" tabindex="-1"><a class="header-anchor" href="#Message-only"><span><em>method</em> <code>only(value)</code></span></a></h3><ul><li><p><strong>说明:</strong> 检查消息中是否仅包含指定消息段</p></li><li><p><strong>参数</strong></p><ul><li><code>value</code> (TMS | str): 指定消息段或消息段类型</li></ul></li><li><p><strong>返回</strong></p><ul><li>bool: 是否仅包含指定消息段</li></ul></li></ul><h3 id="Message-append" tabindex="-1"><a class="header-anchor" href="#Message-append"><span><em>method</em> <code>append(obj)</code></span></a></h3><ul><li><p><strong>说明:</strong> 添加一个消息段到消息数组末尾。</p></li><li><p><strong>参数</strong></p><ul><li><code>obj</code> (str | TMS): 要添加的消息段</li></ul></li><li><p><strong>返回</strong></p><ul><li>Self</li></ul></li></ul><h3 id="Message-extend" tabindex="-1"><a class="header-anchor" href="#Message-extend"><span><em>method</em> <code>extend(obj)</code></span></a></h3><ul><li><p><strong>说明:</strong> 拼接一个消息数组或多个消息段到消息数组末尾。</p></li><li><p><strong>参数</strong></p><ul><li><code>obj</code> (Self | Iterable[TMS]): 要添加的消息数组</li></ul></li><li><p><strong>返回</strong></p><ul><li>Self</li></ul></li></ul><h3 id="Message-join" tabindex="-1"><a class="header-anchor" href="#Message-join"><span><em>method</em> <code>join(iterable)</code></span></a></h3><ul><li><p><strong>说明:</strong> 将多个消息连接并将自身作为分割</p></li><li><p><strong>参数</strong></p><ul><li><code>iterable</code> (Iterable[TMS | Self]): 要连接的消息</li></ul></li><li><p><strong>返回</strong></p><ul><li>Self: 连接后的消息</li></ul></li></ul><h3 id="Message-copy" tabindex="-1"><a class="header-anchor" href="#Message-copy"><span><em>method</em> <code>copy()</code></span></a></h3><ul><li><p><strong>说明:</strong> 深拷贝消息</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>Self</li></ul></li></ul><h3 id="Message-include" tabindex="-1"><a class="header-anchor" href="#Message-include"><span><em>method</em> <code>include(*types)</code></span></a></h3><ul><li><p><strong>说明:</strong> 过滤消息</p></li><li><p><strong>参数</strong></p><ul><li><code>*types</code> (str): 包含的消息段类型</li></ul></li><li><p><strong>返回</strong></p><ul><li>Self: 新构造的消息</li></ul></li></ul><h3 id="Message-exclude" tabindex="-1"><a class="header-anchor" href="#Message-exclude"><span><em>method</em> <code>exclude(*types)</code></span></a></h3><ul><li><p><strong>说明:</strong> 过滤消息</p></li><li><p><strong>参数</strong></p><ul><li><code>*types</code> (str): 不包含的消息段类型</li></ul></li><li><p><strong>返回</strong></p><ul><li>Self: 新构造的消息</li></ul></li></ul><h3 id="Message-extract-plain-text" tabindex="-1"><a class="header-anchor" href="#Message-extract-plain-text"><span><em>method</em> <code>extract_plain_text()</code></span></a></h3><ul><li><p><strong>说明:</strong> 提取消息内纯文本消息</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="MessageSegment" tabindex="-1"><a class="header-anchor" href="#MessageSegment"><span><em>abstract class</em> <code>MessageSegment(&lt;auto&gt;)</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息段基类</p></li><li><p><strong>参数</strong></p><p>auto</p></li></ul><h3 id="MessageSegment-type" tabindex="-1"><a class="header-anchor" href="#MessageSegment-type"><span><em>instance-var</em> <code>type</code></span></a></h3><ul><li><p><strong>类型:</strong> str</p></li><li><p><strong>说明:</strong> 消息段类型</p></li></ul><h3 id="MessageSegment-data" tabindex="-1"><a class="header-anchor" href="#MessageSegment-data"><span><em>class-var</em> <code>data</code></span></a></h3><ul><li><p><strong>类型:</strong> dict[str, Any]</p></li><li><p><strong>说明:</strong> 消息段数据</p></li></ul><h3 id="MessageSegment-get-message-class" tabindex="-1"><a class="header-anchor" href="#MessageSegment-get-message-class"><span><em>abstract classmethod</em> <code>get_message_class()</code></span></a></h3><ul><li><p><strong>说明:</strong> 获取消息数组类型</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>type[TM]</li></ul></li></ul><h3 id="MessageSegment---str--" tabindex="-1"><a class="header-anchor" href="#MessageSegment---str--"><span><em>abstract method</em> <code>__str__()</code></span></a></h3><ul><li><p><strong>说明:</strong> 该消息段所代表的 str，在命令匹配部分使用</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="MessageSegment---add--" tabindex="-1"><a class="header-anchor" href="#MessageSegment---add--"><span><em>method</em> <code>__add__(other)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><code>other</code> (str | TMS | Iterable[TMS])</li></ul></li><li><p><strong>返回</strong></p><ul><li>TM</li></ul></li></ul><h3 id="MessageSegment-get" tabindex="-1"><a class="header-anchor" href="#MessageSegment-get"><span><em>method</em> <code>get(key, default=None)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>key</code> (str)</p></li><li><p><code>default</code> (Any)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h3 id="MessageSegment-keys" tabindex="-1"><a class="header-anchor" href="#MessageSegment-keys"><span><em>method</em> <code>keys()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h3 id="MessageSegment-values" tabindex="-1"><a class="header-anchor" href="#MessageSegment-values"><span><em>method</em> <code>values()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h3 id="MessageSegment-items" tabindex="-1"><a class="header-anchor" href="#MessageSegment-items"><span><em>method</em> <code>items()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h3 id="MessageSegment-join" tabindex="-1"><a class="header-anchor" href="#MessageSegment-join"><span><em>method</em> <code>join(iterable)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><code>iterable</code> (Iterable[TMS | TM])</li></ul></li><li><p><strong>返回</strong></p><ul><li>TM</li></ul></li></ul><h3 id="MessageSegment-copy" tabindex="-1"><a class="header-anchor" href="#MessageSegment-copy"><span><em>method</em> <code>copy()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>Self</li></ul></li></ul><h3 id="MessageSegment-is-text" tabindex="-1"><a class="header-anchor" href="#MessageSegment-is-text"><span><em>abstract method</em> <code>is_text()</code></span></a></h3><ul><li><p><strong>说明:</strong> 当前消息段是否为纯文本</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="MessageTemplate" tabindex="-1"><a class="header-anchor" href="#MessageTemplate"><span><em>class</em> <code>MessageTemplate(template, factory=str, private_getattr=False)</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息模板格式化实现类。</p></li><li><p><strong>参数</strong></p><ul><li><p><code>template</code> (str | TM): 模板</p></li><li><p><code>factory</code> (type[str] | type[TM]): 消息类型工厂，默认为 <code>str</code></p></li><li><p><code>private_getattr</code> (bool): 是否允许在模板中访问私有属性，默认为 <code>False</code></p></li></ul></li></ul><h3 id="MessageTemplate-add-format-spec" tabindex="-1"><a class="header-anchor" href="#MessageTemplate-add-format-spec"><span><em>method</em> <code>add_format_spec(spec, name=None)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>spec</code> (FormatSpecFunc_T)</p></li><li><p><code>name</code> (str | None)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>FormatSpecFunc_T</li></ul></li></ul><h3 id="MessageTemplate-format" tabindex="-1"><a class="header-anchor" href="#MessageTemplate-format"><span><em>method</em> <code>format(*args, **kwargs)</code></span></a></h3><ul><li><p><strong>说明:</strong> 根据传入参数和模板生成消息对象</p></li><li><p><strong>参数</strong></p><ul><li><p><code>*args</code></p></li><li><p><code>**kwargs</code></p></li></ul></li><li><p><strong>返回</strong></p><ul><li>TF</li></ul></li></ul><h3 id="MessageTemplate-format-map" tabindex="-1"><a class="header-anchor" href="#MessageTemplate-format-map"><span><em>method</em> <code>format_map(mapping)</code></span></a></h3><ul><li><p><strong>说明:</strong> 根据传入字典和模板生成消息对象, 在传入字段名不是有效标识符时有用</p></li><li><p><strong>参数</strong></p><ul><li><code>mapping</code> (Mapping[str, Any])</li></ul></li><li><p><strong>返回</strong></p><ul><li>TF</li></ul></li></ul><h3 id="MessageTemplate-vformat" tabindex="-1"><a class="header-anchor" href="#MessageTemplate-vformat"><span><em>method</em> <code>vformat(format_string, args, kwargs)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>format_string</code> (str)</p></li><li><p><code>args</code> (Sequence[Any])</p></li><li><p><code>kwargs</code> (Mapping[str, Any])</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>TF</li></ul></li></ul><h3 id="MessageTemplate-get-field" tabindex="-1"><a class="header-anchor" href="#MessageTemplate-get-field"><span><em>method</em> <code>get_field(field_name, args, kwargs)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>field_name</code> (str)</p></li><li><p><code>args</code> (Sequence[Any])</p></li><li><p><code>kwargs</code> (Mapping[str, Any])</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>tuple[Any, int | str]</li></ul></li></ul><h3 id="MessageTemplate-format-field" tabindex="-1"><a class="header-anchor" href="#MessageTemplate-format-field"><span><em>method</em> <code>format_field(value, format_spec)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>value</code> (Any)</p></li><li><p><code>format_spec</code> (str)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul>',96))])}const h=a(g,[["render",u],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/adapters/","title":"nonebot.adapters","lang":"zh-CN","frontmatter":{"mdx":{"format":"md"},"sidebar_position":0,"description":"nonebot.adapters 模块","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/adapters/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"nonebot.adapters"}],["meta",{"property":"og:description","content":"nonebot.adapters 模块"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nonebot.adapters\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":7.89,"words":2368},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md","excerpt":"\\n<p>本模块定义了协议适配基类，各协议请继承以下基类。</p>\\n<p>使用 <a href=\\"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07.%20api/drivers/#Driver-register-adapter\\" target=\\"_blank\\">Driver.register_adapter</a> 注册适配器。</p>\\n<h2><em>abstract class</em> <code>Adapter(driver, **kwargs)</code></h2>","bioChainData":{"outlink":[{"title":"index","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/drivers/index.html"},{"title":"config","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/config.html"},{"title":"typing","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/typing.html"}],"backlink":[{"title":"exception","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/exception.html"},{"title":"index","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/index.html"},{"title":"matcher","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/matcher.html"},{"title":"message","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/message.html"},{"title":"params","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/params.html"},{"title":"permission","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/permission.html"},{"title":"rule","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/rule.html"},{"title":"typing","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/typing.html"},{"title":"utils","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.html"},{"title":"index","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/drivers/index.html"},{"title":"model","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/model.html"},{"title":"on","link":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/on.html"}],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md","value":{"title":"index","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md","outlink":["MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/drivers/index.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/config.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/typing.md"],"backlink":["MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/exception.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/index.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/matcher.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/message.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/params.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/permission.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/rule.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/typing.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/drivers/index.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/model.md","MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/on.md"]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/drivers/index.md","value":{"title":"index","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/drivers/index.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/config.md","value":{"title":"config","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/config.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/typing.md","value":{"title":"typing","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/typing.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/exception.md","value":{"title":"exception","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/exception.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/index.md","value":{"title":"index","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/index.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/matcher.md","value":{"title":"matcher","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/matcher.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/message.md","value":{"title":"message","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/message.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/params.md","value":{"title":"params","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/params.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/permission.md","value":{"title":"permission","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/permission.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/rule.md","value":{"title":"rule","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/rule.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.md","value":{"title":"utils","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/model.md","value":{"title":"model","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/model.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/on.md","value":{"title":"on","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/on.md","outlink":[],"backlink":[]}}],"links":[{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/drivers/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/config.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/typing.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/exception.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/index.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/matcher.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/message.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/params.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/permission.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/rule.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/typing.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/utils.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/drivers/index.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/model.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/plugin/on.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/SoftCode/ChatBot/NoneBot2/version-2.4.1/07. api/adapters/index.md"}]}}}');export{h as comp,v as data};
