import{_ as s,c as a,e as n,o as l}from"./app-_6RECMRt.js";const e={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="比较-json-xml-yaml-cson-toml" tabindex="-1"><a class="header-anchor" href="#比较-json-xml-yaml-cson-toml"><span>比较 json xml yaml cson toml</span></a></h1><p>参考：</p><ul><li>翻译 https://linux.cn/article-10664-1.html 　　原文 https://www.zionandzion.com/json-vs-xml-vs-toml-vs-cson-vs-yaml/</li></ul><h2 id="数据序列化格式-standard-generalized-markup-language-sgml" tabindex="-1"><a class="header-anchor" href="#数据序列化格式-standard-generalized-markup-language-sgml"><span>数据序列化格式（Standard Generalized Markup Language，SGML）</span></a></h2><h3 id="两大类" tabindex="-1"><a class="header-anchor" href="#两大类"><span>两大类</span></a></h3><p>虽然<a href="https://en.wikipedia.org/wiki/Comparison_of_data_serialization_formats" target="_blank" rel="noopener noreferrer">数据序列化格式</a>多到可以埋葬哈利法塔，但它们大多分为两类：</p><ul><li>易于人类读写，</li><li>易于机器读写。</li></ul><p>很难两全其美，因为人类喜欢让我们更具表现力的松散类型和灵活格式标准。 而机器倾向于被确切告知一切事情而没有二义性和细节缺失，并且认为“严格规范”才是它们最爱的口味。</p><p>对人类可读性特别有用的格式：XML、JSON、TOML、CSON 以及 YAML。每个都有各自的优缺点和适当的用例场景。</p><h3 id="历史" tabindex="-1"><a class="header-anchor" href="#历史"><span>历史</span></a></h3><p>回到互联网的早期，<a href="https://en.wikipedia.org/wiki/Standard_Generalized_Markup_Language#History" target="_blank" rel="noopener noreferrer">一些非常聪明的家伙</a>决定整合一种让每个系统都能理解的标准语言，并创造性地将其命名为 <strong>标准通用标记语言（Standard Generalized Markup Language，简称 SGML）</strong>。</p><p>SGML 非常灵活，发布者也很好地定义了它。它成为了 XML、SVG 和 HTML 等语言之父。所有这三个都符合 SGML 规范，可是它们都是规则更严格、灵活性更少的子集。</p><p>最终，人们开始看到非常小、简洁、易读且易于生成的数据的好处，这些数据可以在系统之间以编程的方式共享，而开销很小。大约在那个时候，JSON 诞生了并且能够满足所有的需求。而另一方面，其它语言也开始出现以处理更多的专业用例，如 CSON，TOML 和 YAML。</p><h2 id="对比" tabindex="-1"><a class="header-anchor" href="#对比"><span>对比</span></a></h2><h3 id="xml-不行了" tabindex="-1"><a class="header-anchor" href="#xml-不行了"><span>XML：不行了</span></a></h3><p>原本，XML 语言非常灵活且易于编写，但它的<strong>缺点是冗长，人类难以阅读、计算机非常难以读取，并且有很多语法对于传达信息并不是完全必要的</strong>。</p><p>今天，它在 web 上的数据序列化的用途已经消失了。除非你在编写 HTML 或者 SVG，否则你不太能在许多其它地方看到 XML。一些过时的系统今天仍在使用它，但是用它传递数据往往太重了。</p><p>我已经可以听到 XML 老爷爷开始在它们的石碑上乱写为什么 XML 是了不起的，所以我将提供一个小小的补充：XML 可以很容易地由系统和人读写。然而，真的，我的意思是荒谬的，很难创建一个可以规范的读取它的系统。这是一个简单美观的 XML 示例：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">book</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;bk101&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Gambardella, Matthew&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;XML Developer&#39;s Guide&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">genre</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Computer&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">genre</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">price</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;44.95&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">price</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">publish_date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;2000-10-01&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">publish_date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;An in-depth look at creating applications with XML.&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">book</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>太棒了。易于阅读、理解、写入，也容易编码一个可以读写它的系统。但请考虑这个例子：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DOCTYPE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> r</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> &lt;!ENTITY</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;a]&gt;b&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ]&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">y;&gt;&quot;</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;![CDATA[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[a&gt;b </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">a&gt;b </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]]&gt;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?x &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- &lt;b&gt; ?&gt; c --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> d</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:white;--shiki-dark:#E06C75;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这上面是 100% 有效的 XML。几乎不可能阅读、理解或推理。编写可以使用和理解这个的代码将花费至少 36 根头发和 248 磅咖啡渣。我们没有那么多时间或咖啡，而且我们大多数老程序员们现在都是秃头。所以，让它活在我们的记忆里，就像 <a href="https://www.quirksmode.org/css/csshacks.html" target="_blank" rel="noopener noreferrer">css hacks</a>、<a href="http://www.ie6death.com/" target="_blank" rel="noopener noreferrer">IE 6 浏览器</a> 和<a href="https://en.wikipedia.org/wiki/Vacuum_tube" target="_blank" rel="noopener noreferrer">真空管</a>一样好了。</p><h3 id="json-并列聚会" tabindex="-1"><a class="header-anchor" href="#json-并列聚会"><span>JSON：并列聚会</span></a></h3><p>好吧，我们都同意，XML = 差劲。那么，好的替代品是什么？ <strong>JavaScript 对象表示法（JavaScript Object Notation，简称JSON）</strong></p><p>JSON（读起来像 Jason 这个名字） 是 Brendan Eich 发明的，并且得到了伟大而强力的 <a href="https://twitter.com/BrendanEich/status/773403975865470976" target="_blank" rel="noopener noreferrer">JavaScript 意见领袖</a> Douglas Crockford 的推广。它现在几乎用在任何地方。</p><p>优点：这种格式很容易由人和机器编写，按规范中的严格规则<a href="https://en.wikipedia.org/wiki/Parsing#Parser" target="_blank" rel="noopener noreferrer">解析</a>也相当容易，并且灵活 —— 允许深层嵌套数据，支持所有的原始数据类型，及将集合解释为数组或对象。JSON 成为了将数据从一个系统传输到另一个系统的事实标准。几乎所有语言都有内置读写它的功能。</p><p>JSON语法很简单。方括号表示数组，花括号表示记录，由冒号分隔的两个值分别表示属性或“键”（在左边）、值（在右边）。所有键必须用双引号括起来：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;books&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;id&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;bk102&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;author&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Crockford, Douglas&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;title&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;JavaScript: The Good Parts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;genre&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Computer&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;price&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 29.99</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;publish_date&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;2008-05-01&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;description&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Unearthing the Excellence in JavaScript&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这对你来说应该是完全有意义的。它简洁明了，并且从 XML 中删除了大量额外废话，并传达相同数量的信息。 JSON 现在是王道，本文剩下的部分会介绍其它语言格式，这些格式只不过是 JSON 的简化版，尝试让其更简洁或对人类更易读，可结构还是非常相似的</p><h3 id="toml-缩短到彻底的利他主义-似ini" tabindex="-1"><a class="header-anchor" href="#toml-缩短到彻底的利他主义-似ini"><span>TOML：缩短到彻底的利他主义（似ini）</span></a></h3><p>**TOML（Tom 的显而易见的最小化语言Tom’s Obvious, Minimal Language）**允许以相当快捷、简洁的方式定义深层嵌套的数据结构。名字中的 Tom 是指发明者 <a href="https://en.wikipedia.org/wiki/Tom_Preston-Werner" target="_blank" rel="noopener noreferrer">Tom Preston Werner</a>，他是一位活跃于我们行业的创造者和软件开发人员。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">books</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;bk101&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Crockford, Douglas&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;JavaScript: The Good Parts&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">genre</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Computer&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">price</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">29.99</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">publish_date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2008-05-01T00:00:00+00:00</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Unearthing the Excellence in JavaScript&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>缺点 <ul><li>与 JSON 相比，语法有点尴尬，更类似 <a href="https://en.wikipedia.org/wiki/INI_file" target="_blank" rel="noopener noreferrer">ini 文件</a>。这不是一个糟糕的语法，但是需要一些时间适应。</li><li>很少有系统使用它或非常类似的东西作为配置，这是它<strong>最大的缺点</strong>。根本没有很多语言或库可以用来解释 TOML。</li></ul></li><li>优点 <ul><li>TOML 中集成了一些很棒的功能，例如多行字符串、保留字符的自动转义、日期、时间、整数、浮点数、科学记数法和“表扩展”等数据类型。 特别是最后一点，这也是 TOML 如此简洁的原因。使用 TOML，你可以肯定在时间和文件长度上会节省不少。</li></ul></li></ul><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Hello&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;World&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上扩展到以下内容：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;b&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;c&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                &quot;d&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                &quot;e&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;World&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cson-特定系统所包含的简单样本" tabindex="-1"><a class="header-anchor" href="#cson-特定系统所包含的简单样本"><span>CSON：特定系统所包含的简单样本</span></a></h3><p>首先，有两个 CSON 规范。</p><ul><li>一个代表 CoffeeScript Object Notation</li><li>另一个代表 Cursive Script Object Notation</li></ul><p>后者不经常使用，所以我们不会关注它。我们只关注 CoffeeScript。</p><p><a href="https://github.com/bevry/cson#what-is-cson" target="_blank" rel="noopener noreferrer">CSON</a> 需要一点介绍。首先，我们来谈谈 CoffeeScript。<a href="http://coffeescript.org/" target="_blank" rel="noopener noreferrer">CoffeeScript</a> 是一种通过运行编译器生成 JavaScript 的语言。它允许你以更加简洁的语法编写 JavaScript 并<a href="https://en.wikipedia.org/wiki/Source-to-source_compiler" target="_blank" rel="noopener noreferrer">转译</a>成实际的 JavaScript，然后你可以在你的 web 应用程序中使用它。CoffeeScript 通过删除 JavaScript 中必需的许多额外语法，使编写 JavaScript 变得更容易。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">books: [</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    id:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> &#39;bk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">102</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    author:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> &#39;Crockford</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">Douglas&#39;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    title:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> &#39;JavaScript:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> The</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> Good</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> Parts&#39;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    genre:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> &#39;Computer&#39;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    price:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 29.99</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    publish_date:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> &#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2008-05-01</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    description:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> &#39;Unearthing</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> the</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> Excellence</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> in</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> JavaScript&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>优点：</p><ul><li><p>CoffeeScript 摆脱的一个大问题是花括号 —— 不需要它们。同样，CSON 是没有大括号的 JSON。它依赖于缩进来确定数据的层次结构。CSON 非常易于读写，并且通常比 JSON 需要更少的代码行，因为没有括号。</p></li><li><p>CSON 还提供一些 JSON 不提供的额外细节。多行字符串非常容易编写，你可以通过使用 <code>#</code> 符号开始一行来输入<a href="https://en.wikipedia.org/wiki/Comment_(computer_programming)" target="_blank" rel="noopener noreferrer">注释</a>，并且不需要用逗号分隔键值对。</p></li></ul></li><li><p>缺点</p><ul><li>它是 CoffeScript 对象表示法CoffeeScript Object Notation。也就是说你要用 CoffeeScript 解析/标记化/lex/转译或其它方式来使用 CSON。CoffeeScript 是读取数据的系统。如果数据序列化的目的是允许数据从一个系统传递到另一个系统，这里我们有一个只能由单个系统读取的数据序列化格式，这使得它与防火火柴、防水海绵或者叉匙恼人的脆弱叉子部分一样有用。</li><li>如果这种格式被其它系统也采用，那它在开发者世界中可能非常有用。但到目前为止这基本上没有发生，所以在 PHP 或 JAVA 等替代语言中使用它是不行的。</li></ul></li></ul><h3 id="yaml-年轻人的呼喊" tabindex="-1"><a class="header-anchor" href="#yaml-年轻人的呼喊"><span>YAML：年轻人的呼喊</span></a></h3><p>开发人员感到高兴，因为 YAML 来自<a href="http://clarkevans.com/" target="_blank" rel="noopener noreferrer">一个 Python 的贡献者</a>。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">books</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">bk102</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Crockford, Douglas</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;JavaScript: The Good Parts&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    genre</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Computer</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    price</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">29.99</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    publish_date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!!str</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2008-05-01</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Unearthing the Excellence in JavaScript</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>业界的年轻人正在迅速采用 YAML 作为他们首选的数据序列化和系统配置格式。他们这样做很机智。YAML 具有像 CSON 一样简洁的所有好处，以及与 JSON 一样的数据类型解释的所有功能。YAML 像加拿大人容易相处一样容易阅读。</p><ul><li><p>优点：</p><ul><li>YAML 具有与 CSON 相同的功能集和类似的语法，有一系列新功能，以及几乎所有 web 编程语言都可用的解析器。</li><li>它还有一些额外的功能，如循环引用、软包装、多行键、类型转换标签、二进制数据、对象合并和<a href="http://exploringjs.com/es6/ch_maps-sets.html" target="_blank" rel="noopener noreferrer">集合映射</a>。</li><li>它具有非常好的可读性和可写性，并且是 <strong>JSON 的超集</strong>，因此你可以在 YAML 中使用完全合格的 JSON 语法并且一切正常工作。</li><li>你几乎不需要引号，它可以解释大多数基本数据类型（字符串、整数、浮点数、布尔值等）。</li></ul></li><li><p>缺点：</p><p>YAML 有两个问题，对我而言，第一个是大问题。</p><ul><li>在撰写本文时，YAML 解析器尚未内置于多种语言，因此你需要使用第三方库或扩展来为你选择的语言解析 .yaml 文件。这不是什么大问题，可似乎大多数为 YAML 创建解析器的开发人员都选择随机将“附加功能”放入解析器中。 有些允许<a href="https://www.tutorialspoint.com/compiler_design/compiler_design_lexical_analysis.htm" target="_blank" rel="noopener noreferrer">标记化</a>，有些允许<a href="https://en.wikipedia.org/wiki/Fluent_interface" target="_blank" rel="noopener noreferrer">链引用</a>，有些甚至允许内联计算。这一切都很好（某种意义上），只是这些功能都不是规范的一部分，因此很难在其他语言的其他解析器中找到。这导致系统限定，你最终遇到了与 CSON 相同的问题。 如果你使用仅在一个解析器中找到的功能，则其他解析器将无法解释输入。大多数这些功能都是无意义的，不属于数据集，而是属于你的应用程序逻辑，因此最好简单地忽略它们和编写符合规范的 YAML。</li><li>很少有解析器完全实现规范。 所有的基本要素都有，但是很难找到一些更复杂和更新的东西，比如软包装、文档标记和首选语言的循环引用。我还没有看到对这些东西的刚需，所以希望它们不让你很失望。 考虑到上述情况，我倾向于保持 <a href="http://yaml.org/spec/1.1/current.html" target="_blank" rel="noopener noreferrer">1.1 规范</a> 中呈现的更成熟的功能集，而避免在 <a href="http://www.yaml.org/spec/1.2/spec.html" target="_blank" rel="noopener noreferrer">1.2 规范</a> 中找到的新东西。然而，编程是一个不断发展的怪兽，所以当你读完这篇文章时，你或许就可以使用 1.2 规范了。</li></ul></li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>这是最后一段话。每个序列化语言都应该以个案标准的方式评价。 当涉及机器的可读性时，有些无出其右（the bee’s knees）。 对于人类可读性，有些名至实归（the cat’s meow），有些只是金玉其外（gilded turds）</p><p>以下是最终细分： 如果你要编写供其他代码阅读的代码，请使用 YAML。 如果你正在编写能写出供其他代码读取的代码的代码，请使用 JSON。 最后，如果你正在编写将代码转译为供其他代码读取的代码的代码，请重新考虑你的人生选择。</p>`,51)]))}const r=s(e,[["render",t],["__file","比较 json xml yaml cson toml.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/02.%20%E5%A4%9A%E6%96%87%E4%BB%B6%E5%A4%9A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/%E9%80%9A%E7%94%A8%E5%AD%98%E5%82%A8/%E6%AF%94%E8%BE%83%20json%20xml%20yaml%20cson%20toml.html","title":"比较 json xml yaml cson toml","lang":"zh-CN","frontmatter":{"description":"比较 json xml yaml cson toml 参考： 翻译 https://linux.cn/article-10664-1.html 原文 https://www.zionandzion.com/json-vs-xml-vs-toml-vs-cson-vs-yaml/ 数据序列化格式（Standard Generalized Markup L...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/02.%20%E5%A4%9A%E6%96%87%E4%BB%B6%E5%A4%9A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/%E9%80%9A%E7%94%A8%E5%AD%98%E5%82%A8/%E6%AF%94%E8%BE%83%20json%20xml%20yaml%20cson%20toml.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"比较 json xml yaml cson toml"}],["meta",{"property":"og:description","content":"比较 json xml yaml cson toml 参考： 翻译 https://linux.cn/article-10664-1.html 原文 https://www.zionandzion.com/json-vs-xml-vs-toml-vs-cson-vs-yaml/ 数据序列化格式（Standard Generalized Markup L..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"比较 json xml yaml cson toml\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"比较 json xml yaml cson toml","slug":"比较-json-xml-yaml-cson-toml","link":"#比较-json-xml-yaml-cson-toml","children":[{"level":2,"title":"数据序列化格式（Standard Generalized Markup Language，SGML）","slug":"数据序列化格式-standard-generalized-markup-language-sgml","link":"#数据序列化格式-standard-generalized-markup-language-sgml","children":[{"level":3,"title":"两大类","slug":"两大类","link":"#两大类","children":[]},{"level":3,"title":"历史","slug":"历史","link":"#历史","children":[]}]},{"level":2,"title":"对比","slug":"对比","link":"#对比","children":[{"level":3,"title":"XML：不行了","slug":"xml-不行了","link":"#xml-不行了","children":[]},{"level":3,"title":"JSON：并列聚会","slug":"json-并列聚会","link":"#json-并列聚会","children":[]},{"level":3,"title":"TOML：缩短到彻底的利他主义（似ini）","slug":"toml-缩短到彻底的利他主义-似ini","link":"#toml-缩短到彻底的利他主义-似ini","children":[]},{"level":3,"title":"CSON：特定系统所包含的简单样本","slug":"cson-特定系统所包含的简单样本","link":"#cson-特定系统所包含的简单样本","children":[]},{"level":3,"title":"YAML：年轻人的呼喊","slug":"yaml-年轻人的呼喊","link":"#yaml-年轻人的呼喊","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}]}],"git":{},"readingTime":{"minutes":10.07,"words":3022},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/02. 多文件多目录管理/辅助文件/通用存储/比较 json xml yaml cson toml.md","excerpt":"\\n<p>参考：</p>\\n<ul>\\n<li>翻译 https://linux.cn/article-10664-1.html\\n　　原文 https://www.zionandzion.com/json-vs-xml-vs-toml-vs-cson-vs-yaml/</li>\\n</ul>\\n<h2>数据序列化格式（Standard Generalized Markup Language，SGML）</h2>\\n<h3>两大类</h3>\\n<p>虽然<a href=\\"https://en.wikipedia.org/wiki/Comparison_of_data_serialization_formats\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">数据序列化格式</a>多到可以埋葬哈利法塔，但它们大多分为两类：</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/02. 多文件多目录管理/辅助文件/通用存储/比较 json xml yaml cson toml.md","value":{"title":"比较 json xml yaml cson toml","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/02. 多文件多目录管理/辅助文件/通用存储/比较 json xml yaml cson toml.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,k as data};
