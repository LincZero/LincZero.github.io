import{_ as i,c as o,e as s,a as t,d as l,b as n,o as p,r as u}from"./app-CtMeyR3O.js";const a={},b={href:"https://docs.cilium.io/en/stable/bpf/resources/#bpf-users",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.cilium.io/en/stable/network/ebpf/#ebpf-datapath",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.cilium.io/en/stable/bpf/architecture/#instruction-set",target:"_blank",rel:"noopener noreferrer"},B={href:"https://docs.cilium.io/en/stable/bpf/architecture/#helper-functions",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.cilium.io/en/stable/bpf/architecture/#maps",target:"_blank",rel:"noopener noreferrer"},P={href:"https://docs.cilium.io/en/stable/bpf/architecture/#object-pinning",target:"_blank",rel:"noopener noreferrer"},E={href:"https://docs.cilium.io/en/stable/bpf/architecture/#tail-calls",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.cilium.io/en/stable/bpf/architecture/#bpf-to-bpf-calls",target:"_blank",rel:"noopener noreferrer"},F={href:"https://docs.cilium.io/en/stable/bpf/architecture/#jit",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.cilium.io/en/stable/bpf/architecture/#hardening",target:"_blank",rel:"noopener noreferrer"},c={href:"https://docs.cilium.io/en/stable/bpf/architecture/#offloads",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.cilium.io/en/stable/bpf/architecture/#bpf-sysctls",target:"_blank",rel:"noopener noreferrer"},C={href:"https://docs.cilium.io/en/stable/bpf/toolchain/#development-environment",target:"_blank",rel:"noopener noreferrer"},A={href:"https://docs.cilium.io/en/stable/bpf/toolchain/#llvm",target:"_blank",rel:"noopener noreferrer"},_={href:"https://docs.cilium.io/en/stable/bpf/toolchain/#iproute2",target:"_blank",rel:"noopener noreferrer"},D={href:"https://docs.cilium.io/en/stable/bpf/debug_and_test/#bpftool",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.cilium.io/en/stable/bpf/debug_and_test/#kernel-testing",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.cilium.io/en/stable/bpf/debug_and_test/#jit-debugging",target:"_blank",rel:"noopener noreferrer"},L={href:"https://docs.cilium.io/en/stable/bpf/debug_and_test/#introspection",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.cilium.io/en/stable/bpf/debug_and_test/#tracing-pipe",target:"_blank",rel:"noopener noreferrer"},T={href:"https://docs.cilium.io/en/stable/bpf/debug_and_test/#miscellaneous",target:"_blank",rel:"noopener noreferrer"},N={href:"https://docs.cilium.io/en/stable/bpf/progtypes/#xdp",target:"_blank",rel:"noopener noreferrer"},X={href:"https://docs.cilium.io/en/stable/bpf/progtypes/#tc-traffic-control",target:"_blank",rel:"noopener noreferrer"},I={href:"https://docs.cilium.io/en/stable/bpf/resources/#kernel-developer-faq",target:"_blank",rel:"noopener noreferrer"},w={href:"https://docs.cilium.io/en/stable/bpf/resources/#projects-using-bpf",target:"_blank",rel:"noopener noreferrer"},q={href:"https://docs.cilium.io/en/stable/bpf/resources/#xdp-newbies",target:"_blank",rel:"noopener noreferrer"},K={href:"https://docs.cilium.io/en/stable/bpf/resources/#bpf-newsletter",target:"_blank",rel:"noopener noreferrer"},V={href:"https://docs.cilium.io/en/stable/bpf/resources/#podcasts",target:"_blank",rel:"noopener noreferrer"},M={href:"https://docs.cilium.io/en/stable/bpf/resources/#blog-posts",target:"_blank",rel:"noopener noreferrer"},j={href:"https://docs.cilium.io/en/stable/bpf/resources/#books",target:"_blank",rel:"noopener noreferrer"},G={href:"https://docs.cilium.io/en/stable/bpf/resources/#talks",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://docs.cilium.io/en/stable/bpf/resources/#further-documents",target:"_blank",rel:"noopener noreferrer"};function J(z,e){const r=u("ExternalLinkIcon");return p(),o("div",null,[e[41]||(e[41]=s('<h1 id="ebpf" tabindex="-1"><a class="header-anchor" href="#ebpf"><span>eBPF</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="cilium文档-介绍" tabindex="-1"><a class="header-anchor" href="#cilium文档-介绍"><span>Cilium文档 - 介绍</span></a></h1><p>参考：https://docs.cilium.io/en/stable/bpf/</p><p>这边主要是为了学习 eBPF + XDP</p><p>这篇文章是在cilium里的，主要是因为他里面使用到了eBPF。这里补充介绍一下：（来源GPT4）</p><blockquote><p>Cilium 是一个开源项目，它提供了用于在 Linux 容器和 Kubernetes 环境中进行网络连接、负载均衡和网络安全的 API。 Cilium 的核心目标是为容器、虚拟机和主机级应用程序提供高效、可靠和可扩展的连接性。 Cilium 依赖于 Linux 内核中的 eBPF（Extended Berkeley Packet Filter）技术，将内核级性能与用户空间灵活性相结合，从而实现高效、现代的网络和安全功能。</p><p>eBPF 是一种高性能内核执行引擎，可以在不更改内核源代码的情况下通过用户空间程序进行灵活地扩展内核功能。eBPF 提供了 Cilium 在内核级别提供高性能网络转发和安全策略实施的基础设施。</p><p>Cilium 使用 eBPF 主要有两个方面：</p><ol><li>网络转发： Cilium 利用 eBPF 的高性能网络数据包处理能力来实现可扩展的网络转发。Cilium 实现了 VXLAN 隧道、容器网络策略、负载均衡等网络功能，并通过 eBPF、XDP 和 TC 钩子实现高效的内核级网络传输。</li><li>安全策略： Cilium 使用 eBPF 直接在内核中实现安全策略，如 API 感知网络安全、网络可见性和可以定义的访问控制列表。这为 Cilium 提供了更高级别的安全和性能，无需在容器之间或通往外部网络的流量中进行嵌套。</li></ol><p>总之，Cilium 是一个基于 eBPF 技术构建的容器及 Kubernetes 网络和安全解决方案。借助 eBPF 的高性能和灵活性，Cilium 可以实现高效、可扩展且安全的连接性。</p></blockquote><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><blockquote><p>本文档部分面向想要深入了解 BPF 和 XDP 技术的开发人员和用户。虽然阅读本参考指南可能有助于加深您对 Cilium 的理解，但这并不是使用 Cilium 的必要条件。请参阅入门指南和 eBPF Datapath 以获取更高级别的介绍。</p></blockquote><p>BPF 是 Linux 内核中高度灵活且高效的类似虚拟机的构造，允许以安全的方式在各种挂钩点执行字节码。它被用于许多 Linux 内核子系统，最突出的是网络、跟踪和安全（例如沙箱）。</p><p>尽管 BPF 自 1992 年以来就已存在，但本文档涵盖了扩展的伯克利数据包过滤器 (eBPF) 版本，该版本首次出现在内核 3.18 中，并使得如今被称为“经典”BPF (cBPF) 的原始版本基本上已过时。许多人都知道 cBPF 是 tcpdump 使用的数据包过滤语言。如今，Linux 内核仅运行 eBPF，加载的 cBPF 字节码在程序执行之前会在内核中透明地转换为 eBPF 表示形式。除非指出 eBPF 和 cBPF 之间的明确差异，否则本文档通常会引用术语 BPF。</p>',11)),t("p",null,[e[1]||(e[1]=l("尽管伯克利数据包过滤器这个名称暗示了数据包过滤的特定用途，但指令集现在已经足够通用和灵活，除了网络之外，BPF 还有许多用例。请参阅 ")),t("a",b,[e[0]||(e[0]=l("Further Reading")),n(r)]),e[2]||(e[2]=l(" 以获取使用 BPF 的项目列表。"))]),t("p",null,[e[4]||(e[4]=l("Cilium 在其数据路径中大量使用 BPF，请参阅 ")),t("a",d,[e[3]||(e[3]=l("eBPF Datapath")),n(r)]),e[5]||(e[5]=l(" 以获取更多信息。本章的目标是提供 BPF 参考指南，以便了解 BPF、其网络特定用途，包括使用 tc（流量控制）和 XDP（eXpress 数据路径）加载 BPF 程序，并帮助开发 Cilium 的 BPF 模板。"))]),e[42]||(e[42]=t("p",null,"目录",-1)),t("ul",null,[t("li",null,[e[16]||(e[16]=l("BPF 架构 ")),t("ul",null,[t("li",null,[t("a",f,[e[6]||(e[6]=l("指令集")),n(r)])]),t("li",null,[t("a",B,[e[7]||(e[7]=l("辅助函数")),n(r)])]),t("li",null,[t("a",m,[e[8]||(e[8]=l("映射")),n(r)])]),t("li",null,[t("a",P,[e[9]||(e[9]=l("对象固定")),n(r)])]),t("li",null,[t("a",E,[e[10]||(e[10]=l("尾部调用")),n(r)])]),t("li",null,[t("a",h,[e[11]||(e[11]=l("BPF to BPF Calls")),n(r)])]),t("li",null,[t("a",F,[e[12]||(e[12]=l("JIT 即时编译")),n(r)])]),t("li",null,[t("a",g,[e[13]||(e[13]=l("Hardening 硬化")),n(r)])]),t("li",null,[t("a",c,[e[14]||(e[14]=l("Offloads 卸载")),n(r)])]),t("li",null,[t("a",k,[e[15]||(e[15]=l("BPF sysctls BPF系统")),n(r)])])])]),t("li",null,[e[20]||(e[20]=l("开发工具 ")),t("ul",null,[t("li",null,[t("a",C,[e[17]||(e[17]=l("开发环境")),n(r)])]),t("li",null,[t("a",A,[e[18]||(e[18]=l("LLVM")),n(r)])]),t("li",null,[t("a",_,[e[19]||(e[19]=l("iproute2")),n(r)])])])]),t("li",null,[e[27]||(e[27]=l("调试与测试 ")),t("ul",null,[t("li",null,[t("a",D,[e[21]||(e[21]=l("bpftool")),n(r)])]),t("li",null,[t("a",x,[e[22]||(e[22]=l("Kernel Testing 内核测试")),n(r)])]),t("li",null,[t("a",y,[e[23]||(e[23]=l("JIT Debugging 即时调试")),n(r)])]),t("li",null,[t("a",L,[e[24]||(e[24]=l("Introspection 内省")),n(r)])]),t("li",null,[t("a",v,[e[25]||(e[25]=l("Tracing pipe")),n(r)])]),t("li",null,[t("a",T,[e[26]||(e[26]=l("Miscellaneous")),n(r)])])])]),t("li",null,[e[30]||(e[30]=l("程序类型 ")),t("ul",null,[t("li",null,[t("a",N,[e[28]||(e[28]=l("XDP")),n(r)])]),t("li",null,[t("a",X,[e[29]||(e[29]=l("tc (traffic control)")),n(r)])])])]),t("li",null,[e[40]||(e[40]=l("进一步阅读 ")),t("ul",null,[t("li",null,[t("a",I,[e[31]||(e[31]=l("内核开发 FAQ")),n(r)])]),t("li",null,[t("a",w,[e[32]||(e[32]=l("使用BPF的项目")),n(r)])]),t("li",null,[t("a",q,[e[33]||(e[33]=l("XDP Newbies")),n(r)])]),t("li",null,[t("a",K,[e[34]||(e[34]=l("BPF 时事通讯")),n(r)])]),t("li",null,[t("a",V,[e[35]||(e[35]=l("博客")),n(r)])]),t("li",null,[t("a",M,[e[36]||(e[36]=l("博客文章")),n(r)])]),t("li",null,[t("a",j,[e[37]||(e[37]=l("图书")),n(r)])]),t("li",null,[t("a",G,[e[38]||(e[38]=l("会谈")),n(r)])]),t("li",null,[t("a",Z,[e[39]||(e[39]=l("更多文档")),n(r)])])])])])])}const R=i(a,[["render",J],["__file","01. 入门.html.vue"]]),S=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/Cilium%20(eBPF)/%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/10.%20BPF%E5%92%8CXDP%E5%8F%82%E8%80%83%E6%8C%87%E5%8D%97/01.%20%E5%85%A5%E9%97%A8.html","title":"eBPF","lang":"zh-CN","frontmatter":{"description":"eBPF 目录 Cilium文档 - 介绍 参考：https://docs.cilium.io/en/stable/bpf/ 这边主要是为了学习 eBPF + XDP 这篇文章是在cilium里的，主要是因为他里面使用到了eBPF。这里补充介绍一下：（来源GPT4） Cilium 是一个开源项目，它提供了用于在 Linux 容器和 Kubernetes...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/Cilium%20(eBPF)/%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/10.%20BPF%E5%92%8CXDP%E5%8F%82%E8%80%83%E6%8C%87%E5%8D%97/01.%20%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"eBPF"}],["meta",{"property":"og:description","content":"eBPF 目录 Cilium文档 - 介绍 参考：https://docs.cilium.io/en/stable/bpf/ 这边主要是为了学习 eBPF + XDP 这篇文章是在cilium里的，主要是因为他里面使用到了eBPF。这里补充介绍一下：（来源GPT4） Cilium 是一个开源项目，它提供了用于在 Linux 容器和 Kubernetes..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"eBPF\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"eBPF","slug":"ebpf","link":"#ebpf","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"Cilium文档 - 介绍","slug":"cilium文档-介绍","link":"#cilium文档-介绍","children":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.95,"words":1184},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/Cilium (eBPF)/官方文档/10. BPF和XDP参考指南/01. 入门.md","excerpt":"\\n<h1>目录</h1>\\n<h1>Cilium文档 - 介绍</h1>\\n<p>参考：https://docs.cilium.io/en/stable/bpf/</p>\\n<p>这边主要是为了学习 eBPF + XDP</p>\\n<p>这篇文章是在cilium里的，主要是因为他里面使用到了eBPF。这里补充介绍一下：（来源GPT4）</p>\\n<blockquote>\\n<p>Cilium 是一个开源项目，它提供了用于在 Linux 容器和 Kubernetes  环境中进行网络连接、负载均衡和网络安全的 API。\\nCilium  的核心目标是为容器、虚拟机和主机级应用程序提供高效、可靠和可扩展的连接性。\\nCilium 依赖于 Linux 内核中的 eBPF（Extended Berkeley Packet Filter）技术，将内核级性能与用户空间灵活性相结合，从而实现高效、现代的网络和安全功能。</p>\\n<p>eBPF 是一种高性能内核执行引擎，可以在不更改内核源代码的情况下通过用户空间程序进行灵活地扩展内核功能。eBPF 提供了 Cilium 在内核级别提供高性能网络转发和安全策略实施的基础设施。</p>\\n<p>Cilium 使用 eBPF 主要有两个方面：</p>\\n<ol>\\n<li>网络转发：\\nCilium 利用 eBPF 的高性能网络数据包处理能力来实现可扩展的网络转发。Cilium 实现了 VXLAN 隧道、容器网络策略、负载均衡等网络功能，并通过 eBPF、XDP 和 TC 钩子实现高效的内核级网络传输。</li>\\n<li>安全策略：\\nCilium 使用 eBPF 直接在内核中实现安全策略，如 API 感知网络安全、网络可见性和可以定义的访问控制列表。这为 Cilium 提供了更高级别的安全和性能，无需在容器之间或通往外部网络的流量中进行嵌套。</li>\\n</ol>\\n<p>总之，Cilium 是一个基于 eBPF 技术构建的容器及 Kubernetes 网络和安全解决方案。借助 eBPF 的高性能和灵活性，Cilium 可以实现高效、可扩展且安全的连接性。</p>\\n</blockquote>","autoDesc":true}');export{R as comp,S as data};
