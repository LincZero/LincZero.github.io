import{_ as i,c as e,e as a,o as s}from"./app-CAfWfcmi.js";const n="/assets/image-20210421000716385-D_tF636p.png",l="/assets/image-20210422005157353-47SO9RH9.png",d="/assets/image-20210421165600845-V4dDLMnF.png",h="/assets/SystemEncodeFunctionUtf8-DqNcQs0G.png",r="/assets/image-20210414132400501-SKljX8Lm.png",o={};function p(k,t){return s(),e("div",null,t[0]||(t[0]=[a('<h1 id="字符编码详解" tabindex="-1"><a class="header-anchor" href="#字符编码详解"><span>字符编码详解</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="字符编码的程序兼容" tabindex="-1"><a class="header-anchor" href="#字符编码的程序兼容"><span>字符编码的程序兼容</span></a></h1><h2 id="乱码问题" tabindex="-1"><a class="header-anchor" href="#乱码问题"><span>乱码问题</span></a></h2><p>可能是语言兼容出问题、也有可能是程序兼容出问题</p><h3 id="乱码类型与产生原因" tabindex="-1"><a class="header-anchor" href="#乱码类型与产生原因"><span>乱码类型与产生原因</span></a></h3><table><thead><tr><th>名称</th><th>示例</th><th>特点</th><th>产生原因</th></tr></thead><tbody><tr><td>古文码</td><td>浣犲ソ涓栫晫<br>（utf你好世界）</td><td>大都为不认识的古文，并加杂日韩文</td><td>以GBK方式读取UTF-8编码的中文</td></tr><tr><td>口字码</td><td><img src="'+n+'" alt="image-20210421000716385" loading="lazy"><br>ģºÊÀ½（md里打不出来）</td><td>大部分字符为小方块</td><td>以UTF-8的方式读取GBK编码的中文</td></tr><tr><td>符号码</td><td>ä½ å¥½ä¸ç<br>（utf你好世界）</td><td>大部分字符为各种符号</td><td>以ISO8859-1方式读取UTF-8编码的中文</td></tr><tr><td>拼音码</td><td>ÄãºÃÊÀ½ç<br>（gbk你好世界）</td><td>大部分字符为头顶带有各种类似声调符号的字母</td><td>以ISO8859-1方式读取GBK编码的中文</td></tr><tr><td>问句码</td><td>由月要好好学习天天向??</td><td>字符串长度为偶数时正确，长度为奇数时最后的字符变为问号</td><td>以GBK方式读取UTF-8编码的中文，<br>然后又用UTF-8的格式再次读取</td></tr><tr><td>锟斤拷</td><td>锟斤拷锟斤拷要锟矫猴拷<br>学习锟斤拷锟斤拷锟斤拷</td><td>全中文字符，且大部分字符为&quot;银斤拷&quot;这几个字符</td><td>以UTF-8方式读取GBK编码的中文，<br>然后又用GBK的格式再次读取</td></tr></tbody></table><h3 id="编译器和系统的乱码原因" tabindex="-1"><a class="header-anchor" href="#编译器和系统的乱码原因"><span>编译器和系统的乱码原因</span></a></h3><p><img src="'+l+'" alt="image-20210422005157353" loading="lazy"></p><h3 id="软件乱码" tabindex="-1"><a class="header-anchor" href="#软件乱码"><span>软件乱码</span></a></h3><h3 id="锟斤拷与数组越界" tabindex="-1"><a class="header-anchor" href="#锟斤拷与数组越界"><span>锟斤拷与数组越界</span></a></h3><p>microsoft编译器下c/c++程序可以正常输出汉字但数组越界时却是锟斤拷</p><h3 id="手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘" tabindex="-1"><a class="header-anchor" href="#手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘"><span>手持两把锟斤拷 口中疾呼烫烫烫 脚踏千朵屯屯屯 笑看万物锘锘锘</span></a></h3><h3 id="utf8的带bom与不带bom" tabindex="-1"><a class="header-anchor" href="#utf8的带bom与不带bom"><span>utf8的带Bom与不带Bom</span></a></h3><h2 id="乱码问题——不可逆乱码-gbk转utf8" tabindex="-1"><a class="header-anchor" href="#乱码问题——不可逆乱码-gbk转utf8"><span>乱码问题——不可逆乱码（GBK转UTF8）</span></a></h2><h3 id="不可逆乱码问题" tabindex="-1"><a class="header-anchor" href="#不可逆乱码问题"><span>不可逆乱码问题</span></a></h3><p>用Notepad++的编码工具，在UTF-8文件下，使用GBK编码时，会提示：</p><blockquote><p>【无法恢复警告】 你将要保存当前的修改。 所有修改都是不可逆的。 继续？ &gt; 是 (Y) &gt; 否 (N)</p></blockquote><p>当选择是以后，当再转换回UTF-8编码时，可能会失败，不让你用UTF-8编码编辑。但这不一定会失败，也可以成功</p><p>这点让我很疑惑，能不能相互转换就像是薛定谔的猫一样，但我注意到——这可能是由于互相转换时对文本进行了特定的修改所引起的</p><p>utf和gbk之间的转换并非一定不可逆，以前我就是使用Notepad++进行gbk和utf8来回互转来研究编码问题</p><h3 id="编码显示与编码转换" tabindex="-1"><a class="header-anchor" href="#编码显示与编码转换"><span>编码显示与编码转换</span></a></h3><p>Notepad++中的编码菜单有两种</p><ul><li>使用UTF-8编码，使用GB等编码 <ul><li>可逆性：可逆</li><li>HEX影响：变化</li></ul></li><li>转换UTF-8编码 <ul><li>后果：</li><li>HEX影响：无影响</li></ul></li></ul><p><img src="'+d+`" alt="image-20210421165600845" loading="lazy"></p><h3 id="gbk转utf-8乱码-为什么不可逆" tabindex="-1"><a class="header-anchor" href="#gbk转utf-8乱码-为什么不可逆"><span>GBK转UTF-8乱码，为什么不可逆</span></a></h3><p>如上图，其中GBK转UTF-8乱码不可逆</p><p>参考：<a href="https://blog.csdn.net/liyang_nash/article/details/108421673" target="_blank" rel="noopener noreferrer">【CSDN】GBK转UTF-8乱码，为什么不可逆</a></p><p>总结：<strong>由于UTF-8的特殊编码方式，所以有些序列是不可能出现在UTF-8编码中的</strong></p><p>所以当我们将由GBK编码的12个字节试图用UTF-8解码时会出现错误，由于GBK编码出了不可能出现在UTF-8编码中出现的序列，所以当我们试图用UTF-8去解码时，经常会遇到这种不可能序列，对于这种不可能序列，UTF-8把它们转换成某种不可言喻的字符“ ”，当这种不可言喻的字符再次以UTF-8进行编码时，他们已经无法回到最初的样子了，因为那些是UTF-8编码不可能编出的序列。然后这个神秘字符再转换成GBK编码时就变成了“锟斤拷”。</p><h2 id="编码之——系统与程序" tabindex="-1"><a class="header-anchor" href="#编码之——系统与程序"><span>编码之——系统与程序</span></a></h2><h3 id="文本行结尾——回车字符与换行符" tabindex="-1"><a class="header-anchor" href="#文本行结尾——回车字符与换行符"><span>文本行结尾——回车字符与换行符</span></a></h3><p>操作系统的行结束符 Windows文本文件每行都以<code>回车字符和换行符</code>结尾</p><table><thead><tr><th>系统对应的行结束符</th><th>简称</th><th>英语</th><th>翻译</th><th>转义表示</th><th>HEX编码</th></tr></thead><tbody><tr><td>Unix</td><td>LF</td><td>Line-Feed</td><td>换行</td><td><code>\\n</code></td><td>0a</td></tr><tr><td>Windows</td><td>CRLF</td><td>Carriage-Return Line-Feed</td><td>回车换行</td><td><code>\\r\\n</code></td><td>0d0a</td></tr></tbody></table><p>回车符与换行符 判断换行符：用HexEditor打开。如果换行的部分为0d0a，则是Windows文本文件；若仅是0a，则是Unix文本文件</p><table><thead><tr><th>符号</th><th>转义符号</th><th>ascii编码</th><th>英文</th><th>字符类型</th></tr></thead><tbody><tr><td>回车符</td><td><code>\\r</code></td><td>13<sub>10</sub>、0d<sub>16</sub></td><td><strong>R</strong>eturn</td><td>操作字符</td></tr><tr><td>换行符</td><td><code>\\n</code></td><td>10<sub>10</sub>、0a<sub>16</sub></td><td><strong>N</strong>ewLi<strong>n</strong>e</td><td>操作字符</td></tr><tr><td>空格（参考）</td><td><code>空格</code></td><td>48<sub>10</sub>、20<sub>16</sub></td><td>Space</td><td>打印字符（ascii&gt;=32）</td></tr></tbody></table><h3 id="程序读文件时对换行符的处理" tabindex="-1"><a class="header-anchor" href="#程序读文件时对换行符的处理"><span>程序读文件时对换行符的处理</span></a></h3><ul><li>通常<code>C++</code>和<code>Python的文本模式</code>等程序读取文件时<strong>都</strong>会自动将这两个字符转换为换行符<code>\\n</code>，并在写入文件时执行相反的转换</li><li>这种暗地里的修改对 ASCII 文本文件没有问题，但会损坏 <code>JPEG</code> 或 <code>EXE</code> 这样的二进制文件中的数据。使用二进制模式读写此类文件时要特别小心</li></ul><h3 id="c-强制使用指定编码输出-qt" tabindex="-1"><a class="header-anchor" href="#c-强制使用指定编码输出-qt"><span>C++强制使用指定编码输出（Qt）</span></a></h3><p>以Qt为例</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">qDebug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    &lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;你好世界&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    &lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\344\\275\\240\\345\\245\\275\\344\\270\\226\\347\\225\\214</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">QString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fromLocal8Bit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;你好世界&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">QString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fromUtf8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;你好世界&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QPushButton </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">btn </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> QPushButton</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                   +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;你好世界&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                   +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\344\\275\\240\\345\\245\\275\\344\\270\\226\\347\\225\\214</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                   +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">QString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fromLocal8Bit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;你好世界&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                   +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">QString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fromUtf8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;你好世界&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// MinGW编译结果</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 你好世界 你好世界 &quot;浣豺少滑旃暲&quot; &quot;你好世界&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// MSCV编译结果</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ???????? 你好世界 &quot;你好世界&quot; &quot;????????&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改系统编码后的编译结果-qt" tabindex="-1"><a class="header-anchor" href="#修改系统编码后的编译结果-qt"><span>修改系统编码后的编译结果（Qt）</span></a></h3><p>这里修改系统编码为utf8</p><p><img src="`+h+'" alt="SystemEncodeFunctionUtf8" loading="lazy"></p><h3 id="数据库管理对编码的选用" tabindex="-1"><a class="header-anchor" href="#数据库管理对编码的选用"><span>数据库管理对编码的选用</span></a></h3><p>我最早接触到要区分utf8/16/32的场景就是在创建数据库的时候</p><p>这几种Unicode的区别详见前面<a href="#Unicode%E4%BB%A5%E5%8F%8A%E5%85%B6%E5%8F%98%E5%BD%A2">Unicode以及其变形</a>一节</p><h3 id="utf8-带-bom" tabindex="-1"><a class="header-anchor" href="#utf8-带-bom"><span>utf8 带 BOM</span></a></h3><h4 id="简概" tabindex="-1"><a class="header-anchor" href="#简概"><span>简概</span></a></h4><p>参考：</p><ul><li><a href="https://blog.csdn.net/u012373281/article/details/91410698" target="_blank" rel="noopener noreferrer">【CSDN】UTF-8的BOM是什么意思</a></li><li><a href="https://blog.csdn.net/fhzaitian/article/details/51482716" target="_blank" rel="noopener noreferrer">【CSDN】UTF-8 到底需不需要 BOM？</a></li><li><a href="https://zh.wikipedia.org/wiki/%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F" target="_blank" rel="noopener noreferrer">【维基】字节顺序标记</a></li></ul><blockquote><p>BOM：byte order mark，定义字节顺序，因为网络传输中分为两种，大头和小头。uft-8不需要bom表明字节顺序，但可以用BOM来表示编码方式，windows就是采用bom来标记文本文件的编码方式的。</p><p>bom是为utf-16和utf-32准备的，用于标记字节顺序。微软在utf-8中使用bom是因为这样可以把UTF-8和ASCII等编码区分开来，但这样的文件在windows之外的操作系统里会带来问题。</p><p><mark>不含bom的UTF-8才是标准形式</mark>。「UTF-8」和「带 BOM 的 UTF-8」的区别就是有没有 BOM。即</p></blockquote><p>wiki定义</p><blockquote><p><strong>字节顺序标记</strong>（英语：byte-order mark，<strong>BOM</strong>）是位于码点<code>U+FEFF</code>的<a href="https://zh.wikipedia.org/wiki/%E7%B5%B1%E4%B8%80%E7%A2%BC" target="_blank" rel="noopener noreferrer">统一码</a>字符的名称。当以<a href="https://zh.wikipedia.org/wiki/UTF-16" target="_blank" rel="noopener noreferrer">UTF-16</a>或<a href="https://zh.wikipedia.org/wiki/UTF-32" target="_blank" rel="noopener noreferrer">UTF-32</a>来将<a href="https://zh.wikipedia.org/wiki/UCS" target="_blank" rel="noopener noreferrer">UCS</a>/统一码字符所组成的字符串编码时，这个字符被用来标示其<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F" target="_blank" rel="noopener noreferrer">字节序</a>。它常被用来当做标示文件是以<a href="https://zh.wikipedia.org/wiki/UTF-8" target="_blank" rel="noopener noreferrer">UTF-8</a>、<a href="https://zh.wikipedia.org/wiki/UTF-16" target="_blank" rel="noopener noreferrer">UTF-16</a>或<a href="https://zh.wikipedia.org/wiki/UTF-32" target="_blank" rel="noopener noreferrer">UTF-32</a>编码的标记。</p><p>字节顺序标记通常有几种涵义[<a href="https://zh.wikipedia.org/wiki/%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F#cite_note-unicode_FAQ-1" target="_blank" rel="noopener noreferrer">1]</a>：</p><ol><li>在16位和32位的情况下，文字流的<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E9%A1%BA%E5%BA%8F" target="_blank" rel="noopener noreferrer">字节顺序</a>。</li><li>表示文字流非常有可能是<a href="https://zh.wikipedia.org/wiki/Unicode" target="_blank" rel="noopener noreferrer">Unicode</a>编码。</li><li>使用的是哪一种Unicode<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC" target="_blank" rel="noopener noreferrer">字符编码</a>。</li></ol><p>字节顺序标记的使用是选择性的。它的存在会干扰那些不希望文件开头出现非ASCII字符、但可以用其他方式处理文字流的软件对于UTF-8的使用。</p><p>使用</p><ul><li>字符U+FEFF如果出现在字节流的开头，则用来标识该字节流的字节序，是高位在前还是低位在前。</li><li>如果它出现在字节流的中间，则表达<strong>零宽度非换行空格</strong>的意义，用户看起来就是一个空格。</li><li>从Unicode3.2开始，<code>U+FEFF</code>只能出现在字节流的开头，只能用于标识字节序，就如它的名称——字节顺序标记——所表示的一样；除此以外的用法已被舍弃。取而代之的是，使用<code>U+2060</code>来表达零宽度无断空白。</li></ul><p>举例</p><p>略</p></blockquote><h4 id="文件区别、网页区别" tabindex="-1"><a class="header-anchor" href="#文件区别、网页区别"><span>文件区别、网页区别</span></a></h4><ul><li>文件区别：看文件开头有没有 U+FEFF</li><li>网页区别：UTF-8 的网页代码不应使用 BOM，否则常常会出错。这是一个小例子： 为什么这个网页代码 <code>&lt;head&gt;</code> 内的信息会被浏览器理解为在 <code>&lt;body&gt;</code> 内？</li></ul><h4 id="什么时候要bom" tabindex="-1"><a class="header-anchor" href="#什么时候要bom"><span>什么时候要BOM？</span></a></h4><h4 id="应用1-qt中文设置" tabindex="-1"><a class="header-anchor" href="#应用1-qt中文设置"><span>应用1：Qt中文设置</span></a></h4><p>另外，在代码编辑页面右键，最下面会有个选项 “Delete UTF-8 BOM on Save”</p><h4 id="应用2-notepad编辑代码导致的乱码" tabindex="-1"><a class="header-anchor" href="#应用2-notepad编辑代码导致的乱码"><span>应用2：Notepad编辑代码导致的乱码</span></a></h4><h4 id="应用3-autohotkey输出中文字符串乱码" tabindex="-1"><a class="header-anchor" href="#应用3-autohotkey输出中文字符串乱码"><span>应用3：AutoHotKey输出中文字符串乱码</span></a></h4><p>参考：https://zhuanlan.zhihu.com/p/472008013</p><p>将文件另存为编码为 “带bom的UTF-8&quot; 文件即可</p><h2 id="改windows系统编码为utf8" tabindex="-1"><a class="header-anchor" href="#改windows系统编码为utf8"><span>改Windows系统编码为utf8</span></a></h2><h3 id="好处与坏处" tabindex="-1"><a class="header-anchor" href="#好处与坏处"><span>好处与坏处</span></a></h3><ul><li>好处 <ul><li>1.解决由utf8引起的cmd，powershell等乱码问题</li><li>2.Visual Studio 新建文件则默认为utf8</li><li>3.其他</li></ul></li><li>可能的坏处 <ul><li>上古版本的第三方应用软件可能会出现乱码</li></ul></li><li>设置声明 <ul><li>由于此设置，微软官方特别说明为【<strong>beta版</strong>】（截至时间<s>20181003</s>，20210413）</li><li>可能会引起其他未知问题，请充分考虑后再决定是否设置</li></ul></li></ul><h3 id="设置步骤" tabindex="-1"><a class="header-anchor" href="#设置步骤"><span>设置步骤</span></a></h3><ul><li>设置步骤（win10） <ul><li>小娜搜索【更改国家或地区】&gt; 语言 &gt; 右侧的 “管理语言设置” &gt; 弹出新窗口 &quot;区域&quot;</li><li>&gt; 管理 &gt; 更改系统区域设置 &gt; 勾选下面的<strong>Beta版：使用Unicode UTF-8 提供全球语言支持</strong>（上面那个区域设置不用管）</li><li>按确认后会让你重启一遍电脑，重启即可</li></ul></li></ul><h3 id="我个人设置后出现问题的程序" tabindex="-1"><a class="header-anchor" href="#我个人设置后出现问题的程序"><span>我个人设置后出现问题的程序</span></a></h3><h4 id="乱码但功能不受损的" tabindex="-1"><a class="header-anchor" href="#乱码但功能不受损的"><span>乱码但功能不受损的</span></a></h4><blockquote><h5 id="有道词典" tabindex="-1"><a class="header-anchor" href="#有道词典"><span>有道词典</span></a></h5></blockquote><p>翻译出来的中文结果中的字有几率乱码掉几个字</p><p><img src="'+r+'" alt="image-20210414132400501" loading="lazy"></p><blockquote><h5 id="易语言" tabindex="-1"><a class="header-anchor" href="#易语言"><span>易语言</span></a></h5></blockquote><p>文字显示乱码，但还能用</p><h4 id="直接进入不了程序的" tabindex="-1"><a class="header-anchor" href="#直接进入不了程序的"><span>直接进入不了程序的</span></a></h4><blockquote><h5 id="rolan-v1旧版-新版不受影响" tabindex="-1"><a class="header-anchor" href="#rolan-v1旧版-新版不受影响"><span>Rolan（v1旧版，新版不受影响）</span></a></h5></blockquote><p>直接打不开。黄色警告：<code>Run-time error &#39;383&#39;: &#39;Text&#39; property is read-only</code></p><p>题外话：</p><p>由于不能用了，于是我去找更新，才发现都出到第三版了（虽然还在Beta），而我之前还在用第一版。新版可以正常使用没有错误</p><p>不过吧，官网已经不提供第一版的下载了，第2版其实也没好用到多少，主要是免费版可以建的分类是有限的，只有8个，而初版能分无限个</p><p>而且第2版的UI宽很多，我个人不太喜欢</p><p>第二版收费，49/年</p><p>然后我就去找替代品了：CLaunch，除了难上手以外功能很强，而且高度面向开发人员看原理</p><blockquote><h5 id="图吧工具箱" tabindex="-1"><a class="header-anchor" href="#图吧工具箱"><span>图吧工具箱</span></a></h5></blockquote><p>直接打不开</p><blockquote><h5 id="小栗子框架" tabindex="-1"><a class="header-anchor" href="#小栗子框架"><span>小栗子框架</span></a></h5></blockquote><p>直接打不开</p><blockquote><h5 id="autodesk-cad报错" tabindex="-1"><a class="header-anchor" href="#autodesk-cad报错"><span>Autodesk CAD报错</span></a></h5></blockquote><p>依次报错：</p><blockquote><p>【vl.crx ARX 命令中发生异常】 Unhandled Exception e06d7363(e06d7363h) at address a245a839h</p></blockquote><blockquote><p>【AutoCAD】 此版本的AutoCAD安装不正确，有些功能可能无法正确运行。请立即重新安装AutoCAD以确保所有功能均可正常使用是否仍要继续?</p></blockquote><p>然后自动关闭软件</p>',93)]))}const u=i(o,[["render",p],["__file","02. 字符编码的程序兼容.html.vue"]]),g=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Type/Doc/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E8%AF%A6%E8%A7%A3/02.%20%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%85%BC%E5%AE%B9.html","title":"字符编码详解","lang":"zh-CN","frontmatter":{"description":"字符编码详解 目录 字符编码的程序兼容 乱码问题 可能是语言兼容出问题、也有可能是程序兼容出问题 乱码类型与产生原因 编译器和系统的乱码原因 image-20210422005157353 软件乱码 锟斤拷与数组越界 microsoft编译器下c/c++程序可以正常输出汉字但数组越界时却是锟斤拷 手持两把锟斤拷 口中疾呼烫烫烫 脚踏千朵屯屯屯 笑看万物...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Type/Doc/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E8%AF%A6%E8%A7%A3/02.%20%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%85%BC%E5%AE%B9.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"字符编码详解"}],["meta",{"property":"og:description","content":"字符编码详解 目录 字符编码的程序兼容 乱码问题 可能是语言兼容出问题、也有可能是程序兼容出问题 乱码类型与产生原因 编译器和系统的乱码原因 image-20210422005157353 软件乱码 锟斤拷与数组越界 microsoft编译器下c/c++程序可以正常输出汉字但数组越界时却是锟斤拷 手持两把锟斤拷 口中疾呼烫烫烫 脚踏千朵屯屯屯 笑看万物..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"字符编码详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"字符编码详解","slug":"字符编码详解","link":"#字符编码详解","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"字符编码的程序兼容","slug":"字符编码的程序兼容","link":"#字符编码的程序兼容","children":[{"level":2,"title":"乱码问题","slug":"乱码问题","link":"#乱码问题","children":[{"level":3,"title":"乱码类型与产生原因","slug":"乱码类型与产生原因","link":"#乱码类型与产生原因","children":[]},{"level":3,"title":"编译器和系统的乱码原因","slug":"编译器和系统的乱码原因","link":"#编译器和系统的乱码原因","children":[]},{"level":3,"title":"软件乱码","slug":"软件乱码","link":"#软件乱码","children":[]},{"level":3,"title":"锟斤拷与数组越界","slug":"锟斤拷与数组越界","link":"#锟斤拷与数组越界","children":[]},{"level":3,"title":"手持两把锟斤拷 口中疾呼烫烫烫 脚踏千朵屯屯屯 笑看万物锘锘锘","slug":"手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘","link":"#手持两把锟斤拷-口中疾呼烫烫烫-脚踏千朵屯屯屯-笑看万物锘锘锘","children":[]},{"level":3,"title":"utf8的带Bom与不带Bom","slug":"utf8的带bom与不带bom","link":"#utf8的带bom与不带bom","children":[]}]},{"level":2,"title":"乱码问题——不可逆乱码（GBK转UTF8）","slug":"乱码问题——不可逆乱码-gbk转utf8","link":"#乱码问题——不可逆乱码-gbk转utf8","children":[{"level":3,"title":"不可逆乱码问题","slug":"不可逆乱码问题","link":"#不可逆乱码问题","children":[]},{"level":3,"title":"编码显示与编码转换","slug":"编码显示与编码转换","link":"#编码显示与编码转换","children":[]},{"level":3,"title":"GBK转UTF-8乱码，为什么不可逆","slug":"gbk转utf-8乱码-为什么不可逆","link":"#gbk转utf-8乱码-为什么不可逆","children":[]}]},{"level":2,"title":"编码之——系统与程序","slug":"编码之——系统与程序","link":"#编码之——系统与程序","children":[{"level":3,"title":"文本行结尾——回车字符与换行符","slug":"文本行结尾——回车字符与换行符","link":"#文本行结尾——回车字符与换行符","children":[]},{"level":3,"title":"程序读文件时对换行符的处理","slug":"程序读文件时对换行符的处理","link":"#程序读文件时对换行符的处理","children":[]},{"level":3,"title":"C++强制使用指定编码输出（Qt）","slug":"c-强制使用指定编码输出-qt","link":"#c-强制使用指定编码输出-qt","children":[]},{"level":3,"title":"修改系统编码后的编译结果（Qt）","slug":"修改系统编码后的编译结果-qt","link":"#修改系统编码后的编译结果-qt","children":[]},{"level":3,"title":"数据库管理对编码的选用","slug":"数据库管理对编码的选用","link":"#数据库管理对编码的选用","children":[]},{"level":3,"title":"utf8 带 BOM","slug":"utf8-带-bom","link":"#utf8-带-bom","children":[{"level":4,"title":"简概","slug":"简概","link":"#简概","children":[]},{"level":4,"title":"文件区别、网页区别","slug":"文件区别、网页区别","link":"#文件区别、网页区别","children":[]},{"level":4,"title":"什么时候要BOM？","slug":"什么时候要bom","link":"#什么时候要bom","children":[]},{"level":4,"title":"应用1：Qt中文设置","slug":"应用1-qt中文设置","link":"#应用1-qt中文设置","children":[]},{"level":4,"title":"应用2：Notepad编辑代码导致的乱码","slug":"应用2-notepad编辑代码导致的乱码","link":"#应用2-notepad编辑代码导致的乱码","children":[]},{"level":4,"title":"应用3：AutoHotKey输出中文字符串乱码","slug":"应用3-autohotkey输出中文字符串乱码","link":"#应用3-autohotkey输出中文字符串乱码","children":[]}]}]},{"level":2,"title":"改Windows系统编码为utf8","slug":"改windows系统编码为utf8","link":"#改windows系统编码为utf8","children":[{"level":3,"title":"好处与坏处","slug":"好处与坏处","link":"#好处与坏处","children":[]},{"level":3,"title":"设置步骤","slug":"设置步骤","link":"#设置步骤","children":[]},{"level":3,"title":"我个人设置后出现问题的程序","slug":"我个人设置后出现问题的程序","link":"#我个人设置后出现问题的程序","children":[{"level":4,"title":"乱码但功能不受损的","slug":"乱码但功能不受损的","link":"#乱码但功能不受损的","children":[]},{"level":4,"title":"直接进入不了程序的","slug":"直接进入不了程序的","link":"#直接进入不了程序的","children":[]}]}]}]}],"git":{},"readingTime":{"minutes":9.87,"words":2961},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Type/Doc/字符编码详解/02. 字符编码的程序兼容.md","excerpt":"\\n<h1>目录</h1>\\n<h1>字符编码的程序兼容</h1>\\n<h2>乱码问题</h2>\\n<p>可能是语言兼容出问题、也有可能是程序兼容出问题</p>\\n<h3>乱码类型与产生原因</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>名称</th>\\n<th>示例</th>\\n<th>特点</th>\\n<th>产生原因</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>古文码</td>\\n<td>浣犲ソ涓栫晫<br>（utf你好世界）</td>\\n<td>大都为不认识的古文，并加杂日韩文</td>\\n<td>以GBK方式读取UTF-8编码的中文</td>\\n</tr>\\n<tr>\\n<td>口字码</td>\\n<td><br>ģºÊÀ½（md里打不出来）</td>\\n<td>大部分字符为小方块</td>\\n<td>以UTF-8的方式读取GBK编码的中文</td>\\n</tr>\\n<tr>\\n<td>符号码</td>\\n<td>ä½ å¥½ä¸ç<br>（utf你好世界）</td>\\n<td>大部分字符为各种符号</td>\\n<td>以ISO8859-1方式读取UTF-8编码的中文</td>\\n</tr>\\n<tr>\\n<td>拼音码</td>\\n<td>ÄãºÃÊÀ½ç<br>（gbk你好世界）</td>\\n<td>大部分字符为头顶带有各种类似声调符号的字母</td>\\n<td>以ISO8859-1方式读取GBK编码的中文</td>\\n</tr>\\n<tr>\\n<td>问句码</td>\\n<td>由月要好好学习天天向??</td>\\n<td>字符串长度为偶数时正确，长度为奇数时最后的字符变为问号</td>\\n<td>以GBK方式读取UTF-8编码的中文，<br>然后又用UTF-8的格式再次读取</td>\\n</tr>\\n<tr>\\n<td>锟斤拷</td>\\n<td>锟斤拷锟斤拷要锟矫猴拷<br>学习锟斤拷锟斤拷锟斤拷</td>\\n<td>全中文字符，且大部分字符为\\"银斤拷\\"这几个字符</td>\\n<td>以UTF-8方式读取GBK编码的中文，<br>然后又用GBK的格式再次读取</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Type/Doc/字符编码详解/02. 字符编码的程序兼容.md","value":{"title":"02. 字符编码的程序兼容","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Type/Doc/字符编码详解/02. 字符编码的程序兼容.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{u as comp,g as data};
