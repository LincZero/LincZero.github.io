import{_ as p,c as l,e as o,a as s,d as t,b as e,o as r,r as i}from"./app-QbMAvOD7.js";const d={},u={href:"https://docs.python.org/3/library/getopt.html#module-getopt",target:"_blank",rel:"noopener noreferrer"},c={href:"https://docs.python.org/3/library/getopt.html#module-getopt",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.python.org/3/library/argparse.html#module-argparse",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.python.org/3/library/sys.html#module-sys",target:"_blank",rel:"noopener noreferrer"};function h(m,n){const a=i("ExternalLinkIcon");return r(),l("div",null,[n[18]||(n[18]=o(`<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="sys-命令行参数" tabindex="-1"><a class="header-anchor" href="#sys-命令行参数"><span>sys 命令行参数</span></a></h1><h2 id="命令行参数" tabindex="-1"><a class="header-anchor" href="#命令行参数"><span>命令行参数</span></a></h2><p>参考文档：https://docs.python.org/3/library/sys.html#module-sys</p><p>通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量</p><p>例如在命令行中执行 <code>python demo.py one two three</code> 后可以得到以下输出结果：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> sys
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;demo.py&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)),s("p",null,[s("a",u,[n[0]||(n[0]=t("getopt")),e(a)]),n[3]||(n[3]=t(" 模块使用 Unix ")),s("a",c,[n[1]||(n[1]=t("getopt()")),e(a)]),n[4]||(n[4]=t(" 函数处理 ")),n[5]||(n[5]=s("em",null,"sys.argv",-1)),n[6]||(n[6]=t("。更多的复杂命令行处理由 ")),s("a",y,[n[2]||(n[2]=t("argparse")),e(a)]),n[7]||(n[7]=t(" 模块提供"))]),n[19]||(n[19]=s("h2",{id:"错误输出重定向和程序终止",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#错误输出重定向和程序终止"},[s("span",null,"错误输出重定向和程序终止")])],-1)),s("p",null,[s("a",g,[n[8]||(n[8]=t("sys")),e(a)]),n[9]||(n[9]=t(" 还有 ")),n[10]||(n[10]=s("em",null,"stdin",-1)),n[11]||(n[11]=t("， ")),n[12]||(n[12]=s("em",null,"stdout",-1)),n[13]||(n[13]=t(" 和 ")),n[14]||(n[14]=s("em",null,"stderr",-1)),n[15]||(n[15]=t(" 属性，即使在 ")),n[16]||(n[16]=s("em",null,"stdout",-1)),n[17]||(n[17]=t(" 被重定向时，后者也可以用于显示警告和错误信息："))]),n[20]||(n[20]=o(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;Warning, log file not found starting a new one\\n&#39;</span><span class="token punctuation">)</span>
Warning<span class="token punctuation">,</span> log <span class="token builtin">file</span> <span class="token keyword">not</span> found starting a new one
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>大多脚本的直接终止都使用 <code>sys.exit()</code></p><p>即类似于C++的修改错误默认行为</p><h2 id="【标准】sys模块" tabindex="-1"><a class="header-anchor" href="#【标准】sys模块"><span>【标准】sys模块</span></a></h2><ul><li>官网模块文档：http://docs.python.org/library/sys</li><li>作用：能访问到由Python解释器使用或维护的对象，其中包括： <ul><li>标志、版本、整型数最大尺寸、可用的模块、hook路径、标准错误/输入/输出的位置、调用解释器的命令行参数</li></ul></li><li>demo：<code>$ python vuln-scanner.py vuln-banners.txt</code>调用python时：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># python vuln-scanner.py vuln-banners.txt调用时</span>
<span class="token keyword">import</span> sys
<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>  <span class="token comment"># python启动的参数</span>
	filename <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 第二个启动的参数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const v=p(d,[["render",h],["__file","sys 命令行参数.html.vue"]]),b=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/%E6%A0%87%E5%87%86%E5%BA%93/sys%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 sys 命令行参数 命令行参数 参考文档：https://docs.python.org/3/library/sys.html#module-sys 通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量 例如在命令行中执行 python demo.py one two three 后可以得到...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/%E6%A0%87%E5%87%86%E5%BA%93/sys%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 sys 命令行参数 命令行参数 参考文档：https://docs.python.org/3/library/sys.html#module-sys 通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量 例如在命令行中执行 python demo.py one two three 后可以得到..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"sys 命令行参数","slug":"sys-命令行参数","link":"#sys-命令行参数","children":[{"level":2,"title":"命令行参数","slug":"命令行参数","link":"#命令行参数","children":[]},{"level":2,"title":"错误输出重定向和程序终止","slug":"错误输出重定向和程序终止","link":"#错误输出重定向和程序终止","children":[]},{"level":2,"title":"【标准】sys模块","slug":"【标准】sys模块","link":"#【标准】sys模块","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.17,"words":352},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/07. 模块库/标准库/sys 命令行参数.md","excerpt":"\\n<h1>目录</h1>\\n<h1>sys 命令行参数</h1>\\n<h2>命令行参数</h2>\\n<p>参考文档：https://docs.python.org/3/library/sys.html#module-sys</p>\\n<p>通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量</p>\\n<p>例如在命令行中执行 <code>python demo.py one two three</code> 后可以得到以下输出结果：</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token keyword\\">import</span> sys\\n<span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>sys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'demo.py'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'one'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'two'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'three'</span><span class=\\"token punctuation\\">]</span>\\n</code></pre></div>","autoDesc":true}`);export{v as comp,b as data};
