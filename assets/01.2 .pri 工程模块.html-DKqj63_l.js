import{_ as a,c as p,e as r,a as t,d as l,b as i,o,r as s}from"./app-DvjNtUMi.js";const c={},d={href:"https://blog.csdn.net/u011450537/article/details/42707149",target:"_blank",rel:"noopener noreferrer"},u={href:"https://blog.csdn.net/dbzhang800/article/details/6348432",target:"_blank",rel:"noopener noreferrer"};function h(m,e){const n=s("ExternalLinkIcon");return o(),p("div",null,[e[2]||(e[2]=r('<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>Qt</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="pri-工程模块-qt-project-include-file" tabindex="-1"><a class="header-anchor" href="#pri-工程模块-qt-project-include-file"><span>.pri 工程模块（Qt Project Include file）</span></a></h1><p>参考</p>',4)),t("ul",null,[t("li",null,[t("a",d,[e[0]||(e[0]=l("【CSDN】Qt中 .pro 文件和 .pri 文件介绍")),i(n)])]),t("li",null,[t("a",u,[e[1]||(e[1]=l("【CSDN】浅谈 qmake 之 pro、pri、prf、prl文件")),i(n)])])]),e[3]||(e[3]=r(`<h2 id="简概" tabindex="-1"><a class="header-anchor" href="#简概"><span>简概</span></a></h2><p>pri作用</p><ul><li>这有什么用呢？对我们这个例子来说，确实没什么用，反而多了一个文件，更麻烦了。</li><li>可是，如果一个大点的项目，含有多个*.pro文件呢，这些pro需要有些共同的设置或需要的文件，这时就很有必要了</li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><ul><li><p>(1) 创建文件 右键 &gt; 添加新文件（Add New）&gt; General &gt; Text File（Empty File）&gt; 修改名称（Rename）将后缀修改为<code>.pri</code></p></li><li><p>(2) 配置.pro</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code># 这行是自动生成的
<span class="token constant">DISTFILES</span> <span class="token operator">+=</span> PluginManager<span class="token punctuation">.</span>pri
# 这行需要手动添加
<span class="token function">include</span><span class="token punctuation">(</span>PluginManager<span class="token punctuation">.</span>pri<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>(3) 最后运行一遍即可在项目树中自动生成一个pri文件夹 （注意：文件树中没有pri文件夹，只存在于工程显示当中）</p></li></ul>`,5))])}const E=a(c,[["render",h],["__file","01.2 .pri 工程模块.html.vue"]]),f=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/04.%20%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/%E5%88%9B%E5%BB%BA%E6%80%A7%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/01.2%20.pri%20%E5%B7%A5%E7%A8%8B%E6%A8%A1%E5%9D%97.html","title":"Qt","lang":"zh-CN","frontmatter":{"description":"Qt 目录 .pri 工程模块（Qt Project Include file） 参考 【CSDN】Qt中 .pro 文件和 .pri 文件介绍 【CSDN】浅谈 qmake 之 pro、pri、prf、prl文件 简概 pri作用 这有什么用呢？对我们这个例子来说，确实没什么用，反而多了一个文件，更麻烦了。 可是，如果一个大点的项目，含有多个*.pr...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/04.%20%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/%E5%88%9B%E5%BB%BA%E6%80%A7%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/01.2%20.pri%20%E5%B7%A5%E7%A8%8B%E6%A8%A1%E5%9D%97.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Qt"}],["meta",{"property":"og:description","content":"Qt 目录 .pri 工程模块（Qt Project Include file） 参考 【CSDN】Qt中 .pro 文件和 .pri 文件介绍 【CSDN】浅谈 qmake 之 pro、pri、prf、prl文件 简概 pri作用 这有什么用呢？对我们这个例子来说，确实没什么用，反而多了一个文件，更麻烦了。 可是，如果一个大点的项目，含有多个*.pr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Qt","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":".pri 工程模块（Qt Project Include file）","slug":"pri-工程模块-qt-project-include-file","link":"#pri-工程模块-qt-project-include-file","children":[{"level":2,"title":"简概","slug":"简概","link":"#简概","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.76,"words":228},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/04. 辅助文件/创建性辅助文件/01.2 .pri 工程模块.md","excerpt":"\\n<h1>目录</h1>\\n<h1>.pri 工程模块（Qt Project Include file）</h1>\\n<p>参考</p>\\n<ul>\\n<li><a href=\\"https://blog.csdn.net/u011450537/article/details/42707149\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【CSDN】Qt中 .pro 文件和 .pri 文件介绍</a></li>\\n<li><a href=\\"https://blog.csdn.net/dbzhang800/article/details/6348432\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【CSDN】浅谈 qmake 之 pro、pri、prf、prl文件</a></li>\\n</ul>","autoDesc":true}');export{E as comp,f as data};
