import{_ as t,c as r,a as e,d as a,e as p,b as l,o as i,r as o}from"./app-CcItmy2w.js";const c={},d={href:"https://blog.csdn.net/lu_embedded/article/details/124952413",target:"_blank",rel:"noopener noreferrer"},u={href:"https://so.csdn.net/so/search?q=Pcap&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},m={href:"https://getiot.tech/awesome-c/libpcap.html",target:"_blank",rel:"noopener noreferrer"},b={href:"http://www.tcpdump.org/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.wireshark.org",target:"_blank",rel:"noopener noreferrer"},h={href:"http://www.winpcap.org/",target:"_blank",rel:"noopener noreferrer"},v={href:"http://www.npcap.org/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/the-tcpdump-group/libpcap",target:"_blank",rel:"noopener noreferrer"};function B(P,n){const s=o("ExternalLinkIcon");return i(),r("div",null,[n[12]||(n[12]=e("h1",{id:"pcap",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pcap"},[e("span",null,"Pcap")])],-1)),e("p",null,[n[1]||(n[1]=a("参考：")),e("a",d,[n[0]||(n[0]=a("Pcap 数据包捕获格式详解")),p(s)]),n[2]||(n[2]=a(" (禁止转载)"))]),n[13]||(n[13]=e("h2",{id:"介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#介绍"},[e("span",null,"介绍")])],-1)),e("p",null,[e("a",u,[n[3]||(n[3]=a("Pcap")),p(s)]),n[4]||(n[4]=a(" 是 Packet Capture 的英文缩写，是一种行业标准的网络数据包捕获格式。"))]),n[14]||(n[14]=l(`<p>如果你是网络开发人员，那么通常会使用 Wireshark、Tcpdump 或 WinDump 等网络分析器捕获 TCP/IP 数据包，而抓包后存盘的文件格式就是 .pcap 文件。</p><h2 id="文件格式" tabindex="-1"><a class="header-anchor" href="#文件格式"><span>文件格式</span></a></h2><h3 id="一般格式" tabindex="-1"><a class="header-anchor" href="#一般格式"><span>一般格式</span></a></h3><p>Pcap 文件格式是一种二进制格式，支持纳秒级精度的时间戳。虽然这种格式在不同的实现中有所不同，但是所有的 pcap 文件都具有如下图所示的一般结构。</p><table><thead><tr><th style="text-align:center;">Global Header</th></tr></thead><tbody><tr><td style="text-align:center;">Packet Header<br>Packet Data</td></tr><tr><td style="text-align:center;">Packet Header<br>Packet Data</td></tr><tr><td style="text-align:center;">……</td></tr></tbody></table><h3 id="全局报头-global-header" tabindex="-1"><a class="header-anchor" href="#全局报头-global-header"><span>全局报头（Global Header）</span></a></h3><p>全局报头（Global Header）包含魔数（Magic number）、GMT 偏移量、时间戳精度、捕获的数据包的最大长度，以及数据链路的类型。内部具体格式和区域划分如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>       <span class="token number">0</span>               <span class="token number">1</span>               <span class="token number">2</span>               <span class="token number">3</span>
       <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    <span class="token number">0</span> <span class="token operator">|</span>                          Magic Number                         <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    <span class="token number">4</span> <span class="token operator">|</span>          Major Version        <span class="token operator">|</span>         Minor Version         <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    <span class="token number">8</span> <span class="token operator">|</span>                           Reserved1                           <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   <span class="token number">12</span> <span class="token operator">|</span>                           Reserved2                           <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   <span class="token number">16</span> <span class="token operator">|</span>                            SnapLen                            <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   <span class="token number">20</span> <span class="token operator">|</span> FCS <span class="token operator">|</span>f<span class="token operator">|</span>                   LinkType                            <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pcap 文件全局报头的长度为 24 字节，各区域/字段说明如下：</p><ol><li><p>[0-3, 4Byte]，魔数（Magic Number）</p><ul><li><ul><li>一个无符号幻数，其值为十六进制数 0xA1B2C3D4 或十六进制数 0xA1B23C4D。</li><li>如果值为 0xA1B2C3D4，则 Packet Records 中的时间戳以秒和微秒为单位；</li><li>如果是 0xA1B23C4D，则数据包记录中的时间戳以秒和纳秒为单位。</li><li>另外，这个幻数也可用于区分保存在小端机器上的部分和保存在大端机器上的部分，并自动识别 pcap 文件。</li></ul></li></ul></li><li><p>[4-7, 4Byte]，版本号</p><ul><li>Major Version（16 位）一个无符号值，给出 pcap 格式的当前主要版本的编号。</li><li>Minor Version（16 位）一个无符号值，给出 pcap 格式的当前次要版本的编号。</li></ul></li><li><p>[8-11, 4Byte]，保留1</p><ul><li>未使用的保留字段，pcap 文件写入器应填充 0，pcap 文件读取器必须忽略。这个值被一些较早的实现记录为“gmt to local correction”，因此一些较旧的 pcap 文件编写器在此字段中存储了非零值。</li></ul></li><li><p>[12-15, 4Byte]，保留2</p><ul><li>未使用的保留字段，pcap 文件写入器应填充 0，pcap 文件读取器必须忽略。这个值被一些较旧的实现记录为“accuracy of timestamps”，因此一些较旧的 pcap 文件编写器在此字段中存储了非零值。</li></ul></li><li><p>[16-19, 4Byte]，最大长度，SnapLen（32 位）</p><ul><li>一个无符号值，表示从每个数据包中捕获的最大字节数。每个数据包中超过此值的部分将不会存储在文件中。</li><li>注意：该值不得为零；如果未指定限制，则该值应为大于或等于文件中最大数据包长度的数字。</li></ul></li><li><p>[20-23, 4Byte]</p><ul><li><p>LinkType（28 位）</p><ul><li>一个无符号值，在全局报头最后 4 字节的低 28 位中定义文件中数据包的链路层类型。</li></ul></li><li><p>Frame Cyclic Sequence present（4 位）</p><ul><li>如果设置了“f”位，则 FCS 位提供附加到每个数据包的 FCS 字节数，有效值介于 0 和 7 之间。</li></ul></li></ul></li></ol><h3 id="数据记录-packet-record" tabindex="-1"><a class="header-anchor" href="#数据记录-packet-record"><span>数据记录（Packet Record）</span></a></h3><p>在全局报头后面，跟着 0 条或多条捕获的数据包数据记录（Packet Record）。</p><p>数据记录</p><p>数据包记录（Packet Record）是存储来自网络的数据包的标准容器，包括 Packet Header 和 Packet Data 两部分。其中，Packet Header 长度固定为 16 字节，Packet Data 则是可变长度的负荷数据。</p><p>Packet Record 内部具体格式和区域划分如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>       <span class="token number">0</span>               <span class="token number">1</span>               <span class="token number">2</span>               <span class="token number">3</span>
       <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    <span class="token number">0</span> <span class="token operator">|</span>                      Timestamp <span class="token punctuation">(</span>Seconds<span class="token punctuation">)</span>                      <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    <span class="token number">4</span> <span class="token operator">|</span>            Timestamp <span class="token punctuation">(</span>Microseconds or nanoseconds<span class="token punctuation">)</span>            <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    <span class="token number">8</span> <span class="token operator">|</span>                    Captured Packet Length                     <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   <span class="token number">12</span> <span class="token operator">|</span>                    Original Packet Length                     <span class="token operator">|</span>
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   <span class="token number">16</span> /                                                               /
      /                          Packet Data                          /
      /                        variable length                        /
      /                                                               /
      +---------------------------------------------------------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据记录各区域/字段说明如下：</p><ol><li><p>[0-7, 8Byte]，时间戳</p><ul><li><p>Timestamp（秒）和 Timestamp（微秒或纳秒）分别占4Byte</p></li><li><p>包括整数（秒数）和小数（微秒或纳秒）部分。秒值是一个 32 位无符号整数，表示自 1970 年 1 月 1 日 00:00:00 UTC 以来经过的秒数，微秒或纳秒值表示自那以后经过的微秒或纳秒数秒。值得一提的是，该值是表示微秒还是纳秒，由文件头中的幻数指定。</p></li></ul></li><li><p>[8-11, 4Byte]，抓包长度</p><ul><li>一个无符号值，表示从数据包中捕获的字节数（即数据包数据字段的长度）。它将是原始数据包长度（Original Packet Length）和接口的快照长度（上图中的 SnapLen 定义）中的最小值。</li></ul></li><li><p>[12-15, 4Byte]，原始包长</p><ul><li>一个无符号值，表示数据包在网络上传输时的实际长度。如果数据包已被捕获过程截断，则它可能与捕获的数据包长度不同。</li></ul></li><li><p>[NByte]，Packet Data</p><ul><li>来自网络的数据，包括链路层标头。该字段的实际长度为 Captured Packet Length。链路层头部的格式取决于文件头中指定的 LinkType 字段。</li></ul></li></ol><h3 id="pcap-库" tabindex="-1"><a class="header-anchor" href="#pcap-库"><span>pcap 库</span></a></h3><p>libpcap 是用 C 语言编写的 pcap 库，在类 Unix 系统中透过 libpcap 库来实现 pcap。</p><p>在 Microsoft Windows 上则是透过 Npcap 库来实现，之前还可以透过 WinPcap 库来实现，但 WinPcap 库已不再维护。</p><p>我们自己设计的监控软件可以使用 libpcap 来捕获在计算机网络上传输的网络数据包。</p>`,22)),e("p",null,[n[6]||(n[6]=a("更多 >> ")),e("a",m,[n[5]||(n[5]=a("libpcap 使用教程")),p(s)])]),n[15]||(n[15]=e("h3",{id:"相关链接",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#相关链接"},[e("span",null,"相关链接")])],-1)),e("ul",null,[e("li",null,[e("a",b,[n[7]||(n[7]=a("tcpdump 官方网站（基于 libpcap）")),p(s)])]),e("li",null,[e("a",k,[n[8]||(n[8]=a("Wireshark 官方网站")),p(s)])]),e("li",null,[e("a",h,[n[9]||(n[9]=a("WinPcap 官方网站")),p(s)])]),e("li",null,[e("a",v,[n[10]||(n[10]=a("Npcap 官方网站")),p(s)])]),e("li",null,[e("a",g,[n[11]||(n[11]=a("libpcap 代码仓库")),p(s)])])]),n[16]||(n[16]=l(`<h2 id="wireshark-pcap" tabindex="-1"><a class="header-anchor" href="#wireshark-pcap"><span>wireshark &amp; Pcap</span></a></h2><p>可以抓，也可以分析</p><h2 id="tcpdump-pcap" tabindex="-1"><a class="header-anchor" href="#tcpdump-pcap"><span>tcpdump &amp; Pcap</span></a></h2><p>Linux使用tcpdump快速抓Pcap也很简单</p><p>方法：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ tcpdump <span class="token parameter variable">-i</span> eth0 <span class="token parameter variable">-w</span> output.pcap
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用选项：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ tcpdump udp <span class="token comment"># 只抓udp</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8))])}const f=t(c,[["render",B],["__file","Pcap.html.vue"]]),C=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/Capture/%E6%8A%93%E5%8C%85%E6%A0%BC%E5%BC%8F/Pcap.html","title":"Pcap","lang":"zh-CN","frontmatter":{"Permission":"Reprint prohibited","description":"Pcap 参考：Pcap 数据包捕获格式详解 (禁止转载) 介绍 Pcap 是 Packet Capture 的英文缩写，是一种行业标准的网络数据包捕获格式。 如果你是网络开发人员，那么通常会使用 Wireshark、Tcpdump 或 WinDump 等网络分析器捕获 TCP/IP 数据包，而抓包后存盘的文件格式就是 .pcap 文件。 文件格式 一...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/Capture/%E6%8A%93%E5%8C%85%E6%A0%BC%E5%BC%8F/Pcap.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Pcap"}],["meta",{"property":"og:description","content":"Pcap 参考：Pcap 数据包捕获格式详解 (禁止转载) 介绍 Pcap 是 Packet Capture 的英文缩写，是一种行业标准的网络数据包捕获格式。 如果你是网络开发人员，那么通常会使用 Wireshark、Tcpdump 或 WinDump 等网络分析器捕获 TCP/IP 数据包，而抓包后存盘的文件格式就是 .pcap 文件。 文件格式 一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pcap\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Pcap","slug":"pcap","link":"#pcap","children":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"文件格式","slug":"文件格式","link":"#文件格式","children":[{"level":3,"title":"一般格式","slug":"一般格式","link":"#一般格式","children":[]},{"level":3,"title":"全局报头（Global Header）","slug":"全局报头-global-header","link":"#全局报头-global-header","children":[]},{"level":3,"title":"数据记录（Packet Record）","slug":"数据记录-packet-record","link":"#数据记录-packet-record","children":[]},{"level":3,"title":"pcap 库","slug":"pcap-库","link":"#pcap-库","children":[]},{"level":3,"title":"相关链接","slug":"相关链接","link":"#相关链接","children":[]}]},{"level":2,"title":"wireshark & Pcap","slug":"wireshark-pcap","link":"#wireshark-pcap","children":[]},{"level":2,"title":"tcpdump & Pcap","slug":"tcpdump-pcap","link":"#tcpdump-pcap","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.03,"words":1508},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/抓包格式/Pcap.md","excerpt":"\\n<p>参考：<a href=\\"https://blog.csdn.net/lu_embedded/article/details/124952413\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Pcap 数据包捕获格式详解</a> (禁止转载)</p>\\n<h2>介绍</h2>\\n<p><a href=\\"https://so.csdn.net/so/search?q=Pcap&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Pcap</a> 是 Packet Capture 的英文缩写，是一种行业标准的网络数据包捕获格式。</p>","autoDesc":true}');export{f as comp,C as data};
