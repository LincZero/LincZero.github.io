import{_ as a,c as l,e as n,a as s,d as i,o as d,r as c}from"./app-C8sq8h30.js";const o={};function r(p,e){const t=c("Mermaid");return d(),l("div",null,[e[3]||(e[3]=n(`<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>Qt</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="qss-样式文件-样式" tabindex="-1"><a class="header-anchor" href="#qss-样式文件-样式"><span>.qss 样式文件 &amp; 样式</span></a></h1><h2 id="qss代码" tabindex="-1"><a class="header-anchor" href="#qss代码"><span>qss代码</span></a></h2><ul><li>qss与css <ul><li>qss文件：全称 <code>Qt Style Sheets</code>，简写 <code>qss</code>，翻译 <code>qt样式表</code></li><li>类比css：全称<code>Cascading Style Sheets</code>，简写<code>css</code>，翻译<code>层叠样式表</code></li><li>qss是一种从HTML CSS（层叠样式表）获得灵感的机制，两者相似又略有不同</li></ul></li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="片段qss" tabindex="-1"><a class="header-anchor" href="#片段qss"><span>片段qss</span></a></h3><ul><li><h4 id="简概" tabindex="-1"><a class="header-anchor" href="#简概"><span>简概</span></a></h4><ul><li>推荐：易于使用</li><li>与css接近，功能强大且减少学习成本</li></ul></li><li><h4 id="使用流程" tabindex="-1"><a class="header-anchor" href="#使用流程"><span>使用流程</span></a></h4><ul><li><p>可以通过<code>setStyleSheets</code>代码直接设置qss</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>QPushButton* myPushButton; 
myPushButton-&gt;setStyleSheet(&quot;* { color: blue }&quot;); 
myPushButton-&gt;setStyleSheet(&quot;color: blue&quot;); 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>设置样式</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">QLineEdit</span> <span class="token punctuation">{</span>						<span class="token comment">/*选择器*/</span>
	<span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>指定样式</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>qApp-&gt;setStyleSheet(&quot;QLineEdit{background-color:yellow;}&quot;);
/* setStyleSheet(const QString &amp;styleSheet); */
/* 可以为整个应用程序设置，也可以为单独一个控件设置 */
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><h4 id="常用属性" tabindex="-1"><a class="header-anchor" href="#常用属性"><span>常用属性</span></a></h4><ul><li><p>常用属性</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code>color
background-color
width
height
spacing	<span class="token comment">/* 字距 */</span>
<span class="token punctuation">:</span><span class="token property">hover</span>
<span class="token punctuation">:</span><span class="token property">checked</span>
<span class="token punctuation">:</span>!checked
padding
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="qss文件" tabindex="-1"><a class="header-anchor" href="#qss文件"><span>.qss文件</span></a></h3><h4 id="添加方法" tabindex="-1"><a class="header-anchor" href="#添加方法"><span>添加方法</span></a></h4><p>.qss样式文件不可用直接添加，像jpg、png等资源文件一样，需要添加到.qrc资源文件当中</p><h4 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1"><span>使用</span></a></h4><p>举例</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>/** 加载样式*/
void MainWindow::style(){
    QFile file(&quot;:/Assets/style.qss&quot;);
    file.open(QFile::ReadOnly);
    QString styleSheet = QLatin1String(file.readAll());
    qApp-&gt;setStyleSheet(styleSheet);
    file.close();
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="qss高级" tabindex="-1"><a class="header-anchor" href="#qss高级"><span>qss高级</span></a></h2><h3 id="qss中使用qrc资源" tabindex="-1"><a class="header-anchor" href="#qss中使用qrc资源"><span>qss中使用qrc资源</span></a></h3><p><code>border-image: url(:/img/check_orange.png);</code></p><h3 id="高级用法" tabindex="-1"><a class="header-anchor" href="#高级用法"><span>高级用法</span></a></h3><h4 id="多个一起设置-同css" tabindex="-1"><a class="header-anchor" href="#多个一起设置-同css"><span>多个一起设置（同CSS）</span></a></h4><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">QCheckBox, QComboBox, QLineEdit, QListView, QRadioButton, QSpinBox</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #050505<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="样式表选择器-选择器-与css略有不同" tabindex="-1"><a class="header-anchor" href="#样式表选择器-选择器-与css略有不同"><span>样式表选择器（选择器，与CSS略有不同）</span></a></h4><table><thead><tr><th>选择器</th><th>实例</th><th>可以匹配的窗口部件</th></tr></thead><tbody><tr><td>全局对象</td><td><code>*</code></td><td>任意窗口部件</td></tr><tr><td>类型</td><td><code>QDial</code></td><td>给定类的实例，包括子类</td></tr><tr><td>类</td><td><code>.QDial</code></td><td>给定类的实例，不包括子类（而不是class）</td></tr><tr><td>标识</td><td><code>QDial#ageDial</code></td><td>给定对象名称的窗口部件（而不是id）</td></tr><tr><td>Qt属性</td><td><code>QDial[y=&quot;0&quot;]</code></td><td>为某些属性赋值的窗口部件</td></tr><tr><td>子对象</td><td><code>QFrame &gt; QDial</code></td><td>给定窗口部件的 直接子窗口部件</td></tr><tr><td>子孙对象</td><td><code>QFrame QDial</code></td><td>给定窗口部件的 子孙窗口部件</td></tr></tbody></table><h4 id="伪类选择器-同css-窗口部件中一些可以访问样式表的状态" tabindex="-1"><a class="header-anchor" href="#伪类选择器-同css-窗口部件中一些可以访问样式表的状态"><span>伪类选择器（同CSS，窗口部件中一些可以访问样式表的状态）</span></a></h4><table><thead><tr><th>状态</th><th>说明</th></tr></thead><tbody><tr><td><code>:disabled</code></td><td>禁用窗口部件</td></tr><tr><td><code>:enabled</code></td><td>启用窗口部件</td></tr><tr><td><code>:focus</code></td><td>窗口部件有输入焦点</td></tr><tr><td><code>:hover</code></td><td>鼠标在窗口部件上悬停</td></tr><tr><td><code>:pressed</code></td><td>鼠标按键单击窗口部件</td></tr><tr><td><code>:checked</code></td><td>按钮已被选用</td></tr><tr><td><code>:unchecked</code></td><td>按钮未被选用</td></tr><tr><td><code>indeterminate</code></td><td>按钮被部分选中</td></tr><tr><td><code>:open</code></td><td>窗口部件位于打开或扩展状态</td></tr><tr><td><code>:closed</code></td><td>窗口部件位于关闭或销毁状态</td></tr><tr><td><code>:on</code></td><td>窗口部件的状态是 on</td></tr><tr><td><code>:off</code></td><td>窗口部件的状态是 off</td></tr></tbody></table><h4 id="自定义辅助控制器-常见的" tabindex="-1"><a class="header-anchor" href="#自定义辅助控制器-常见的"><span>自定义辅助控制器（常见的）</span></a></h4><table><thead><tr><th>辅助控制器</th><th>说明</th></tr></thead><tbody><tr><td><code>::indicator</code></td><td>复选框、单选框、可选菜单栏、可选群组框 的指示器</td></tr><tr><td><code>::menu-indicator</code></td><td>按钮 的菜单指示器</td></tr><tr><td><code>::item</code></td><td>菜单、菜单栏、状态栏项 --</td></tr><tr><td><code>::up-button</code></td><td>微调框、滚动条 的向上按钮</td></tr><tr><td><code>::down-button</code></td><td>微调框、滚动条 的向下按钮</td></tr><tr><td><code>::up-arrow</code></td><td>微调框、滚动条、标题视图 的向上箭头</td></tr><tr><td><code>::down-arrow</code></td><td>微调框、滚动条、标题视图、组合框 的向下箭头</td></tr><tr><td><code>::drop-down</code></td><td>组合框 的下拉箭头</td></tr><tr><td><code>::title</code></td><td>群组框 的标题</td></tr></tbody></table><h4 id="多种颜色定义方式-同css" tabindex="-1"><a class="header-anchor" href="#多种颜色定义方式-同css"><span>多种颜色定义方式（同CSS）</span></a></h4><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">QLineEidt</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #050505<span class="token punctuation">;</span> 											<span class="token comment">/* 16进制 */</span>
	<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>88<span class="token punctuation">,</span>152<span class="token punctuation">)</span><span class="token punctuation">;</span>										<span class="token comment">/* RGB */</span>
	<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>95%<span class="token punctuation">,</span> 80%<span class="token punctuation">,</span> 9%<span class="token punctuation">,</span> 50%<span class="token punctuation">)</span><span class="token punctuation">;</span>								<span class="token comment">/* RGBA */</span>
	<span class="token property">color</span><span class="token punctuation">:</span><span class="token function">palette</span><span class="token punctuation">(</span>Base<span class="token punctuation">)</span><span class="token punctuation">;</span>										<span class="token comment">/* 调色板 */</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">qlineargradient</span><span class="token punctuation">(</span><span class="token property">x1</span><span class="token punctuation">:</span>0<span class="token punctuation">,</span> <span class="token property">y1</span><span class="token punctuation">:</span>0<span class="token punctuation">,</span> <span class="token property">x2</span><span class="token punctuation">:</span>1<span class="token punctuation">,</span> <span class="token property">y2</span><span class="token punctuation">:</span>1<span class="token punctuation">,</span>	<span class="token comment">/* 线性渐变 */</span>
    			<span class="token property">stop</span><span class="token punctuation">:</span>0 white<span class="token punctuation">,</span> <span class="token property">stop</span><span class="token punctuation">:</span>0.4 gray<span class="token punctuation">,</span> <span class="token property">stop</span><span class="token punctuation">:</span>1 green<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/**三种渐变类型
     * qlineargradient()	线性渐变
     * qradialgradient()	辐射渐变
     * qconicalgradient()	圆锥渐变
     */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实战-——-candy风格" tabindex="-1"><a class="header-anchor" href="#实战-——-candy风格"><span>实战 —— Candy风格</span></a></h3><p>直译是 “糖果风格”，具体特征应该是大圆角、扁平或上下渐变背景</p><p>示例：略</p><h1 id="其他样式方法" tabindex="-1"><a class="header-anchor" href="#其他样式方法"><span>其他样式方法</span></a></h1><h2 id="三种自定义外观方法" tabindex="-1"><a class="header-anchor" href="#三种自定义外观方法"><span>三种自定义外观方法</span></a></h2><p>有三种方法可以重新定义Qt内置窗口部件的外观</p><ul><li><h4 id="子类化个别窗口部件类" tabindex="-1"><a class="header-anchor" href="#子类化个别窗口部件类"><span>子类化个别窗口部件类</span></a></h4><ul><li>并且重新实现它的绘制和鼠标事件处理器</li></ul></li><li><h4 id="子类化qstyle、或者一个预定义的风格" tabindex="-1"><a class="header-anchor" href="#子类化qstyle、或者一个预定义的风格"><span>子类化QStyle、或者一个预定义的风格</span></a></h4><ul><li>例如QWindowSytle（Qt5不再支持QWindowsStyle、QWindowsXPStyle、QWindowsVistaStyle）</li><li>这种方法很好用，Qt本身也是用这种方法为它所支持的不同平台提供基于平台的外观</li></ul></li><li><h4 id="qt样式表-从qt4-2开始" tabindex="-1"><a class="header-anchor" href="#qt样式表-从qt4-2开始"><span>Qt样式表（从Qt4.2开始）</span></a></h4><ul><li>这是一种从HTML CSS（层叠样式表）获得灵感的机制</li></ul></li></ul><p>下面的示例中会展示两种自定义风格</p><ul><li>Candy风格。它通过样式表定义</li><li>Bronze风格。它通过QStyle的子类实现</li></ul><h2 id="子类化qstyle" tabindex="-1"><a class="header-anchor" href="#子类化qstyle"><span>子类化QStyle</span></a></h2><p>比较起上一种方法，这种方法挺繁琐的......</p><p>但如果是使用QStylePlugin风格化插件的话，对应的是QStyle这种自定义样式方式</p><h3 id="简概-1" tabindex="-1"><a class="header-anchor" href="#简概-1"><span>简概</span></a></h3>`,41)),s("ul",null,[e[1]||(e[1]=s("li",null,[s("h4",{id:"简概-2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#简概-2"},[s("span",null,"简概")])]),s("ul",null,[s("li",null,"QStyle提供了一种包装应用程序外观的方法，这些类为Qt运行的平台和桌面系统实现了外观")])],-1)),s("li",null,[e[0]||(e[0]=s("h4",{id:"qt内置样式的继承树",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#qt内置样式的继承树"},[s("span",null,"Qt内置样式的继承树")])],-1)),i(t,{id:"mermaid-539",code:"eJxLL0osyFAIceIKDC6pzEnV1bULdM7Pzc3PA3O5FIAAWQAkH56Zl5JfXgzmWyfnJBYXK6CIKaSk5oA1cqIII2mNCEAXCcssLknEZiJUKchMNBmEFjwWOuekJubl5OcnZyP8g6nKNzEZn3QA0N6SzMLSVNxh4ptfkpmGsNXFFaKUC+xkl9Q0kBMV0jJzcqyULS0trbkAYU6BGw=="})]),e[2]||(e[2]=s("li",null,[s("h4",{id:"补充",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#补充"},[s("span",null,"补充")])]),s("ul",null,[s("li",null,[s("p",null,"灰色为Qt5不再支持。即Qt5不再支持QWindowsStyle、QWindowsXPStyle、QWindowsVistaStyle"),s("p",null,"为此，可以从QProxyStyle派生出所需风格")])])],-1))]),e[4]||(e[4]=n(`<h3 id="使用流程-1" tabindex="-1"><a class="header-anchor" href="#使用流程-1"><span>使用流程</span></a></h3><p>一个举例（捋清窗口部件和样式之间的关系）</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>void MyPushButton:paintEvent(QPaintEvent * /*event*/)					// 绘图事件
{
    QPainter painter(this);												// 绘图类
    QStyleOptionButton option;											// QStyleOption
    option.initFrom(this);
    if(isFlat())
        option.features |= QStyleOptionButton::Flat;
    option.text = text();
    style()-&gt;drawControl(QStyle::CE_PushButton, &amp;option, &amp;painter, this);// drawControl()函数被各种QStyle子类重新实现
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义QStyle类</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>class BronzeStyle: public QWindowsStyle
{
    Q_OBJECT
    public:
    	// ...
    public slots:
    	// ...
    private:
    	// ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用QStyle类</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7))])}const h=a(o,[["render",r],["__file","04. .qss 样式文件 _ 样式.html.vue"]]),v=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/04.%20%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/%E8%B5%84%E6%BA%90%E6%80%A7%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/04.%20.qss%20%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6%20_%20%E6%A0%B7%E5%BC%8F.html","title":"Qt","lang":"zh-CN","frontmatter":{"description":"Qt 目录 .qss 样式文件 & 样式 qss代码 qss与css qss文件：全称 Qt Style Sheets，简写 qss，翻译 qt样式表 类比css：全称Cascading Style Sheets，简写css，翻译层叠样式表 qss是一种从HTML CSS（层叠样式表）获得灵感的机制，两者相似又略有不同 使用 片段qss 简概 推荐：易...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/04.%20%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/%E8%B5%84%E6%BA%90%E6%80%A7%E8%BE%85%E5%8A%A9%E6%96%87%E4%BB%B6/04.%20.qss%20%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6%20_%20%E6%A0%B7%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Qt"}],["meta",{"property":"og:description","content":"Qt 目录 .qss 样式文件 & 样式 qss代码 qss与css qss文件：全称 Qt Style Sheets，简写 qss，翻译 qt样式表 类比css：全称Cascading Style Sheets，简写css，翻译层叠样式表 qss是一种从HTML CSS（层叠样式表）获得灵感的机制，两者相似又略有不同 使用 片段qss 简概 推荐：易..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Qt","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":".qss 样式文件 & 样式","slug":"qss-样式文件-样式","link":"#qss-样式文件-样式","children":[{"level":2,"title":"qss代码","slug":"qss代码","link":"#qss代码","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"片段qss","slug":"片段qss","link":"#片段qss","children":[]},{"level":3,"title":".qss文件","slug":"qss文件","link":"#qss文件","children":[{"level":4,"title":"添加方法","slug":"添加方法","link":"#添加方法","children":[]},{"level":4,"title":"使用","slug":"使用-1","link":"#使用-1","children":[]}]}]},{"level":2,"title":"qss高级","slug":"qss高级","link":"#qss高级","children":[{"level":3,"title":"qss中使用qrc资源","slug":"qss中使用qrc资源","link":"#qss中使用qrc资源","children":[]},{"level":3,"title":"高级用法","slug":"高级用法","link":"#高级用法","children":[{"level":4,"title":"多个一起设置（同CSS）","slug":"多个一起设置-同css","link":"#多个一起设置-同css","children":[]},{"level":4,"title":"样式表选择器（选择器，与CSS略有不同）","slug":"样式表选择器-选择器-与css略有不同","link":"#样式表选择器-选择器-与css略有不同","children":[]},{"level":4,"title":"伪类选择器（同CSS，窗口部件中一些可以访问样式表的状态）","slug":"伪类选择器-同css-窗口部件中一些可以访问样式表的状态","link":"#伪类选择器-同css-窗口部件中一些可以访问样式表的状态","children":[]},{"level":4,"title":"自定义辅助控制器（常见的）","slug":"自定义辅助控制器-常见的","link":"#自定义辅助控制器-常见的","children":[]},{"level":4,"title":"多种颜色定义方式（同CSS）","slug":"多种颜色定义方式-同css","link":"#多种颜色定义方式-同css","children":[]}]},{"level":3,"title":"实战 —— Candy风格","slug":"实战-——-candy风格","link":"#实战-——-candy风格","children":[]}]}]},{"level":1,"title":"其他样式方法","slug":"其他样式方法","link":"#其他样式方法","children":[{"level":2,"title":"三种自定义外观方法","slug":"三种自定义外观方法","link":"#三种自定义外观方法","children":[]},{"level":2,"title":"子类化QStyle","slug":"子类化qstyle","link":"#子类化qstyle","children":[{"level":3,"title":"简概","slug":"简概-1","link":"#简概-1","children":[]},{"level":3,"title":"使用流程","slug":"使用流程-1","link":"#使用流程-1","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.43,"words":1329},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Platform/Multi/QT（Cpp）/04. 辅助文件/资源性辅助文件/04. .qss 样式文件 & 样式.md","excerpt":"\\n<h1>目录</h1>\\n<h1>.qss 样式文件 &amp; 样式</h1>\\n<h2>qss代码</h2>\\n<ul>\\n<li>qss与css\\n<ul>\\n<li>qss文件：全称 <code>Qt Style Sheets</code>，简写 <code>qss</code>，翻译 <code>qt样式表</code></li>\\n<li>类比css：全称<code>Cascading Style Sheets</code>，简写<code>css</code>，翻译<code>层叠样式表</code></li>\\n<li>qss是一种从HTML CSS（层叠样式表）获得灵感的机制，两者相似又略有不同</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{h as comp,v as data};
