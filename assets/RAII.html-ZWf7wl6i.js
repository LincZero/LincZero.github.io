import{_ as t,c as o,a as i,o as n}from"./app-DTo3dt_i.js";const r={};function a(c,e){return n(),o("div",null,e[0]||(e[0]=[i("p",null,'RAII（全称 Resource Acquisition Is Initialization，直译 "资源获取是初始化"），基本思想是将资源的获取和释放与对象的生命周期绑定，即资源的获取在对象的构造过程中完成，资源的释放在对象的析构过程中完成。这样，无论函数因为正常的返回还是因为异常的退出，都会触发对象的析构，从而完成资源的释放。',-1)]))}const s=t(r,[["render",a],["__file","RAII.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/01.%20%E5%A4%9A%E7%B1%BB%E7%AE%A1%E7%90%86/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/RAII.html","title":"","lang":"zh-CN","frontmatter":{"description":"RAII（全称 Resource Acquisition Is Initialization，直译 \\"资源获取是初始化\\"），基本思想是将资源的获取和释放与对象的生命周期绑定，即资源的获取在对象的构造过程中完成，资源的释放在对象的析构过程中完成。这样，无论函数因为正常的返回还是因为异常的退出，都会触发对象的析构，从而完成资源的释放。","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/01.%20%E5%A4%9A%E7%B1%BB%E7%AE%A1%E7%90%86/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/RAII.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:description","content":"RAII（全称 Resource Acquisition Is Initialization，直译 \\"资源获取是初始化\\"），基本思想是将资源的获取和释放与对象的生命周期绑定，即资源的获取在对象的构造过程中完成，资源的释放在对象的析构过程中完成。这样，无论函数因为正常的返回还是因为异常的退出，都会触发对象的析构，从而完成资源的释放。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.38,"words":114},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/01. 多类管理/设计模式/RAII.md","excerpt":"<p>RAII（全称 Resource Acquisition Is Initialization，直译 \\"资源获取是初始化\\"），基本思想是将资源的获取和释放与对象的生命周期绑定，即资源的获取在对象的构造过程中完成，资源的释放在对象的析构过程中完成。这样，无论函数因为正常的返回还是因为异常的退出，都会触发对象的析构，从而完成资源的释放。</p>\\n","autoDesc":true}');export{s as comp,p as data};
