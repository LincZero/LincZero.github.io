import{_ as s,e as a,g as n,o as e}from"./app-CuJixpuN.js";const l={};function t(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="redis事务" tabindex="-1"><a class="header-anchor" href="#redis事务"><span>Redis事务</span></a></h1><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><p>Redis支持事务 —— 一个请求中执行多个命令</p><h3 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h3><p>通过 MULTI 和 EXEC/DISCARD 来实现。MULTI 开启一个事务，然后命令加如一个队列，然后 EXEC 命令执行全部</p><h3 id="区别-reids-vs-关系型" tabindex="-1"><a class="header-anchor" href="#区别-reids-vs-关系型"><span>区别 (Reids VS 关系型 )</span></a></h3><p>Redis事务和关系型数据库 (Oracle) 是不一样的。</p><ul><li>关系型数据库： <ul><li>(安全) 事务是原子操作。<strong>要么全部执行成功，要么全部执行失败</strong></li></ul></li><li>Redis： <ul><li>(危险) 不能保证命令执行成功。EXEC命令之后命令依次执行，<strong>若有命令失败则其他命令依然会被执行</strong></li><li>(安全) 事务执行过程中，其他客户端的请求不会被插入到事务的命令序列中</li></ul></li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用"><span>基本使用</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; MULTI						</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进入事务模式</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OK</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SET</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> k1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">						# 不是OK而是Queued，表示命令被放入到队列里了。# 此时命令未被执行，其他终端无法通过 \`GET k1\` 获取到k1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SET</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> k2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">EXEC</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) OK						</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行成功。此时其他终端可以通过 \`GET k1\` 获取到k1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) OK</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="中途失败" tabindex="-1"><a class="header-anchor" href="#中途失败"><span>中途失败</span></a></h3><p>感觉这里不是很安全……可能是为了性能考虑的妥协吧</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; MULTI</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OK</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">INCR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> k3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# k3是3</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">INCR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> k4</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# k4是&quot;v4&quot;，字符串类型，待会会失败</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">INCR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> k5</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# k5是5</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; EXEC</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) 4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ERR value is not an integer or out of range	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 事务中某个命令失败并不影响其他</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const p=s(l,[["render",t],["__file","05_事务.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20Redis/03_%E5%85%B6%E4%BB%96/05_%E4%BA%8B%E5%8A%A1.html","title":"Redis事务","lang":"zh-CN","frontmatter":{"description":"Redis事务 概念 Redis支持事务 —— 一个请求中执行多个命令 操作 通过 MULTI 和 EXEC/DISCARD 来实现。MULTI 开启一个事务，然后命令加如一个队列，然后 EXEC 命令执行全部 区别 (Reids VS 关系型 ) Redis事务和关系型数据库 (Oracle) 是不一样的。 关系型数据库： (安全) 事务是原子操作。...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20Redis/03_%E5%85%B6%E4%BB%96/05_%E4%BA%8B%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Redis事务"}],["meta",{"property":"og:description","content":"Redis事务 概念 Redis支持事务 —— 一个请求中执行多个命令 操作 通过 MULTI 和 EXEC/DISCARD 来实现。MULTI 开启一个事务，然后命令加如一个队列，然后 EXEC 命令执行全部 区别 (Reids VS 关系型 ) Redis事务和关系型数据库 (Oracle) 是不一样的。 关系型数据库： (安全) 事务是原子操作。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis事务\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.23,"words":368},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/01. Redis/03_其他/05_事务.md","excerpt":"\\n<h2>概念</h2>\\n<p>Redis支持事务 —— 一个请求中执行多个命令</p>\\n<h3>操作</h3>\\n<p>通过 MULTI 和 EXEC/DISCARD 来实现。MULTI 开启一个事务，然后命令加如一个队列，然后 EXEC 命令执行全部</p>\\n<h3>区别 (Reids VS 关系型 )</h3>\\n<p>Redis事务和关系型数据库 (Oracle) 是不一样的。</p>\\n<ul>\\n<li>关系型数据库：\\n<ul>\\n<li>(安全) 事务是原子操作。<strong>要么全部执行成功，要么全部执行失败</strong></li>\\n</ul>\\n</li>\\n<li>Redis：\\n<ul>\\n<li>(危险) 不能保证命令执行成功。EXEC命令之后命令依次执行，<strong>若有命令失败则其他命令依然会被执行</strong></li>\\n<li>(安全) 事务执行过程中，其他客户端的请求不会被插入到事务的命令序列中</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/01. Redis/03_其他/05_事务.md","value":{"title":"05_事务","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/01. Redis/03_其他/05_事务.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,d as data};
