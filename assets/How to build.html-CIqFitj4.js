import{_ as o,e as i,f as l,g as d,o as t}from"./app-EuS-Ookm.js";const n={};function a(r,e){return t(),i("div",null,e[0]||(e[0]=[l("h1",{id:"how-to-build",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#how-to-build"},[l("span",null,"How to build")])],-1),l("h2",{id:"内容介绍",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#内容介绍"},[l("span",null,"内容介绍")])],-1),l("ul",null,[l("li",null,"该系列完全不聚焦于任何编程语言/框架/项目"),l("li",null,"以运行Github/其他开源社区中各种项目为核心目的，讲述如何使用这些各色各样的项目"),l("li",null,"另一目的是反过来思考，如何编写方便他人运行的通用开源项目")],-1),l("p",null,"分类原则我们提到过",-1),l("div",{class:"ab-note drop-shadow"},[l("table",{class:"ab-table ab-branch-table"},[l("tbody",null,[l("tr",null,[l("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[l("div",null,[l("ol",null,[l("li",null,"Language")])])]),l("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[l("div",null,[l("p",null,"与语言有关，与项目无关。而这里不需要编写任何与编程语言相关的程序代码，不符合")])])]),l("tr",null,[l("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[l("div",null,[l("ol",{start:"2"},[l("li",null,"Theory")])])]),l("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[l("div",null,[l("p",null,"与语言无关，与项目无关。比较倾向于纸上谈兵，而这里我们是需要实操的，不符合")])])]),l("tr",null,[l("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[l("div",null,[l("ol",{start:"3"},[l("li",null,"Tools")])])]),l("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[l("div",null,[l("p",null,"与语言无关，与项目有关。抽离许多项目中通用的思想和工具，符合")])])]),l("tr",null,[l("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[l("div",null,[l("ol",{start:"4"},[l("li",null,"Project")])])]),l("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[l("div",null,[l("p",null,"与语言有关，与项目有关。这里并不聚焦于具体的编程语言/技术栈/框架/项目，不符合")])])])])])],-1),d('<h2 id="项目通用构建" tabindex="-1"><a class="header-anchor" href="#项目通用构建"><span>项目通用构建</span></a></h2><p>大多数项目（无论什么语言/框架），编程项目的流程大体相同，都需要这几个步骤：</p><ul><li>安装通用环境/依赖</li><li>下载/编写项目</li><li>安装项目专用环境/依赖</li><li>运行/编译项目</li><li>(可选 可能还有一些调试、测试、自动部署/发布等步骤，这里先忽略)</li></ul><p>像python就是：</p><ul><li>准备python、anoncada、venv等环境</li><li>下载/编写项目</li><li>安装依赖，如 <code>pip install -r ./requirements.txt</code>、<code>./.venv/Script/activate</code></li><li>运行/编译项目，如 <code>python xxx.py</code>、<code>nb run --reload</code> (脚手架)</li></ul><p>像JavaScript就是：</p><ul><li>准备node.js、npm/pnpm/xpm等环境</li><li>下载/编写项目</li><li>安装依赖，如 <code>npm install</code></li><li>运行/编译项目，如 <code>npm run build</code></li></ul><p>像CPP就是：</p><ul><li>准备 <code>工具链</code>、<code>cmake</code>、<code>gdb</code>、<code>gcc/g++</code>、<code>cygwin/msys2</code> 等环境</li><li>下载/编写项目</li><li>安装依赖，如 <code>./vcpkg/vcpkg install</code></li><li>运行/编译项目，如 <code>mkdir build &amp;&amp; cd build &amp;&amp; cmake .. &amp;&amp; cmake --build .</code></li></ul><p>其他的像 Java、Rust、Go 等也同理</p><div class="callout" data-callout="tip"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg></div><div class="callout-title-inner">Tip</div></div><div class="callout-content"><p>其中，有一些方式是通用的，对于重复的这部分不再在上面赘述</p><ul><li>对于安装环境。可选安装IDE、一些集成环境、甚至是Docker</li><li>对于安装依赖。直接使用文件夹或通过 git/curl 下载，是通用方法</li><li>对于编译项目。单纯运行按钮、使用工作流文件、或使用VSCode的Task，是通用的方法</li></ul><p>然后会发现，在这些环节中，每个环节其实都可以有不同的做法。比较灵活，并非一成不变</p></div></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><p>更具体的，以及跟具体语言有关的，详见该文件夹下的其他文件</p><h2 id="项目" tabindex="-1"><a class="header-anchor" href="#项目"><span>项目</span></a></h2><p>我这里创建了一些通用型的项目demo: https://github.com/NestNode/ or https://github.com/LincDemo</p><p>与普通项目相比：</p><ul><li>多种语言实现同一基本架构，可自由切换</li><li>项目处理过程中多个可选项，尽可能通用 <ul><li>允许多种依赖处理方式</li><li>允许多种编译方式 (包括github工作流)</li><li>多平台产物 (解释型语言也尽量生成可执行文件版本)</li></ul></li><li>Useless Backend，开箱即用，无需修改即可简单使用</li></ul>',17)]))}const s=o(n,[["render",a],["__file","How to build.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E5%BC%80%E5%8F%91%E5%B1%82/How%20to%20build/How%20to%20build.html","title":"How to build","lang":"zh-CN","frontmatter":{"create_time":"2025-03-16T00:00:00.000Z","Author":"LincZero","description":"How to build 内容介绍 该系列完全不聚焦于任何编程语言/框架/项目 以运行Github/其他开源社区中各种项目为核心目的，讲述如何使用这些各色各样的项目 另一目的是反过来思考，如何编写方便他人运行的通用开源项目 分类原则我们提到过 项目通用构建 大多数项目（无论什么语言/框架），编程项目的流程大体相同，都需要这几个步骤： 安装通用环境/依赖...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E5%BC%80%E5%8F%91%E5%B1%82/How%20to%20build/How%20to%20build.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"How to build"}],["meta",{"property":"og:description","content":"How to build 内容介绍 该系列完全不聚焦于任何编程语言/框架/项目 以运行Github/其他开源社区中各种项目为核心目的，讲述如何使用这些各色各样的项目 另一目的是反过来思考，如何编写方便他人运行的通用开源项目 分类原则我们提到过 项目通用构建 大多数项目（无论什么语言/框架），编程项目的流程大体相同，都需要这几个步骤： 安装通用环境/依赖..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to build\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.59,"words":777},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/How to build/How to build.md","excerpt":"\\n<h2>内容介绍</h2>\\n<ul>\\n<li>该系列完全不聚焦于任何编程语言/框架/项目</li>\\n<li>以运行Github/其他开源社区中各种项目为核心目的，讲述如何使用这些各色各样的项目</li>\\n<li>另一目的是反过来思考，如何编写方便他人运行的通用开源项目</li>\\n</ul>\\n<p>分类原则我们提到过</p>\\n<div class=\\"ab-note drop-shadow\\"><table class=\\"ab-table ab-branch-table\\"><tbody><tr><td rowspan=\\"1\\" col_index=\\"0\\" class=\\"markdown-rendered\\"><div><ol>\\n<li>Language</li>\\n</ol>\\n</div></td><td rowspan=\\"1\\" col_index=\\"1\\" class=\\"markdown-rendered\\"><div><p>与语言有关，与项目无关。而这里不需要编写任何与编程语言相关的程序代码，不符合</p>\\n</div></td></tr><tr><td rowspan=\\"1\\" col_index=\\"0\\" class=\\"markdown-rendered\\"><div><ol start=\\"2\\">\\n<li>Theory</li>\\n</ol>\\n</div></td><td rowspan=\\"1\\" col_index=\\"1\\" class=\\"markdown-rendered\\"><div><p>与语言无关，与项目无关。比较倾向于纸上谈兵，而这里我们是需要实操的，不符合</p>\\n</div></td></tr><tr><td rowspan=\\"1\\" col_index=\\"0\\" class=\\"markdown-rendered\\"><div><ol start=\\"3\\">\\n<li>Tools</li>\\n</ol>\\n</div></td><td rowspan=\\"1\\" col_index=\\"1\\" class=\\"markdown-rendered\\"><div><p>与语言无关，与项目有关。抽离许多项目中通用的思想和工具，符合</p>\\n</div></td></tr><tr><td rowspan=\\"1\\" col_index=\\"0\\" class=\\"markdown-rendered\\"><div><ol start=\\"4\\">\\n<li>Project</li>\\n</ol>\\n</div></td><td rowspan=\\"1\\" col_index=\\"1\\" class=\\"markdown-rendered\\"><div><p>与语言有关，与项目有关。这里并不聚焦于具体的编程语言/技术栈/框架/项目，不符合</p>\\n</div></td></tr></tbody></table></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/How to build/How to build.md","value":{"title":"How to build","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/How to build/How to build.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{s as comp,p as data};
