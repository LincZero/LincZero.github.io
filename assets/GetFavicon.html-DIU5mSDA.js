import{_ as e,e as i,g as t,o as a}from"./app-DeGPQmv-.js";const c={};function l(n,o){return a(),i("div",null,o[0]||(o[0]=[t('<h1 id="getfavicon" tabindex="-1"><a class="header-anchor" href="#getfavicon"><span>GetFavicon</span></a></h1><h2 id="四种方法" tabindex="-1"><a class="header-anchor" href="#四种方法"><span>四种方法</span></a></h2><ul><li>这一类是从网站获取。<br> 像我之前写过的两个项目就有这种需求 (<a href="https://github.com/LincZero/LcNavSite/tree/master/public/icon" target="_blank" rel="noopener noreferrer">LcNavSite</a> 和 <a href="https://github.com/LincZero/obsidian-chat-view-qq" target="_blank" rel="noopener noreferrer">obsidian-chat-view-qq</a>)。而使用比较多的主要是导航网站类、界面模拟类</li><li>获取方式 <ul><li>一是 <code>hostname/favicon.ico</code> 尝试加载。缺点是有的网站的icon不是 <code>hostname/favicon.ico</code>，因为html头部是可以指定图标的路径的，有的网站会换用 svg 、或者使用图床里的链接等。另外，他们的大小尺寸和格式都不相同</li><li>二是手动。当时我写 LcNavSite 时这里手动获取了许多网站的icon。而没有收录的icon则尝试使用 <code>hostname/favicon.ico</code> 进行加载。<br> 该方案的优点是稳定性和速度 (特别国内无法访问的外网图标也能获取)</li><li>三是使用浏览器提供的服务，参考 <a href="https://nolebase.ayaka.io/zh-CN/%E7%AC%94%E8%AE%B0/%F0%9F%9B%A0%EF%B8%8F%20%E5%BC%80%E5%8F%91/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E7%BD%91%E7%AB%99%E7%9A%84%E5%9B%BE%E6%A0%87%EF%BC%88Favicon%EF%BC%89.html" target="_blank" rel="noopener noreferrer">如何获取网站的图标（Favicon）</a> <a href="https://superuser.com/questions/532616/grab-favicon-ico-using-google-chrome-dev-tools" target="_blank" rel="noopener noreferrer">Grab favicon.ico using Google Chrome dev tools</a>。<br> 优点是稳定，缺点是用不同的浏览器语句不同。如 <code>chrome://favicon/https://github.com</code> 不能在edge/firefox上使用，另两个有自己的url</li><li>四是查看有没有相关的爬虫服务提供商。提供类似第三点一样的服务，但需要在不同的浏览器上工作</li></ul></li></ul><h2 id="在线服务类" tabindex="-1"><a class="header-anchor" href="#在线服务类"><span>在线服务类</span></a></h2><p>重点调研一下第四点 —— favicon 获取的第三方API服务及方案</p><p>测试：需要重点测试非 <code>hostname/favicon.ico</code> 的位置是否能正常使用</p><p>根据搜索结果，以下是可以实现网站图标（Favicon）获取的第三方 API 服务及相关方案，覆盖免费和付费选项：</p><h3 id="开源-api" tabindex="-1"><a class="header-anchor" href="#开源-api"><span>开源 API</span></a></h3><p>https://github.com/search?q=get%20favicon&amp;type=repositories</p><ul><li>https://github.com/owen0o0/getFavicon 220star 98fork php 两月内 需要部署 <ul><li>示例: 无提供，必须自己部署</li></ul></li><li>https://github.com/sy-records/GetFavicon 49star 28fork php 一月内 可部署 (当前选用) <ul><li>示例: https://favicon-ico.vercel.app/?url=http://github.com (可用)</li><li>示例: https://favicon-ico.vercel.app/?url=http://google.com (可用)</li><li>示例: https://favicon-ico.vercel.app/?url=https://chat.deepseek.com (不可用)</li><li>示例: https://favicon-ico.vercel.app/?url=https://github.com/copilot (不正确)</li></ul></li><li>https://github.com/fransallen/favicone 49star 0fork 两年 假开源 <ul><li>示例: https://favicone.com/github.com (可用)</li><li>示例: https://favicone.com/google.com (可用)</li><li>示例: https://favicone.com/deepseek.com (可用)</li><li>示例: https://favicone.com/github.com/copilot (不可用)</li></ul></li><li>https://github.com/Ridter/get_ip_by_ico 6年前</li><li>https://github.com/antongunov/favicongrabber.com 7年前</li></ul><h3 id="免费-api" tabindex="-1"><a class="header-anchor" href="#免费-api"><span>免费 API</span></a></h3><h4 id="icon-horse" tabindex="-1"><a class="header-anchor" href="#icon-horse"><span>icon.horse</span></a></h4><ul><li>示例: https://icon.horse/icon/github.com (可用)</li><li>示例: https://icon.horse/icon/google.com (不可用)</li><li>示例: https://icon.horse/icon/deepseek.com (不可用)</li></ul><h4 id="google-favicon-服务" tabindex="-1"><a class="header-anchor" href="#google-favicon-服务"><span>Google Favicon 服务</span></a></h4><ul><li>接口地址：<code>http://www.google.com/s2/u/0/favicons?domain=目标域名</code></li><li>示例：<code>&lt;img src=&quot;http://www.google.com/s2/favicons?domain=github.com&quot;&gt;</code> (可用，但国内不行)</li><li>示例: http://www.google.com/s2/favicons?domain=github.com/copilot/ (不正确)</li><li>特点： <ul><li>直接通过 Google 服务获取图标，支持大部分主流网站。</li><li>域名需去除协议（如 <code>www.github.com</code>）</li></ul></li></ul><h4 id="duckduckgo-服务" tabindex="-1"><a class="header-anchor" href="#duckduckgo-服务"><span>DuckduckGo 服务</span></a></h4><p>https://duckduckgo.com/duckduckgo-help-pages/privacy/favicons/</p><h4 id="g-etfv-co-服务" tabindex="-1"><a class="header-anchor" href="#g-etfv-co-服务"><span>g.etfv.co 服务</span></a></h4><ul><li>接口地址：<code>http://g.etfv.co/目标URL</code></li><li>示例：<code>&lt;img src=&quot;http://g.etfv.co/https://www.baidu.com&quot;&gt;</code> (好像不行)</li><li>特点： <ul><li>自动解析目标网站的 Favicon，返回图标图片流。</li><li>支持动态更新，无需维护缓存</li></ul></li></ul><h4 id="ooopn-api-免费-直接返回图片" tabindex="-1"><a class="header-anchor" href="#ooopn-api-免费-直接返回图片"><span>OOOPN API（免费/直接返回图片）</span></a></h4><ul><li>功能：直接返回目标网站的 Favicon 图片流，无需解析 JSON。</li><li>请求方式：GET/POST</li><li>接口地址：<code>https://api.ooopn.com/ico/api.php?url=目标URL</code></li><li>示例：<code>&lt;img src=&quot;https://api.ooopn.com/ico/api.php?url=https://www.example.com&quot;&gt;</code> (好像不行)</li><li>特点： <ul><li>无需 API Key，支持跨域请求</li><li>直接输出图片数据，适用于前端直接嵌入 <code>&lt;img&gt;</code> 标签</li><li>适用场景：轻量级应用或前端快速集成</li></ul></li></ul><h3 id="自建爬虫方案-补充" tabindex="-1"><a class="header-anchor" href="#自建爬虫方案-补充"><span>自建爬虫方案（补充）</span></a></h3><p>若需更高可控性，可结合以下逻辑自建服务：</p><ol start="2"><li>优先尝试根目录：请求 <code>目标域名/favicon.ico</code>。</li><li>解析 HTML 元数据：若根目录无图标，爬取页面源码，从 <code>&lt;link rel=&quot;icon&quot;&gt;</code> 或 <code>&lt;meta&gt;</code> 标签中提取路径。</li><li>缓存优化：将获取的图标缓存在服务器，减少重复请求。</li></ol><h3 id="付费类" tabindex="-1"><a class="header-anchor" href="#付费类"><span>付费类</span></a></h3><h4 id="咕咕数据-api-付费" tabindex="-1"><a class="header-anchor" href="#咕咕数据-api-付费"><span>咕咕数据 API（付费）</span></a></h4><ul><li>功能：支持通过 URL 获取网站的标题和 Favicon 链接，返回 JSON 格式数据，包含状态码、标题、图标链接等信息。</li><li>请求方式：HTTPS GET</li><li>接口地址：<code>https://api.gugudata.com/websitetools/favicon?appkey=YOUR_APPKEY&amp;url=目标URL</code></li><li>特点： <ul><li>需付费获取 <code>appkey</code>，支持高频率请求（每秒不超过 100 次）。</li><li>全国多节点 CDN 部署，响应速度快，支持负载均衡。</li><li>兼容 Apple ATS 和 HTTPS 协议。</li></ul></li><li>适用场景：企业级应用或高频调用需求。</li></ul><h4 id="天行数据-api-按次计费" tabindex="-1"><a class="header-anchor" href="#天行数据-api-按次计费"><span>天行数据 API（按次计费）</span></a></h4><ul><li>功能：获取网页的标题、关键词、描述及 Favicon 链接。</li><li>请求方式：POST（参数需 URL 编码）</li><li>接口地址：<code>https://api.tianapi.com/网页信息接口</code></li><li>特点： <ul><li>需注册获取 API Key，免费套餐提供 100 次调用。</li><li>返回字段包括 <code>title</code>、<code>description</code>、<code>keywords</code>、<code>favicon</code> 等元数据。</li><li>价格阶梯从 10 元（2000 次）到 2000 元（520 万次）不等。</li></ul></li><li>适用场景：需同时获取网页元数据（如 SEO 信息）的场景。</li></ul><h3 id="总结、对比、建议" tabindex="-1"><a class="header-anchor" href="#总结、对比、建议"><span>总结、对比、建议</span></a></h3><table><thead><tr><th>方案</th><th>优点</th><th>缺点</th><th>适用场景</th></tr></thead><tbody><tr><td>咕咕数据 API</td><td>高稳定性、负载均衡</td><td>需付费，需集成认证</td><td>企业级高频调用</td></tr><tr><td>OOOPN API</td><td>免费、无需认证</td><td>依赖第三方服务可用性</td><td>轻量级前端项目</td></tr><tr><td>天行数据 API</td><td>综合元数据获取</td><td>按次计费，需注册</td><td>SEO 分析工具</td></tr><tr><td>公共免费 API</td><td>零成本、简单易用</td><td>可能被服务方限流或停用</td><td>个人项目或低频率场景</td></tr><tr><td>自建爬虫</td><td>完全可控，支持自定义逻辑</td><td>需维护爬虫和缓存机制</td><td>对稳定性要求高的场景</td></tr></tbody></table><ul><li><strong>推荐免费方案</strong>：优先使用 <code>g.etfv.co</code> 或 Google 的公共 API，适合个人项目或低频率调用。</li><li><strong>推荐付费方案</strong>：咕咕数据 API 适合企业级需求，天行数据 API 适合需要综合元数据的场景。</li><li><strong>自建爬虫</strong>：若需长期稳定且可控性高，可结合根目录探测与 HTML 解析实现。</li></ul>',32)]))}const h=e(c,[["render",l],["__file","GetFavicon.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/03.%20%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6/UI%E5%BA%93/GetFavicon.html","title":"GetFavicon","lang":"zh-CN","frontmatter":{"description":"GetFavicon 四种方法 这一类是从网站获取。 像我之前写过的两个项目就有这种需求 (LcNavSite 和 obsidian-chat-view-qq)。而使用比较多的主要是导航网站类、界面模拟类 获取方式 一是 hostname/favicon.ico 尝试加载。缺点是有的网站的icon不是 hostname/favicon.ico，因为ht...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/03.%20%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6/UI%E5%BA%93/GetFavicon.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"GetFavicon"}],["meta",{"property":"og:description","content":"GetFavicon 四种方法 这一类是从网站获取。 像我之前写过的两个项目就有这种需求 (LcNavSite 和 obsidian-chat-view-qq)。而使用比较多的主要是导航网站类、界面模拟类 获取方式 一是 hostname/favicon.ico 尝试加载。缺点是有的网站的icon不是 hostname/favicon.ico，因为ht..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GetFavicon\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":4.91,"words":1473},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/03. 前端组件/UI库/GetFavicon.md","excerpt":"\\n<h2>四种方法</h2>\\n<ul>\\n<li>这一类是从网站获取。<br>\\n像我之前写过的两个项目就有这种需求 (<a href=\\"https://github.com/LincZero/LcNavSite/tree/master/public/icon\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LcNavSite</a> 和 <a href=\\"https://github.com/LincZero/obsidian-chat-view-qq\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">obsidian-chat-view-qq</a>)。而使用比较多的主要是导航网站类、界面模拟类</li>\\n<li>获取方式\\n<ul>\\n<li>一是 <code>hostname/favicon.ico</code> 尝试加载。缺点是有的网站的icon不是 <code>hostname/favicon.ico</code>，因为html头部是可以指定图标的路径的，有的网站会换用 svg 、或者使用图床里的链接等。另外，他们的大小尺寸和格式都不相同</li>\\n<li>二是手动。当时我写 LcNavSite 时这里手动获取了许多网站的icon。而没有收录的icon则尝试使用 <code>hostname/favicon.ico</code> 进行加载。<br>\\n该方案的优点是稳定性和速度 (特别国内无法访问的外网图标也能获取)</li>\\n<li>三是使用浏览器提供的服务，参考 <a href=\\"https://nolebase.ayaka.io/zh-CN/%E7%AC%94%E8%AE%B0/%F0%9F%9B%A0%EF%B8%8F%20%E5%BC%80%E5%8F%91/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E7%BD%91%E7%AB%99%E7%9A%84%E5%9B%BE%E6%A0%87%EF%BC%88Favicon%EF%BC%89.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">如何获取网站的图标（Favicon）</a> <a href=\\"https://superuser.com/questions/532616/grab-favicon-ico-using-google-chrome-dev-tools\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Grab favicon.ico using Google Chrome dev tools</a>。<br>\\n优点是稳定，缺点是用不同的浏览器语句不同。如 <code>chrome://favicon/https://github.com</code> 不能在edge/firefox上使用，另两个有自己的url</li>\\n<li>四是查看有没有相关的爬虫服务提供商。提供类似第三点一样的服务，但需要在不同的浏览器上工作</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/03. 前端组件/UI库/GetFavicon.md","value":{"title":"GetFavicon","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/03. 前端组件/UI库/GetFavicon.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{h as comp,d as data};
