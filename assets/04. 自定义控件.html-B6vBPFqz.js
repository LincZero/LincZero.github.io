import{_ as s,e as t,g as a,o as e}from"./app-DeGPQmv-.js";const n={};function l(p,i){return e(),t("div",null,i[0]||(i[0]=[a(`<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>QT</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="自定义控件-封装" tabindex="-1"><a class="header-anchor" href="#自定义控件-封装"><span>自定义控件（封装）</span></a></h1><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><p>步骤：</p><ul><li><p>(1) 项目管理器中右键 &gt; 点击添加新文件 &gt; Qt &gt; Qt 设计师界面类 &gt; 配置界面模板 &gt; 起名（设置类名和界面文件名）</p><p>​ 会生成三个文件：一个<code>.ui</code>文件、一个头文件、一个cpp文件</p></li><li><p>(2) 设计ui文件和类文件，基本操作同主窗口</p></li><li><p>(3) 使用自定义控件，插入一个Widget &gt; 右键 &gt; 提升为 &gt; 填写<code>提升的类名称</code> &gt; 全局包含可选可不选 &gt; 添加按钮 &gt; 提升按钮</p></li></ul><p>举例：（封装数值选择和滑动杆）</p><ul><li><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 数值选择影响滑动杆</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(QSpinBox::</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">spSignal)(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;"> &amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QSpinBox::valueChanged;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ui</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spinBox</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, spSignal, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ui</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">horizontalSlider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QSlider::setValue);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 滑动杆影响数值选择</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ui</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">horizontalSlider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QSlider::ValueChanged, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ui</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spinBox</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QSpinBox::setValue);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="和qt4-designer-custom-widget区别" tabindex="-1"><a class="header-anchor" href="#和qt4-designer-custom-widget区别"><span>和Qt4 Designer Custom Widget区别</span></a></h2><p>Qt设计师界面类，在工程中创建，没有pro，是工程中的一部分</p><p>Qt4_Designer_Custom_Widget，有pro，独立创建一个工程</p>`,11)]))}const d=s(n,[["render",l],["__file","04. 自定义控件.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/01.%20Widget/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB/04.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6.html","title":"QT","lang":"zh-CN","frontmatter":{"description":"QT 目录 自定义控件（封装） 步骤 步骤： (1) 项目管理器中右键 > 点击添加新文件 > Qt > Qt 设计师界面类 > 配置界面模板 > 起名（设置类名和界面文件名） ​ 会生成三个文件：一个.ui文件、一个头文件、一个cpp文件 (2) 设计ui文件和类文件，基本操作同主窗口 (3) 使用自定义控件，插入一个Widget > 右键 > 提升...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/01.%20Widget/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB/04.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"QT"}],["meta",{"property":"og:description","content":"QT 目录 自定义控件（封装） 步骤 步骤： (1) 项目管理器中右键 > 点击添加新文件 > Qt > Qt 设计师界面类 > 配置界面模板 > 起名（设置类名和界面文件名） ​ 会生成三个文件：一个.ui文件、一个头文件、一个cpp文件 (2) 设计ui文件和类文件，基本操作同主窗口 (3) 使用自定义控件，插入一个Widget > 右键 > 提升..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"QT\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.79,"words":237},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/04. 自定义控件.md","excerpt":"\\n<h1>目录</h1>\\n<h1>自定义控件（封装）</h1>\\n<h2>步骤</h2>\\n<p>步骤：</p>\\n<ul>\\n<li>\\n<p>(1) 项目管理器中右键 &gt; 点击添加新文件 &gt; Qt &gt; Qt 设计师界面类 &gt; 配置界面模板 &gt; 起名（设置类名和界面文件名）</p>\\n<p>​     会生成三个文件：一个<code>.ui</code>文件、一个头文件、一个cpp文件</p>\\n</li>\\n<li>\\n<p>(2) 设计ui文件和类文件，基本操作同主窗口</p>\\n</li>\\n<li>\\n<p>(3) 使用自定义控件，插入一个Widget &gt; 右键 &gt; 提升为 &gt; 填写<code>提升的类名称</code> &gt; 全局包含可选可不选 &gt; 添加按钮 &gt; 提升按钮</p>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/04. 自定义控件.md","value":{"title":"04. 自定义控件","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/04. 自定义控件.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,r as data};
