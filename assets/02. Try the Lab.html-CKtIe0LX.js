import{_ as i,c as a,e as n,o as l}from"./app-7Hf1q1UN.js";const e={};function p(h,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="ebpf" tabindex="-1"><a class="header-anchor" href="#ebpf"><span>eBPF</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="try-the-lab" tabindex="-1"><a class="header-anchor" href="#try-the-lab"><span>Try the Lab</span></a></h1><p><a href="https://play.instruqt.com/embed/isovalent/tracks/ebpf-getting-started" target="_blank" rel="noopener noreferrer">官网在线虚拟机</a></p><h2 id="先导" tabindex="-1"><a class="header-anchor" href="#先导"><span>先导</span></a></h2><p>这个在线实验台在开始时会有些提示，这是因为这里要准备虚拟环境需要耗费比较多的时间（1min），给点东西给你看防止你那么闷。 但其实内容都是在官网中 “What is eBPF” 提到过了，没什么意义。</p><p>我会把这部分内容在 What is eBPF 笔记中重复一次，此处不再赘述</p><p>然后整个Lab实验一共有4个环节：</p><ol><li>构建并运行 opensnoop</li><li>检查BPF对象文件</li><li>使用bpftool查看加载到内核中的BPF程序</li><li>添加您自己的跟踪消息</li><li>eBPF入门测验</li></ol><h2 id="构建并运行-opensnoop" tabindex="-1"><a class="header-anchor" href="#构建并运行-opensnoop"><span>构建并运行 opensnoop</span></a></h2><h3 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍"><span>项目介绍</span></a></h3><p>在左侧，您将看到一个选项卡 &gt;_ 1️⃣ 终端 1。当前工作目录 ( <code>/opt/ebpf/bcc/libbpf-tools</code> ) 包含 BCC 项目中<strong>许多可观察性工具的源代码</strong>。</p><p>这个工作目录是开源的，是 <a href="https://github.com/iovisor/bcc" target="_blank" rel="noopener noreferrer">iovisor/bcc</a> 项目。</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Makefile            cachestat.bpf.c     fsdist.c              mountsnoop.c           slabratetop.h         tcptop.bpf.c</span></span>
<span class="line"><span>Makefile.btfgen     cachestat.c         fsdist.h              mountsnoop.h           softirqs.bpf.c        tcptop.c</span></span>
<span class="line"><span>README.md           capable.bpf.c       fsslower.bpf.c        numamove.bpf.c         softirqs.c            tcptop.h</span></span>
<span class="line"><span>arm64               capable.c           fsslower.c            numamove.c             softirqs.h            tcptracer.bpf.c</span></span>
<span class="line"><span>bashreadline.bpf.c  capable.h           fsslower.h            offcputime.bpf.c       solisten.bpf.c        tcptracer.c</span></span>
<span class="line"><span>bashreadline.c      compat.bpf.h        funclatency.bpf.c     offcputime.c           solisten.c            tcptracer.h</span></span>
<span class="line"><span>bashreadline.h      compat.c            funclatency.c         offcputime.h           solisten.h            trace_helpers.c</span></span>
<span class="line"><span>bindsnoop.bpf.c     compat.h            funclatency.h         oomkill.bpf.c          stat.h                trace_helpers.h</span></span>
<span class="line"><span>bindsnoop.c         core_fixes.bpf.h    gethostlatency.bpf.c  oomkill.c              statsnoop.bpf.c       uprobe_helpers.c</span></span>
<span class="line"><span>bindsnoop.h         cpudist.bpf.c       gethostlatency.c      oomkill.h              statsnoop.c           uprobe_helpers.h</span></span>
<span class="line"><span>biolatency.bpf.c    cpudist.c           gethostlatency.h      opensnoop.bpf.c        statsnoop.h           vfsstat.bpf.c</span></span>
<span class="line"><span>biolatency.c        cpudist.h           hardirqs.bpf.c        opensnoop.c            syscall_helpers.c     vfsstat.c</span></span>
<span class="line"><span>biolatency.h        cpufreq.bpf.c       hardirqs.c            opensnoop.h            syscall_helpers.h     vfsstat.h</span></span>
<span class="line"><span>biopattern.bpf.c    cpufreq.c           hardirqs.h            powerpc                syscount.bpf.c        wakeuptime.bpf.c</span></span>
<span class="line"><span>biopattern.c        cpufreq.h           javagc.bpf.c          readahead.bpf.c        syscount.c            wakeuptime.c</span></span>
<span class="line"><span>biopattern.h        drsnoop.bpf.c       javagc.c              readahead.c            syscount.h            wakeuptime.h</span></span>
<span class="line"><span>biosnoop.bpf.c      drsnoop.c           javagc.h              readahead.h            tcpconnect.bpf.c      x86</span></span>
<span class="line"><span>biosnoop.c          drsnoop.h           kernel.config         riscv                  tcpconnect.c   </span></span>
<span class="line"><span>biosnoop.h          drsnoop_example.txt klockstat.bpf.c       runqlat.bpf.c          tcpconnect.h   </span></span>
<span class="line"><span>biostacks.bpf.c     errno_helpers.c     klockstat.c           runqlat.c              tcpconnlat.bpf.c</span></span>
<span class="line"><span>biostacks.c         errno_helpers.h     klockstat.h           runqlat.h              tcpconnlat.c   </span></span>
<span class="line"><span>biostacks.h         execsnoop.bpf.c     ksnoop.bpf.c          runqlen.bpf.c          tcpconnlat.h   </span></span>
<span class="line"><span>biotop.bpf.c        execsnoop.c         ksnoop.c              runqlen.c              tcplife.bpf.c  </span></span>
<span class="line"><span>biotop.c            execsnoop.h         ksnoop.h              runqlen.h              tcplife.c      </span></span>
<span class="line"><span>biotop.h            exitsnoop.bpf.c     llcstat.bpf.c         runqslower.bpf.c       tcplife.h      </span></span>
<span class="line"><span>bitesize.bpf.c      exitsnoop.c         llcstat.c             runqslower.c           tcprtt.bpf.c   </span></span>
<span class="line"><span>bitesize.c          exitsnoop.h         llcstat.h             runqslower.h           tcprtt.c       </span></span>
<span class="line"><span>bitesize.h          filelife.bpf.c      map_helpers.c         runqslower_example.txt tcprtt.h       </span></span>
<span class="line"><span>bits.bpf.h          filelife.c          map_helpers.h         sigsnoop.bpf.c         tcpstates.bpf.c</span></span>
<span class="line"><span>blazesym            filelife.h          maps.bpf.h            sigsnoop.c             tcpstates.c    </span></span>
<span class="line"><span>blk_types.h         filetop.bpf.c       mdflush.bpf.c         sigsnoop.h             tcpstates.h    </span></span>
<span class="line"><span>bpftool             filetop.c           mdflush.c             sigsnoop_example.txt   tcpsynbl.bpf.c </span></span>
<span class="line"><span>btf_helpers.c       filetop.h           mdflush.h             slabratetop.bpf.c      tcpsynbl.c     </span></span>
<span class="line"><span>btf_helpers.h       fsdist.bpf.c        mountsnoop.bpf.c      slabratetop.c          tcpsynbl.h</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于其简单性，我们将在本示例中只使用其中的 <code>opensnoop</code> 。 <code>opensnoop</code> 可以跟踪系统范围内的 <code>open()</code> 系统调用，并打印各种详细信息。因此，它是展示简单 eBPF 用例的优秀第一个程序。</p><h3 id="程序组成" tabindex="-1"><a class="header-anchor" href="#程序组成"><span>程序组成</span></a></h3><p>eBPF 应用程序通常由至少两部分组成：</p><ul><li>一个用户空间程序（USP），它声明内核空间程序并将其附加到相关的跟踪点/探针。</li><li>一旦满足跟踪点/探针，内核空间程序（KSP）就会被触发并在内核内部运行。这是实际的 eBPF 逻辑实现的地方。</li></ul><p>由于这两个程序无法直接相互通信（根据设计），因此它们需要一个缓冲区来交换数据。对于 eBPF，它是通过 <a href="https://docs.kernel.org/bpf/maps.html" target="_blank" rel="noopener noreferrer">不同类型的 BPF 映射</a> 实现的。</p><h3 id="构建" tabindex="-1"><a class="header-anchor" href="#构建"><span>构建</span></a></h3><p>让我们构建可执行文件，这大约需要 15 秒，然后会生成一个opensnoop可执行文件</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h3><p>要实际运行已编译的 <code>opensnoop</code> 二进制文件，需要 <code>CAP_BPF</code> Linux 功能。这是强制性的，因为我们的逻辑使用特权 BPF 操作（例如，将 eBPF 代码加载到内核中），同时许多 Linux 发行版不允许非特权 eBPF。 <code>CAP_BPF</code> 自 Linux 内核 5.8 起可用，允许加载所有类型的 BPF 程序、创建大多数地图类型、加载 BTF、迭代程序和地图。引入它是为了将 BPF 功能与重载的 <code>CAP_SYS_ADMIN</code> 功能分开。</p><p>然而，由于在这个演示环境中我们无论如何都是以 root 身份运行的，所以这不是问题。运行 <code>opensnoop</code> ：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./opensnoop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="使用程序" tabindex="-1"><a class="header-anchor" href="#使用程序"><span>使用程序</span></a></h3><p><code>opensnoop</code> 现在将在每次打开文件时显示输出。但由于像我们这样的小型虚拟机中几乎没有发生任何事情，因此我们将生成一些事件。</p><p>顶部左侧，切换到第二个&gt;_2️⃣Terminal 2选项卡，执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/os-release</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出：</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PRETTY_NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Ubuntu 22.04.2 LTS&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Ubuntu&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">VERSION_ID</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;22.04&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">VERSION</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;22.04.2 LTS (Jammy Jellyfish)&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">VERSION_CODENAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">jammy</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ID</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ubuntu</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ID_LIKE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">debian</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">HOME_URL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://www.ubuntu.com/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SUPPORT_URL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://help.ubuntu.com/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">BUG_REPORT_URL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://bugs.launchpad.net/ubuntu/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PRIVACY_POLICY_URL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">UBUNTU_CODENAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">jammy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>切换回第一个&gt;_1️⃣Terminal 1选项卡，查看输出：已经访问了多个文件，直到 <code>cat</code> 最终输出文件内容。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>PID    COMM              FD ERR PATH</span></span>
<span class="line"><span>2903   cat                3   0 /etc/ld.so.cache</span></span>
<span class="line"><span>2902   opensnoop         21   0 /etc/localtime</span></span>
<span class="line"><span>2903   cat                3   0 /lib/x86_64-linux-gnu/libc.so.6</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/locale-archive</span></span>
<span class="line"><span>2903   cat                3   0 /usr/share/locale/locale.alias</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_IDENTIFICATION</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_IDENTIFICATION</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_MEASUREMENT</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_MEASUREMENT</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_TELEPHONE</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_TELEPHONE</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_ADDRESS</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_ADDRESS</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_NAME</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_NAME</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_PAPER</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_PAPER</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_MESSAGES</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_MESSAGES</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_MESSAGES/SYS_LC_MESSAGES</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_MONETARY</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_MONETARY</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_COLLATE</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_COLLATE</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_TIME</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_TIME</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_NUMERIC</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_NUMERIC</span></span>
<span class="line"><span>2903   cat               -1   2 /usr/lib/locale/C.UTF-8/LC_CTYPE</span></span>
<span class="line"><span>2903   cat                3   0 /usr/lib/locale/C.utf8/LC_CTYPE</span></span>
<span class="line"><span>2903   cat                3   0 /etc/os-release</span></span>
<span class="line"><span>2495   bash               3   0 /root/.bash_history</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您保持 <code>opensnoop</code> 运行，您有时可能会看到虚拟机上运行的其他进程生成的输出，例如 <code>systemd</code> 。</p><p>现在，您可以单击“检查”按钮并转到下一部分，我们将在其中进行更深入的研究。</p><h2 id="检查bpf对象文件" tabindex="-1"><a class="header-anchor" href="#检查bpf对象文件"><span>检查BPF对象文件</span></a></h2><p>笔记者：这部分 readelf 应该在汇编分析里是常规操作了，我不太熟悉，另外找了些资料：</p><ul><li>readelf是一个用于查看二进制可执行文件和共享库的程序。 它可以用来 <strong>查看 ELF</strong>（Executable and Linking Format）文件的信息</li><li>ELF是一种用于Unix类操作系统中可执行文件和共享库的标准文件格式，它是一种自描述、可重定位、可扩展、可升级、跨平台的文件格式。 内容包含了： <ul><li>文件头信息</li><li>程序指令、数据</li><li>程序头表</li><li>节头表</li><li>符号表</li><li>动态节表</li><li>重定向表</li><li>……等各种详细信息</li></ul></li><li>.o文件是目标文件，包含了编译器编译源代码产生的汇编代码和符号表等信息，它通常是被编译器转换成可执行文件或库文件的中间过程。 因此，.o文件<strong>实际上是一种未完成的ELF文件</strong>。 它包含了ELF文件的部分信息，包括文件头、节头表、段数据等，这也是为什么可以使用readelf命令查看.o文件的原因。通过查看.o文件的信息，可以获得编译器将源代码和库文件编译为可执行文件或共享库的一些提示，比如符号表、重定位信息等，对于程序调试和分析非常有用。</li></ul><h3 id="readelf" tabindex="-1"><a class="header-anchor" href="#readelf"><span>readelf</span></a></h3><p>在左侧的 &gt;_ 1️⃣ 终端中，使用 <code>readelf</code> 检查我们之前作为 <code>make</code> 命令的一部分构建的 BPF 对象文件。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">readelf</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --section-details</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --headers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .output/opensnoop.bpf.o</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ELF</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Header:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Magic:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   7f</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 45</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 46</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 02</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 01</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 01</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Class:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                             ELF64</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Data:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                              2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;s complement, little endian</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Version:                           1 (current)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  OS/ABI:                            UNIX - System V</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ABI Version:                       0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Type:                              REL (Relocatable file)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Machine:                           Linux BPF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Version:                           0x1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Entry point address:               0x0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Start of program headers:          0 (bytes into file)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Start of section headers:          11960 (bytes into file)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Flags:                             0x0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Size of this header:               64 (bytes)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Size of program headers:           0 (bytes)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Number of program headers:         0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Size of section headers:           64 (bytes)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Number of section headers:         20</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Section header string table index: 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Section Headers:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [Nr] Name</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       Type              Address          Offset            Link</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       Size              EntSize          Info              Align</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       Flags</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 0] </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       NULL             0000000000000000  0000000000000000  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000000 0000000000000000  0                 0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000000]: </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 1] .strtab</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       STRTAB           0000000000000000  0000000000002c93  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000224 0000000000000000  0                 1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000000]: </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 2] .text</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  0000000000000040  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000000 0000000000000000  0                 4</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000006]: ALLOC, EXEC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 3] tracepoint/syscalls/sys_enter_open</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  0000000000000040  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000170 0000000000000000  0                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000006]: ALLOC, EXEC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 4] .reltracepoint/syscalls/sys_enter_open</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       REL              0000000000000000  00000000000022d8  19</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000040 0000000000000010  3                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000040]: INFO LINK</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 5] tracepoint/syscalls/sys_enter_openat</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  00000000000001b0  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000170 0000000000000000  0                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000006]: ALLOC, EXEC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 6] .reltracepoint/syscalls/sys_enter_openat</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       REL              0000000000000000  0000000000002318  19</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000040 0000000000000010  5                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000040]: INFO LINK</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 7] tracepoint/syscalls/sys_exit_open</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  0000000000000320  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000330 0000000000000000  0                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000006]: ALLOC, EXEC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 8] .reltracepoint/syscalls/sys_exit_open</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       REL              0000000000000000  0000000000002358  19</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000040 0000000000000010  7                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000040]: INFO LINK</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [ 9] tracepoint/syscalls/sys_exit_openat</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  0000000000000650  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000330 0000000000000000  0                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000006]: ALLOC, EXEC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [10] .reltracepoint/syscalls/sys_exit_openat</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       REL              0000000000000000  0000000000002398  19</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000040 0000000000000010  9                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000040]: INFO LINK</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [11] .rodata</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  0000000000000980  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       000000000000000d 0000000000000000  0                 4</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000002]: ALLOC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [12] .maps</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  0000000000000990  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000038 0000000000000000  0                 8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000003]: WRITE, ALLOC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [13] license</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  00000000000009c8  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000004 0000000000000000  0                 1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000003]: WRITE, ALLOC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [14] .BTF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  00000000000009cc  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000d8e 0000000000000000  0                 4</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000000]: </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [15] .rel.BTF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       REL              0000000000000000  00000000000023d8  19</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000070 0000000000000010  14                8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000040]: INFO LINK</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [16] .BTF.ext</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       PROGBITS         0000000000000000  000000000000175c  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       00000000000008ac 0000000000000000  0                 4</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000000]: </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [17] .rel.BTF.ext</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       REL              0000000000000000  0000000000002448  19</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       0000000000000840 0000000000000010  16                8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000040]: INFO LINK</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [18] .llvm_addrsig</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       LOOS+0xfff4c03   0000000000000000  0000000000002c88  0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       000000000000000b 0000000000000000  0                 1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000080000000]: EXCLUDE</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  [19] .symtab</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       SYMTAB           0000000000000000  0000000000002008  1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       00000000000002d0 0000000000000018  19                8</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       [0000000000000000]:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="elf格式" tabindex="-1"><a class="header-anchor" href="#elf格式"><span>ELF格式</span></a></h3><p>目标文件为 ELF 格式（Executable and Linkable Format，可执行和可链接格式）。 它代表可执行文件、目标代码、共享库和核心转储的通用标准文件格式。它也是 x86 处理器上二进制文件的标准文件格式。</p><h3 id="四个可执行节" tabindex="-1"><a class="header-anchor" href="#四个可执行节"><span>四个可执行节</span></a></h3><p>需要观察一些有趣的事情：</p><ul><li>机器是 <code>Linux BPF</code> 。因此，这个二进制代码应该在 BPF 内核虚拟机内运行。</li><li>该文件中包含 BTF 信息。 BTF 是元数据格式，对与 BPF 程序/映射相关的调试信息进行编码。此调试信息用于地图漂亮打印、函数签名等。</li><li>在表中名为 <code>.text</code> 的节头 (对应[2]那里) 之后，有四个以 <code>tracepoint</code> 开头的可执行节。它们对应于四个 BPF 程序 (对应[3~10, 8条，每个追踪点2条])。</li></ul><p>让我们在 BPF 源代码中找到这四个程序。在第二个选项卡 编辑器中，您可以打开文件 <code>opensnoop.bpf.c</code> - 我们的内核空间程序 (KSP)。 向下滚动找到四个不同的函数，</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 其名称以 \`int tracepoint__syscalls...\` 开头。您应该在第 50、68、125 和 131 行找到它们</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/** 程序解释</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * SEC()宏：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     对应于 \`readelf\` 列出的可执行部分，定义了代码应附加到的 eBPF [钩子](https://ebpf.io/what-is-ebpf/#hook-overview)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     固定格式：SEC(&quot;tracepoint/&lt;category&gt;/&lt;name&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 跟踪点：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     eBPF 跟踪点 这里设置了4个</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     每当发出 open()/enpenat() 系统调用时，就会执行相应的eBPF代码函数。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     跟踪点是内核代码中的静态标记，可用于在正在运行的内核中附加 (eBPF) 代码。这些跟踪点通常放置在有趣的位置或常见的位置来测量性能。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 四个可执行点：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     每当发出 open()/enpenat() 系统调用时，就会执行相应的eBPF代码函数。然后解析调用的参数（文件名等）并将此信息写入 BPF 映射。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     从 BPF映射 那里，我们编译的 \`opensnoop.c\` 二进制部分 - 我们的用户空间程序 (USP) - 可以读取它并将其打印到 STDOUT</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SEC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tracepoint/syscalls/sys_enter_open&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> tracepoint__syscalls__sys_enter_open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> trace_event_raw_sys_enter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {...}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 50行</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SEC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tracepoint/syscalls/sys_enter_openat&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> tracepoint__syscalls__sys_enter_openat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> trace_event_raw_sys_enter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {...}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 68行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SEC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tracepoint/syscalls/sys_exit_open&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> tracepoint__syscalls__sys_exit_open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> trace_event_raw_sys_exit</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {...}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 125行</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SEC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tracepoint/syscalls/sys_exit_openat&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> tracepoint__syscalls__sys_exit_openat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> trace_event_raw_sys_exit</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {...}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 131行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h3><p>如果您想了解有关这四个 BPF 程序正在做什么的更多详细信息，请参阅 Liz Rice 所著的 <a href="https://isovalent.com/ebpf/" target="_blank" rel="noopener noreferrer">《What is eBPF ?》by Liz Rice</a> 一书的第 3 章。</p><p>但这如何与 Linux 内核结合在一起呢？单击“下一步”以了解下一部分的内容。</p><h2 id="使用-bpftool-查看加载到内核中的bpf程序" tabindex="-1"><a class="header-anchor" href="#使用-bpftool-查看加载到内核中的bpf程序"><span>使用 <code>bpftool</code> 查看加载到内核中的BPF程序</span></a></h2><p>查看内核中的 BPF 程序：现在我们知道 BPF 代码正在运行，让我们看一下内核方面的事情。为此，我们将使用 <code>bpftool</code> 来查看我们已加载到内核中的内容。</p><p>当前 <code>opensnoop</code> 未运行。让我们看看我们的机器上是否有运行任何 eBPF 程序。我们可以利用 <code>bpftool</code> 来实现这一点。</p><p>bpftool是与 eBPF 一起使用的瑞士军刀。它可以在 GitHub 上找到，或者对于某些 Linux 发行版（例如 Ubuntu 和 Fedora），可以直接在 Linux 内核存储库中找到。</p><h3 id="查看运行的ebpf程序-bpftool-prog-list" tabindex="-1"><a class="header-anchor" href="#查看运行的ebpf程序-bpftool-prog-list"><span>查看运行的eBPF程序 <code>bpftool prog list</code></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bpftool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prog</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">65:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_device</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 28a890580b33b0dc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 560B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 352B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">66:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_device</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> c8b47a902f1cc68b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 464B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 289B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">70:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_device</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e3dbd137be8d6168</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 504B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 310B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">71:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_device</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0ecd07b7b633809f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 496B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 308B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">72:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_skb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6deef7357e7b4530</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 64B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 55B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">73:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_skb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6deef7357e7b4530</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 64B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 55B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">74:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_device</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e3dbd137be8d6168</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 504B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 310B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">75:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_skb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6deef7357e7b4530</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 64B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 55B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">76:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_skb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6deef7357e7b4530</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 64B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 55B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">80:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_device</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8b9c33f36f812014</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 744B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 448B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">81:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_skb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6deef7357e7b4530</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 64B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 55B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">82:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup_skb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6deef7357e7b4530</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:34:43+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 64B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 55B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一些解释：</p><ul><li>您应该看到两种条目： <code>cgroup_skb</code> 和 <code>cgroup_device</code> 。两者均由 Systemd 组件 systemd.resource-control 管理，并用于管理 Systemd 单元对网络设备（请参阅示例）和文件系统的访问。</li><li>目前不应有任何 <code>tracepoint</code> 类型的条目</li></ul><p>在第二个终端，我们运行 <code>opensnoop</code> ：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./opensnoop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当它运行时，切换回第一个终端，然后重新运行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bpftool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prog</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出（相较于第一次调用时，多出来了四个追踪点）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">98:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint__syscalls__sys_enter_open</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 07014be5359438f8</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:54:41+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 240B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 137B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  map_ids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9,6</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        btf_id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2941</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">100:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint__syscalls__sys_enter_openat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8ee3432dcd98ffc3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:54:41+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 240B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 137B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  map_ids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9,6</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        btf_id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2941</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">101:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint__syscalls__sys_exit_open</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 37f628f9e857b071</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:54:41+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 792B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 546B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  map_ids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6,9,7</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        btf_id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2941</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">102:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint__syscalls__sys_exit_openat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 37f628f9e857b071</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  gpl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        loaded_at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2023-07-19T05:54:41+0000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 792B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  jited</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 546B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  map_ids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6,9,7</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        btf_id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2941</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您会看到另外加载了四个 BPF 程序！这些对应于前面提到的四个 opensnoop BPF 程序。 请注意，名称被截断，因此您无法真正看到哪个是用于进入或退出的。 但是，它们每个都引用两个或三个地图 ID，例如 <code>map_ids 11,8</code> （数字可能不同）。让我们利用这些信息吧！</p><h3 id="加载到内核中的映射-bpftool-map-list" tabindex="-1"><a class="header-anchor" href="#加载到内核中的映射-bpftool-map-list"><span>加载到内核中的映射 <code>bpftool map list</code></span></a></h3><p>当 opensnoop 仍在第二个 &gt;_2️⃣ 终端 2 中运行时，留在第一个 &gt;_1️⃣ 终端 1 中并观察加载到内核中的映射</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bpftool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> map</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出，输出显示了一些现有的 BPF 映射</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">6:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  flags</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  value</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 16B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  max_entries</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10240</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 245760B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        btf_id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2941</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> perf_event_array</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> events</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  flags</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  value</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  max_entries</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2941</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">9:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> array</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoo.rodata</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  flags</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x480</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  value</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 13B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  max_entries</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        btf_id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  frozen</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2941</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">17:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> array</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pid_iter.rodata</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  flags</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x480</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  value</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  max_entries</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        btf_id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 76</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  frozen</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bpftool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2951</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">18:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> array</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libbpf_det_bind</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  flags</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  value</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 32B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  max_entries</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  memlock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4096B</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一些解释：</p><ul><li>观察到有一个名为 <code>start</code> 的哈希表和一个名为 <code>events</code> 的性能事件数组。这些在源代码中的 <code>~/bcc/libbpf-tools/opensnoop.bpf.c</code> 第 13-24 行中定义。在 编辑器中查看一下。</li><li>还有一个用于 opensnoop 只读数据的数组 ( <code>array name opensnoo.rodata</code> )。</li><li>另请注意，每行开头的地图 ID 与之前 <code>bpftool prog list</code> 引用的 ID 相对应。</li></ul><h3 id="观察程序字节码-bpftool-prog-dump-xlated-id-98-linum" tabindex="-1"><a class="header-anchor" href="#观察程序字节码-bpftool-prog-dump-xlated-id-98-linum"><span>观察程序字节码 <code>bpftool prog dump xlated id 98 linum</code></span></a></h3><p>让我们看一下其中一个程序的字节码。为此，让我们再次查看一下 prog 列表。在 &gt;_ 1️⃣ 终端 1 中执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bpftool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prog</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在每行的开头，您可以看到相应 BPF 程序的 ID。获取 <code>tracepoint</code> 程序的 ID，并转储字节码（在我们的运行中，编号为 <code>46</code> ，您的编号可能不同）：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bpftool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prog</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dump</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xlated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 98</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> linum</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">int</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint__syscalls__sys_enter_open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">struct</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> trace_event_raw_sys_enter</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">int</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tracepoint__syscalls__sys_enter_open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">struct</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> trace_event_raw_sys_enter</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">line_num:50</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> line_col:0]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   0:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (bf) r6 = r1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u64</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bpf_get_current_pid_tgid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:52 line_col:11]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (85) call bpf_get_current_pid_tgid#186208</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u32</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:55 line_col:6]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   2:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (63) *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u32</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = r0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">targ_tgid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">targ_tgid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> !=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tgid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:36 line_col:6]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (18) r1 = map[id:9][0]+4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   5:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (61) r2 = *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u32</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">targ_pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">targ_pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> !=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:38 line_col:6]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   6:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (18) r1 = map[id:9][0]+0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   8:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (61) r2 = *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u32</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">valid_uid(targ_uid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) { [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:40 line_col:16]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   9:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (18) r7 = map[id:9][0]+8</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  11:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (61) r1 = *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u32</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r7</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  12:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (18) r2 = 0xffffffff</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">targ_uid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> !=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:42 line_col:7]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  14:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (b7) r1 = 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">struct</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> args_t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> args</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:59 line_col:17]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  15:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (7b) *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u64</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = r1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">args.fname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (const </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">char</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)ctx-&gt;args[0]; [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:60 line_col:30]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  16:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (79) r1 = *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u64</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">args.fname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (const </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">char</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)ctx-&gt;args[0]; [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:60 line_col:14]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  17:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (7b) *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u64</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -24</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = r1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">args.flags</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (int)ctx-&gt;args[1]; [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:61 line_col:21]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  18:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (79) r1 = *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u64</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +24</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">args.flags</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (int)ctx-&gt;args[1]; [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:61 line_col:14]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  19:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (63) *(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">u32</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">r10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = r1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  20:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (bf) r2 = r10</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">struct</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> args_t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> args</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:59 line_col:17]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  21:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (07) r2 += -4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  22:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (bf) r3 = r10</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  23:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (07) r3 += -24</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bpf_map_update_elem(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">start,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pid,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">args,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:62 line_col:3]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  24:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (18) r1 = map[id:6]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  26:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (b7) r4 = 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  27:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (85) call htab_map_update_elem#220464</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; [file:/opt/ebpf/bcc/libbpf-tools/opensnoop.bpf.c line_num:64 line_col:2]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  28:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (b7) r0 = 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  29:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (95) exit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如您所见，这显示了有关源代码的信息。切换到 编辑器选项卡并打开文件 <code>opensnoop.bpf.c</code> 。将 &gt;_1️⃣ 终端 1 中输出的行号与源代码文件中的行号进行比较，看看它们是否匹配。这使得比较 BPF 编译对象和它背后的源代码变得相当容易！</p><p>（与原代码相比，这里有一些区别）</p><p>能够编写自己的 BPF 代码不是很棒吗？单击下一步并执行此操作！</p><h2 id="添加您自己的跟踪消息" tabindex="-1"><a class="header-anchor" href="#添加您自己的跟踪消息"><span>添加您自己的跟踪消息</span></a></h2><p>编写我们自己的代码：现在我们知道如何运行 eBPF 工具，如何观察它们的行为，检查内核中加载的内容，甚至获取与实际源代码相比实际发生的情况的信息。接下来，我们要编写实际的代码！为此，我们将把我们自己的跟踪消息添加到代码中！</p><h3 id="两种调试打印方法" tabindex="-1"><a class="header-anchor" href="#两种调试打印方法"><span>两种调试打印方法</span></a></h3><p>eBPF 程序可以出于调试目的编写跟踪消息。对于通常通过 <code>trace_pipe</code> 完成的快速示例，可以从 <code>/sys/kernel/debug/tracing/trace_pipe</code> 读取。 但是，它有一些限制：最大 3 个参数，trace_pipe 是全局共享的（因此并发程序将产生冲突的输出），等等。 因此，您不应该将其用于高效的 eBPF 代码。您应该通过 <code>BPF_PERF_OUTPUT()</code> 界面来完成此操作。 尽管如此，为了简单起见，我们在本实验中通过 <code>trace_pipe</code> 进行操作，并将我们自己的消息添加到 <code>opensnoop</code> 中。</p><h3 id="修改程序并重新运行" tabindex="-1"><a class="header-anchor" href="#修改程序并重新运行"><span>修改程序并重新运行</span></a></h3><p>在 编辑器选项卡的文件列表左侧，向下滚动并选择文件 <code>opensnoop.bpf.c</code> 。找到 <code>cleanup:</code> 标签，它应该位于第 119 行左右。在其中，在其上方添加以下行 <code>bpf_printk(&quot;Hello world&quot;);</code>，修改后文件应如下所示：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   /* emit event */</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   bpf_perf_event_output</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">events</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> BPF_F_CURRENT_CPU</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                 &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sizeof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   bpf_printk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello world&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 添加这一行，其他不动</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cleanup:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 原来处于第119行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   bpf_map_delete_elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>单击 编辑器窗口顶部选项卡中的 💾 保存文件。</p><p>在 &gt;_ 1️⃣ Terminal 1 选项卡中，重建现在更改的 <code>opensnoop</code> ：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> opensnoop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>接下来，在执行新构建之前，开始读取第二个&gt;_2️⃣终端 2 中的内核跟踪输出文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /sys/kernel/debug/tracing/trace_pipe</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>开始时不会显示任何输出 - 它正在等待数据</p><p>现在，在第一个&gt;_1️⃣终端1中，运行 <code>opensnoop</code> ：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./opensnoop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>现在我们只需要生成文件访问权限。在 编辑器中，单击任意文件。在编辑器中加载文件会生成很多事件。 切换到 &gt;_ 1️⃣ 运行 <code>opensnoop</code> 的终端 1，观察有大量文件访问。 转到第二个 &gt;_ 2️⃣ 终端 2，我们的 <code>cat</code> 进程仍在运行，并观察到打印了很多跟踪消息！</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   sandbox-agent-1778</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [000] d...1  2066.381919: bpf_trace_printk: Hello world</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   sandbox-agent-1778</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [000] d...1  2066.381932: bpf_trace_printk: Hello world</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   sandbox-agent-1778</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [000] d...1  2066.381951: bpf_trace_printk: Hello world</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   sandbox-agent-1778</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [000] d...1  2066.381970: bpf_trace_printk: Hello world</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   sandbox-agent-1778</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [000] d...1  2066.381989: bpf_trace_printk: Hello world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="补充" tabindex="-1"><a class="header-anchor" href="#补充"><span>补充</span></a></h3><p>恭喜，您已经编写了一些 eBPF 代码并在内核中运行它！</p><p>请注意，除了显示您定义的字符串外，跟踪行还包括其他有用的上下文信息 - 例如，可执行文件的名称和触发运行程序的事件的进程 ID - 在本例中为 <code>sandbox-agent</code> 运行。</p><p>这说明了 eBPF 程序如何收集有关触发它的事件的有用信息 - 例如，可以出于可观察性目的将其报告给用户空间。</p><h2 id="ebpf入门测验" tabindex="-1"><a class="header-anchor" href="#ebpf入门测验"><span>eBPF入门测验</span></a></h2><p>（蒙了几次才蒙对了）</p><ul><li>❌ eBPF 程序始终需要 Linux 功能“CAP_BPF” 和 “CAP_SYS_ADMIN”</li><li>✅ ELF 代表 x86 架构上可执行文件的通用标准文件格式</li><li>✅ eBPF 程序使用 BPF 映射与用户空间应用程序交换数据</li><li>❌ “BPF_PERF_OUTPUT()” 接口可用于通过向用户空间提供消息来对内核空间程序进行故障排除。</li><li>✅ 每当用户空间程序尝试与内核空间程序交换数据时，它们都需要使用 eBPF 映射</li></ul>`,100)]))}const k=i(e,[["render",p],["__file","02. Try the Lab.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/eBPF/%E5%AE%98%E7%BD%91/02.%20Try%20the%20Lab.html","title":"eBPF","lang":"zh-CN","frontmatter":{"description":"eBPF 目录 Try the Lab 官网在线虚拟机 先导 这个在线实验台在开始时会有些提示，这是因为这里要准备虚拟环境需要耗费比较多的时间（1min），给点东西给你看防止你那么闷。 但其实内容都是在官网中 “What is eBPF” 提到过了，没什么意义。 我会把这部分内容在 What is eBPF 笔记中重复一次，此处不再赘述 然后整个Lab...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/eBPF/%E5%AE%98%E7%BD%91/02.%20Try%20the%20Lab.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"eBPF"}],["meta",{"property":"og:description","content":"eBPF 目录 Try the Lab 官网在线虚拟机 先导 这个在线实验台在开始时会有些提示，这是因为这里要准备虚拟环境需要耗费比较多的时间（1min），给点东西给你看防止你那么闷。 但其实内容都是在官网中 “What is eBPF” 提到过了，没什么意义。 我会把这部分内容在 What is eBPF 笔记中重复一次，此处不再赘述 然后整个Lab..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"eBPF\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"eBPF","slug":"ebpf","link":"#ebpf","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"Try the Lab","slug":"try-the-lab","link":"#try-the-lab","children":[{"level":2,"title":"先导","slug":"先导","link":"#先导","children":[]},{"level":2,"title":"构建并运行 opensnoop","slug":"构建并运行-opensnoop","link":"#构建并运行-opensnoop","children":[{"level":3,"title":"项目介绍","slug":"项目介绍","link":"#项目介绍","children":[]},{"level":3,"title":"程序组成","slug":"程序组成","link":"#程序组成","children":[]},{"level":3,"title":"构建","slug":"构建","link":"#构建","children":[]},{"level":3,"title":"运行","slug":"运行","link":"#运行","children":[]},{"level":3,"title":"使用程序","slug":"使用程序","link":"#使用程序","children":[]}]},{"level":2,"title":"检查BPF对象文件","slug":"检查bpf对象文件","link":"#检查bpf对象文件","children":[{"level":3,"title":"readelf","slug":"readelf","link":"#readelf","children":[]},{"level":3,"title":"ELF格式","slug":"elf格式","link":"#elf格式","children":[]},{"level":3,"title":"四个可执行节","slug":"四个可执行节","link":"#四个可执行节","children":[]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[]}]},{"level":2,"title":"使用 bpftool 查看加载到内核中的BPF程序","slug":"使用-bpftool-查看加载到内核中的bpf程序","link":"#使用-bpftool-查看加载到内核中的bpf程序","children":[{"level":3,"title":"查看运行的eBPF程序 bpftool prog list","slug":"查看运行的ebpf程序-bpftool-prog-list","link":"#查看运行的ebpf程序-bpftool-prog-list","children":[]},{"level":3,"title":"加载到内核中的映射 bpftool map list","slug":"加载到内核中的映射-bpftool-map-list","link":"#加载到内核中的映射-bpftool-map-list","children":[]},{"level":3,"title":"观察程序字节码 bpftool prog dump xlated id 98 linum","slug":"观察程序字节码-bpftool-prog-dump-xlated-id-98-linum","link":"#观察程序字节码-bpftool-prog-dump-xlated-id-98-linum","children":[]}]},{"level":2,"title":"添加您自己的跟踪消息","slug":"添加您自己的跟踪消息","link":"#添加您自己的跟踪消息","children":[{"level":3,"title":"两种调试打印方法","slug":"两种调试打印方法","link":"#两种调试打印方法","children":[]},{"level":3,"title":"修改程序并重新运行","slug":"修改程序并重新运行","link":"#修改程序并重新运行","children":[]},{"level":3,"title":"补充","slug":"补充","link":"#补充","children":[]}]},{"level":2,"title":"eBPF入门测验","slug":"ebpf入门测验","link":"#ebpf入门测验","children":[]}]}],"git":{},"readingTime":{"minutes":17.24,"words":5173},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/eBPF/官网/02. Try the Lab.md","excerpt":"\\n<h1>目录</h1>\\n<h1>Try the Lab</h1>\\n<p><a href=\\"https://play.instruqt.com/embed/isovalent/tracks/ebpf-getting-started\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网在线虚拟机</a></p>\\n<h2>先导</h2>\\n<p>这个在线实验台在开始时会有些提示，这是因为这里要准备虚拟环境需要耗费比较多的时间（1min），给点东西给你看防止你那么闷。\\n但其实内容都是在官网中 “What is eBPF” 提到过了，没什么意义。</p>\\n<p>我会把这部分内容在 What is eBPF 笔记中重复一次，此处不再赘述</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/eBPF/官网/02. Try the Lab.md","value":{"title":"02. Try the Lab","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/eBPF/官网/02. Try the Lab.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{k as comp,d as data};
