import{_ as c,c as l,a as s,d as e,b as a,e as i,o as r,r as t}from"./app-P52SBxEA.js";const u={},d={href:"https://www.bilibili.com/video/BV1jV4y1H7nj",target:"_blank",rel:"noopener noreferrer"};function k(E,n){const p=t("ExternalLinkIcon"),o=t("Mermaid");return r(),l("div",null,[n[2]||(n[2]=s("h2",{id:"事件触发流程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#事件触发流程"},[s("span",null,"事件触发流程")])],-1)),s("p",null,[n[1]||(n[1]=e("参考：")),s("a",d,[n[0]||(n[0]=e("【B站】【阶段四：Linux高并发服务器开发】2-5 libevent")),a(p)])]),a(o,{id:"mermaid-6",code:"eJxtj7FuwkAQRGv8FVdeCv9CJNKlsVyEGl18m8sq1mKdL0ZCV0ADLqiQgAYQNS10FHwNJ/EXHBhkF5TzZkY7q7TIftnXR9Dq8H9CQoMixQHIt6D1yZEKryTLjGZuuXXz0k0nl1npzYhTj8IMSCIpdllv3Gp3Hu/dcOTNmD+NJm1zkRgsgLnT0B2OFfSHw/DdQgFkuiLPUZGNavKjAWzHb6kRQd9GfkCjJqWNaykhvQUaxGhUCjRIVy4elfsS275lEpGm3yL568oewXk2zUDnmBsb+8mv/OrxKhMFV2Daf8E="}),n[3]||(n[3]=i(`<p>其中</p><ul><li>非未决态：是还没有开始监听的意思</li><li>未决态：还没有被触发</li><li>激活态：被触发了</li></ul><p>结合代码：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">event_base</span><span class="token operator">*</span> <span class="token function">event_base_new</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建树根节点</span>
<span class="token function">event_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 初始化上树节点</span>
<span class="token function">event_add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 上树监听</span>
<span class="token keyword">int</span> <span class="token function">event_base_dispatch</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">event_base</span><span class="token operator">*</span> base<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 循环监听</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4))])}const m=c(u,[["render",k],["__file","08. 原理类 - 事件触发流程.html.vue"]]),v=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E9%80%9A%E7%94%A8%E5%BA%93/Libevent/08.%20%E5%8E%9F%E7%90%86%E7%B1%BB%20-%20%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E6%B5%81%E7%A8%8B.html","title":"","lang":"zh-CN","frontmatter":{"description":"事件触发流程 参考：【B站】【阶段四：Linux高并发服务器开发】2-5 libevent 其中 非未决态：是还没有开始监听的意思 未决态：还没有被触发 激活态：被触发了 结合代码：","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E9%80%9A%E7%94%A8%E5%BA%93/Libevent/08.%20%E5%8E%9F%E7%90%86%E7%B1%BB%20-%20%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E6%B5%81%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:description","content":"事件触发流程 参考：【B站】【阶段四：Linux高并发服务器开发】2-5 libevent 其中 非未决态：是还没有开始监听的意思 未决态：还没有被触发 激活态：被触发了 结合代码："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":2,"title":"事件触发流程","slug":"事件触发流程","link":"#事件触发流程","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.53,"words":158},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/通用库/Libevent/08. 原理类 - 事件触发流程.md","excerpt":"<h2>事件触发流程</h2>\\n<p>参考：<a href=\\"https://www.bilibili.com/video/BV1jV4y1H7nj\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【B站】【阶段四：Linux高并发服务器开发】2-5 libevent</a></p>\\n<p>其中</p>\\n<ul>\\n<li>非未决态：是还没有开始监听的意思</li>\\n<li>未决态：还没有被触发</li>\\n<li>激活态：被触发了</li>\\n</ul>\\n<p>结合代码：</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">event_base</span><span class=\\"token operator\\">*</span> <span class=\\"token function\\">event_base_new</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 创建树根节点</span>\\n<span class=\\"token function\\">event_new</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 初始化上树节点</span>\\n<span class=\\"token function\\">event_add</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 上树监听</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">event_base_dispatch</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">event_base</span><span class=\\"token operator\\">*</span> base<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 循环监听</span>\\n</code></pre></div>","autoDesc":true}');export{m as comp,v as data};
