import{_ as i,c as o,e as a,a as t,d as s,b as l,o as r,r as d}from"./app-CtMeyR3O.js";const u={},p={href:"https://doc.qt.io/qt-5/qtquick-qmlmodule.html",target:"_blank",rel:"noopener noreferrer"},c={href:"https://doc.qt.io/qt-5/qtquick-controls2-qmlmodule.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://doc.qt.io/qt-5/qtquickcontrols2-material.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://doc.qt.io/qt-5/qtquickcontrols2-universal.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://doc.qt.io/qt-5/qtquick-templates2-qmlmodule.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://doc.qt.io/qt-5/qt-labs-calendar-qmlmodule.html",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://doc.qt.io/qt-5/qt-labs-platform-qmlmodule.html",target:"_blank",rel:"noopener noreferrer"};function b(q,n){const e=d("ExternalLinkIcon");return r(),o("div",null,[n[15]||(n[15]=a(`<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>Qt</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="qt-quick-controls-1-开发" tabindex="-1"><a class="header-anchor" href="#qt-quick-controls-1-开发"><span>Qt Quick Controls 1 开发</span></a></h1><p>吐槽：用书太旧了，看得糊涂</p><h2 id="qt-quick-control-简概" tabindex="-1"><a class="header-anchor" href="#qt-quick-control-简概"><span>Qt Quick Control 简概</span></a></h2><h3 id="简概" tabindex="-1"><a class="header-anchor" href="#简概"><span>简概</span></a></h3><ul><li>Qt 5.1开始引用的QML模块，提供了大量类似 Qt Widgets 那样的可重用的UI组件，如按钮、菜单、对话框和视图等</li><li>这些组件能在不同的平台上模仿相应的本地行为</li><li>对比普通QML程序 <ul><li>需要导入Qt Quick Controls库</li><li>定义了一个标准的桌面应用程序窗口，由主应用窗口及附属组件类属性、主窗体和其他类型组件构成。用到的组件库都要import</li></ul></li></ul><h3 id="项目创建" tabindex="-1"><a class="header-anchor" href="#项目创建"><span>项目创建</span></a></h3><ul><li>旧版本：文件 &gt; 新建文件或项目 &gt; 新建项目 &gt; Application &gt; Qt Quick Controls Application模板</li><li>现版本：没有了Qt Quick Controls项目模板的选项</li></ul><h3 id="项目结构-书本版本" tabindex="-1"><a class="header-anchor" href="#项目结构-书本版本"><span>项目结构（书本版本）</span></a></h3><p>两个文件</p><p>main.qml</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">/* import部分 */</span>
import QtQuick <span class="token number">2.7</span>
import QtQuick.Controls						<span class="token comment">// 版本1.5用不了，可以用2.12</span>
import QtQuick.Dialogs <span class="token number">1.2</span>  				<span class="token comment">// 新版本会报错：QML module not found</span>

<span class="token comment">/* 对象声明 */</span>
ApplicationWindow<span class="token punctuation">{</span>							<span class="token comment">// 【主应用窗口】</span>
    visible<span class="token operator">:</span><span class="token boolean">true</span>
    width<span class="token operator">:</span><span class="token number">640</span>
    height<span class="token operator">:</span><span class="token number">480</span>
    title<span class="token operator">:</span>qsTr(<span class="token string">&quot;Hello World&quot;</span>)
    menuBar<span class="token operator">:</span>MenuBar<span class="token punctuation">{</span>                    	<span class="token comment">// 组件类属性：菜单栏</span>
        Menu<span class="token punctuation">{</span>                           	<span class="token comment">// 菜单</span>
            title<span class="token operator">:</span>qsTr(<span class="token string">&quot;File&quot;</span>)
            MenuItem<span class="token punctuation">{</span>                   	<span class="token comment">// 菜单项</span>
                text<span class="token operator">:</span>qsTr(<span class="token string">&quot;File&quot;</span>)
                onTriggered<span class="token operator">:</span>console.log(<span class="token string">&quot;Open action triggered&quot;</span>);
            <span class="token punctuation">}</span>
            MenuItem<span class="token punctuation">{</span>
                text<span class="token operator">:</span>qsTr(<span class="token string">&quot;Exit&quot;</span>)
                onTriggered<span class="token operator">:</span>Qt.quit();
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    MainForm<span class="token punctuation">{</span>                           	<span class="token comment">// 主窗体</span>
        anchors.fill<span class="token operator">:</span>parent
        button1.onClicked<span class="token operator">:</span>messageDialog.show(qsTr(<span class="token string">&quot;Button 1 pressed&quot;</span>))
        button2.onClicked<span class="token operator">:</span>messageDialog.show(qsTr(<span class="token string">&quot;Button 2 pressed&quot;</span>))
    <span class="token punctuation">}</span>
    MessageDialog<span class="token punctuation">{</span>                      	<span class="token comment">// 其他组件：对话框</span>
        id<span class="token operator">:</span>messageDialog
        title<span class="token operator">:</span>qsTr(<span class="token string">&quot;May I have your attention, please?&quot;</span>)
        function show(caption)<span class="token punctuation">{</span>
            messageDialog.text = caption;
            messageDialog.open();
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中import版本详见官网</p>`,14)),t("table",null,[t("thead",null,[t("tr",null,[n[13]||(n[13]=t("th",null,"Qt",-1)),t("th",null,[t("a",p,[n[0]||(n[0]=s("QtQuick")),l(e)])]),t("th",null,[t("a",c,[n[1]||(n[1]=s("QtQuick.Controls")),l(e)]),n[5]||(n[5]=s(", ")),t("a",k,[n[2]||(n[2]=s("QtQuick.Controls.Material")),l(e)]),n[6]||(n[6]=s(", ")),n[7]||(n[7]=t("br",null,null,-1)),n[8]||(n[8]=s()),t("a",m,[n[3]||(n[3]=s("QtQuick.Controls.Universal")),l(e)]),n[9]||(n[9]=s(", ")),t("a",v,[n[4]||(n[4]=s("QtQuick.Templates")),l(e)])]),t("th",null,[t("a",h,[n[10]||(n[10]=s("Qt.labs.calendar")),l(e)]),n[12]||(n[12]=s(", ")),t("a",Q,[n[11]||(n[11]=s("Qt.labs.platform")),l(e)])])])]),n[14]||(n[14]=t("tbody",null,[t("tr",null,[t("td",null,"5.7"),t("td",null,"2.7"),t("td",null,"2.0"),t("td",null,"1.0")]),t("tr",null,[t("td",null,"5.8"),t("td",null,"2.8"),t("td",null,"2.1"),t("td",null,"1.0")]),t("tr",null,[t("td",null,"5.9"),t("td",null,"2.9"),t("td",null,"2.2"),t("td",null,"1.0")]),t("tr",null,[t("td",null,"5.10"),t("td",null,"2.10"),t("td",null,"2.3"),t("td",null,"1.0")]),t("tr",null,[t("td",null,"5.11"),t("td",null,"2.11"),t("td",null,"2.4"),t("td",null,"1.0")]),t("tr",null,[t("td",null,"5.12"),t("td",null,"2.12"),t("td",null,"2.12"),t("td",null,"1.0")]),t("tr",null,[t("td",null,"..."),t("td",null,"..."),t("td",null,"..."),t("td",null,"...")])],-1))]),n[16]||(n[16]=a(`<p>MainForm.ui.qml</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>import QtQuick <span class="token number">2.7</span>
import QtQuick.Controls <span class="token number">1.5</span>
import QtQuick.Layouts <span class="token number">1.3</span>

Item<span class="token punctuation">{</span>
    width<span class="token operator">:</span><span class="token number">640</span>
    height<span class="token operator">:</span><span class="token number">480</span>
    <span class="token comment">/* 定义属性别名，在main.qml中引用这两个按钮控件 */</span>
    property alias button1<span class="token operator">:</span> button1
    property alias button2<span class="token operator">:</span> button2
    RowLayout<span class="token punctuation">{</span>
    	anchors.centerIn<span class="token operator">:</span>parent
		Button<span class="token punctuation">{</span>
    		id<span class="token operator">:</span>button1
    		text<span class="token operator">:</span>qsTr(<span class="token string">&quot;Press Me 1&quot;</span>)
		<span class="token punctuation">}</span>
		Button<span class="token punctuation">{</span>
            id<span class="token operator">:</span>button2
            text<span class="token operator">:</span>qsTr(<span class="token string">&quot;Press Me 2&quot;</span>)
        <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="项目结构-无错版本" tabindex="-1"><a class="header-anchor" href="#项目结构-无错版本"><span>项目结构（无错版本）</span></a></h3><p>需要多import挺多的库，不知道什么库就F1一下，也不算太麻烦</p><h3 id="qt-quick-窗体应用程序结构" tabindex="-1"><a class="header-anchor" href="#qt-quick-窗体应用程序结构"><span>Qt Quick 窗体应用程序结构</span></a></h3><ul><li>ApplicationWinodws，主应用窗口</li><li>组件类属性，由ApplicationWinodws自带 <ul><li>menuBar，菜单栏 <ul><li>Menu，菜单 <ul><li>MenuItem，菜单项</li></ul></li></ul></li><li>toolBar，工具栏</li><li>statusBar，状态栏</li><li>style，样式组件</li></ul></li><li>MainForm，主窗体</li><li>其他类型组件 <ul><li>MessageDialog，消息对话框</li></ul></li><li><s>完整界面的代码框架</s></li></ul><h2 id="qt-quick-控件" tabindex="-1"><a class="header-anchor" href="#qt-quick-控件"><span>Qt Quick 控件</span></a></h2><h3 id="简概-1" tabindex="-1"><a class="header-anchor" href="#简概-1"><span>简概</span></a></h3><p>Qt Quick 控件</p><table><thead><tr><th>控件</th><th>名称</th><th>对应样式表</th><th>功能描述</th></tr></thead><tbody><tr><td>Button</td><td>命令按钮</td><td>ButtonStyle</td><td>单击执行操作</td></tr><tr><td>CheckBox</td><td>复选框</td><td>CheckBoxStyle</td><td>可同时选中多个选项</td></tr><tr><td>ComboBox</td><td>组合框</td><td>ComboBoxStyle</td><td>提供下拉列表选项</td></tr><tr><td>ExclusiveGroup</td><td>互斥选项框</td><td>——</td><td>仅能选择一个控件</td></tr><tr><td>GroupBox</td><td>组框</td><td>——</td><td>用于定义空间组的容器</td></tr><tr><td>Label</td><td>标签</td><td>——</td><td>界面文字提示</td></tr><tr><td>RadioButton</td><td>单选按钮</td><td>RadioButtonStyle</td><td>单击选中，通常分组使用，只能选其中一个选项</td></tr><tr><td>TextArea</td><td>文本区</td><td>TextAreaStyle</td><td>用于显示多行可编辑的格式化文本</td></tr><tr><td>TextField</td><td>文本框</td><td>TextFieldStyle</td><td>可供输入（显示）一行纯文本</td></tr><tr><td>BusyIndicator</td><td>忙指示器</td><td>BusyIndicatorStyle</td><td>用以表示程序正在执行某项操作（如载入图片），请用于耐心等待</td></tr><tr><td>Calendar</td><td>日历</td><td>CalendarStyle</td><td>提供日历功能供用户选择设定日期</td></tr><tr><td>ProgressBar</td><td>进度条</td><td>ProgressBarStyle</td><td>动态显式程序执行进度</td></tr><tr><td>Slider</td><td>滑动条</td><td>SliderStyle</td><td>提供水平或垂直方向的滑块，鼠标拖动可设置参数</td></tr><tr><td>SpinBox</td><td>数值旋转框</td><td>SpinBoxStyle</td><td>单击上下箭头可设置数值参数</td></tr><tr><td>Switch</td><td>开关</td><td>SwitchStyle</td><td>控制某项功能的开启/关闭，常用于移动智能手机的应用界面</td></tr></tbody></table><h3 id="基本控件" tabindex="-1"><a class="header-anchor" href="#基本控件"><span>基本控件</span></a></h3><h3 id="高级控件" tabindex="-1"><a class="header-anchor" href="#高级控件"><span>高级控件</span></a></h3><h3 id="样式定制" tabindex="-1"><a class="header-anchor" href="#样式定制"><span>样式定制</span></a></h3><h2 id="qt-quick-对话框" tabindex="-1"><a class="header-anchor" href="#qt-quick-对话框"><span>Qt Quick 对话框</span></a></h2><h2 id="qt-quick-导航视图" tabindex="-1"><a class="header-anchor" href="#qt-quick-导航视图"><span>Qt Quick 导航视图</span></a></h2><h2 id="qt-5-5-qt-quick-controls-1-4-新增组件" tabindex="-1"><a class="header-anchor" href="#qt-5-5-qt-quick-controls-1-4-新增组件"><span>Qt 5.5（Qt Quick Controls 1.4）新增组件</span></a></h2>`,16))])}const C=i(u,[["render",b],["__file","06. Qt Quick Controls 1 开发.html.vue"]]),f=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/02.%20QtQuick/11.%20Qt%20Quick%20Controls/06.%20Qt%20Quick%20Controls%201%20%E5%BC%80%E5%8F%91.html","title":"Qt","lang":"zh-CN","frontmatter":{"description":"Qt 目录 Qt Quick Controls 1 开发 吐槽：用书太旧了，看得糊涂 Qt Quick Control 简概 简概 Qt 5.1开始引用的QML模块，提供了大量类似 Qt Widgets 那样的可重用的UI组件，如按钮、菜单、对话框和视图等 这些组件能在不同的平台上模仿相应的本地行为 对比普通QML程序 需要导入Qt Quick Con...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/02.%20QtQuick/11.%20Qt%20Quick%20Controls/06.%20Qt%20Quick%20Controls%201%20%E5%BC%80%E5%8F%91.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Qt"}],["meta",{"property":"og:description","content":"Qt 目录 Qt Quick Controls 1 开发 吐槽：用书太旧了，看得糊涂 Qt Quick Control 简概 简概 Qt 5.1开始引用的QML模块，提供了大量类似 Qt Widgets 那样的可重用的UI组件，如按钮、菜单、对话框和视图等 这些组件能在不同的平台上模仿相应的本地行为 对比普通QML程序 需要导入Qt Quick Con..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Qt","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"Qt Quick Controls 1 开发","slug":"qt-quick-controls-1-开发","link":"#qt-quick-controls-1-开发","children":[{"level":2,"title":"Qt Quick Control 简概","slug":"qt-quick-control-简概","link":"#qt-quick-control-简概","children":[{"level":3,"title":"简概","slug":"简概","link":"#简概","children":[]},{"level":3,"title":"项目创建","slug":"项目创建","link":"#项目创建","children":[]},{"level":3,"title":"项目结构（书本版本）","slug":"项目结构-书本版本","link":"#项目结构-书本版本","children":[]},{"level":3,"title":"项目结构（无错版本）","slug":"项目结构-无错版本","link":"#项目结构-无错版本","children":[]},{"level":3,"title":"Qt Quick 窗体应用程序结构","slug":"qt-quick-窗体应用程序结构","link":"#qt-quick-窗体应用程序结构","children":[]}]},{"level":2,"title":"Qt Quick 控件","slug":"qt-quick-控件","link":"#qt-quick-控件","children":[{"level":3,"title":"简概","slug":"简概-1","link":"#简概-1","children":[]},{"level":3,"title":"基本控件","slug":"基本控件","link":"#基本控件","children":[]},{"level":3,"title":"高级控件","slug":"高级控件","link":"#高级控件","children":[]},{"level":3,"title":"样式定制","slug":"样式定制","link":"#样式定制","children":[]}]},{"level":2,"title":"Qt Quick 对话框","slug":"qt-quick-对话框","link":"#qt-quick-对话框","children":[]},{"level":2,"title":"Qt Quick 导航视图","slug":"qt-quick-导航视图","link":"#qt-quick-导航视图","children":[]},{"level":2,"title":"Qt 5.5（Qt Quick Controls 1.4）新增组件","slug":"qt-5-5-qt-quick-controls-1-4-新增组件","link":"#qt-5-5-qt-quick-controls-1-4-新增组件","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.12,"words":935},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/02. QtQuick/11. Qt Quick Controls/06. Qt Quick Controls 1 开发.md","excerpt":"\\n<h1>目录</h1>\\n<h1>Qt Quick Controls 1 开发</h1>\\n<p>吐槽：用书太旧了，看得糊涂</p>\\n<h2>Qt Quick Control 简概</h2>\\n<h3>简概</h3>\\n<ul>\\n<li>Qt 5.1开始引用的QML模块，提供了大量类似 Qt Widgets 那样的可重用的UI组件，如按钮、菜单、对话框和视图等</li>\\n<li>这些组件能在不同的平台上模仿相应的本地行为</li>\\n<li>对比普通QML程序\\n<ul>\\n<li>需要导入Qt Quick Controls库</li>\\n<li>定义了一个标准的桌面应用程序窗口，由主应用窗口及附属组件类属性、主窗体和其他类型组件构成。用到的组件库都要import</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{C as comp,f as data};
