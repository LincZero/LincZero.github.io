import{_ as r,c as o,e as t,o as i}from"./app-_6RECMRt.js";const n={};function a(l,e){return i(),o("div",null,e[0]||(e[0]=[t('<h1 id="bcc" tabindex="-1"><a class="header-anchor" href="#bcc"><span>BCC</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="用例教程-参考" tabindex="-1"><a class="header-anchor" href="#用例教程-参考"><span>用例教程 - 参考</span></a></h1><p><strong>用于搜索 (Ctrl-F) 和参考。对于教程，请从tutorial.md 开始</strong></p><p>本指南不完整。如果感觉缺少某些内容，请检查BCC和内核源代码。如果您确认我们遗漏了某些内容，请发送拉取请求来修复它，并帮助每个人。</p><h2 id="目录-1" tabindex="-1"><a class="header-anchor" href="#目录-1"><span>目录</span></a></h2><ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bpf-c" target="_blank" rel="noopener noreferrer">BPF C 带通滤波器C</a><ul><li>Events &amp; Arguments 事件与参数 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-kprobes" target="_blank" rel="noopener noreferrer">1. kprobes 1. k探针</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-kretprobes" target="_blank" rel="noopener noreferrer">2. kretprobes 2. kret探针</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-tracepoints" target="_blank" rel="noopener noreferrer">3. Tracepoints 3. 跟踪点</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-uprobes" target="_blank" rel="noopener noreferrer">4. uprobes 4. 起身</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-uretprobes" target="_blank" rel="noopener noreferrer">5. uretprobes 5. 输尿管探针</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-usdt-probes" target="_blank" rel="noopener noreferrer">6. USDT probes 6.USDT探针</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-raw-tracepoints" target="_blank" rel="noopener noreferrer">7. Raw Tracepoints 7. 原始跟踪点</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-system-call-tracepoints" target="_blank" rel="noopener noreferrer">8. system call tracepoints \\8. 系统调用跟踪点</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-kfuncs" target="_blank" rel="noopener noreferrer">9. kfuncs 9. kfuncs 函数</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-kretfuncs" target="_blank" rel="noopener noreferrer">10. kretfuncs 10. kretfuncs 函数</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-lsm-probes" target="_blank" rel="noopener noreferrer">11. lsm probes 11.LSM探针</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf-iterators" target="_blank" rel="noopener noreferrer">12. bpf iterators 12.bpf迭代器</a></li></ul></li><li>Data 数据 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_probe_read_kernel" target="_blank" rel="noopener noreferrer">1. bpf_probe_read_kernel() 1.bpf_probe_read_kernel()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_probe_read_kernel_str" target="_blank" rel="noopener noreferrer">2. bpf_probe_read_kernel_str() 2.bpf_probe_read_kernel_str()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-bpf_ktime_get_ns" target="_blank" rel="noopener noreferrer">3. bpf_ktime_get_ns() 3.bpf_ktime_get_ns()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-bpf_get_current_pid_tgid" target="_blank" rel="noopener noreferrer">4. bpf_get_current_pid_tgid() 4.bpf_get_current_pid_tgid()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_get_current_uid_gid" target="_blank" rel="noopener noreferrer">5. bpf_get_current_uid_gid() 5.bpf_get_current_uid_gid()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-bpf_get_current_comm" target="_blank" rel="noopener noreferrer">6. bpf_get_current_comm() \\6. bpf_get_current_comm()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-bpf_get_current_task" target="_blank" rel="noopener noreferrer">7. bpf_get_current_task() \\7. bpf_get_current_task()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-bpf_log2l" target="_blank" rel="noopener noreferrer">8. bpf_log2l() 8. bpf_log2l()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-bpf_get_prandom_u32" target="_blank" rel="noopener noreferrer">9. bpf_get_prandom_u32() \\9. bpf_get_prandom_u32()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-bpf_probe_read_user" target="_blank" rel="noopener noreferrer">10. bpf_probe_read_user() 10.bpf_probe_read_user()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-bpf_probe_read_user_str" target="_blank" rel="noopener noreferrer">11. bpf_probe_read_user_str() 11.bpf_probe_read_user_str()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf_get_ns_current_pid_tgid" target="_blank" rel="noopener noreferrer">12. bpf_get_ns_current_pid_tgid() 12.bpf_get_ns_current_pid_tgid()</a></li></ul></li><li>Debugging 调试 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_override_return" target="_blank" rel="noopener noreferrer">1. bpf_override_return() 1.bpf_override_return()</a></li></ul></li><li>Output 输出 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_trace_printk" target="_blank" rel="noopener noreferrer">1. bpf_trace_printk() 1.bpf_trace_printk()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_perf_output" target="_blank" rel="noopener noreferrer">2. BPF_PERF_OUTPUT 2.BPF_PERF_输出</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-perf_submit" target="_blank" rel="noopener noreferrer">3. perf_submit() 3. perf_submit()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-perf_submit_skb" target="_blank" rel="noopener noreferrer">4. perf_submit_skb() 4. perf_submit_skb()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_ringbuf_output" target="_blank" rel="noopener noreferrer">5. BPF_RINGBUF_OUTPUT 5.BPF_RINGBUF_输出</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-ringbuf_output" target="_blank" rel="noopener noreferrer">6. ringbuf_output() 6.ringbuf_output()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-ringbuf_reserve" target="_blank" rel="noopener noreferrer">7. ringbuf_reserve() 7.ringbuf_reserve()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-ringbuf_submit" target="_blank" rel="noopener noreferrer">8. ringbuf_submit() 8.ringbuf_submit()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-ringbuf_discard" target="_blank" rel="noopener noreferrer">9. ringbuf_discard() 9.ringbuf_discard()</a></li></ul></li><li>Maps 地图 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_table" target="_blank" rel="noopener noreferrer">1. BPF_TABLE 1. BPF_表</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_hash" target="_blank" rel="noopener noreferrer">2. BPF_HASH 2.BPF_HASH</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-bpf_array" target="_blank" rel="noopener noreferrer">3. BPF_ARRAY 3. BPF_ARRAY</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-bpf_histogram" target="_blank" rel="noopener noreferrer">4. BPF_HISTOGRAM 4.BPF_直方图</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_stack_trace" target="_blank" rel="noopener noreferrer">5. BPF_STACK_TRACE 5. BPF_STACK_TRACE</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-bpf_perf_array" target="_blank" rel="noopener noreferrer">6. BPF_PERF_ARRAY 6. BPF_PERF_ARRAY</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-bpf_percpu_hash" target="_blank" rel="noopener noreferrer">7. BPF_PERCPU_HASH 7. BPF_PERCPU_HASH</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-bpf_percpu_array" target="_blank" rel="noopener noreferrer">8. BPF_PERCPU_ARRAY 8. BPF_PERCPU_ARRAY</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-bpf_lpm_trie" target="_blank" rel="noopener noreferrer">9. BPF_LPM_TRIE 9. BPF_LPM_TRIE</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-bpf_prog_array" target="_blank" rel="noopener noreferrer">10. BPF_PROG_ARRAY 10. BPF_PROG_ARRAY</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-bpf_devmap" target="_blank" rel="noopener noreferrer">11. BPF_DEVMAP 11. BPF_DEVMAP</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf_cpumap" target="_blank" rel="noopener noreferrer">12. BPF_CPUMAP 12. BPF_CPUMAP</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-bpf_xskmap" target="_blank" rel="noopener noreferrer">13. BPF_XSKMAP 13.BPF_XSKMAP</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#14-bpf_array_of_maps" target="_blank" rel="noopener noreferrer">14. BPF_ARRAY_OF_MAPS 14. BPF_ARRAY_OF_MAPS</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#15-bpf_hash_of_maps" target="_blank" rel="noopener noreferrer">15. BPF_HASH_OF_MAPS 15. BPF_HASH_OF_MAPS</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#16-bpf_stack" target="_blank" rel="noopener noreferrer">16. BPF_STACK 16. BPF_堆栈</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#17-bpf_queue" target="_blank" rel="noopener noreferrer">17. BPF_QUEUE 17. BPF_队列</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#18-bpf_sockhash" target="_blank" rel="noopener noreferrer">18. BPF_SOCKHASH 18. BPF_SOCKHASH</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#19-maplookup" target="_blank" rel="noopener noreferrer">19. map.lookup() 19. 映射.lookup()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#20-maplookup_or_try_init" target="_blank" rel="noopener noreferrer">20. map.lookup_or_try_init() 20.map.lookup_or_try_init()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#21-mapdelete" target="_blank" rel="noopener noreferrer">21. map.delete() 21. 地图.删除()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#22-mapupdate" target="_blank" rel="noopener noreferrer">22. map.update() 22. 地图更新()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#23-mapinsert" target="_blank" rel="noopener noreferrer">23. map.insert() 23. 映射.insert()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#24-mapincrement" target="_blank" rel="noopener noreferrer">24. map.increment() 24. 映射.increment()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#25-mapget_stackid" target="_blank" rel="noopener noreferrer">25. map.get_stackid() 25.map.get_stackid()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#26-mapperf_read" target="_blank" rel="noopener noreferrer">26. map.perf_read() 26. 映射.perf_read()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#27-mapcall" target="_blank" rel="noopener noreferrer">27. map.call() 27. 映射.call()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#28-mapredirect_map" target="_blank" rel="noopener noreferrer">28. map.redirect_map() 28. 映射.redirect_map()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#29-mappush" target="_blank" rel="noopener noreferrer">29. map.push() 29. 地图.push()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#30-mappop" target="_blank" rel="noopener noreferrer">30. map.pop() 30. 地图.pop()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#31-mappeek" target="_blank" rel="noopener noreferrer">31. map.peek() 31. 地图.peek()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#32-mapsock_hash_update" target="_blank" rel="noopener noreferrer">32. map.sock_hash_update() 32.map.sock_hash_update()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#33-mapmsg_redirect_hash" target="_blank" rel="noopener noreferrer">33. map.msg_redirect_hash() 33.map.msg_redirect_hash()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#34-mapsk_redirect_hash" target="_blank" rel="noopener noreferrer">34. map.sk_redirect_hash() 34.map.sk_redirect_hash()</a></li></ul></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#licensing" target="_blank" rel="noopener noreferrer">Licensing 许可</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#rewriter" target="_blank" rel="noopener noreferrer">Rewriter 重写器</a></li></ul></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bcc-python" target="_blank" rel="noopener noreferrer">bcc Python 密件抄送 Python</a><ul><li>Initialization 初始化 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf" target="_blank" rel="noopener noreferrer">1. BPF 1.带通滤波器</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-usdt" target="_blank" rel="noopener noreferrer">2. USDT 2、泰达币</a></li></ul></li><li>Events 活动 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-attach_kprobe" target="_blank" rel="noopener noreferrer">1. attach_kprobe() 1.attach_kprobe()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-attach_kretprobe" target="_blank" rel="noopener noreferrer">2. attach_kretprobe() 2.attach_kretprobe()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-attach_tracepoint" target="_blank" rel="noopener noreferrer">3. attach_tracepoint() 3.attach_tracepoint()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-attach_uprobe" target="_blank" rel="noopener noreferrer">4. attach_uprobe() 4.attach_uprobe()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-attach_uretprobe" target="_blank" rel="noopener noreferrer">5. attach_uretprobe() 5.attach_uretprobe()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-usdtenable_probe" target="_blank" rel="noopener noreferrer">6. USDT.enable_probe() 6. USDT.enable_probe()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-attach_raw_tracepoint" target="_blank" rel="noopener noreferrer">7. attach_raw_tracepoint() 7.attach_raw_tracepoint()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-attach_raw_socket" target="_blank" rel="noopener noreferrer">8. attach_raw_socket() 8.attach_raw_socket()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-attach_xdp" target="_blank" rel="noopener noreferrer">9. attach_xdp() 9.attach_xdp()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-attach_func" target="_blank" rel="noopener noreferrer">10. attach_func() 10. 附加函数（）</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-detach_func" target="_blank" rel="noopener noreferrer">11. detach_func() 11. detach_func()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-detach_kprobe" target="_blank" rel="noopener noreferrer">12. detach_kprobe() 12. detach_kprobe()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-detach_kretprobe" target="_blank" rel="noopener noreferrer">13. detach_kretprobe() 13. detach_kretprobe()</a></li></ul></li><li>Debug Output 调试输出 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-trace_print" target="_blank" rel="noopener noreferrer">1. trace_print() 1.trace_print()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-trace_fields" target="_blank" rel="noopener noreferrer">2. trace_fields() 2.trace_fields()</a></li></ul></li><li>Output APIs 输出API <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-perf_buffer_poll" target="_blank" rel="noopener noreferrer">1. perf_buffer_poll() 1. perf_buffer_poll()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-ring_buffer_poll" target="_blank" rel="noopener noreferrer">2. ring_buffer_poll() 2.ring_buffer_poll()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-ring_buffer_consume" target="_blank" rel="noopener noreferrer">3. ring_buffer_consume() 3.ring_buffer_consume()</a></li></ul></li><li>Map APIs 地图API <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-get_table" target="_blank" rel="noopener noreferrer">1. get_table() 1. 获取表()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-open_perf_buffer" target="_blank" rel="noopener noreferrer">2. open_perf_buffer() 2. open_perf_buffer()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-items" target="_blank" rel="noopener noreferrer">3. items() 3. 项目（）</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-values" target="_blank" rel="noopener noreferrer">4. values() 4. 值()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-clear" target="_blank" rel="noopener noreferrer">5. clear() 5. 清除()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-items_lookup_and_delete_batch" target="_blank" rel="noopener noreferrer">6. items_lookup_and_delete_batch() \\6. items_lookup_and_delete_batch()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-items_lookup_batch" target="_blank" rel="noopener noreferrer">7. items_lookup_batch() 7. items_lookup_batch()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-items_delete_batch" target="_blank" rel="noopener noreferrer">8. items_delete_batch() 8. items_delete_batch()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-items_update_batch" target="_blank" rel="noopener noreferrer">9. items_update_batch() 9. items_update_batch()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-print_log2_hist" target="_blank" rel="noopener noreferrer">10. print_log2_hist() 10. print_log2_hist()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-print_linear_hist" target="_blank" rel="noopener noreferrer">11. print_linear_hist() 11. 打印_线性_hist()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-open_ring_buffer" target="_blank" rel="noopener noreferrer">12. open_ring_buffer() 12. open_ring_buffer()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-push" target="_blank" rel="noopener noreferrer">13. push() 13. 推()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#14-pop" target="_blank" rel="noopener noreferrer">14. pop() 14. 弹出（）</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#15-peek" target="_blank" rel="noopener noreferrer">15. peek() 15. 窥视（）</a></li></ul></li><li>Helpers 帮手 <ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-ksym" target="_blank" rel="noopener noreferrer">1. ksym() 1. ksym()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-ksymname" target="_blank" rel="noopener noreferrer">2. ksymname() 2. ksymname()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-sym" target="_blank" rel="noopener noreferrer">3. sym() 3. 符号（）</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-num_open_kprobes" target="_blank" rel="noopener noreferrer">4. num_open_kprobes() 4. num_open_kprobes()</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-get_syscall_fnname" target="_blank" rel="noopener noreferrer">5. get_syscall_fnname() 5. get_syscall_fnname()</a></li></ul></li></ul></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bpf-errors" target="_blank" rel="noopener noreferrer">BPF Errors BPF 错误</a><ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-invalid-mem-access" target="_blank" rel="noopener noreferrer">1. Invalid mem access \\1. 无效的内存访问</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-cannot-call-gpl-only-function-from-proprietary-program" target="_blank" rel="noopener noreferrer">2. Cannot call GPL only function from proprietary program \\2. 无法从专有程序调用仅限GPL的函数</a></li></ul></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#Environment-Variables" target="_blank" rel="noopener noreferrer">Environment Variables 环境变量</a><ul><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-kernel-source-directory" target="_blank" rel="noopener noreferrer">1. kernel source directory 1.内核源码目录</a></li><li><a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-kernel-version-overriding" target="_blank" rel="noopener noreferrer">2. kernel version overriding \\2. 内核版本覆盖</a></li></ul></li></ul>',7)]))}const b=r(n,[["render",a],["__file","04. 函数一览.html.vue"]]),s=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/BCC%20(eBPF)/04.%20%E5%87%BD%E6%95%B0%E4%B8%80%E8%A7%88.html","title":"BCC","lang":"zh-CN","frontmatter":{"description":"BCC 目录 用例教程 - 参考 用于搜索 (Ctrl-F) 和参考。对于教程，请从tutorial.md 开始 本指南不完整。如果感觉缺少某些内容，请检查BCC和内核源代码。如果您确认我们遗漏了某些内容，请发送拉取请求来修复它，并帮助每个人。 目录 BPF C 带通滤波器C Events & Arguments 事件与参数 1. kprobes 1....","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%BA%93/%E6%97%A0%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BA%93/BCC%20(eBPF)/04.%20%E5%87%BD%E6%95%B0%E4%B8%80%E8%A7%88.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"BCC"}],["meta",{"property":"og:description","content":"BCC 目录 用例教程 - 参考 用于搜索 (Ctrl-F) 和参考。对于教程，请从tutorial.md 开始 本指南不完整。如果感觉缺少某些内容，请检查BCC和内核源代码。如果您确认我们遗漏了某些内容，请发送拉取请求来修复它，并帮助每个人。 目录 BPF C 带通滤波器C Events & Arguments 事件与参数 1. kprobes 1...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BCC\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"BCC","slug":"bcc","link":"#bcc","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"用例教程 - 参考","slug":"用例教程-参考","link":"#用例教程-参考","children":[{"level":2,"title":"目录","slug":"目录-1","link":"#目录-1","children":[]}]}],"git":{},"readingTime":{"minutes":4,"words":1201},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/BCC (eBPF)/04. 函数一览.md","excerpt":"\\n<h1>目录</h1>\\n<h1>用例教程 - 参考</h1>\\n<p><strong>用于搜索 (Ctrl-F) 和参考。对于教程，请从tutorial.md 开始</strong></p>\\n<p>本指南不完整。如果感觉缺少某些内容，请检查BCC和内核源代码。如果您确认我们遗漏了某些内容，请发送拉取请求来修复它，并帮助每个人。</p>\\n<h2>目录</h2>\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bpf-c\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">BPF C 带通滤波器C</a>\\n<ul>\\n<li>Events &amp; Arguments\\n事件与参数\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-kprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. kprobes 1. k探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-kretprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. kretprobes 2. kret探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-tracepoints\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. Tracepoints 3. 跟踪点</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-uprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. uprobes 4. 起身</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-uretprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. uretprobes 5. 输尿管探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-usdt-probes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. USDT probes 6.USDT探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-raw-tracepoints\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. Raw Tracepoints 7. 原始跟踪点</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-system-call-tracepoints\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. system call tracepoints\\n\\\\8. 系统调用跟踪点</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-kfuncs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. kfuncs 9. kfuncs 函数</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-kretfuncs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. kretfuncs 10. kretfuncs 函数</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-lsm-probes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. lsm probes 11.LSM探针</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf-iterators\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. bpf iterators 12.bpf迭代器</a></li>\\n</ul>\\n</li>\\n<li>Data 数据\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_probe_read_kernel\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. bpf_probe_read_kernel()\\n1.bpf_probe_read_kernel()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_probe_read_kernel_str\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. bpf_probe_read_kernel_str()\\n2.bpf_probe_read_kernel_str()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-bpf_ktime_get_ns\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. bpf_ktime_get_ns() 3.bpf_ktime_get_ns()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-bpf_get_current_pid_tgid\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. bpf_get_current_pid_tgid()\\n4.bpf_get_current_pid_tgid()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_get_current_uid_gid\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. bpf_get_current_uid_gid()\\n5.bpf_get_current_uid_gid()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-bpf_get_current_comm\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. bpf_get_current_comm()\\n\\\\6. bpf_get_current_comm()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-bpf_get_current_task\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. bpf_get_current_task()\\n\\\\7. bpf_get_current_task()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-bpf_log2l\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. bpf_log2l() 8. bpf_log2l()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-bpf_get_prandom_u32\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. bpf_get_prandom_u32()\\n\\\\9. bpf_get_prandom_u32()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-bpf_probe_read_user\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. bpf_probe_read_user()\\n10.bpf_probe_read_user()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-bpf_probe_read_user_str\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. bpf_probe_read_user_str()\\n11.bpf_probe_read_user_str()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf_get_ns_current_pid_tgid\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. bpf_get_ns_current_pid_tgid()\\n12.bpf_get_ns_current_pid_tgid()</a></li>\\n</ul>\\n</li>\\n<li>Debugging 调试\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_override_return\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. bpf_override_return()\\n1.bpf_override_return()</a></li>\\n</ul>\\n</li>\\n<li>Output 输出\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_trace_printk\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. bpf_trace_printk() 1.bpf_trace_printk()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_perf_output\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. BPF_PERF_OUTPUT 2.BPF_PERF_输出</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-perf_submit\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. perf_submit() 3. perf_submit()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-perf_submit_skb\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. perf_submit_skb() 4. perf_submit_skb()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_ringbuf_output\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. BPF_RINGBUF_OUTPUT 5.BPF_RINGBUF_输出</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-ringbuf_output\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. ringbuf_output() 6.ringbuf_output()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-ringbuf_reserve\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. ringbuf_reserve() 7.ringbuf_reserve()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-ringbuf_submit\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. ringbuf_submit() 8.ringbuf_submit()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-ringbuf_discard\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. ringbuf_discard() 9.ringbuf_discard()</a></li>\\n</ul>\\n</li>\\n<li>Maps 地图\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf_table\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. BPF_TABLE 1. BPF_表</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-bpf_hash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. BPF_HASH 2.BPF_HASH</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-bpf_array\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. BPF_ARRAY 3. BPF_ARRAY</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-bpf_histogram\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. BPF_HISTOGRAM 4.BPF_直方图</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-bpf_stack_trace\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. BPF_STACK_TRACE 5. BPF_STACK_TRACE</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-bpf_perf_array\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. BPF_PERF_ARRAY 6. BPF_PERF_ARRAY</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-bpf_percpu_hash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. BPF_PERCPU_HASH 7. BPF_PERCPU_HASH</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-bpf_percpu_array\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. BPF_PERCPU_ARRAY 8. BPF_PERCPU_ARRAY</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-bpf_lpm_trie\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. BPF_LPM_TRIE 9. BPF_LPM_TRIE</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-bpf_prog_array\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. BPF_PROG_ARRAY 10. BPF_PROG_ARRAY</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-bpf_devmap\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. BPF_DEVMAP 11. BPF_DEVMAP</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-bpf_cpumap\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. BPF_CPUMAP 12. BPF_CPUMAP</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-bpf_xskmap\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">13. BPF_XSKMAP 13.BPF_XSKMAP</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#14-bpf_array_of_maps\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14. BPF_ARRAY_OF_MAPS 14. BPF_ARRAY_OF_MAPS</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#15-bpf_hash_of_maps\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">15. BPF_HASH_OF_MAPS 15. BPF_HASH_OF_MAPS</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#16-bpf_stack\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">16. BPF_STACK 16. BPF_堆栈</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#17-bpf_queue\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">17. BPF_QUEUE 17. BPF_队列</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#18-bpf_sockhash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">18. BPF_SOCKHASH 18. BPF_SOCKHASH</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#19-maplookup\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">19. map.lookup() 19. 映射.lookup()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#20-maplookup_or_try_init\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">20. map.lookup_or_try_init()\\n20.map.lookup_or_try_init()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#21-mapdelete\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">21. map.delete() 21. 地图.删除()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#22-mapupdate\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">22. map.update() 22. 地图更新()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#23-mapinsert\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">23. map.insert() 23. 映射.insert()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#24-mapincrement\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">24. map.increment() 24. 映射.increment()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#25-mapget_stackid\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">25. map.get_stackid() 25.map.get_stackid()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#26-mapperf_read\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">26. map.perf_read() 26. 映射.perf_read()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#27-mapcall\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">27. map.call() 27. 映射.call()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#28-mapredirect_map\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">28. map.redirect_map() 28. 映射.redirect_map()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#29-mappush\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">29. map.push() 29. 地图.push()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#30-mappop\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">30. map.pop() 30. 地图.pop()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#31-mappeek\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">31. map.peek() 31. 地图.peek()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#32-mapsock_hash_update\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">32. map.sock_hash_update()\\n32.map.sock_hash_update()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#33-mapmsg_redirect_hash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">33. map.msg_redirect_hash()\\n33.map.msg_redirect_hash()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#34-mapsk_redirect_hash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">34. map.sk_redirect_hash()\\n34.map.sk_redirect_hash()</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#licensing\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Licensing 许可</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#rewriter\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Rewriter 重写器</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bcc-python\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">bcc Python 密件抄送 Python</a>\\n<ul>\\n<li>Initialization 初始化\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-bpf\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. BPF 1.带通滤波器</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-usdt\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. USDT 2、泰达币</a></li>\\n</ul>\\n</li>\\n<li>Events 活动\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-attach_kprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. attach_kprobe() 1.attach_kprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-attach_kretprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. attach_kretprobe() 2.attach_kretprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-attach_tracepoint\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. attach_tracepoint() 3.attach_tracepoint()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-attach_uprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. attach_uprobe() 4.attach_uprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-attach_uretprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. attach_uretprobe() 5.attach_uretprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-usdtenable_probe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. USDT.enable_probe() 6. USDT.enable_probe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-attach_raw_tracepoint\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. attach_raw_tracepoint()\\n7.attach_raw_tracepoint()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-attach_raw_socket\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. attach_raw_socket() 8.attach_raw_socket()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-attach_xdp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. attach_xdp() 9.attach_xdp()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-attach_func\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. attach_func() 10. 附加函数（）</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-detach_func\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. detach_func() 11. detach_func()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-detach_kprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. detach_kprobe() 12. detach_kprobe()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-detach_kretprobe\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">13. detach_kretprobe() 13. detach_kretprobe()</a></li>\\n</ul>\\n</li>\\n<li>Debug Output 调试输出\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-trace_print\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. trace_print() 1.trace_print()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-trace_fields\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. trace_fields() 2.trace_fields()</a></li>\\n</ul>\\n</li>\\n<li>Output APIs 输出API\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-perf_buffer_poll\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. perf_buffer_poll() 1. perf_buffer_poll()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-ring_buffer_poll\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. ring_buffer_poll() 2.ring_buffer_poll()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-ring_buffer_consume\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. ring_buffer_consume()\\n3.ring_buffer_consume()</a></li>\\n</ul>\\n</li>\\n<li>Map APIs 地图API\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-get_table\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. get_table() 1. 获取表()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-open_perf_buffer\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. open_perf_buffer() 2. open_perf_buffer()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-items\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. items() 3. 项目（）</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-values\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. values() 4. 值()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-clear\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. clear() 5. 清除()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#6-items_lookup_and_delete_batch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. items_lookup_and_delete_batch()\\n\\\\6. items_lookup_and_delete_batch()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#7-items_lookup_batch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. items_lookup_batch() 7. items_lookup_batch()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#8-items_delete_batch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. items_delete_batch() 8. items_delete_batch()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#9-items_update_batch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. items_update_batch() 9. items_update_batch()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#10-print_log2_hist\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. print_log2_hist() 10. print_log2_hist()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#11-print_linear_hist\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">11. print_linear_hist() 11. 打印_线性_hist()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#12-open_ring_buffer\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">12. open_ring_buffer() 12. open_ring_buffer()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#13-push\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">13. push() 13. 推()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#14-pop\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14. pop() 14. 弹出（）</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#15-peek\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">15. peek() 15. 窥视（）</a></li>\\n</ul>\\n</li>\\n<li>Helpers 帮手\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-ksym\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. ksym() 1. ksym()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-ksymname\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. ksymname() 2. ksymname()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#3-sym\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. sym() 3. 符号（）</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#4-num_open_kprobes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. num_open_kprobes() 4. num_open_kprobes()</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#5-get_syscall_fnname\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. get_syscall_fnname() 5. get_syscall_fnname()</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#bpf-errors\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">BPF Errors BPF 错误</a>\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-invalid-mem-access\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. Invalid mem access\\n\\\\1. 无效的内存访问</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-cannot-call-gpl-only-function-from-proprietary-program\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. Cannot call GPL only function from proprietary program\\n\\\\2. 无法从专有程序调用仅限GPL的函数</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#Environment-Variables\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Environment Variables 环境变量</a>\\n<ul>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#1-kernel-source-directory\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. kernel source directory\\n1.内核源码目录</a></li>\\n<li><a href=\\"https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#2-kernel-version-overriding\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. kernel version overriding\\n\\\\2. 内核版本覆盖</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/BCC (eBPF)/04. 函数一览.md","value":{"title":"04. 函数一览","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络库/无协议栈库/BCC (eBPF)/04. 函数一览.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{b as comp,s as data};
