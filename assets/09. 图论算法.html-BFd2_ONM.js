import{_ as e,e as h,g as n,o as r}from"./app-CuJixpuN.js";const s={};function t(i,a){return r(),h("div",null,a[0]||(a[0]=[n('<h1 id="《数据结构与算法分析》c语言描述" tabindex="-1"><a class="header-anchor" href="#《数据结构与算法分析》c语言描述"><span>《数据结构与算法分析》C语言描述</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="图论算法" tabindex="-1"><a class="header-anchor" href="#图论算法"><span>图论算法</span></a></h1><h2 id="若干定义" tabindex="-1"><a class="header-anchor" href="#若干定义"><span>若干定义</span></a></h2><h2 id="拓扑排序" tabindex="-1"><a class="header-anchor" href="#拓扑排序"><span>拓扑排序</span></a></h2><h2 id="最短路径算法" tabindex="-1"><a class="header-anchor" href="#最短路径算法"><span>最短路径算法</span></a></h2><h3 id="无权最短路径" tabindex="-1"><a class="header-anchor" href="#无权最短路径"><span>无权最短路径</span></a></h3><h3 id="dijkstra算法" tabindex="-1"><a class="header-anchor" href="#dijkstra算法"><span>Dijkstra算法</span></a></h3><h3 id="具有负边值的图" tabindex="-1"><a class="header-anchor" href="#具有负边值的图"><span>具有负边值的图</span></a></h3><h3 id="无圈图" tabindex="-1"><a class="header-anchor" href="#无圈图"><span>无圈图</span></a></h3><h3 id="所有点对最短路径" tabindex="-1"><a class="header-anchor" href="#所有点对最短路径"><span>所有点对最短路径</span></a></h3><h2 id="网络流问题" tabindex="-1"><a class="header-anchor" href="#网络流问题"><span>网络流问题</span></a></h2><h2 id="最小生成树" tabindex="-1"><a class="header-anchor" href="#最小生成树"><span>最小生成树</span></a></h2><h3 id="prim算法" tabindex="-1"><a class="header-anchor" href="#prim算法"><span>Prim算法</span></a></h3><h3 id="kruskal算法" tabindex="-1"><a class="header-anchor" href="#kruskal算法"><span>Kruskal算法</span></a></h3><h2 id="深度优先搜索的应用" tabindex="-1"><a class="header-anchor" href="#深度优先搜索的应用"><span>深度优先搜索的应用</span></a></h2><h3 id="无向图" tabindex="-1"><a class="header-anchor" href="#无向图"><span>无向图</span></a></h3><h3 id="双连通性" tabindex="-1"><a class="header-anchor" href="#双连通性"><span>双连通性</span></a></h3><h3 id="欧拉回路" tabindex="-1"><a class="header-anchor" href="#欧拉回路"><span>欧拉回路</span></a></h3><h3 id="有向图" tabindex="-1"><a class="header-anchor" href="#有向图"><span>有向图</span></a></h3><h3 id="查找强分支" tabindex="-1"><a class="header-anchor" href="#查找强分支"><span>查找强分支</span></a></h3><h2 id="np-完全性介绍" tabindex="-1"><a class="header-anchor" href="#np-完全性介绍"><span>NP-完全性介绍</span></a></h2><h3 id="难与易" tabindex="-1"><a class="header-anchor" href="#难与易"><span>难与易</span></a></h3><h3 id="np类" tabindex="-1"><a class="header-anchor" href="#np类"><span>NP类</span></a></h3><h3 id="np-完全问题" tabindex="-1"><a class="header-anchor" href="#np-完全问题"><span>NP-完全问题</span></a></h3>',25)]))}const d=e(s,[["render",t],["__file","09. 图论算法.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Program_Algorithm/%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8BC%E8%AF%AD%E8%A8%80%E6%8F%8F%E8%BF%B0/09.%20%E5%9B%BE%E8%AE%BA%E7%AE%97%E6%B3%95.html","title":"《数据结构与算法分析》C语言描述","lang":"zh-CN","frontmatter":{"description":"《数据结构与算法分析》C语言描述 目录 图论算法 若干定义 拓扑排序 最短路径算法 无权最短路径 Dijkstra算法 具有负边值的图 无圈图 所有点对最短路径 网络流问题 最小生成树 Prim算法 Kruskal算法 深度优先搜索的应用 无向图 双连通性 欧拉回路 有向图 查找强分支 NP-完全性介绍 难与易 NP类 NP-完全问题","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Program_Algorithm/%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8BC%E8%AF%AD%E8%A8%80%E6%8F%8F%E8%BF%B0/09.%20%E5%9B%BE%E8%AE%BA%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"《数据结构与算法分析》C语言描述"}],["meta",{"property":"og:description","content":"《数据结构与算法分析》C语言描述 目录 图论算法 若干定义 拓扑排序 最短路径算法 无权最短路径 Dijkstra算法 具有负边值的图 无圈图 所有点对最短路径 网络流问题 最小生成树 Prim算法 Kruskal算法 深度优先搜索的应用 无向图 双连通性 欧拉回路 有向图 查找强分支 NP-完全性介绍 难与易 NP类 NP-完全问题"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《数据结构与算法分析》C语言描述\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.4,"words":121},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/《数据结构与算法分析》C语言描述/09. 图论算法.md","excerpt":"\\n<h1>目录</h1>\\n<h1>图论算法</h1>\\n<h2>若干定义</h2>\\n<h2>拓扑排序</h2>\\n<h2>最短路径算法</h2>\\n<h3>无权最短路径</h3>\\n<h3>Dijkstra算法</h3>\\n<h3>具有负边值的图</h3>\\n<h3>无圈图</h3>\\n<h3>所有点对最短路径</h3>\\n<h2>网络流问题</h2>\\n<h2>最小生成树</h2>\\n<h3>Prim算法</h3>\\n<h3>Kruskal算法</h3>\\n<h2>深度优先搜索的应用</h2>\\n<h3>无向图</h3>\\n<h3>双连通性</h3>\\n<h3>欧拉回路</h3>\\n<h3>有向图</h3>\\n<h3>查找强分支</h3>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/《数据结构与算法分析》C语言描述/09. 图论算法.md","value":{"title":"09. 图论算法","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Program_Algorithm/《数据结构与算法分析》C语言描述/09. 图论算法.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,p as data};
