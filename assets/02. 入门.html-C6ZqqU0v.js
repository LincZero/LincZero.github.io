import{_ as s,c as a,e,o as l}from"./app-_6RECMRt.js";const n={};function t(d,i){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="入门" tabindex="-1"><a class="header-anchor" href="#入门"><span>入门</span></a></h1><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h2><p>您可以在配置文件中添加注释。注释以两个分号为前缀。例如：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;; This is a comment in a kanata configuration file.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;; Comments will be ignored and are intended for you to help understand your</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;; own configuration when reading it later.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以使用 #| 开始多行注释块并以 |# 结束：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#|</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">This is</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">a multi-line comment block</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">|#</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="所需的配置条目" tabindex="-1"><a class="header-anchor" href="#所需的配置条目"><span>所需的配置条目</span></a></h2><h3 id="定义文件" tabindex="-1"><a class="header-anchor" href="#定义文件"><span>定义文件</span></a></h3><p><strong>参考</strong></p><p>您的配置文件必须恰好有一个 defsrc 列表。这定义了 deflayer 条目将操作的键的顺序。</p><p>句法：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defsrc $key1 $key2 ... $keyN)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>$键</code></td><td>键的名称。这可以是默认的键名，也可以是 deflocalkeys 中定义的键名。当物理按下该输入键时，将激活活动层上相同顺序位置处定义的动作。</td></tr></tbody></table><p><strong>描述</strong></p><p>defsrc 配置条目定义了 kanata 将处理哪些按键输入以及按键如何映射到定义的图层。 Kanata 不会处理从 defsrc 中排除的密钥，除非您在 defcfg 中设置了 process-unmapped-keys yes。</p><p>Kanata 未处理的密钥会对各种操作产生影响。例如：</p><ul><li>按下排除的键将键入一个字母，而之前的轻按决定仍悬而未决，从而可能导致不正确的结果。</li><li>排除的按键不会触发诸如敲击按住按下或踢踏舞之类的动作的早期激活</li><li>排除的键无法通过 fork 或 switch 逻辑读取。</li></ul><p>defsrc 条目被视为长序列。空白的数量（空格、制表符、换行符）不相关。您可以使用空格、制表符或换行符，但您可以根据自己的喜好直观地格式化 defsrc。</p><p>所有键名称的主要来源是源中的 str_to_oscode 和 default_mappings 函数。如果您无法找到所需的密钥，欢迎提出问题。</p><p>包含 US QWERTY 键盘按键作为大约 60% 键盘布局的示例 defsrc：</p><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defsrc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  grv  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    8</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    9</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    -</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    bspc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  tab  q    w    e    r    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    y    u    i    o    p    [    ]    \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  caps a    s    d    f    g    h    j    k    l    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;    &#39;    ret</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  lsft z    x    c    v    b    n    m    ,    </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    /</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rsft</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  lctl lmet lalt           spc            ralt rmet rctl</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，某些键盘有菜单键而不是右元键。在这种情况下，您可以使用菜单代替 rmet。</p><p>对于非美国键盘，请参阅非美国键盘部分。</p><h3 id="deflayer" tabindex="-1"><a class="header-anchor" href="#deflayer"><span>deflayer</span></a></h3><p><strong>参考</strong></p><p>您的配置文件必须至少有一个 deflayer 条目。这定义了 defsrc 中映射的每个物理键在 kanata 运行时的行为方式。</p><p>句法：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflayer $layer-name $action1 $action2 ... $actionN)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>$图层名称</code></td><td>表示图层名称的字符串。该名称用于在其他操作中引用该图层。</td></tr><tr><td><code>$行动</code></td><td>当按下相应的 defsrc 输入键时，该层处于活动状态时激活的操作。</td></tr></tbody></table><p><strong>描述</strong></p><p>deflayer 配置条目后面是层名称，然后是按键或操作列表。可用的键名与 defsrc 中的相同。本文档进一步解释了操作。空白的情况与 defsrc 相同。 deflayer 中按键/操作的顺序对应于 defsrc 中定义的相同序列位置中的物理按键。</p><p>配置文件中定义的第一层将是 kanata 运行时的起始层。其他层可以暂时激活或切换到使用操作。</p><p>将 QWERTY 重新映射到 Dvorak 布局的 defsrc 和 deflayer 示例如下：</p><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defsrc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  grv  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    8</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    9</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    -</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    bspc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  tab  q    w    e    r    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    y    u    i    o    p    [    ]    \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  caps a    s    d    f    g    h    j    k    l    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;    &#39;    ret</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  lsft z    x    c    v    b    n    m    ,    </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    /</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rsft</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  lctl lmet lalt           spc            ralt rmet rctl</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflayer dvorak</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  grv  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    8</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    9</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [    ]    bspc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  tab  &#39;    ,    </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    p    y    f    g    c    r    l    </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  caps a    o    e    u    i    d    h    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    n    s    </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ret</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  lsft </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;    q    j    k    x    b    m    w    v    z    rsft</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  lctl lmet lalt           spc            ralt rmet rctl</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Windows 托盘菜单构建还允许在 deflayer 和 deflayermap 中指定图层图标，以在图层激活时显示在托盘菜单中，请参阅示例配置</p><h3 id="deflayermap" tabindex="-1"><a class="header-anchor" href="#deflayermap"><span>deflayermap</span></a></h3><p><strong>参考</strong></p><p>存在另一种定义图层的方法：deflayermap。此方法通过定义输入输出对将输入映射到操作，完全忽略 defsrc。</p><p>使用 deflayermap 时，您可能需要启用 process-unmapped-keys 或在 defsrc 中定义大部分键盘按键。否则，许多行为不会按预期进行。有关更多上下文，请参阅链接之一。</p><p>句法：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflayermap ($layer-name)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $input1 $action1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $input2 $action2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $inputN $actionN)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>$图层名称</code></td><td>表示图层名称的字符串。该名称用于在其他操作中引用该图层。</td></tr><tr><td><code>$输入</code></td><td>输入键映射到相应的输出。</td></tr><tr><td><code>$行动</code></td><td>当按下相应的输入键时，该层处于活动状态时激活的操作。</td></tr></tbody></table><p><strong>描述</strong></p><p>当只需要映射层上的几个键时，deflayermap 变体具有配置更简洁的优点。在练习新配置时，标准 deflayer 的优点是看起来更像物理键盘布局，这可能对某些人有帮助。</p><p>在 deflayermap 中，第一项必须是图层名称。与 deflayer 不同，图层名称必须位于括号中。在层名称之后，层通过成对的项目进行配置：</p><ul><li>输入键</li><li>输出动作</li></ul><p>将 Caps Lock 映射到 Escape 的完整配置示例是：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>;; defsrc is still necessary</span></span>
<span class="line"><span>(defsrc)</span></span>
<span class="line"><span>(deflayermap (base-layer)</span></span>
<span class="line"><span>  caps esc)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入键与 defsrc 键具有相同的作用。输出操作承担普通 Deflayer 中的项目所具有的角色。</p><p>作为特殊输入名称，您可以使用 <em>、</em>_ 或 ___ 之一来映射图层中未显式映射的所有键，例如在上面的示例中，这些影响除大写之外的键。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>_</code></td><td>映射 defsrc 中定义的该层中所有未映射的键。</td></tr><tr><td><code>__</code></td><td>映射该层中未在 defsrc 中定义的所有未映射键。</td></tr><tr><td><code>___</code></td><td>映射该层中所有未映射的键。</td></tr></tbody></table><h3 id="审查所需的配置条目" tabindex="-1"><a class="header-anchor" href="#审查所需的配置条目"><span>审查所需的配置条目</span></a></h3><p>如果您按顺序阅读，您现在已经看到了所有必需的条目：</p><ul><li><code>defsrc</code></li><li><code>deflayer</code></li></ul><p>最小配置示例是：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defsrc a b c)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflayer start </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将使 kanata 将您的 a b c 键重新映射为 1 2 3。这几乎肯定是不可取的，但却是有效的配置。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>笔记</td><td>请仔细阅读已知的平台问题，因为它们可能会影响您应该在 defsrc 中包含/排除的内容。到目前为止，Windows LLHOOK I/O 机制存在的问题最多。</td></tr></tbody></table><h2 id="defsrc-和-deflayermap-的键名" tabindex="-1"><a class="header-anchor" href="#defsrc-和-deflayermap-的键名"><span>defsrc 和 deflayermap 的键名</span></a></h2><p>所有默认键名称的真实来源是keys/mod.rs 文件中的函数str_to_oscode 和add_default_str_osc_mappings。</p><p>该在线工具也适用于大多数按键，可以告诉您按键名称。按下该键后，它将在网页中显示为 event.code 字段。</p><h2 id="非美国键盘" tabindex="-1"><a class="header-anchor" href="#非美国键盘"><span>非美国键盘</span></a></h2><p>对于非美式键盘用户，您的键盘上可能有一些键包含默认情况下 defsrc 中不允许的字符，至少根据物理键上显示的符号是这样。下面的两部分可以帮助您了解如何重新映射所有按键。</p><h3 id="浏览器-event-code" tabindex="-1"><a class="header-anchor" href="#浏览器-event-code"><span>浏览器 event.code</span></a></h3><p>确保 kanata 和其他键重新映射程序未运行。然后你就可以使用这个在线工具并按 键。 event.code 字段告诉您要在 Kanata 中使用的键名称。或者，您可以通读此参考资料。由于键名很长，如果使用这些键名重新映射，您可能需要使用 deflayermap。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>重要的</td><td>在 Windows 上，根据浏览器 event.code 使用键名称时，应使用 kanata_winIOv2.exe 或 Interception。默认的kanata.exe不会根据浏览器event.code键名进行映射。</td></tr></tbody></table><h3 id="deflocalkeys-os系统配置" tabindex="-1"><a class="header-anchor" href="#deflocalkeys-os系统配置"><span>deflocalkeys OS系统配置</span></a></h3><p><strong>参考</strong></p><p>您可以使用 deflocalkeys 定义可在 defsrc、deflayer 和配置中的其他任何位置使用的其他键名称。</p><p>句法：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>(deflocalkeys-$variant</span></span>
<span class="line"><span>  $key-name1 $key-number1</span></span>
<span class="line"><span>  $key-name2 $key-number2</span></span>
<span class="line"><span>  ...</span></span>
<span class="line"><span>  $key-nameN $key-numberN)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>$变体</code></td><td>其中之一： win winiov2 Wintercept linux macos</td></tr><tr><td><code>$键名</code></td><td>您选择的键名称可以在配置的其余部分中使用。</td></tr><tr><td><code>$钥匙号码</code></td><td>关键数字根据您使用的 kanata 变体而变化。</td></tr></tbody></table><p>每个 deflocalkeys-* 变体仅允许一个。不适用的变体将被忽略，例如使用默认的 Windows kanata.exe 二进制文件时，deflocalkeys-linux 和 deflocalkeys-wintercept 都会被忽略。</p><p><strong>描述</strong></p><p>deflocalkeys 配置并不是绝对必要的。它们的目的是帮助您将物理键盘的外观与您的 kanata 配置相匹配，希望它更具可读性并减少混乱。在底层硬件中，所有键盘位置根据其位置发送相同的扫描码，而不管键帽上打印的是什么。扫描码名称通常由相应的美国布局名称引用。操作系统的工作是根据配置的区域设置和布局将相同的扫描代码转换为正确的输出。</p><p>您可以在本文档中找到其他人所做的配置。如果您在那里没有看到键盘并且对使用可用工具没有信心，欢迎在讨论或问题中寻求帮助。如果可以的话，请为该文档做出贡献！</p><p>deflocalkeys 有五种变体：</p><ul><li><code>deflocalkeys-win</code></li><li><code>deflocalkeys-winiov2</code></li><li><code>deflocalkeys-wintercept</code></li><li><code>deflocalkeys-linux</code></li><li><code>deflocalkeys-macos</code></li></ul><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflocalkeys-win</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ì </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">187</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflocalkeys-winiov2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ì </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">187</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflocalkeys-wintercept</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ì </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">187</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflocalkeys-linux</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ì </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">13</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflocalkeys-macos</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ì </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">13</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defsrc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  grv  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    8</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    9</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ì    bspc</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于自定义键的数字表示以 10 为基数的 OsCode 的转换值。这在 Windows 挂钩、Windows 拦截和 Linux 之间有所不同。</p><p>使用 --debug 标志运行 kanata 可以让您读取正确的数字，显示在 KeyEvent 日志行中代码的括号中。</p><p>也可以使用本机工具，如下所述。</p><p>在 Linux 中，evtest 将为您按下的物理键提供正确的数字。</p><p>在使用默认钩子机制的Windows中，kanata存储库中键盘测试器的非拦截版本将在代码：<code>&lt;number&gt;</code> 部分中给出正确的数字。 （预构建的二进制文件）</p><p>在 Windows uning winIOv2 中，winIOv2 可执行变体将在代码中给出正确的编号：<code>&lt;number&gt;</code> 部分。</p><p>在使用拦截的 Windows 中，键盘测试器的拦截版本将在 num: <code>&lt;number&gt;</code> 部分给出正确的数字。在钩子版本和拦截版本之间，某些键可能一致，而另一些则可能不一致；请注意它们不兼容！</p><p>然而，Interception 和 winIOv2 通常应该彼此一致。</p><p>欢迎提出改进该系统用户友好性的想法！如前所述，如果需要，请在问题或讨论中寻求帮助，并且非常欢迎有关本文档的帮助，以便将来的用户可以更轻松地度过。</p><h2 id="defcfg简介" tabindex="-1"><a class="header-anchor" href="#defcfg简介"><span>defcfg简介</span></a></h2><p>您的配置文件可能包含单个 defcfg 条目。 defcfg 可以为空或省略。有一些选项可以改变 kanata 的行为，但本介绍将仅介绍最流行的条目：process-unmapped-keys。所有其他选项可以在稍后的 defcfg 选项部分中找到。</p><p>空 defcfg 的示例：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defcfg)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="处理未映射的键" tabindex="-1"><a class="header-anchor" href="#处理未映射的键"><span>处理未映射的键</span></a></h3><p>defcfg 中的 process-unmapped-keys 选项可能是最有影响力的选项。启用此配置会使 kanata 处理 defsrc 中未定义的密钥。如果您只映射 defsrc 中的几个键而不是键盘上的大多数键，这可能很有用。</p><p>默认情况下，从 defsrc 中排除的键在各种情况下都不起作用。一些例子：</p><ul><li>先前的轻击-按住-按下操作的早期保持将不会</li><li>之前的一击动作不会被公开</li><li>叉子和开关逻辑不会看到钥匙</li></ul><p>默认情况下禁用此选项。默认情况下未启用此功能的原因是，如果某些按键被拦截，则可能无法正常工作。一个已知问题是 AltGr/ralt/Right Alt；仅限 Windows：windows-altgr。</p><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defcfg process-unmapped-keys yes)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defcfg process-unmapped-keys (all-except lctl ralt))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="别名和变量" tabindex="-1"><a class="header-anchor" href="#别名和变量"><span>别名和变量</span></a></h2><p>在了解操作之前，首先了解别名和变量会很有用。</p><h3 id="别名" tabindex="-1"><a class="header-anchor" href="#别名"><span>别名</span></a></h3><p><strong>参考</strong></p><p>使用 defalias 配置条目，您可以为操作引入快捷方式标签。</p><p>句法：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defalias</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  $alias-name1 $action1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  $alias-name2 $action2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  $alias-nameN $actionN)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>$别名</code></td><td>为操作的快捷方式标签选择的名称。通过在名称前添加 @ 字符，可以在其余配置中使用它。</td></tr><tr><td><code>$行动</code></td><td>在引用别名的地方使用的输出操作。</td></tr></tbody></table><p><strong>描述</strong></p><p>defalias 条目按顺序读取成对的项目，其中第一项是别名，第二项是它可以替换的操作。</p><p>列表是由空格分隔并由括号包围的字符串或嵌套列表的序列。到目前为止我们看到的所有配置条目都是列表； defalias 是我们在本指南中首先看到嵌套列表的地方。</p><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defalias</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ;; tap for caps lock, hold for left control</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  cap (tap-hold </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> caps lctl)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该别名可以在 deflayer 中用作长动作的替代品。别名名称以 @ 为前缀，表示它是别名而不是普通键。</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflayer example</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  @cap a s d f</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以有多个 defalias 条目以及单个 defalias 中的多个别名。别名还可以指之前在配置文件中定义的其他别名。</p><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defalias one (tap-hold </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> caps lctl))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defalias two (tap-hold </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> esc lctl))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defalias</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  three C-A-del </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;; Ctrl+Alt+Del</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  four (tap-hold </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @three ralt)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以选择将操作放入 deflayer 中，而不将其别名化。然而，对于长时间的动作，建议不要这样做，以保持良好的视觉对齐。直观地对齐您的 deflayer 条目有望使您的配置文件更易于阅读。</p><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deflayer example</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ;; this is equivalent to the previous deflayer example</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  (tap-hold </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> caps lctl) a s d f</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h3><p><strong>参考</strong></p><p>使用 defvar 配置条目，您可以为任意字符串或列表引入快捷方式标签。</p><p>句法：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">defvar</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  $var-name1 $var-value1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  $var-name2 $var-value2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  $var-nameN $var-valueN)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>$var-名称</code></td><td>为操作的快捷方式标签选择的名称。通过在名称前添加 @ 字符，可以在其余配置中使用它。</td></tr><tr><td><code>$var 值</code></td><td>无论何时使用变量，都将替换任意字符串或列表。可以通过在变量名前添加 $ 来使用变量。</td></tr></tbody></table><p><strong>描述</strong></p><p>与别名不同，变量不需要是有效的独立操作。换句话说，变量可以用作动作的组件。</p><p>最常见的用例是为诸如“敲击保持”、“踢踏舞”和“一次性”等操作定义通用数字字符串。</p><p>与 defalias 的工作原理类似，defvar 读取序列中的项目对，其中该对中的第一项是变量名称，第二项是字符串或列表。变量可以引用先前定义的变量。</p><p>变量可用于替换大多数值。一些值得注意的例外是：</p><ul><li>变量不能在 defcfg、defsrc 或 deflocalkeys 中使用</li><li>变量不能用来替代操作名称</li></ul><p>变量通过在名称前加上 <code>$</code> 前缀来引用。</p><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">defvar</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  tap-timeout   </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  hold-timeout  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  tt $tap-timeout</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ht $hold-timeout</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(defalias</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  th1 (tap-hold $tt $ht caps lctl)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  th2 (tap-hold $tt $ht spc  lsft)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defvar-中的连接" tabindex="-1"><a class="header-anchor" href="#defvar-中的连接"><span>defvar 中的连接</span></a></h4><p>在 defvar 的第二项中，以特殊关键字 concat 开头的列表会将列表中的所有后续项连接在一起形成单个字符串值。如果不使用 concat，列表将按原样保存。</p><p>例子：</p><div class="language-lisp line-numbers-mode" data-highlighter="shiki" data-ext="lisp" data-title="lisp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">defvar</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rootpath </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/home/myuser/mysubdir&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ;; $otherpath will be the string: /home/myuser/mysubdir/helloworld</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  otherpath (concat $rootpath </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/helloworld&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,142)]))}const p=s(n,[["render",t],["__file","02. 入门.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/Kanata/docs/config/02.%20%E5%85%A5%E9%97%A8.html","title":"入门","lang":"zh-CN","frontmatter":{"description":"入门 注释 您可以在配置文件中添加注释。注释以两个分号为前缀。例如： 您可以使用 #| 开始多行注释块并以 |# 结束： 所需的配置条目 定义文件 参考 您的配置文件必须恰好有一个 defsrc 列表。这定义了 deflayer 条目将操作的键的顺序。 句法： 描述 defsrc 配置条目定义了 kanata 将处理哪些按键输入以及按键如何映射到定义的...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/Kanata/docs/config/02.%20%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"入门"}],["meta",{"property":"og:description","content":"入门 注释 您可以在配置文件中添加注释。注释以两个分号为前缀。例如： 您可以使用 #| 开始多行注释块并以 |# 结束： 所需的配置条目 定义文件 参考 您的配置文件必须恰好有一个 defsrc 列表。这定义了 deflayer 条目将操作的键的顺序。 句法： 描述 defsrc 配置条目定义了 kanata 将处理哪些按键输入以及按键如何映射到定义的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"入门","slug":"入门","link":"#入门","children":[{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[]},{"level":2,"title":"所需的配置条目","slug":"所需的配置条目","link":"#所需的配置条目","children":[{"level":3,"title":"定义文件","slug":"定义文件","link":"#定义文件","children":[]},{"level":3,"title":"deflayer","slug":"deflayer","link":"#deflayer","children":[]},{"level":3,"title":"deflayermap","slug":"deflayermap","link":"#deflayermap","children":[]},{"level":3,"title":"审查所需的配置条目","slug":"审查所需的配置条目","link":"#审查所需的配置条目","children":[]}]},{"level":2,"title":"defsrc 和 deflayermap 的键名","slug":"defsrc-和-deflayermap-的键名","link":"#defsrc-和-deflayermap-的键名","children":[]},{"level":2,"title":"非美国键盘","slug":"非美国键盘","link":"#非美国键盘","children":[{"level":3,"title":"浏览器 event.code","slug":"浏览器-event-code","link":"#浏览器-event-code","children":[]},{"level":3,"title":"deflocalkeys OS系统配置","slug":"deflocalkeys-os系统配置","link":"#deflocalkeys-os系统配置","children":[]}]},{"level":2,"title":"defcfg简介","slug":"defcfg简介","link":"#defcfg简介","children":[{"level":3,"title":"处理未映射的键","slug":"处理未映射的键","link":"#处理未映射的键","children":[]}]},{"level":2,"title":"别名和变量","slug":"别名和变量","link":"#别名和变量","children":[{"level":3,"title":"别名","slug":"别名","link":"#别名","children":[]},{"level":3,"title":"变量","slug":"变量","link":"#变量","children":[{"level":4,"title":"defvar 中的连接","slug":"defvar-中的连接","link":"#defvar-中的连接","children":[]}]}]}]}],"git":{},"readingTime":{"minutes":12.59,"words":3776},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Kanata/docs/config/02. 入门.md","excerpt":"\\n<h2>注释</h2>\\n<p>您可以在配置文件中添加注释。注释以两个分号为前缀。例如：</p>\\n<div class=\\"language-lisp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"lisp\\" data-title=\\"lisp\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">;; This is a comment in a kanata configuration file.</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">;; Comments will be ignored and are intended for you to help understand your</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">;; own configuration when reading it later.</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Kanata/docs/config/02. 入门.md","value":{"title":"02. 入门","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Kanata/docs/config/02. 入门.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,r as data};
