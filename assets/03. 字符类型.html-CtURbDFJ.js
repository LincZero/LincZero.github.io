import{_ as s,e as a,g as n,o as l}from"./app-BapqMaOt.js";const t={};function e(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="字符类型" tabindex="-1"><a class="header-anchor" href="#字符类型"><span>字符类型</span></a></h1><h2 id="对象类型-字符串-元素不可变" tabindex="-1"><a class="header-anchor" href="#对象类型-字符串-元素不可变"><span>对象类型 &gt; 字符串（元素不可变）</span></a></h2><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><ul><li><p>性质</p><ul><li><p><strong>不可变性</strong>：Python字符串不可以被更改，赋值给字符串索引的位置会导致错误。如果需要一个不同的字符串，你应该创建一个新的</p><p>​ （存储字符串的变量可变，字符串元素不可变，为区别于常量其更贴切的说法是<code>元素不可变性</code>）</p></li></ul></li><li><p>字面量方式</p><ul><li><p><strong>一般字面量</strong>：可以用单引号 (<code>&#39;...&#39;</code>) 或双引号 (<code>&quot;...&quot;</code>) 标识，<code>\\</code>可以用来转义引号</p></li><li><p><strong>原始（raw）字符串</strong>：在第一个引号前面加上一个 <code>r</code></p></li><li><p><strong>多行字符串</strong>：使用三引号：<code>&quot;&quot;&quot;...&quot;&quot;&quot;</code>或<code>&#39;&#39;&#39;...&#39;&#39;&#39;</code>。行尾换行符会被自动包含到字符串中，但是可以在行尾加上 <code>\\</code> 来避免这个行为</p></li><li><p><strong>字符串拼接</strong>：字符串可以由<code>+</code>操作符连接(粘到一起)，可以由<code>*</code>表示重复，不可以拼接字符串和变量（运算符重载）<br> 相邻的两个字符串可以省略加号自动连接（但字符串不能是表达式）</p></li><li><p><strong>字符串检索</strong>：字符串也可以被截取(检索)。类似于 C ，字符串的第一个字符索引为 0。<br> 索引也可以是负数，这将导致从右边开始计算。（请注意 -0 实际上就是 0）</p></li><li><p><strong>字符串切片</strong>：注意，包含起始的字符，不包含末尾的字符。这使得 <code>s[:i] + s[i:]</code> 永远等于 <code>s</code><mark>【Python特有】</mark><br> 切片的索引有非常有用的默认值；省略的第一个索引默认为零，省略的第二个索引默认为切片的字符串的大小<br> Python 能够优雅地处理那些没有意义的切片索引：<br> 一个过大的索引值(即下标值大于字符串实际长度)将被字符串实际长度所代替<br> 当上边界比下边界大时(即切片左值大于右值)就返回空字符串</p></li><li><p><strong>比较</strong>：</p><p><code>==</code>：使用来比较两个字符串内的value值是否相同</p><p><code>is</code>：比较两个字符串的id值</p></li></ul></li><li><p>对象操作（类方法）</p><ul><li><code>[str].title()</code>，单词首字母<mark>大写</mark></li><li><code>[str].upper()</code>，全部<mark>大写</mark></li><li><code>[str].lower()</code>，全部<mark>小写</mark></li><li><code>[str].rstrip(s=&quot; &quot;)</code>，清除末尾的<mark>空白</mark>或指定<mark>子串</mark>，不改变对象==（千万不要和 rsplit 搞混，那个是切分！！！）==</li><li><code>[str].lstrip(s=&quot; &quot;)</code>，清除开头的<mark>空白</mark>或指定<mark>子串</mark>，不改变对象</li><li><code>[str].strip(s=&quot; &quot;)</code>，清除两端的<mark>空白</mark>或指定<mark>子串</mark>，不改变对象，通常参数为<code>\\n</code>清除读文件时的行内换行符</li><li><code>[str].replace(old,new)</code>，<mark>替换</mark>字符串</li><li><code>[str].find()</code>，<mark>返回</mark>子串在字符串中第一次出现的<mark>偏移量</mark></li><li><code>[str].split(s)</code>，<mark>返回</mark>用子串分割后的字符串<mark>数组</mark></li></ul></li><li><p>格式化字符串方法</p><ul><li>详见 “交互” 一章</li></ul></li><li><p>内置函数操作</p><ul><li><code>len(str)</code>，<mark>返回</mark>字符串长度</li></ul></li><li><p>转义字符</p><ul><li><code>\\n</code>，换行符</li><li><code>\\t</code>，制表符</li></ul></li></ul><h3 id="格式字符串" tabindex="-1"><a class="header-anchor" href="#格式字符串"><span>格式字符串</span></a></h3><p>参考</p><ul><li><a href="https://blog.csdn.net/zjbyough/article/details/96466658" target="_blank" rel="noopener noreferrer">【CSDN】python格式化字符串的三种方法（%，format，f-string)</a></li></ul><h4 id="f-string" tabindex="-1"><a class="header-anchor" href="#f-string"><span>f-string</span></a></h4><p><strong>我个人认为最好用的一种</strong></p><p>-string是2015年python 3.6 根据PEP 498新添加的一种字符串格式化方法，f-string实际上是在运行时计算的表达式，而不是常量值。在Python源代码中，f-string是一个文字字符串，前缀为’f’，其中包含大括号内的表达式。表达式会将大括号中的内容替换为其值</p><h3 id="【专题】修改字符串的几种方法" tabindex="-1"><a class="header-anchor" href="#【专题】修改字符串的几种方法"><span>【专题】修改字符串的几种方法</span></a></h3><p>在Python中，字符串是不可变类型，即无法直接修改字符串的某一位字符。</p><p>常见的修改方法有以下4种：（本质都是新建一个新的字符串）</p><blockquote><h4 id="方法1-将字符串转换成列表后修改值-然后用join组成新字符串" tabindex="-1"><a class="header-anchor" href="#方法1-将字符串转换成列表后修改值-然后用join组成新字符串"><span><strong>方法1：将字符串转换成列表后修改值，然后用join组成新字符串</strong></span></a></h4></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;abcdef&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                  	# 原字符串</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(s)                  	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将字符串转换为列表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s1                         </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;b&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;c&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;d&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;e&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;f&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]		</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 列表的每一个元素为一个字符</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s1[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;E&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                   	# 将列表中的第5个字符修改为E</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s1[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;F&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                   	# 将列表中的第5个字符修改为E</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;b&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;c&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;d&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;E&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;F&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(s1)               	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用空串将列表中的所有字符重新连接为字符串</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;abcdEF&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                        	# 新字符串</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="方法2-通过字符串序列切片方式【推荐】" tabindex="-1"><a class="header-anchor" href="#方法2-通过字符串序列切片方式【推荐】"><span><strong>方法2: 通过字符串序列切片方式</strong>【推荐】</span></a></h4></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Hello World&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s[:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Bital&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">				# s前6个字符串+&#39;Bital&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Hello Bital&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s[:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:]            	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># s前3个字符串+s第8位之后的字符串</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Heltal&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="方法3-使用字符串的replace函数" tabindex="-1"><a class="header-anchor" href="#方法3-使用字符串的replace函数"><span><strong>方法3: 使用字符串的replace函数</strong></span></a></h4></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;abcdef&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;A&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)        	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用A替换a</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Abcdef&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;bcd&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;123&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)   		</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用123替换bcd </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;A123ef&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="方法4-通过给一个变量赋值-或者重新赋值" tabindex="-1"><a class="header-anchor" href="#方法4-通过给一个变量赋值-或者重新赋值"><span><strong>方法4: 通过给一个变量赋值(或者重新赋值)</strong></span></a></h4></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Hello World&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39; 2017&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">				# 变量赋值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Hello World 2017&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Hello World&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Hello World 2017&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   	# 重新赋值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Hello World 2017&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23)]))}const p=s(t,[["render",e],["__file","03. 字符类型.html.vue"]]),r=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/02.%20%E6%95%B0%E6%8D%AE_%E7%AE%97%E6%B3%95/03.%20%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 字符类型 对象类型 > 字符串（元素不可变） 使用 性质 不可变性：Python字符串不可以被更改，赋值给字符串索引的位置会导致错误。如果需要一个不同的字符串，你应该创建一个新的 ​ （存储字符串的变量可变，字符串元素不可变，为区别于常量其更贴切的说法是元素不可变性） 字面量方式 一般字面量：可以用单引号 ('...') 或双引号 ...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/02.%20%E6%95%B0%E6%8D%AE_%E7%AE%97%E6%B3%95/03.%20%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 字符类型 对象类型 > 字符串（元素不可变） 使用 性质 不可变性：Python字符串不可以被更改，赋值给字符串索引的位置会导致错误。如果需要一个不同的字符串，你应该创建一个新的 ​ （存储字符串的变量可变，字符串元素不可变，为区别于常量其更贴切的说法是元素不可变性） 字面量方式 一般字面量：可以用单引号 ('...') 或双引号 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":4.06,"words":1218},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/02. 数据+算法/03. 字符类型.md","excerpt":"\\n<h1>目录</h1>\\n<h1>字符类型</h1>\\n<h2>对象类型 &gt; 字符串（元素不可变）</h2>\\n<h3>使用</h3>\\n<ul>\\n<li>\\n<p>性质</p>\\n<ul>\\n<li>\\n<p><strong>不可变性</strong>：Python字符串不可以被更改，赋值给字符串索引的位置会导致错误。如果需要一个不同的字符串，你应该创建一个新的</p>\\n<p>​                   （存储字符串的变量可变，字符串元素不可变，为区别于常量其更贴切的说法是<code>元素不可变性</code>）</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>字面量方式</p>\\n<ul>\\n<li>\\n<p><strong>一般字面量</strong>：可以用单引号 (<code>'...'</code>) 或双引号 (<code>\\"...\\"</code>)  标识，<code>\\\\</code>可以用来转义引号</p>\\n</li>\\n<li>\\n<p><strong>原始（raw）字符串</strong>：在第一个引号前面加上一个 <code>r</code></p>\\n</li>\\n<li>\\n<p><strong>多行字符串</strong>：使用三引号：<code>\\"\\"\\"...\\"\\"\\"</code>或<code>'''...'''</code>。行尾换行符会被自动包含到字符串中，但是可以在行尾加上 <code>\\\\</code> 来避免这个行为</p>\\n</li>\\n<li>\\n<p><strong>字符串拼接</strong>：字符串可以由<code>+</code>操作符连接(粘到一起)，可以由<code>*</code>表示重复，不可以拼接字符串和变量（运算符重载）<br>\\n相邻的两个字符串可以省略加号自动连接（但字符串不能是表达式）</p>\\n</li>\\n<li>\\n<p><strong>字符串检索</strong>：字符串也可以被截取(检索)。类似于 C ，字符串的第一个字符索引为 0。<br>\\n索引也可以是负数，这将导致从右边开始计算。（请注意 -0 实际上就是 0）</p>\\n</li>\\n<li>\\n<p><strong>字符串切片</strong>：注意，包含起始的字符，不包含末尾的字符。这使得 <code>s[:i] + s[i:]</code> 永远等于 <code>s</code><mark>【Python特有】</mark><br>\\n切片的索引有非常有用的默认值；省略的第一个索引默认为零，省略的第二个索引默认为切片的字符串的大小<br>\\nPython 能够优雅地处理那些没有意义的切片索引：<br>\\n一个过大的索引值(即下标值大于字符串实际长度)将被字符串实际长度所代替<br>\\n当上边界比下边界大时(即切片左值大于右值)就返回空字符串</p>\\n</li>\\n<li>\\n<p><strong>比较</strong>：</p>\\n<p><code>==</code>：使用来比较两个字符串内的value值是否相同</p>\\n<p><code>is</code>：比较两个字符串的id值</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>对象操作（类方法）</p>\\n<ul>\\n<li><code>[str].title()</code>，单词首字母<mark>大写</mark></li>\\n<li><code>[str].upper()</code>，全部<mark>大写</mark></li>\\n<li><code>[str].lower()</code>，全部<mark>小写</mark></li>\\n<li><code>[str].rstrip(s=\\" \\")</code>，清除末尾的<mark>空白</mark>或指定<mark>子串</mark>，不改变对象==（千万不要和 rsplit 搞混，那个是切分！！！）==</li>\\n<li><code>[str].lstrip(s=\\" \\")</code>，清除开头的<mark>空白</mark>或指定<mark>子串</mark>，不改变对象</li>\\n<li><code>[str].strip(s=\\" \\")</code>，清除两端的<mark>空白</mark>或指定<mark>子串</mark>，不改变对象，通常参数为<code>\\\\n</code>清除读文件时的行内换行符</li>\\n<li><code>[str].replace(old,new)</code>，<mark>替换</mark>字符串</li>\\n<li><code>[str].find()</code>，<mark>返回</mark>子串在字符串中第一次出现的<mark>偏移量</mark></li>\\n<li><code>[str].split(s)</code>，<mark>返回</mark>用子串分割后的字符串<mark>数组</mark></li>\\n</ul>\\n</li>\\n<li>\\n<p>格式化字符串方法</p>\\n<ul>\\n<li>详见 “交互” 一章</li>\\n</ul>\\n</li>\\n<li>\\n<p>内置函数操作</p>\\n<ul>\\n<li><code>len(str)</code>，<mark>返回</mark>字符串长度</li>\\n</ul>\\n</li>\\n<li>\\n<p>转义字符</p>\\n<ul>\\n<li><code>\\\\n</code>，换行符</li>\\n<li><code>\\\\t</code>，制表符</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/02. 数据+算法/03. 字符类型.md","value":{"title":"03. 字符类型","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/02. 数据+算法/03. 字符类型.md","outlink":[],"backlink":[]}}],"links":[]}}}`);export{p as comp,r as data};
