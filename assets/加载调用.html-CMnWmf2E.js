import{_ as o,c as e,a as s,d as t,b as p,e as c,o as l,r as u}from"./app-DGYDqQs-.js";const i={},k={href:"https://www.cnblogs.com/wenxuehai/p/10368716.html#_label0",target:"_blank",rel:"noopener noreferrer"},r={href:"https://www.cnblogs.com/wenxuehai/p/10368716.html#_label1",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.cnblogs.com/wenxuehai/p/10368716.html#_label2",target:"_blank",rel:"noopener noreferrer"};function g(m,n){const a=u("ExternalLinkIcon");return l(),e("div",null,[n[3]||(n[3]=s("h1",{id:"加载调用",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#加载调用"},[s("span",null,"加载调用")])],-1)),n[4]||(n[4]=s("h2",{id:"js加载调用",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#js加载调用"},[s("span",null,"JS加载调用")])],-1)),n[5]||(n[5]=s("p",null,"JS在页面加载之后运行",-1)),s("ul",null,[s("li",null,[s("a",k,[n[0]||(n[0]=t("1、在DOM加载后，全部内容加载前运行")),p(a)])]),s("li",null,[s("a",r,[n[1]||(n[1]=t("2、在全部内容加载后运行")),p(a)])]),s("li",null,[s("a",d,[n[2]||(n[2]=t("3、DOM文档加载步骤")),p(a)])])]),n[6]||(n[6]=c(`<p>通用的页面加载后再运行JS有两种方式：1、在DOM加载完毕后，页面全部内容（如图片等）完全加载完毕前运行JS。 2、在页面全部内容加载完成（包括引用文件，图片等）之后再加载JS</p><h3 id="【第一优先级】在dom加载后-全部内容加载前运行" tabindex="-1"><a class="header-anchor" href="#【第一优先级】在dom加载后-全部内容加载前运行"><span>【第一优先级】在DOM加载后，全部内容加载前运行</span></a></h3><p>这种方式在同一文件中<strong>可以运行多个且不会覆盖</strong></p><p>由于在$(document).ready()方法只要DOM就绪就会被执行，因此可能此时元素的关联文件未下载完。例如与图片有关的HTML下载完毕，并且已经解析为DOM树了，但很有可能图片还未加载完毕，所以例如图片的高度和宽度这样的属性此时不一定有效。要解决这个问题，可以使用Jquery中 load（）方法在需要的文件加载完毕后对其进行操作。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// jQuery，非简写</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// jQuery，简写1，当$()不带参数时默认就是document</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>					<span class="token comment">// jQuery，简写2</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>							<span class="token comment">// jQuery，简写2 + cs6简写</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="【第二优先级】在全部内容加载后运行" tabindex="-1"><a class="header-anchor" href="#【第二优先级】在全部内容加载后运行"><span>【第二优先级】在全部内容加载后运行</span></a></h3><p>这种方式中<strong>只能执行一个 onload代码</strong>，当文件由多个onload或者load，只加载最后一个，前面的将会被覆盖且前面的onload里面的代码不会执行。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>		<span class="token comment">// js</span>
window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span>				<span class="token comment">// js + cs6简写</span>
<span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// jQuery</span>
<span class="token operator">&lt;</span>body onload<span class="token operator">=</span><span class="token string">&quot;aaa()&quot;</span><span class="token operator">&gt;</span>				<span class="token comment">// html-js，等body执行完</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dom文档加载步骤" tabindex="-1"><a class="header-anchor" href="#dom文档加载步骤"><span>DOM文档加载步骤</span></a></h3><ol><li>解析HTML结构</li><li>加载外部的脚本和样式文件</li><li>解析并执行脚本代码</li><li>执行$(function(){})内对应代码</li><li>加载图片等二进制资源</li><li>页面加载完毕，执行window.onload</li></ol><h3 id="顺序总结" tabindex="-1"><a class="header-anchor" href="#顺序总结"><span>顺序总结</span></a></h3><p><strong>注意：执行【07】和执行【08】相冲突！</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>执行顺序研究<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://libs.baidu.com/jquery/2.0.0/jquery.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">let</span> a0 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行【00】&quot;</span><span class="token punctuation">,</span>a0<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">let</span> a1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行【01】&quot;</span><span class="token punctuation">,</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token keyword">let</span> a9 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;执行【09】&#39;</span><span class="token punctuation">,</span>a9<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">let</span> a2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行【02】&quot;</span><span class="token punctuation">,</span>a2<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">let</span> a3 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行【03】&quot;</span><span class="token punctuation">,</span>a3<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">let</span> a4 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行【04】&quot;</span><span class="token punctuation">,</span>a4<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">let</span> a6 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行【06】&quot;</span><span class="token punctuation">,</span>a6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--jQuery--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">let</span> a7 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行【07】&quot;</span><span class="token punctuation">,</span>a7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--jQuery--&gt;</span>
<span class="token comment">&lt;!-- &lt;script&gt;window.onload = () =&gt; {let a8 = document.getElementById(&quot;box&quot;);console.log(&quot;执行【08】&quot;,a8);}&lt;/script&gt; --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">let</span> a5 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行【05】&quot;</span><span class="token punctuation">,</span>a5<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>执行【<span class="token number">00</span>】 <span class="token keyword">null</span>					<span class="token comment">// body前</span>
执行【<span class="token number">01</span>】 <span class="token keyword">null</span>					<span class="token comment">// body前</span>
执行【<span class="token number">02</span>】 <span class="token keyword">null</span>					<span class="token comment">// body中</span>
执行【<span class="token number">03</span>】 <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;box&quot;</span><span class="token operator">&gt;</span>		<span class="token comment">// body中</span>
执行【<span class="token number">04</span>】 <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;box&quot;</span><span class="token operator">&gt;</span>		<span class="token comment">// body后</span>
执行【<span class="token number">05</span>】 <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;box&quot;</span><span class="token operator">&gt;</span>		<span class="token comment">// body后</span>
执行【<span class="token number">06</span>】 <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;box&quot;</span><span class="token operator">&gt;</span>		<span class="token comment">// jQuery方法</span>
执行【<span class="token number">07</span>】 <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;box&quot;</span><span class="token operator">&gt;</span>		<span class="token comment">// jQuery方法</span>
<span class="token comment">// 执行【08】 &lt;div id=&quot;box&quot;&gt;	// onload方法，冲突、后者覆盖前者</span>
执行【<span class="token number">09</span>】 <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;box&quot;</span><span class="token operator">&gt;</span> 		<span class="token comment">// onload方法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15))])}const b=o(i,[["render",g],["__file","加载调用.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/01.%20%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/03.1.%20JavaScript/%E5%8A%A0%E8%BD%BD%E8%B0%83%E7%94%A8.html","title":"加载调用","lang":"zh-CN","frontmatter":{"last_time":"2020.06.14","tag":"有道云","description":"加载调用 JS加载调用 JS在页面加载之后运行 1、在DOM加载后，全部内容加载前运行 2、在全部内容加载后运行 3、DOM文档加载步骤 通用的页面加载后再运行JS有两种方式：1、在DOM加载完毕后，页面全部内容（如图片等）完全加载完毕前运行JS。 2、在页面全部内容加载完成（包括引用文件，图片等）之后再加载JS 【第一优先级】在DOM加载后，全部内容...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/01.%20%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/03.1.%20JavaScript/%E5%8A%A0%E8%BD%BD%E8%B0%83%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"加载调用"}],["meta",{"property":"og:description","content":"加载调用 JS加载调用 JS在页面加载之后运行 1、在DOM加载后，全部内容加载前运行 2、在全部内容加载后运行 3、DOM文档加载步骤 通用的页面加载后再运行JS有两种方式：1、在DOM加载完毕后，页面全部内容（如图片等）完全加载完毕前运行JS。 2、在页面全部内容加载完成（包括引用文件，图片等）之后再加载JS 【第一优先级】在DOM加载后，全部内容..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["meta",{"property":"article:tag","content":"有道云"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"加载调用\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"加载调用","slug":"加载调用","link":"#加载调用","children":[{"level":2,"title":"JS加载调用","slug":"js加载调用","link":"#js加载调用","children":[{"level":3,"title":"【第一优先级】在DOM加载后，全部内容加载前运行","slug":"【第一优先级】在dom加载后-全部内容加载前运行","link":"#【第一优先级】在dom加载后-全部内容加载前运行","children":[]},{"level":3,"title":"【第二优先级】在全部内容加载后运行","slug":"【第二优先级】在全部内容加载后运行","link":"#【第二优先级】在全部内容加载后运行","children":[]},{"level":3,"title":"DOM文档加载步骤","slug":"dom文档加载步骤","link":"#dom文档加载步骤","children":[]},{"level":3,"title":"顺序总结","slug":"顺序总结","link":"#顺序总结","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.6,"words":781},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/01. 前端三件套/03.1. JavaScript/加载调用.md","excerpt":"\\n<h2>JS加载调用</h2>\\n<p>JS在页面加载之后运行</p>\\n<ul>\\n<li><a href=\\"https://www.cnblogs.com/wenxuehai/p/10368716.html#_label0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1、在DOM加载后，全部内容加载前运行</a></li>\\n<li><a href=\\"https://www.cnblogs.com/wenxuehai/p/10368716.html#_label1\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2、在全部内容加载后运行</a></li>\\n<li><a href=\\"https://www.cnblogs.com/wenxuehai/p/10368716.html#_label2\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3、DOM文档加载步骤</a></li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/01. 前端三件套/03.1. JavaScript/加载调用.md","value":{"title":"加载调用","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/01. 前端三件套/03.1. JavaScript/加载调用.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{b as comp,h as data};
