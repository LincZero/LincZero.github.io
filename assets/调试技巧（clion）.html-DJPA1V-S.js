import{_ as s,c as a,e as l,o as n}from"./app-Dnpl954R.js";const e={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[l(`<ul><li>随时暂停以查看线程树</li><li>一些断点技巧 <ul><li>add to watches 以随时查看单例模式</li></ul></li></ul><h2 id="add-to-watches-以随时查看单例模式" tabindex="-1"><a class="header-anchor" href="#add-to-watches-以随时查看单例模式"><span>add to watches 以随时查看单例模式</span></a></h2><p>中途踩了个坑：</p><h3 id="坑一" tabindex="-1"><a class="header-anchor" href="#坑一"><span>坑一</span></a></h3><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">RecorderControl</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> RecorderControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">instance) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        instance </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> RecorderControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 我在这里设置断点，但是看不到instance的值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> instance;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决方法：</p><p>请确保在 <code>Variables</code> 窗口中找到并展开 <code>instance</code> 变量。如果你无法找到<code>instance</code>变量，请在<code>Watches</code>窗口中添加一个表达式<code>instance</code>，以便在调试过程中实时查看它的值。</p><h3 id="坑二" tabindex="-1"><a class="header-anchor" href="#坑二"><span>坑二</span></a></h3><p>我 add to watches 后，在程序中途pause后，变量查看不了。显示红色的：-var-create: unable to create vaiable object</p><p>解决方法：</p><p>之前 add to watch 的不对，应该直接在 <code>Watches</code> 窗口打：<code>RecorderControl::instance</code> 追踪，而不是在断点时打 <code>instance</code>。 另外其实并不需要额外断点</p><h2 id="clion五种运行模式" tabindex="-1"><a class="header-anchor" href="#clion五种运行模式"><span>clion五种运行模式</span></a></h2><ul><li>普通运行 <ul><li>提示：Run &#39;ProjectName&#39;</li><li>图标：三角形</li></ul></li><li>普通调试 <ul><li>提示：Debug &#39;ProjectName&#39;</li><li>图标：虫子</li></ul></li><li>0 <ul><li>提示：Run &#39;ProjectName&#39; with Coverage</li><li>图标：盾牌+三角</li></ul></li><li>0 <ul><li>提示：Profile &#39;ProjectName&#39;</li><li>图标：时钟+三角</li></ul></li><li>0 <ul><li>提示：Run &#39;ProjectName&#39; with Valgrind Memcheck</li><li>图标：内存+三角</li><li>功能：可以帮助检测内存错误</li></ul></li></ul><h2 id="clion的git栏" tabindex="-1"><a class="header-anchor" href="#clion的git栏"><span>clion的git栏</span></a></h2><p>右上角一共五个图标，还有左下角的一个git页面展开</p><h2 id="clion交叉编译-wsl" tabindex="-1"><a class="header-anchor" href="#clion交叉编译-wsl"><span>clion交叉编译（wsl）</span></a></h2><h3 id="clion准备" tabindex="-1"><a class="header-anchor" href="#clion准备"><span>clion准备</span></a></h3><p>clion中打开 File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; 设置WSL的工具链</p><p>刚开始可能会发生一些问题，找不到对应的东西</p><ul><li>找不到 Toolset，则需要在windows上安装一个wsl。教程见后文</li><li>找不到 CMake，则需要在WSL里面安装一个。教程见后文</li><li>找不到 Build Tool、C编译器、C++编译器。同理在WSL里面安装</li><li>找不到 Debugger GDB。同理在WSL里面安装</li></ul><p>设置页面工具都找到了，也可能会遇到编译不了的问题</p><ul><li>例如版本不对，需要升级cmake版本</li></ul><h3 id="安装wsl" tabindex="-1"><a class="header-anchor" href="#安装wsl"><span>安装WSL</span></a></h3><p>略，上网找教程</p><h3 id="wsl上安装cmake" tabindex="-1"><a class="header-anchor" href="#wsl上安装cmake"><span>WSL上安装CMake</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> passwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 创建root用户 </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> su</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 切换成root用户（回车后填密码）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 最好先更新一下apt版本，不然后面的安装可能会报错</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Ubuntu Linux 有一个与众不同的特点，那就是初次使用时，你无法作为 root 来登录系统，为什么会这样？这就要从系统的安装说起。对于其他 Linux 系统来说，一般在安装过程就设定 root 密码，这样用户就能用它登录 root 帐户或使用 su [<strong>su - root</strong>] 命令转换到超级用户身份。</p><p>与之相反，Ubuntu 默认安装时，并没有给 root 用户设置口令，也没有启用 root 帐户。问题是要想作为 root 用户来运行命令该怎么办呢？没关系，我们可以使用 sudo 命令达此目的。</p><p>sudo 是 linux 下常用的允许普通用户使用超级用户权限的工具，该命令为管理员提供了一种细颗粒度的访问控制方法，通过它人们既可以作为超级用户又可以作为其它类型的用户来访问系统。这样做的好处是，管理员能够在不告诉用户 root 密码的前提下，授予他们某些特定类型的超级用户权限，这正是许多系统管理员所梦寐以求的。</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> camke</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看下版本，顺便获取安装提示</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 安装cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wsl上安装-build-tool、c编译器、c-编译器" tabindex="-1"><a class="header-anchor" href="#wsl上安装-build-tool、c编译器、c-编译器"><span>WSL上安装 Build Tool、C编译器、C++编译器</span></a></h3><p>c编译器和c++编译器通常为gcc.exe和g++.exe</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gcc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gcc</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> g++</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> g++</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wsl上安装gdp" tabindex="-1"><a class="header-anchor" href="#wsl上安装gdp"><span>WSL上安装gdp</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gdb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看下版本，顺便获取安装提示</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gdb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wsl升级cmake" tabindex="-1"><a class="header-anchor" href="#wsl升级cmake"><span>WSL升级cmake</span></a></h3><p>cmake官网：https://cmake.org/files/（可找对应版本的二进制）</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/cmake</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 卸载cmake。不要用 \`apt-get autoremove cmake\`，可能会将之前安装的ros很多库都删除了</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://cmake.org/files/v3.16/cmake-3.16.8-Linux-x86_64.tar.gz</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 下载cmake的安装包</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># https://cmake.org/files/v3.23/cmake-3.23.0-linux-x86_64.tar.gz，备用，3.23版本的</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zxvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake-3.16.8-Linux-x86_64.tar.gz</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 解压，注意压缩包内容编译过了，解压即可用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ln</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/shl/tools/cmake-3.16.8-Linux-x86_64/bin/cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/cmake</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 建立硬链接，不要加-s变成软链接，clion好像识别不到</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新cmake以后可能有个bug：c工具报错：<code>Test CMake run finished with error</code>。应该是版本不对的原因</p><h3 id="wsl升级其他" tabindex="-1"><a class="header-anchor" href="#wsl升级其他"><span>WSL升级其他</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 首先，确保你使用的是 WSL2 ，而不是 WSL1。如果你没有安装或更新到 WSL2，请按照[微软官方文档](https://docs.microsoft.com/zh-cn/windows/wsl/install-win10)进行配置。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> upgrade</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build-essential</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 安装或更新 GCC 和 G++</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gcc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">g++</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="高效断点技巧" tabindex="-1"><a class="header-anchor" href="#高效断点技巧"><span>高效断点技巧</span></a></h2><p>参考：B站“聊聊编程”</p><ol><li>条件断点，在断点的红点上右键，可以输入例如 <code>i==5</code>，这样可以在循环的某个part快速断点</li><li>根据线程断点，断点Config为 <code>Thread.currentThread().getName().equals(&quot;Thread1)&quot;</code></li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> thread1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(myThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Thread1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;进入=====&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 断点行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>集合的Stream， 在开始调试后，可以点击 <code>IJ</code>(idea) 下面的一个按钮 <code>Trace Current Stream Chain</code>，会弹出一个窗口。然后会呈现出这个流的各种操作 <strong>（可以看到 map、filter、map、collect 的每一步的过程）</strong></li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> clooect </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 断点行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Interger</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">parseInt)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(map</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">containsKey)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(map</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">get)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Collectors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(collect);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wsl" tabindex="-1"><a class="header-anchor" href="#wsl"><span>WSL</span></a></h2><p>我将他们都手动指定路径了：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Name: WSL</span></span>
<span class="line"><span>Toolset: Ubuntu-20.04</span></span>
<span class="line"><span>CMake: /usr/bin/cmake</span></span>
<span class="line"><span>Build Tool: /usr/bin/make</span></span>
<span class="line"><span>C Compiler: /usr/bin/gcc</span></span>
<span class="line"><span>C++ Compiler: /usr/bin/g++</span></span>
<span class="line"><span>Debugger: /usr/bin/gbd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是会有错误：Test CMake run finished with errors</p><p>尝试手动安装cmake：https://github.com/Kitware/CMake/releases/download/v3.26.4/cmake-3.26.4-linux-x86_64.tar.gz</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>wget https://github.com/Kitware/CMake/releases/download/v3.23.0/cmake-3.23.0-linux-x86_64.tar.gz</span></span>
<span class="line"><span>tar -zxvf cmake-3.23.0-linux-x86_64.tar.gz</span></span>
<span class="line"><span>sudo mv cmake-3.23.0-linux-x86_64 /opt/cmake-3.23.0</span></span>
<span class="line"><span>sudo ln -s /opt/cmake-3.23.0/bin/* /usr/local/bin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51)]))}const p=s(e,[["render",t],["__file","调试技巧（clion）.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E5%BC%80%E5%8F%91%E5%B1%82/IDE%20Tools/IDE%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%EF%BC%88clion%EF%BC%89.html","title":"调试技巧（clion）","lang":"zh-CN","frontmatter":{"description":"随时暂停以查看线程树 一些断点技巧 add to watches 以随时查看单例模式 add to watches 以随时查看单例模式 中途踩了个坑： 坑一 解决方法： 请确保在 Variables 窗口中找到并展开 instance 变量。如果你无法找到instance变量，请在Watches窗口中添加一个表达式instance，以便在调试过程中实时...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E5%BC%80%E5%8F%91%E5%B1%82/IDE%20Tools/IDE%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%EF%BC%88clion%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:description","content":"随时暂停以查看线程树 一些断点技巧 add to watches 以随时查看单例模式 add to watches 以随时查看单例模式 中途踩了个坑： 坑一 解决方法： 请确保在 Variables 窗口中找到并展开 instance 变量。如果你无法找到instance变量，请在Watches窗口中添加一个表达式instance，以便在调试过程中实时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":2,"title":"add to watches 以随时查看单例模式","slug":"add-to-watches-以随时查看单例模式","link":"#add-to-watches-以随时查看单例模式","children":[{"level":3,"title":"坑一","slug":"坑一","link":"#坑一","children":[]},{"level":3,"title":"坑二","slug":"坑二","link":"#坑二","children":[]}]},{"level":2,"title":"clion五种运行模式","slug":"clion五种运行模式","link":"#clion五种运行模式","children":[]},{"level":2,"title":"clion的git栏","slug":"clion的git栏","link":"#clion的git栏","children":[]},{"level":2,"title":"clion交叉编译（wsl）","slug":"clion交叉编译-wsl","link":"#clion交叉编译-wsl","children":[{"level":3,"title":"clion准备","slug":"clion准备","link":"#clion准备","children":[]},{"level":3,"title":"安装WSL","slug":"安装wsl","link":"#安装wsl","children":[]},{"level":3,"title":"WSL上安装CMake","slug":"wsl上安装cmake","link":"#wsl上安装cmake","children":[]},{"level":3,"title":"WSL上安装 Build Tool、C编译器、C++编译器","slug":"wsl上安装-build-tool、c编译器、c-编译器","link":"#wsl上安装-build-tool、c编译器、c-编译器","children":[]},{"level":3,"title":"WSL上安装gdp","slug":"wsl上安装gdp","link":"#wsl上安装gdp","children":[]},{"level":3,"title":"WSL升级cmake","slug":"wsl升级cmake","link":"#wsl升级cmake","children":[]},{"level":3,"title":"WSL升级其他","slug":"wsl升级其他","link":"#wsl升级其他","children":[]}]},{"level":2,"title":"高效断点技巧","slug":"高效断点技巧","link":"#高效断点技巧","children":[]},{"level":2,"title":"WSL","slug":"wsl","link":"#wsl","children":[]}],"git":{},"readingTime":{"minutes":4.7,"words":1411},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/IDE Tools/IDE调试工具/调试技巧（clion）.md","excerpt":"<ul>\\n<li>随时暂停以查看线程树</li>\\n<li>一些断点技巧\\n<ul>\\n<li>add to watches 以随时查看单例模式</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>add to watches 以随时查看单例模式</h2>\\n<p>中途踩了个坑：</p>\\n<h3>坑一</h3>\\n<div class=\\"language-cpp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"cpp\\" data-title=\\"cpp\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">RecorderControl</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">*</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\"> RecorderControl</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">::</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">getInstance</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(){</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    if</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#56B6C2\\">!</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">instance) {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">        instance </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">=</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> new</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> RecorderControl</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">();</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // 我在这里设置断点，但是看不到instance的值</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> instance;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/IDE Tools/IDE调试工具/调试技巧（clion）.md","value":{"title":"调试技巧（clion）","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/IDE Tools/IDE调试工具/调试技巧（clion）.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,d as data};
