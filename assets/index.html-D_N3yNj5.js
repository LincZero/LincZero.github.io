import{_ as r,c as a,a as t,d as o,b as l,e as i,o as s,r as p}from"./app-DdIoB8bt.js";const m="/assets/model_merging_basic-CWah1xXj.png",d="/assets/model_merging_3_checkpoints-YnaUd_-G.png",g="/assets/model_merging_lora-Dft1-Cai.png",c="/assets/model_merging_inpaint-QfoEFMqA.png",u="/assets/model_merging_cosxl-DoBqK774.png",f={},_={href:"https://github.com/comfyanonymous/ComfyUI",target:"_blank",rel:"noopener noreferrer"},h={href:"https://huggingface.co/stabilityai/cosxl",target:"_blank",rel:"noopener noreferrer"},x={href:"https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0/blob/main/sd_xl_base_1.0_0.9vae.safetensors",target:"_blank",rel:"noopener noreferrer"},y={href:"https://civitai.com/models/140737/albedobase-xl",target:"_blank",rel:"noopener noreferrer"};function k(C,e){const n=p("ExternalLinkIcon");return s(),a("div",null,[e[10]||(e[10]=t("h1",{id:"模型合并示例",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#模型合并示例"},[t("span",null,"模型合并示例")])],-1)),e[11]||(e[11]=t("p",null,"这些工作流程背后的想法是，您可以使用多个模型合并来执行复杂的工作流程，测试它们，然后在对结果满意后通过取消静音 CheckpointSave 节点来保存检查点。默认情况下，CheckpointSave 节点将检查点保存到 output/checkpoints/ 文件夹。",-1)),e[12]||(e[12]=t("p",null,"您可以在以下位置找到这些节点：advanced->model_merging",-1)),e[13]||(e[13]=t("p",null,"第一个例子是两个不同检查点之间简单合并的基本示例。",-1)),t("p",null,[e[1]||(e[1]=o("您可以在")),t("a",_,[e[0]||(e[0]=o("ComfyUI")),l(n)]),e[2]||(e[2]=o("中加载这些图像以获得完整的工作流程。"))]),e[14]||(e[14]=i('<p><img src="'+m+'" alt="Example" loading="lazy"></p><p>在 ComfyUI 中，保存的检查点包含用于生成它们的完整工作流程，因此它们可以像图像一样加载到 UI 中以获取用于创建它们的完整工作流程。</p><p>此示例是使用简单块合并来合并 3 个不同检查点的示例，其中 unet 的输入、中间和输出块可以具有不同的比率：</p><p><img src="'+d+'" alt="Example" loading="lazy"></p><p>由于 Loras 是模型权重的补丁，因此它们也可以合并到模型中：</p><p><img src="'+g+'" alt="Example" loading="lazy"></p><p>您还可以减去模型权重并添加它们，就像在本例中一样，使用以下公式从非修复模型创建修复模型：<code>(inpaint_model - base_model) * 1.0 + other_model</code> 如果您熟悉其他 UI 中的“添加差异”选项，这就是在 ComfyUI 中执行的操作。</p><p><img src="'+c+'" alt="Example" loading="lazy"></p><p>您应该注意的一件重要事情是，模型会以硬件推理所用的精度进行合并和保存，因此通常为 16 位浮点数。如果您希望以 32 位浮点数进行合并，请使用以下方法启动 ComfyUI：–force-fp32</p><h3 id="高级合并" tabindex="-1"><a class="header-anchor" href="#高级合并"><span>高级合并</span></a></h3><h4 id="cosxl" tabindex="-1"><a class="header-anchor" href="#cosxl"><span>CosXL</span></a></h4>',11)),t("p",null,[e[6]||(e[6]=o("以下是如何使用合并功能从常规 SDXL 模型创建 CosXL 模型的示例。要求是")),t("a",h,[e[3]||(e[3]=o("CosXL 基础模型")),l(n)]),e[7]||(e[7]=o("、")),t("a",x,[e[4]||(e[4]=o("SDXL 基础模型")),l(n)]),e[8]||(e[8]=o("和要转换的 SDXL 模型。在此示例中，我使用了")),t("a",y,[e[5]||(e[5]=o("albedobase-xl")),l(n)]),e[9]||(e[9]=o("。"))]),e[15]||(e[15]=t("p",null,[t("img",{src:u,alt:"Example",loading:"lazy"})],-1))])}const v=r(f,[["render",k],["__file","index.html.vue"]]),I=JSON.parse('{"path":"/MdNote_Other/ComfyUI_examples/model_merging/","title":"模型合并示例","lang":"zh-CN","frontmatter":{"description":"模型合并示例 这些工作流程背后的想法是，您可以使用多个模型合并来执行复杂的工作流程，测试它们，然后在对结果满意后通过取消静音 CheckpointSave 节点来保存检查点。默认情况下，CheckpointSave 节点将检查点保存到 output/checkpoints/ 文件夹。 您可以在以下位置找到这些节点：advanced->model_mer...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Other/ComfyUI_examples/model_merging/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"模型合并示例"}],["meta",{"property":"og:description","content":"模型合并示例 这些工作流程背后的想法是，您可以使用多个模型合并来执行复杂的工作流程，测试它们，然后在对结果满意后通过取消静音 CheckpointSave 节点来保存检查点。默认情况下，CheckpointSave 节点将检查点保存到 output/checkpoints/ 文件夹。 您可以在以下位置找到这些节点：advanced->model_mer..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模型合并示例\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"模型合并示例","slug":"模型合并示例","link":"#模型合并示例","children":[{"level":3,"title":"高级合并","slug":"高级合并","link":"#高级合并","children":[{"level":4,"title":"CosXL","slug":"cosxl","link":"#cosxl","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.67,"words":500},"filePathRelative":"MdNote_Other/ComfyUI_examples/model_merging/README.md","excerpt":"\\n<p>这些工作流程背后的想法是，您可以使用多个模型合并来执行复杂的工作流程，测试它们，然后在对结果满意后通过取消静音 CheckpointSave 节点来保存检查点。默认情况下，CheckpointSave 节点将检查点保存到 output/checkpoints/ 文件夹。</p>\\n<p>您可以在以下位置找到这些节点：advanced-&gt;model_merging</p>\\n<p>第一个例子是两个不同检查点之间简单合并的基本示例。</p>\\n<p>您可以在<a href=\\"https://github.com/comfyanonymous/ComfyUI\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ComfyUI</a>中加载这些图像以获得完整的工作流程。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Other/ComfyUI_examples/model_merging/README.md","value":{"title":"ComfyUI_examples/","path":"MdNote_Other/ComfyUI_examples/model_merging/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{v as comp,I as data};
