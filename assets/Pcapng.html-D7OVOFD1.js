import{_ as s,c as a,e as t,o as n}from"./app-Dnpl954R.js";const l={};function e(h,i){return n(),a("div",null,i[0]||(i[0]=[t(`<h1 id="pcapng" tabindex="-1"><a class="header-anchor" href="#pcapng"><span>Pcapng</span></a></h1><p>Pcapng是Pcap格式的扩展，需要先看Pcap笔记或属性Pcap格式后再来看该篇笔记</p><p>参考：</p><ul><li><a href="https://snmplink.blog.csdn.net/article/details/126419291" target="_blank" rel="noopener noreferrer">网络分析笔记01：pcapng格式的整体解包</a>（使用allow copy插件复制）</li><li><a href="https://zhuanlan.zhihu.com/p/653256520" target="_blank" rel="noopener noreferrer">pcapng 报文头格式分析</a></li></ul><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>本文首先介绍对pcapng格式进行介绍，然后讲解pcapng的整体结构，并使用Python语言进行块（block）的解包。</p><p>在此需要说明的是，本文是为了能够深入对pcapng格式进行分析，所以不使用python的<strong>scapy</strong>库。</p><h2 id="pcapng文件" tabindex="-1"><a class="header-anchor" href="#pcapng文件"><span>pcapng文件</span></a></h2><p>对网络传输数据进行处理，需使用专用的抓包工具，例如WireShark等，对于抓包后的数据进行分析，就需要用到一些专用的数据格式，pcapng就是其中广为使用的一种。我们先对其进行简要介绍。</p><h3 id="_1、pcapng概述" tabindex="-1"><a class="header-anchor" href="#_1、pcapng概述"><span>1、pcapng概述</span></a></h3><p>网络上的数据是以流的方式进行数据传输的，我们从网络上抓包后，需要进行数据分析，所以需要对数据进行存储，pcapng就是用于存储的格式。</p><p>pcnpng来源于IETF（互联网工程工作组），是pcap的新一代格式，相比较于原有的pcap格式，更具有逻辑性和可扩展性。</p><h3 id="_2、特点" tabindex="-1"><a class="header-anchor" href="#_2、特点"><span>2、特点</span></a></h3><ol><li>支持从多接口捕获 <ul><li>pcapng允许捕获文件使用“接口描述块”定义多个接口。 每个包都可以与特定的接口相关联。</li></ul></li><li>提高时间戳分辨率 <ul><li>pcap的时间戳分辨率是微秒，pcapng的时间戳是一个64位数，表示自1970年1月1日以来的时间单位数量。</li></ul></li><li>可以嵌入注释信息 <ul><li>pcapng允许在捕获文件中嵌入注释信息。</li></ul></li><li>可嵌入额外数据 <ul><li>使用pcapng，接口描述块允许描述字段、操作系统字段和过滤器字段，这些字段可以提供捕获源的额外细节。</li></ul></li><li>可扩展文件格式 <ul><li>该格式部署了一个通用的块结构，该结构允许工具忽略未理解的块。 这允许格式随着时间的推移而演进。 特定的块是为接口和包定义的。 额外的元数据可以存储在可选块中。</li></ul></li></ol><h2 id="块-block-结构" tabindex="-1"><a class="header-anchor" href="#块-block-结构"><span>块（block）结构</span></a></h2><p>pcapng由各种block组成，其结构描述如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">               3</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                      </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Block</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (块类型)                       |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Block</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Total</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (块长度)                   |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Block</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (块内容) 对齐32位                   |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |                  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Block</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Total</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (块长度)                   |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字段含义</p><ol><li>块类型，block type <ul><li>不同类型的块有不同的类型值。</li></ul></li><li>块长度，block total length <ul><li>块的总长度，单位字节，</li><li>block body的长度 = block total length - 12</li></ul></li><li>块内容，block body <ul><li>4字节对齐</li></ul></li><li>块长度，block total length <ul><li>重复长度</li></ul></li></ol><h2 id="block的类型" tabindex="-1"><a class="header-anchor" href="#block的类型"><span>block的类型</span></a></h2><p>主要块类型如下</p><table><thead><tr><th></th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>0x0A0D0D0A</td><td>节标题块</td><td>它标识捕获转储文件的一部分的开头。节头块不包含数据，但它标识逻辑相关的块（接口、数据包）列表</td></tr><tr><td>0x00000001</td><td>接口描述块</td><td>用于描述指定进行捕获的网络接口的特征</td></tr><tr><td>0x00000006</td><td>增强型数据包块</td><td>增强型数据包块是用于存储来自网络的数据包的标准容器</td></tr><tr><td>0x00000003</td><td>简单数据包块</td><td>简单数据包块是一个轻量级容器，用于存储来自网络的数据包</td></tr><tr><td>0x00000004</td><td>名称解析块</td><td>名称解析块用于支持数字地址（存在于捕获的数据包中）与其相应的规范名称的相关性</td></tr><tr><td>0x00000005</td><td>接口统计块</td><td>接口统计数据块包含给定接口的捕获统计数据</td></tr></tbody></table><h3 id="节头块-section-header-block" tabindex="-1"><a class="header-anchor" href="#节头块-section-header-block"><span>节头块 (Section Header Block）</span></a></h3><p>0x0A0D0D0A</p><p>节头块是强制性的，它确定了捕获转储文件的一节的开头。节头块不包含数据，而是标识了逻辑上相关的块（接口块，数据块）列表。</p><p>节标题块是.pcapng 文件类型标识，定义信息</p><table><thead><tr><th>块类型</th><th>4字节</th><th>0x0A0D0D0A</th></tr></thead><tbody><tr><td>块长度</td><td>4字节</td><td>块类型到选项长度</td></tr><tr><td>块的数据顺序</td><td>4字节</td><td>大端或者小端模式,0x4D3C2B1A为小端，0x1A2B3C4D为大端。</td></tr><tr><td>版本信息</td><td>4字节</td><td>主版本和次版本</td></tr><tr><td>下一块长度</td><td>8字节</td><td>指定后续块的字，-1代表未指定后续块的大小</td></tr><tr><td>选项</td><td>可变字节</td><td>根据块总长度确定可变选项</td></tr></tbody></table><h3 id="接口描述块-interface-description-block" tabindex="-1"><a class="header-anchor" href="#接口描述块-interface-description-block"><span>接口描述块 (Interface Description Block）</span></a></h3><p>0x00000001</p><p>接口描述块是强制性的。该块被用来指定进行捕获的网络接口的特性。 为了把捕获的数据关联到相应的接口，该接口描述块必须在使用它的任何其它块之前定义; 因此，此块通常会紧跟着节头块放置。 一个接口描述块只在其所在的一节内有效的。</p><table><thead><tr><th>块类型</th><th>4字节</th><th>0x00000001</th></tr></thead><tbody><tr><td>块长度</td><td>4字节</td><td>块类型到选项长度</td></tr><tr><td>链接类型</td><td>4字节</td><td>定义该接口的链路层类型的值。1代表以太网。</td></tr><tr><td>SnapLen</td><td>4字节</td><td>从每个数据包转储的最大字节数。每个数据包超过此值的部分将不会存储在文件中。</td></tr><tr><td>选项</td><td>可变字节</td><td>根据块总长度确定可变选项</td></tr></tbody></table><p>（1）、选项：由Option Type（2字节）+选项长度（2 个字节）+选项值（可变长度）组成</p><p>Option Type（2字节）：包含指定当前TLV记录类型的代码。</p><p>选项长度（2 个字节）：它包含以下“选项值”字段的实际长度，不包含填充字节。</p><p>选项值（可变长度）：它包含给定选项的值，与 32 位边界对齐。该字段的实际长度（即没有填充字节）由选项长度字段指定。</p><table><thead><tr><th>名称</th><th>类型的代码</th><th>长度</th><th>描述</th><th>案列</th></tr></thead><tbody><tr><td>if_name</td><td>2</td><td>Variable</td><td>A UTF-8 string containing the name of the device used to capture data.</td><td>&quot;eth0&quot; / &quot;\\Device\\NPF_{AD1CE675-96D0-47C5-ADD0-2504B9126B68}&quot; / ...</td></tr><tr><td>if_description</td><td>3</td><td>Variable</td><td>A UTF-8 string containing the description of the device used to capture data.</td><td>&quot;Broadcom NetXtreme&quot; / &quot;First Ethernet Interface&quot; / ...</td></tr><tr><td>if_IPv4addr</td><td>4</td><td>8</td><td>Interface network address and netmask. This option can be repeated multiple times within the same Interface Description Block when multiple IPv4 addresses are assigned to the interface.</td><td>192 168 1 1 255 255 255 0</td></tr><tr><td>if_IPv6addr</td><td>5</td><td>17</td><td>Interface network address and prefix length (stored in the last byte). This option can be repeated multiple times within the same Interface Description Block when multiple IPv6 addresses are assigned to the interface.</td><td>2001:0db8:85a3:08d3:1319:8a2e:0370:7344/64 is written (in hex) as &quot;20 01 0d b8 85 a3 08 d3 13 19 8a 2e 03 70 73 44 40&quot;</td></tr><tr><td>if_MACaddr</td><td>6</td><td>6</td><td>Interface Hardware MAC address (48 bits).</td><td>00 01 02 03 04 05</td></tr><tr><td>if_EUIaddr</td><td>7</td><td>8</td><td>Interface Hardware EUI address (64 bits), if available.</td><td>TODO: give a good example</td></tr><tr><td>if_speed</td><td>8</td><td>8</td><td>Interface speed (in bps).</td><td>100000000 for 100Mbps</td></tr><tr><td>if_tsresol</td><td>9</td><td>1</td><td>Resolution of timestamps. If the Most Significant Bit is equal to zero, the remaining bits indicates the resolution of the timestamp as as a negative power of 10 (e.g. 6 means microsecond resolution, timestamps are the number of microseconds since 1/1/1970). If the Most Significant Bit is equal to one, the remaining bits indicates the resolution as as negative power of 2 (e.g. 10 means 1/1024 of second). If this option is not present, a resolution of 10^-6 is assumed (i.e. timestamps have the same resolution of the standard &#39;libpcap&#39; timestamps).</td><td>6</td></tr><tr><td>if_tzone</td><td>10</td><td>4</td><td>Time zone for GMT support (TODO: specify better).</td><td>TODO: give a good example</td></tr><tr><td>if_filter</td><td>11</td><td>variable</td><td>The filter (e.g. &quot;capture only TCP traffic&quot;) used to capture traffic. The first byte of the Option Data keeps a code of the filter used (e.g. if this is a libpcap string, or BPF bytecode, and more). More details about this format will be presented in Appendix XXX (TODO). (TODO: better use different options for different fields? e.g. if_filter_pcap, if_filter_bpf, ...)</td><td>00 &quot;tcp port 23 and host 10.0.0.5&quot;</td></tr><tr><td>if_os</td><td>12</td><td>variable</td><td>A UTF-8 string containing the name of the operating system of the machine in which this interface is installed. This can be different from the same information that can be contained by the Section Header Block (Section 3.1) because the capture can have been done on a remote machine.</td><td>&quot;Windows XP SP2&quot; / &quot;openSUSE 10.2&quot; / ...</td></tr><tr><td>if_fcslen</td><td>13</td><td>1</td><td>An integer value that specified the length of the Frame Check Sequence (in bits) for this interface. For link layers whose FCS length can change during time, the Packet Block Flags Word can be used (see Appendix A).</td><td>4</td></tr><tr><td>if_tsoffset</td><td>14</td><td>8</td><td>A 64 bits integer value that specifies an offset (in seconds) that must be added to the timestamp of each packet to obtain the absolute timestamp of a packet. If the option is missing, the timestamps stored in the packet must be considered absolute timestamps. The time zone of the offset can be specified with the option if_tzone. TODO: won&#39;t a if_tsoffset_low for fractional second offsets be useful for highly syncronized capture systems?</td><td>1234</td></tr></tbody></table><h3 id="分组块-packet-block" tabindex="-1"><a class="header-anchor" href="#分组块-packet-block"><span>分组块 (Packet Block）</span></a></h3><p>0x00000002</p><p>过时，使用增强分组块代替，</p><h3 id="简单分组块-simple-packet-block" tabindex="-1"><a class="header-anchor" href="#简单分组块-simple-packet-block"><span>简单分组块 (Simple Packet Block）</span></a></h3><p>0x00000003</p><p>简单分组块是可选的，用于存储来自网络的分组的轻量级容器。</p><p>简单分组块类似于分组块（见第3.5节），但它更小、处理起来更简单，只包含了一组最小信息集合。当性能或占用空间是关键因素时，这个块将优先于标准分组块被使用，如在持续流量转储应用程序。一个捕获文件可以同时包含分组块和简单的数据包块：例如硬件资源成为瓶颈时，捕捉工具可以从分组块切换到简单分组块。</p><h3 id="名称解析块-name-resolution-block" tabindex="-1"><a class="header-anchor" href="#名称解析块-name-resolution-block"><span>名称解析块 (Name Resolution Block</span></a></h3><p>0x00000004</p><p>名称解析块用来把数字地址（存在于捕获的数据包）及其相应的规范名称关联起来，这是可选的。通过在文件中保存名称，这可以防止名称解析中的延迟时间。名称解析块避免了在跟踪捕获文件时发出大量的DNS的请求，并且允许在未联网的计算机上读取捕获数据时进行名称解析。</p><h3 id="接口统计块-interface-statistics-block" tabindex="-1"><a class="header-anchor" href="#接口统计块-interface-statistics-block"><span>接口统计块 (Interface Statistics Block）</span></a></h3><p>0x00000005</p><p>接口统计块是可选的，它包含给定接口的捕获统计信息。在当前节（Section）中，接口相关的统计信息被接口ID字段中标识的接口引用。接口统计块通常被放置在该文件的末尾，但是没有明确要求关于其放置位置 - 它甚至可以出现多次对相同的接口。</p><h3 id="增强分组块-enhanced-packet-block" tabindex="-1"><a class="header-anchor" href="#增强分组块-enhanced-packet-block"><span>增强分组块 (Enhanced Packet Block）</span></a></h3><p>0x00000006</p><p>一个增强分组块是用来存储来自网络的数据包的标准容器。增强型分组块是可选的，因为数据包可以通过该块或简单分组块进行存储。</p><p>数据包主要在增强型数据包块。其格式如下</p><table><thead><tr><th>块类型</th><th>0x00000006(4字节)</th><th></th></tr></thead><tbody><tr><td>块总长度</td><td>4字节</td><td>块类型到选项长度</td></tr><tr><td>接口ID</td><td>4字节</td><td>指定该数据包来自哪个接口</td></tr><tr><td>时间戳（高）</td><td>4字节</td><td>表示时间戳的 64 位值的高 32 位和低 32 位。时间戳是一个 64 位无符号整数，表示自 1970 年 1 月 1 日以来的单位数。解释该字段的方式由该数据包引用的接口描述块的“if_tsresol”选项指定。与 libpcap 文件格式不同，时间戳不会保存为两个 32 位值，分别表示自 1970 年 1 月 1 日以来的秒和微秒。它们被保存为单个 64 位数量，另存为两个 32 位字。默认分辨率为 10^-6，即时间戳的 64 位值除以10的6次方，整数部分为秒，小数部分为微秒。</td></tr><tr><td>时间戳（低）</td><td>8字节</td><td></td></tr><tr><td>捕获长度</td><td>4字节</td><td>从数据包中捕获的字节数</td></tr><tr><td>数据包长度</td><td>4字节</td><td>数据包在网络上传输时的实际长度</td></tr><tr><td>数据包</td><td>捕获长度字节</td><td>来自网络的数据，包括链路层标头。该字段的实际长度是捕获长度。</td></tr><tr><td>选项</td><td>可变字节</td><td>根据块总长度确定可变选项</td></tr></tbody></table><h2 id="块解析源代码-python" tabindex="-1"><a class="header-anchor" href="#块解析源代码-python"><span>块解析源代码（Python）</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> struct</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;example.pcap&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;rb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">file_result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;result.txt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;w&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">blockNumber </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;对pcap文件进行分析...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 读取block类型和长度</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> Exception</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> error:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        break</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        break</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    (block_type, block_total_len) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> struct.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">unpack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;=LL&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, data)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    blockNumber </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> blockNumber </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 判读block类型和长度</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_type </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0A0D0D0A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%05u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">号块，类型：节头块(Section Header Block, 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%08x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (blockNumber, block_type))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_type </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0000001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%05u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">号块，类型：接口描述块(Interface Description Block, 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%08x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (blockNumber, block_type))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_type </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0000002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%05u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">号块，类型：分组块(Packet Block, 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%08x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (blockNumber, block_type))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_type </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0000003</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%05u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">号块，类型：简单分组块(Simple Packet Block, 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%08x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (blockNumber, block_type))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_type </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0000004</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%05u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">号块，类型：名称解析块(Name Resolution Block, 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%08x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (blockNumber, block_type))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_type </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0000005</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%05u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">号块，类型：接口统计块(Interface Statistics Block, 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%08x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (blockNumber, block_type))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_type </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%05u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">号块，类型：增强分组块(Enhanced Packet Block, 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%08x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (blockNumber, block_type))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%05u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">号块，类型：未知(unknow, 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%08x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (blockNumber, block_type))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|  |--长度：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_total_len)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    block_bytes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(block_total_len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">file_result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|--所有包均已读取完毕！</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pcap文件分析完毕！&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00001号块，类型：节头块(Section</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x0a0d0d0a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：184</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00002号块，类型：接口描述块(Interface</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Description</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：88</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00003号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：628</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00004号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：628</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00005号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：628</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00006号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：180</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00007号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：180</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00008号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：180</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00009号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：628</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00010号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：628</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00011号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：628</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--00012号块，类型：增强分组块(Enhanced</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Packet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x00000006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--长度：180</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,58)]))}const p=s(l,[["render",e],["__file","Pcapng.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/Capture/%E6%8A%93%E5%8C%85%E6%A0%BC%E5%BC%8F/Pcapng.html","title":"Pcapng","lang":"zh-CN","frontmatter":{"description":"Pcapng Pcapng是Pcap格式的扩展，需要先看Pcap笔记或属性Pcap格式后再来看该篇笔记 参考： 网络分析笔记01：pcapng格式的整体解包（使用allow copy插件复制） pcapng 报文头格式分析 前言 本文首先介绍对pcapng格式进行介绍，然后讲解pcapng的整体结构，并使用Python语言进行块（block）的解包。 ...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/Capture/%E6%8A%93%E5%8C%85%E6%A0%BC%E5%BC%8F/Pcapng.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Pcapng"}],["meta",{"property":"og:description","content":"Pcapng Pcapng是Pcap格式的扩展，需要先看Pcap笔记或属性Pcap格式后再来看该篇笔记 参考： 网络分析笔记01：pcapng格式的整体解包（使用allow copy插件复制） pcapng 报文头格式分析 前言 本文首先介绍对pcapng格式进行介绍，然后讲解pcapng的整体结构，并使用Python语言进行块（block）的解包。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pcapng\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Pcapng","slug":"pcapng","link":"#pcapng","children":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"pcapng文件","slug":"pcapng文件","link":"#pcapng文件","children":[{"level":3,"title":"1、pcapng概述","slug":"_1、pcapng概述","link":"#_1、pcapng概述","children":[]},{"level":3,"title":"2、特点","slug":"_2、特点","link":"#_2、特点","children":[]}]},{"level":2,"title":"块（block）结构","slug":"块-block-结构","link":"#块-block-结构","children":[]},{"level":2,"title":"block的类型","slug":"block的类型","link":"#block的类型","children":[{"level":3,"title":"节头块 (Section Header Block）","slug":"节头块-section-header-block","link":"#节头块-section-header-block","children":[]},{"level":3,"title":"接口描述块 (Interface Description Block）","slug":"接口描述块-interface-description-block","link":"#接口描述块-interface-description-block","children":[]},{"level":3,"title":"分组块 (Packet Block）","slug":"分组块-packet-block","link":"#分组块-packet-block","children":[]},{"level":3,"title":"简单分组块 (Simple Packet Block）","slug":"简单分组块-simple-packet-block","link":"#简单分组块-simple-packet-block","children":[]},{"level":3,"title":"名称解析块 (Name Resolution Block","slug":"名称解析块-name-resolution-block","link":"#名称解析块-name-resolution-block","children":[]},{"level":3,"title":"接口统计块 (Interface Statistics Block）","slug":"接口统计块-interface-statistics-block","link":"#接口统计块-interface-statistics-block","children":[]},{"level":3,"title":"增强分组块 (Enhanced Packet Block）","slug":"增强分组块-enhanced-packet-block","link":"#增强分组块-enhanced-packet-block","children":[]}]},{"level":2,"title":"块解析源代码（Python）","slug":"块解析源代码-python","link":"#块解析源代码-python","children":[]}]}],"git":{},"readingTime":{"minutes":11.11,"words":3333},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/抓包格式/Pcapng.md","excerpt":"\\n<p>Pcapng是Pcap格式的扩展，需要先看Pcap笔记或属性Pcap格式后再来看该篇笔记</p>\\n<p>参考：</p>\\n<ul>\\n<li><a href=\\"https://snmplink.blog.csdn.net/article/details/126419291\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">网络分析笔记01：pcapng格式的整体解包</a>（使用allow copy插件复制）</li>\\n<li><a href=\\"https://zhuanlan.zhihu.com/p/653256520\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">pcapng 报文头格式分析</a></li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/抓包格式/Pcapng.md","value":{"title":"Pcapng","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/抓包格式/Pcapng.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,d as data};
