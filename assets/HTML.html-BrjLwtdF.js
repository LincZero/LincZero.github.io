import{_ as i,c as a,e as n,o as s}from"./app-CcegWvWz.js";const t={};function l(r,e){return s(),a("div",null,e[0]||(e[0]=[n(`<h1 id="html" tabindex="-1"><a class="header-anchor" href="#html"><span>HTML</span></a></h1><h2 id="html路径表示法" tabindex="-1"><a class="header-anchor" href="#html路径表示法"><span>HTML路径表示法</span></a></h2><p><a href="https://www.cnblogs.com/huashanqingzhu/p/3682253.html" target="_blank" rel="noopener noreferrer">HTML相对路径 当前目录、上级目录、根目录、下级目录表示法</a></p><p>文件引用时经常需要用到相对目录。如(js,css,图片等)</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;./&quot;  ---------       源代码所在的当前目录【可省略】</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;../&quot;  ---------       源代码上一级目录   上上一级就是../../</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;/&quot;  ---------       源代码所在的根目录【慎用】</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下级目录直接写目录名 css/index.css 或./css/index.css</p><p>../ 代表上一级目录 ./代表同级目录 直接写img/aa.jpg代表同级目录</p><h2 id="img和background-img区别" tabindex="-1"><a class="header-anchor" href="#img和background-img区别"><span>img和background-img区别</span></a></h2><h4 id="是否占位" tabindex="-1"><a class="header-anchor" href="#是否占位"><span>是否占位</span></a></h4><ul><li><p><code>background-image</code>是背景图片，是css的一个样式，不占位</p></li><li><p><code> &lt;img /&gt;</code>是一个块状元素，它是一个图片，是html的一个标签，占位</p></li></ul><h4 id="否可操作" tabindex="-1"><a class="header-anchor" href="#否可操作"><span>否可操作</span></a></h4><p>background-image是只能看的，只能设置background-position, background-attachment, background-repeat</p><p><img>是一个document对象，它是可以操作的。比如更换img src的路径可以达到更换图片的目的，也可以移动它的位置，从document中移除等等操作。所以如果是装饰性的图片就使用background-img，如果和文体内容很相关就使用img。</p><h4 id="加载顺序不同" tabindex="-1"><a class="header-anchor" href="#加载顺序不同"><span>加载顺序不同</span></a></h4><p>在网页加载的过程中，以css背景图存在的图片background-image会等到结构加载完成（网页的内容全部显示以后）才开始加载，而html中的标签img是网页结构（内容）的一部分会在加载结构的过程中加载，换句话讲，网页会先加载标签img的内容，再加载背景图片background-image，如果你用引入了一个很大的图片，那么在这个图片下载完成之前，img后的内容都不会显示。而如果用css来引入同样的图片，网页结构和内容加载完成之后，才开始加载背景图片，不会影响你浏览网页内容。</p><h4 id="从解析机制看" tabindex="-1"><a class="header-anchor" href="#从解析机制看"><span>从解析机制看</span></a></h4><p>Img属于html标签，background是css方法。一个页面由html、css、js组成，**按照浏览器解析机制，html标签优先解析。**大家都知道css文件会放在head加载，但是这并不意味着它会立即执行，而是在html加载完后才执行的。所以重要的元素，如logo就应该使用img。</p><p>如果仅仅是为了显示一张图片，比如banner、广告图等，建议<strong>采用background</strong>方式。因为不重要的自动往后排，避免占用带宽，造成数据阻塞。</p><p>如果图片很多，这里又出现一个新的问题，不同的浏览器支持的并发加载数量是不一样的，（最新测试）IE是10个，FF是10个，图片多，就会出现严重的延迟或者404，因为图片加载慢会影响到页面主要数据呈现，那么让用户看到的都是空白，你好意思让他继续等下去吗！所以，如果不采用lazyload还是<strong>采用background</strong>比较好。</p><p>Img标签优点是自闭和，可以避免空标签出现（空标签也是w3c验证的内容之一）。采用background方式就会出现空标签，bootstrap中的icon都是用i标签加入的，而i标签中是空内容，这样就产生了空标签（并不是说这样做不好，利弊等会聊）。</p><h4 id="从seo角度看" tabindex="-1"><a class="header-anchor" href="#从seo角度看"><span>从SEO角度看</span></a></h4><p>刚才说了，Img标签是自闭和的，不能添加文本内容，但是，Img有一个alt属性，而且这个属性在w3c标准中，要求必须有，这样做的<strong>优点</strong>还是很多的。</p><ul><li><p>Img优点</p><ul><li>第一，图片比较大，或者用户网速比较窝火的时候，加载失败了，至少还有文字提示告诉用户这里是个什么内容的图片。如果用户非要看这个图，那就多刷几次去加载。另外，<strong>alt属性有利于辅助阅读</strong>，尤其是对盲人朋友，他们使用阅读器浏览页面，如果没有文本提示，就太不厚道了。</li><li>第二，<strong>alt属性有利于SEO</strong>，搜索引擎实现很好的图像识别还是有一段路要走。</li></ul></li><li><p>Img缺点</p><ul><li>第一，Img加载的图片是通过src拿到的，如果HTML代码不允许修改，那怎么换图，只有同名文件替换，但是有可能遇到304状态，需要服务器端做相应的设置。这时background的优点就出来了，换皮肤就是这个栗子。</li><li>第二，如果图片显示区域空间大小是预留的，那么图片必须和预留的空间一致，否则图片要么被拉伸要么被压缩，都不是等比例操作。当然，避免这种问题就需要前端和视觉设计师遵守一定的规范。</li></ul></li></ul><h4 id="语义化角度" tabindex="-1"><a class="header-anchor" href="#语义化角度"><span>语义化角度</span></a></h4><p>Background和语义化不沾边了，Img是HTML标签，语义明确。</p><h4 id="建议-重要的需要优先加载的图片最好采用img。不重要的图片最好采用background。" tabindex="-1"><a class="header-anchor" href="#建议-重要的需要优先加载的图片最好采用img。不重要的图片最好采用background。"><span>建议：重要的需要优先加载的图片最好采用img。不重要的图片最好采用background。</span></a></h4><p>做SEO是最方便的还是background，图片是放在背景上的，前景写内容，两不误。如果不想让内容显示出来，就加text-indent， -99999你懂的。（以前有这种玩法，是搜索引擎算法单一的年代，关键字比重高 排名就靠前）。</p><p>刚才提了一下bootstrap的background方法，bootstrap的做法是用background设置icon，icon的使用太灵活了，所以必须模块化，语义化先靠边站，鱼与熊掌不可兼得。<strong>PS</strong>：bootstrap v3之后采用了icon font</p><p>其次icon的重要性真不高，放在最后加载还减少了带宽占用量，提高PV速度。</p><p>img标签语义很明确不能乱用，所以bootstrap采用无语义的i标签来设置icon也挺好。<strong>PS</strong>：自己项目中使用无语义标签要注意是否向前兼容，要关注HTML5中的定义。</p>`,30)]))}const c=i(t,[["render",l],["__file","HTML.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/01.%20%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/01.%20H5/HTML.html","title":"HTML","lang":"zh-CN","frontmatter":{"last_time":"2020.10.29","description":"HTML HTML路径表示法 HTML相对路径 当前目录、上级目录、根目录、下级目录表示法 文件引用时经常需要用到相对目录。如(js,css,图片等) 下级目录直接写目录名 css/index.css 或./css/index.css ../ 代表上一级目录 ./代表同级目录 直接写img/aa.jpg代表同级目录 img和background-img...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/01.%20%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/01.%20H5/HTML.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"HTML"}],["meta",{"property":"og:description","content":"HTML HTML路径表示法 HTML相对路径 当前目录、上级目录、根目录、下级目录表示法 文件引用时经常需要用到相对目录。如(js,css,图片等) 下级目录直接写目录名 css/index.css 或./css/index.css ../ 代表上一级目录 ./代表同级目录 直接写img/aa.jpg代表同级目录 img和background-img..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTML\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"HTML","slug":"html","link":"#html","children":[{"level":2,"title":"HTML路径表示法","slug":"html路径表示法","link":"#html路径表示法","children":[]},{"level":2,"title":"img和background-img区别","slug":"img和background-img区别","link":"#img和background-img区别","children":[{"level":4,"title":"是否占位","slug":"是否占位","link":"#是否占位","children":[]},{"level":4,"title":"否可操作","slug":"否可操作","link":"#否可操作","children":[]},{"level":4,"title":"加载顺序不同","slug":"加载顺序不同","link":"#加载顺序不同","children":[]},{"level":4,"title":"从解析机制看","slug":"从解析机制看","link":"#从解析机制看","children":[]},{"level":4,"title":"从SEO角度看","slug":"从seo角度看","link":"#从seo角度看","children":[]},{"level":4,"title":"语义化角度","slug":"语义化角度","link":"#语义化角度","children":[]},{"level":4,"title":"建议：重要的需要优先加载的图片最好采用img。不重要的图片最好采用background。","slug":"建议-重要的需要优先加载的图片最好采用img。不重要的图片最好采用background。","link":"#建议-重要的需要优先加载的图片最好采用img。不重要的图片最好采用background。","children":[]}]}]}],"git":{},"readingTime":{"minutes":4.96,"words":1489},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/01. 前端三件套/01. H5/HTML.md","excerpt":"\\n<h2>HTML路径表示法</h2>\\n<p><a href=\\"https://www.cnblogs.com/huashanqingzhu/p/3682253.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">HTML相对路径 当前目录、上级目录、根目录、下级目录表示法</a></p>\\n<p>文件引用时经常需要用到相对目录。如(js,css,图片等)</p>\\n<div class=\\"language-html line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"html\\" data-title=\\"html\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">\\"./\\"  ---------       源代码所在的当前目录【可省略】</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">\\"../\\"  ---------       源代码上一级目录   上上一级就是../../</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">\\"/\\"  ---------       源代码所在的根目录【慎用】</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/01. 前端三件套/01. H5/HTML.md","value":{"title":"HTML","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/01. 前端三件套/01. H5/HTML.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{c as comp,d as data};
