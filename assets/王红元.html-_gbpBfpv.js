import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-DErOheJD.js";const e="/assets/clipboard-1602574887971-H7EXtA-w.png",p="/assets/clipboard-1602574893279-ChPS6ttP.png",l="/assets/clipboard-1602574898476-BJB_k7p-.png",o="/assets/clipboard-1602574914103-pBzFejSR.png",c="/assets/clipboard-1602574917343-1kCnvofe.png",i={},u=t('<h1 id="vue——王红元" tabindex="-1"><a class="header-anchor" href="#vue——王红元"><span>Vue——王红元</span></a></h1><p>本课程又小码哥教育王红元提供</p><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><p>Vuejs知识量化</p><p>一. 邂逅Vuejs</p><p>二. Vue基础语法</p><p>三. 组件化开发</p><p>四. Vue Cli详解</p><p>五. Vue-Router</p><p>六. Vuex详解（状态管理）</p><p>七. 网络封装</p><p>八. 项目实战</p><p>九. 项目部署</p><p>十. 原理相关</p><h1 id="杂记" tabindex="-1"><a class="header-anchor" href="#杂记"><span>杂记</span></a></h1><h2 id="es定义变量" tabindex="-1"><a class="header-anchor" href="#es定义变量"><span>ES定义变量</span></a></h2><p>ES6一般不用var，用let(变量)和const(常量)</p><h2 id="mvvm" tabindex="-1"><a class="header-anchor" href="#mvvm"><span>MVVM</span></a></h2><p>View &lt;&gt; ViewModel(Vue) &lt;&gt; Model</p><h2 id="vue的生命周期" tabindex="-1"><a class="header-anchor" href="#vue的生命周期"><span>Vue的生命周期</span></a></h2><p>debug/release</p><p>Vue源码分析</p><p>src &gt; core(核心) &gt; index.js(入口)</p><blockquote><p>../instance &gt; index.js &gt; init.js</p></blockquote><p>Vue实例下定义一些生命周期函数(钩子函数)来查看周期</p><figure><img src="'+e+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="'+p+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="'+l+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="代码规范" tabindex="-1"><a class="header-anchor" href="#代码规范"><span>代码规范</span></a></h2><p>缩进 &gt; 前端开发缩进2个空格更流行</p><p>CLI &gt; .editconfig 2个空格</p><h2 id="代码编辑器模板" tabindex="-1"><a class="header-anchor" href="#代码编辑器模板"><span>代码编辑器模板</span></a></h2><h2 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构"><span>数据结构</span></a></h2><p>数组、栈、堆、链表、树结构</p><p>搜资料</p><figure><img src="'+o+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="其他问题" tabindex="-1"><a class="header-anchor" href="#其他问题"><span>其他问题</span></a></h2><blockquote><h4 id="手机页面显示问题" tabindex="-1"><a class="header-anchor" href="#手机页面显示问题"><span>手机页面显示问题</span></a></h4></blockquote><figure><img src="'+c+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><blockquote><h4 id="url" tabindex="-1"><a class="header-anchor" href="#url"><span>URL</span></a></h4></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>协议://服务器[:端口]/路径?查询(query)
scheme://host:port/path?query#fragment
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法"><span>基础语法</span></a></h1><h2 id="vue——html部分" tabindex="-1"><a class="header-anchor" href="#vue——html部分"><span>Vue——Html部分</span></a></h2><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token comment">&lt;!-- 4种数据绑定-----------------------------------------&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>								// 数据绑定  {{}}、v-html、v-text
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>				// 双向绑定  v-model
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleIncrement<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>		// 函数绑定  v-on:方法、@方法
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{done: item.done}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>			// 属性绑定  v-bind:属性、:属性
    
    <span class="token comment">&lt;!-- 2种流程语法-------------------------------------------&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>show<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>mess<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>							// 显示隐藏  v-if、v-else-if、v-else、v-show
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item.mess}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>		// 循环指令  v-for; item in shuzu、item in obj取v
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="补充" tabindex="-1"><a class="header-anchor" href="#补充"><span>补充</span></a></h4></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>数据绑定的补充，插值语法
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>                   // Mustache语法，可运算
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>                      // 编译内容
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>                      // 不编译内容
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-cloak</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>                        // 解析再显  v-cloak 斗篷，解决js卡顿时用户能看到{{}}的问题
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-once</span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>            // 禁用改变  v-once 只改变一次（不让数据驱动视图）
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-pre</span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>             // 禁用编译  v-pre 文本显示

双向绑定的补充
    多种表单的的绑定
        绑定文本框                           // 返回内容
        绑定单选框                           // （多个绑定同一个变量）返回选中值
        绑定复选框单选                       // 返回布尔
        绑定复选框多选                       // （多个绑定同一个变量）返回数组
        绑定Select单选                      // 返回Value
    修饰符
        v-model.lazy                       // 懒绑定，让input事件更新数据 转换为 回车/失焦时更新数据
        v-model.number                     // 把内容自动转换为数字
        v-model.trim                       // 删除两侧空格

属性绑定的补充，对象语法和数组语法
    对象语 法，后接对象                      :class=&quot;{active: true, line: false}&quot;  :style=&quot;{font-size: &#39;50px&#39;}&quot;
    数组语法，后接数组                      :class=[actice, &#39;line&#39;]               :style=&quot;[{}， {}]&quot;
    也可以接返回对象/数组的函数              :class=&quot;getClasses()&quot;

方法绑定的补充，&#39;()&#39;的省略与修饰符
    括号省略
        方法无参时                          // 可省略&#39;()&#39;
        方法有参时                          // 不省略&#39;()&#39;时传递undefine，省略&#39;()&#39;时传递浏览器生成的event时间对象
        event值                            // 也可用&#39;($event)&#39;手动传递，这个值挺有用的：如：event.target.value
    修饰符
        .stop                              // 阻止事件冒泡（嵌套事件监听），Ex：@click.stop=&#39;&#39;
        .prevent                           // 阻止默认行为（后接函数以外），Ex：@submit.prevent，@click.stop.prevent=&#39;&#39;
        .(键值/别名)                        // 监听指定键盘键帽（键别名/键值）Ex：@keyup.enter=&#39;onEnter&#39;，@keydown.13=&#39;onEnter&#39;
        .native                            // （在组件内才会用到）
        .once                              // 只触发一次回调，Ex：@click.once=&#39;doThis&#39;

if补充
    v-if/v-else-if/v-else(整体删减))、v-show(display隐藏)
    Virtual Dom对Dom的复用问题

for补充    
    v-for; (item, index) in shuzu、（value, key, index） in obj
    Virtual Dom对Dom的复用问题。这里建议加key:item
        能更好复用。如数组内插入元素后，原来的dom不会修改
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue——script部分" tabindex="-1"><a class="header-anchor" href="#vue——script部分"><span>Vue——Script部分</span></a></h2><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./node_modules/vue/dist/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>                                  <span class="token comment">// 1. 挂载点</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>                                      <span class="token comment">// 2. 对象内容 —— 数据（或方法），组件当中则必须是方法</span>
            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue.js&#39;</span>
            <span class="token function-variable function">handleIncrement</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>                                  <span class="token comment">// 3. 对象内容 —— 计算属性</span>
            <span class="token function-variable function">fullName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>                        <span class="token comment">// 【与methods区别】这里用变量属性名调用方法，不加&#39;()&#39;</span>
                                                            <span class="token comment">// 【与methods区别】重复调用不会多次计算，节约性能</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>                                   <span class="token comment">// 4. 对象内容 —— 方法</span>
            <span class="token function-variable function">handleIncrement2</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>                  <span class="token comment">// 【与data区别】data函数的this是Window，这里的this是Vue对象</span>
            <span class="token function">handleIncrement2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>                            <span class="token comment">// ES6简写</span>
        <span class="token punctuation">}</span>
        <span class="token literal-property property">生命周期函数</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>                              <span class="token comment">// 5. Vue生命周期函数，钩子函数，可查看Vue的生命周期/在指定流程中引用。详细看流程图</span>
        <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">{</span>                                   <span class="token comment">// 6. 过滤器方法</span>
            <span class="token function">show</span><span class="token punctuation">(</span><span class="token parameter">price</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">}</span>                           <span class="token comment">// 使用时：xxx | show</span>
        <span class="token punctuation">}</span>
        <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>                                <span class="token comment">// 7. 局部组件定义(模块化)</span>
            <span class="token literal-property property">标签名</span><span class="token operator">:</span> 模块名
        <span class="token punctuation">}</span>
        <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>                                     <span class="token comment">// 8. 组件属性定义</span>
            <span class="token literal-property property">属性名</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">type</span><span class="token operator">:</span> 类型<span class="token punctuation">,</span>
                <span class="token keyword">default</span><span class="token operator">:</span> 默认值<span class="token punctuation">,</span>
                <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="补充-1" tabindex="-1"><a class="header-anchor" href="#补充-1"><span>补充</span></a></h4></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>计算属性
    计算属性并非函数，实质是个对象，有setter和getter属性
    <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">fullName</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token comment">// 计算属性一般没有set方法，只读属性。当给fullName赋值时启用get方法</span>
                <span class="token keyword">const</span> names <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>lastName
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他补充" tabindex="-1"><a class="header-anchor" href="#其他补充"><span>其他补充</span></a></h2><p><strong>创建Vue时，Option能放什么</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>el、data、computed、methods、生命周期函数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. 插值语法</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>mustache语法、v-html、v-text；v-once、v-pre、v-cloak:斗篷
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>3. v-bind</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>v-bind:src、:herf、对象语法、数组语法、函数语法
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>4. 计算属性</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="组件化" tabindex="-1"><a class="header-anchor" href="#组件化"><span>组件化</span></a></h1><h2 id="组件化使用" tabindex="-1"><a class="header-anchor" href="#组件化使用"><span>组件化使用</span></a></h2><p>组件使用三个步骤：创建组件构造器、注册组件、使用组件</p><p>组件的注册分为：全局组件、局部组件</p><h3 id="创建组件构造器【vue-extend】" tabindex="-1"><a class="header-anchor" href="#创建组件构造器【vue-extend】"><span>创建组件构造器【Vue.extend】</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> cpnC1 <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
        &lt;div&gt;
            &lt;h2&gt;组件标题&lt;h2&gt;
        &lt;/div&gt;
    </span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册组件【vue-component】-并定义组件标签的名称" tabindex="-1"><a class="header-anchor" href="#注册组件【vue-component】-并定义组件标签的名称"><span>注册组件【Vue,component】，并定义组件标签的名称</span></a></h3><blockquote><h4 id="全局组件注册-可以在多个vue实例下使用" tabindex="-1"><a class="header-anchor" href="#全局组件注册-可以在多个vue实例下使用"><span>全局组件注册（可以在多个Vue实例下使用）</span></a></h4></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;cpn1&#39;</span><span class="token punctuation">,</span> cpnC1<span class="token punctuation">)</span>  <span class="token comment">// 全局组件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><h4 id="局部组件注册-只能在一个vue实例下使用" tabindex="-1"><a class="header-anchor" href="#局部组件注册-只能在一个vue实例下使用"><span>局部组件注册（只能在一个Vue实例下使用）</span></a></h4></blockquote><p>常用，且一般只有一个Vue实例</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//const app = new Vue({</span>
<span class="token comment">//    el:&#39;&#39;,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">cpn1</span><span class="token operator">:</span> cpnC1
    <span class="token punctuation">}</span>
<span class="token comment">//})</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用组件" tabindex="-1"><a class="header-anchor" href="#使用组件"><span>使用组件</span></a></h3><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn1</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="父组件和子组件" tabindex="-1"><a class="header-anchor" href="#父组件和子组件"><span>父组件和子组件</span></a></h2><h3 id="嵌套" tabindex="-1"><a class="header-anchor" href="#嵌套"><span>嵌套</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> cpnC2 <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
        &lt;h1&gt;组件标题&lt;h1&gt;
        &lt;cpn1&gt;&lt;/cpn1&gt;        // 内部可用子组件
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token comment">// 在父组件cpnC2里注册子组件cpnC1</span>
        <span class="token literal-property property">cpn1</span><span class="token operator">:</span> cpnC1
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vue实例也是组件-el和template共存" tabindex="-1"><a class="header-anchor" href="#vue实例也是组件-el和template共存"><span>Vue实例也是组件 &amp; el和template共存</span></a></h3><p>Vue实例也可叫 root 组件</p><p>事实上 Vue.extend( {}) 和 new Vue({})，即组件构造器和Vue实例之间很像</p><p>区别在于前者用&quot;template&quot;进行注册组件，而后者用&quot;el&quot;进行挂载，且后者也可以写&quot;template&quot;的</p><blockquote><p>当后el和template同时存在，会自动把template内容自动替换到el中</p><p>好处是不再需要修改index.html的代码</p></blockquote><h2 id="组件化使用的语法糖" tabindex="-1"><a class="header-anchor" href="#组件化使用的语法糖"><span>组件化使用的语法糖</span></a></h2><h3 id="全局注册组件" tabindex="-1"><a class="header-anchor" href="#全局注册组件"><span>全局注册组件</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;cpn1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
        &lt;div&gt;
            &lt;h2&gt;组件标题&lt;h2&gt;
        &lt;/div&gt;
    </span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="局部注册组件" tabindex="-1"><a class="header-anchor" href="#局部注册组件"><span>局部注册组件</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cpn1</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
            &lt;div&gt;
                &lt;h2&gt;组件标题&lt;h2&gt;
            &lt;/div&gt;
        </span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简单来说就是不用你写Vue.extend()构造器了，把组件构造器名直接替换成内容</p><h2 id="组件模板抽离-组件数据分离" tabindex="-1"><a class="header-anchor" href="#组件模板抽离-组件数据分离"><span>组件模板抽离&amp;组件数据分离</span></a></h2><h3 id="方法1" tabindex="-1"><a class="header-anchor" href="#方法1"><span>方法1</span></a></h3><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/x-template<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">// 注意这里的type，id给的js</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>这是一个模板<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
// ......
template: &#39;#cpn&#39;  // 这里就很类似于el:&#39;#app&#39;的写法了
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法2-√" tabindex="-1"><a class="header-anchor" href="#方法2-√"><span>方法2 √</span></a></h3><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>这是一个模板<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
// ......
template: &#39;#cpn&#39;  // 这里就很类似于el:&#39;#app&#39;的写法了
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据抽离" tabindex="-1"><a class="header-anchor" href="#数据抽离"><span>数据抽离</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token comment">// ......</span>
<span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;#cpn&#39;</span><span class="token punctuation">,</span>
<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token comment">// 这里的data变成了方法，且需要返回值。匿名函数封包</span>
    reutrn <span class="token punctuation">{</span>             <span class="token comment">// 为什么要这么设计：避免这些组件共享data！！！</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;abc&#39;</span>     <span class="token comment">// 每次回会返回一个新的对象</span>
    <span class="token punctuation">}</span>
<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// ——————————————————————</span>
<span class="token comment">// 如果想相互影响：</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span><span class="token operator">:</span> obj<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="父子组件的通信-parent-child" tabindex="-1"><a class="header-anchor" href="#父子组件的通信-parent-child"><span>父子组件的通信 (Parent-Child)</span></a></h2><h3 id="父组件传递数据给子组件-props-properties-自定义属性" tabindex="-1"><a class="header-anchor" href="#父组件传递数据给子组件-props-properties-自定义属性"><span>父组件传递数据给子组件：props(properties)，自定义属性</span></a></h3><p>注意：</p><blockquote><p>v-bind中不支持驼峰命名！props绑定的属性名若是驼峰命名</p><p>如cInfo，那么在绑定时应该写为:c-info！</p><p>脚手架可以写驼峰</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name">:cmessage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>  // 信息传递
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        {{message}}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
// ......
const cpn = {
    template: &#39;#cpn&#39;
    props: [&#39;cmessage&#39;],  // 定义组件属性-方式1
    props: {              // 定义组件属性-方式2，可指定类型
        cmessage: String,
    }
    props: {              // 定义组件属性-方式3，可指定默认值
        cmessage: {
            type: String,
            default: &#39;aaa&#39;      // 注意！当类型是对象或数组时，默认值必须是函数 
            required: true
        }
    }
    props: {              // 定义组件属性-方式4，自定义验证函数
        validator: function (value) {
            return [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;].indexOf(value) !== -1
        }
    }
    // 属性：Number/Boolean/Array/Object/Data/Function/Symbol
    data() {
        return {
        }
    },
    methods: {}
}
const app = new({
    el: &#39;#app&#39;,
    data: {
        message: &#39;hi&#39;,
    }
    componts: {
        cpn
    }
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子组件传递数据给子组件-emit-event-自定义事件" tabindex="-1"><a class="header-anchor" href="#子组件传递数据给子组件-emit-event-自定义事件"><span>子组件传递数据给子组件：$emit Event，自定义事件</span></a></h3><p>注意：</p><blockquote><p>v-on中不支持驼峰命名！$emit发送的时间名若是驼峰命名</p><p>如cClick，那么在绑定时应该写为:c-click！</p><p>脚手架可以写驼峰</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name"><span class="token namespace">v-on:</span>itemclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpnClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>  // 父组件监听自定义子组件的事件
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnClick(1)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{message}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span> 
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
// ......
const cpn = {
    template: &#39;#cpn&#39;,
    data() {
        return {
            message: &#39;Hi&#39;
        }
    },
    methods: {
        btnClick(item) {                   // 目的：吧item传给父组件
            this.$emit(&#39;itemclick&#39;, item)  // 向父组件发送事件，第二参取代event参
        }
    }
}
const app = new({
    el: &#39;#app&#39;,
    data: {
        message: &#39;hi&#39;,
    },
    componts: {
        cpn
    },
    methods: {
        cpnClick(item) {
            console.log(&#39;cpnClick&#39;, item)  // 父组件接收到子组件传来的信息
        }
    }
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="互通信案例" tabindex="-1"><a class="header-anchor" href="#互通信案例"><span>互通信案例</span></a></h3><p>一般方法：</p><p>不直接v-model绑定props里的值！ 单向绑定data并$emit自定义事件</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">数据属性</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props属性
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Watch方法 &amp; v-model：</p><p>组件实例属性</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dnum<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
// ......
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">/**/</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">num</span><span class="token operator">:</span>Number                <span class="token comment">// 自定义组件属性num，从父组件拿数据</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">dnum</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num        <span class="token comment">// 把组件属性的值给组件数据dnum</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>                      <span class="token comment">// 监听组件数据的改变</span>
            <span class="token function">dnum</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;num_change&#39;</span><span class="token punctuation">,</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span>                         <span class="token comment">// 自定义组件事件，传递给父组件</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="父组件访问子组件-children-refs-reference引用" tabindex="-1"><a class="header-anchor" href="#父组件访问子组件-children-refs-reference引用"><span>父组件访问子组件：$children，$refs(reference引用)</span></a></h3><p>$children，返回一个数组。还可以拿到所有的组件</p><p>$refs，返回一个对象。更常用，定位更准确</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>aaa<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>                            // ref标签
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>父组件按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>$children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">// 父组件调用第一个子组件的方法</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// 父组件调用第一个子组件的数据</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>aaa<span class="token punctuation">.</span>name<span class="token punctuation">)</span>    <span class="token comment">// 父组件调用ref标签为aaa的组件</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">cpn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;#cpn&#39;</span><span class="token punctuation">,</span>
                <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token punctuation">{</span>
                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;子组件内的数据&quot;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;子组件内的方法&#39;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子组件访问父组件-parent-root" tabindex="-1"><a class="header-anchor" href="#子组件访问父组件-parent-root"><span>子组件访问父组件：$parent，$root</span></a></h3><p>**【不建议使用】**子组件访问父组件的话复用性很差！</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>子组件按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">cpn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;#cpn&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$parent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 访问父组件</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$root<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 访问根组件</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="插槽slot" tabindex="-1"><a class="header-anchor" href="#插槽slot"><span>插槽slot</span></a></h2><p>slot目的：让组件具有更强的<strong>扩展性</strong></p><p>简单来说就是给组件一个预留的空间</p><h3 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽"><span>插槽</span></a></h3><p>注意1：若插槽内有多个内容，则内容全部替换掉原插槽</p><p>注意2：若组件有多个插槽，则替换内容替换全部插槽</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>插入到插槽里的按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>子组件相同的部分<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span>  // 插槽
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>无内容时插槽里的按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>solt</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue .js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span> 
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">cpn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;#cpn&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="具名插槽" tabindex="-1"><a class="header-anchor" href="#具名插槽"><span>具名插槽</span></a></h3><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>新中间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>left<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>左侧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>solt</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>center<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>中间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>solt</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>right<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>右侧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>solt</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue .js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span> 
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">cpn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;#cpn&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编译作用域与作用域插槽-伪-·-父用子" tabindex="-1"><a class="header-anchor" href="#编译作用域与作用域插槽-伪-·-父用子"><span>编译作用域与作用域插槽（伪 · 父用子）</span></a></h3><p>编译作用域：使用的变量会在你所在的组件里查找</p><p>作用域插槽：父组件替换插槽标签，但内容由子组件提供吗</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{i}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>  // 拿不到子组件的
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>              // 方案
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>slot<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>       // 新版本可把换为div等标签
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in slot.data1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{i}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">:data1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>                     // 作用域插槽传递
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{i}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>solt</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue .js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span> 
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">cpn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;#cpn&#39;</span><span class="token punctuation">,</span>
                <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token punctuation">{</span>
                        <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">]</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">cpn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;#cpn&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="模块化开发-webpack-一堆配置" tabindex="-1"><a class="header-anchor" href="#模块化开发-webpack-一堆配置"><span>模块化开发(webpack，一堆配置)</span></a></h1><h2 id="webpack-依赖于node环境" tabindex="-1"><a class="header-anchor" href="#webpack-依赖于node环境"><span>Webpack（依赖于node环境）</span></a></h2><ul><li><p>描述</p><ul><li>是一个现代的JavaScript应用的【静态模块打包】工具</li><li>静态模块打包工具：frunt/gulp/webpack，前两者对模块化支持不强</li><li>可以用CommonJs写，然后打包成ES5给浏览器执行</li></ul></li><li><p>打包</p><ul><li>scss/less-&gt;css, jsx/.vue-&gt;js</li><li>ES6-&gt;ES5, TypeSctipt-&gt;JavaScript</li><li>图片压缩</li></ul></li><li><p>流程</p><ul><li>开发 --&gt; webpack模块化打包成项目 --&gt; 放到服务器 --&gt; 客户端</li></ul></li><li><p>安装（node -v 大于8.9）</p><ul><li>npm install -g webpack@3.6.0</li><li>【注意】vue-cli2 依赖 webpack3.6.0</li></ul></li></ul><h3 id="其他打包工具" tabindex="-1"><a class="header-anchor" href="#其他打包工具"><span>其他打包工具</span></a></h3><ul><li>grunt, gulp <ul><li>核心是Task，被称为前端自动化任务管理工具</li><li>更加强调前端流程自动化</li></ul></li><li>Webpack <ul><li>更强大，支持模块化管理</li><li>更强调模块化开发管理</li></ul></li></ul><h3 id="项目目录" tabindex="-1"><a class="header-anchor" href="#项目目录"><span>项目目录</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>src   // source code file
    main.js
    mathUtils.js
    index.html  // 最终放置......
dist  // distribution 发布
package.json
webpack.config.js
index.html  // 开发时放置......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="终端打包" tabindex="-1"><a class="header-anchor" href="#终端打包"><span>终端打包</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>终端打包
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="webpack配置实现智能打包" tabindex="-1"><a class="header-anchor" href="#webpack配置实现智能打包"><span>webpack配置实现智能打包</span></a></h3><p>webpack.config.js文件</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 入口</span>
    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>                   <span class="token comment">// 出口</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 要绝对路径。为便于移植，建议动态获取路径</span>
        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="webpack配置loader" tabindex="-1"><a class="header-anchor" href="#webpack配置loader"><span>Webpack配置loader</span></a></h2><h3 id="loader-css" tabindex="-1"><a class="header-anchor" href="#loader-css"><span>loader（CSS）</span></a></h3><ul><li>作用 <ul><li>给webpack扩展，使其能转换文件</li></ul></li><li>安装 <ul><li>有很多不同版本的loader，建议直接去官网查</li></ul></li><li>使用</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev css<span class="token operator">-</span>loader <span class="token comment">// 解析css文件后，用import加载并返回css代码</span>
npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev style<span class="token operator">-</span>loader <span class="token comment">// 将模块的导出作为样式添加到DOM里</span>

<span class="token comment">// ————————入口文件main.js</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./css/normal.css&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 依赖css文件</span>

<span class="token comment">// ————————webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 这里有两个loader，且从右向左读</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>less样式格式的同理 <ul><li>上官网查、需要：</li><li>use: [&#39;style-loader&#39;, &#39;css-loader&#39;, &#39;less-loader&#39;] // 从右往左用</li></ul></li></ul><h3 id="loader-图片" tabindex="-1"><a class="header-anchor" href="#loader-图片"><span>loader（图片）</span></a></h3><blockquote><h4 id="图片文件的处理" tabindex="-1"><a class="header-anchor" href="#图片文件的处理"><span>图片文件的处理</span></a></h4></blockquote><p><strong>需要url-loader、file-loader</strong></p><ul><li>当加载图片小于limit时：会把图片格式编译为base64字符串 <ul><li>base64编码的容量稍大了，但减少了请求次数</li></ul></li><li>当加载图片大于limit时：需要file-loader加载，file-loader不需要配置 <ul><li>这种方式会把图片打包进dist里，并生成了一个32位Hash名</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// ————————normal.css</span>
body <span class="token punctuation">{</span>
    <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">&quot;../img/test.jpg&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// ————————webpack.config.js</span>
<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token comment">/**/</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token comment">/**/</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpg|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8192</span> <span class="token comment">// 文件大小分割线</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="图片路径问题" tabindex="-1"><a class="header-anchor" href="#图片路径问题"><span>图片路径问题</span></a></h4></blockquote><p>开发阶段时，默认情况引用的是外部的.jpg而非/dist下的，要配置publicPath</p><p>发布阶段时，由于index.html在dist中，则不需要该配置</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token string">&#39;dist/&#39;</span>  <span class="token comment">// 开发阶段解决路径问题，在url前加上这个</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="图片名称问题" tabindex="-1"><a class="header-anchor" href="#图片名称问题"><span>图片名称问题</span></a></h4></blockquote><p>有时图片名有要求时，自动生成的32位图片Hash能防止重复，但可能很乱</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token comment">/**/</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token comment">/**/</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpg|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8192</span><span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;img/[name].[hash:8].[ext]&#39;</span> <span class="token comment">// 自定义转换的图片名</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="loader-es5-es6" tabindex="-1"><a class="header-anchor" href="#loader-es5-es6"><span>loader（ES5-ES6）</span></a></h3><p><strong>babel-loader</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// ———————— 终端</span>
npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev babel<span class="token operator">-</span>loader@<span class="token number">7</span> babel<span class="token operator">-</span>core babel<span class="token operator">-</span>preset<span class="token operator">-</span>es2015
或
npm install babel<span class="token operator">-</span>loader babel<span class="token operator">-</span>ceore babel<span class="token operator">-</span>preset<span class="token operator">-</span>env webpack

<span class="token comment">// ————————  webpack.config.js</span>
<span class="token literal-property property">rules</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(node_modules|bower_components)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 排除文件夹</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="loader-vue" tabindex="-1"><a class="header-anchor" href="#loader-vue"><span>loader（.Vue）</span></a></h3><p><strong>vue-loader、vue-template-compiler</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// ———————— 终端</span>
npm install vue<span class="token operator">-</span>loader vue<span class="token operator">-</span>template<span class="token operator">-</span>compiler <span class="token operator">--</span>save<span class="token operator">-</span>dev

<span class="token comment">// ————————  webpack.config.js</span>
<span class="token literal-property property">rules</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue-loader&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报错问题</p><blockquote><p>报错：使用vue-loader的v14版本以后，需要一个插件</p><p>临时解决方案：换低版本</p></blockquote><h2 id="webpack配置vue" tabindex="-1"><a class="header-anchor" href="#webpack配置vue"><span>webpack配置Vue</span></a></h2><p>三种Vue安装方式</p><ol><li>下载到本地</li><li>CDN引入</li><li>npm安装（Vue就是模块） <ol><li>npm install vue --save // 运行时依赖</li></ol></li></ol><p>报错 runtime-only</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>原因：Vue的两个不同版本
    runtime<span class="token operator">-</span>only     <span class="token comment">// 该版本不可以有任何的template(包括Vue实例)</span>
    runtime<span class="token operator">-</span>compiler <span class="token comment">// 可以有template</span>

解决方案：配置，指定runtime<span class="token operator">-</span>compiler
    module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>                              <span class="token comment">// 一般用来解决路径问题</span>
            <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.css&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.vue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">// (可选)这个配置可以引用时省略后缀名</span>
            <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>                            <span class="token comment">// 别名</span>
                <span class="token string-property property">&#39;vue$&#39;</span><span class="token operator">:</span> <span class="token string">&#39;vue/dist/vue.esm.js&#39;</span>   <span class="token comment">// 包括compiler</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue最终方案" tabindex="-1"><a class="header-anchor" href="#vue最终方案"><span>Vue最终方案</span></a></h2><p>目录结构</p><blockquote><ul><li>dist</li><li>node_modules</li><li>src <ul><li>css</li><li>img</li><li>js</li><li>vue <ul><li>app.js</li><li>App.vue</li></ul></li><li>main.js</li></ul></li><li>index.html</li><li>package.json</li><li>package-lock.json</li><li>webpack.config.js</li></ul></blockquote><p>代码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// ———————— ./index.html（不再需要修改）</span>
<span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token comment">// ———————— ./src/vue/App.vue（Vue组件文件）</span>
<span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">&quot;btnClick&quot;</span><span class="token operator">&gt;</span>按钮<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;App&quot;</span><span class="token punctuation">,</span>
        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;HelloWorld&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span>
    <span class="token punctuation">.</span>title <span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> green<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>

<span class="token comment">// ———————— ./src/vue/app.js（负责组件里面的所有东西）</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// ———————— ./src/main.js</span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./vue/App.vue&#39;</span>

<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;App/&gt;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">componts</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        App
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="plugin——webpack插件" tabindex="-1"><a class="header-anchor" href="#plugin——webpack插件"><span>Plugin——webpack插件</span></a></h2><h3 id="框架和插件" tabindex="-1"><a class="header-anchor" href="#框架和插件"><span>框架和插件</span></a></h3><p>插件plugin &gt; 对现有的架构进行扩展</p><h3 id="loader和plugin区别" tabindex="-1"><a class="header-anchor" href="#loader和plugin区别"><span>loader和plugin区别</span></a></h3><p>loader，主要用于转换某些类型的模块，是转换器</p><p>plugin，对webpack本身的扩展，是一个扩展器</p><h3 id="其他插件-webpack-bannerplugin" tabindex="-1"><a class="header-anchor" href="#其他插件-webpack-bannerplugin"><span>其他插件：webpack.BannerPlugin</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    new webpack.BannerPlugin(&#39;最终版权归xxx所有&#39;) <span class="token comment">// 横幅插件，webpath自带</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他插件-html-webpack-plugin" tabindex="-1"><a class="header-anchor" href="#其他插件-html-webpack-plugin"><span>其他插件：html-webpack-plugin</span></a></h3><p>更具html模板自动生成dist下的html代码，而且会帮引用bundle.js</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// npm install html-webpack-plugin --save-dev</span>
const HtmlWebpackPlugin = require(&#39;html-webpack-plugin&#39;)

plugins<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">// 注意：这里的webpack版本要3.2.0不然报错</span>
    new HtmlWebpackPlugin(<span class="token punctuation">{</span>
        template<span class="token operator">:</span> &#39;index.html&#39;
    <span class="token punctuation">}</span>)
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他插件-uglifyjs-webpack-plugin" tabindex="-1"><a class="header-anchor" href="#其他插件-uglifyjs-webpack-plugin"><span>其他插件：uglifyjs-webpack-plugin</span></a></h3><p>丑化压缩插件，把空格和换行删掉</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// npm install uglifyjs-webpack-plugin@1.1.1 --save-dev</span>
const UglifyjsWebpackPlugin = require(&#39;uglifyjs-webpack-plugin&#39;)

plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    new UglifyjsWebpackPlugin()
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他插件-webpack-dev-server" tabindex="-1"><a class="header-anchor" href="#其他插件-webpack-dev-server"><span>其他插件：webpack-dev-server</span></a></h3><p>提供一个可选的本地开发服务器，且可以实现浏览器自动刷新显示修改后的结果！而不用重新打包！</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// npm install webpack-dev-server@2.9.3 --save-dev</span>

plugins<span class="token operator">:</span> <span class="token punctuation">[</span>...<span class="token punctuation">]</span><span class="token punctuation">,</span>
devServer<span class="token operator">:</span> <span class="token punctuation">{</span>
    contentBase<span class="token operator">:</span> &#39;./dist&#39;<span class="token punctuation">,</span>
    inline<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token comment">// ./node_modules/.bin/webpack-dev-server 或：</span>
<span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack-dev-server --open&quot;</span> <span class="token comment">// --open可选，能自动打开浏览器</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="webpack配置文件的分离" tabindex="-1"><a class="header-anchor" href="#webpack配置文件的分离"><span>webpack配置文件的分离</span></a></h2><h3 id="配置分离" tabindex="-1"><a class="header-anchor" href="#配置分离"><span>配置分离</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>build文件夹，存放配置
    base.config.js，复制原来的webpack.config.js，但只放公共的东西
    prod.config.js，放产品的东西，如uglifyjs-webpack-plugin的配置
    dev.config.js，刚开发时的东西，如webpack-dev-serverd的配置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置文件合并" tabindex="-1"><a class="header-anchor" href="#配置文件合并"><span>配置文件合并</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// npm install webpack-merge --save-dev</span>

<span class="token comment">// ———————— 如 prod.config.js，同理修改dev.config.js</span>
<span class="token keyword">const</span> UglifyjsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;uglifyjs-webpack-plugin&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> webpackMerge <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-merge&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> baseConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./base.config&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">webpackMerge</span><span class="token punctuation">(</span>baseConfig<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token keyword">new</span> <span class="token class-name">uglifyjsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// ———————— package.json // 改</span>
<span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --config ./build/prod.config.js&quot;</span> 
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack-dev-server --open --config ./build/dev.config.js&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment">// ———————— base.config.js // 改</span>
<span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,201),r=[u];function d(k,v){return s(),a("div",null,r)}const b=n(i,[["render",d],["__file","王红元.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Web/02.%20%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/Vue2/%E7%8E%8B%E7%BA%A2%E5%85%83.html","title":"Vue——王红元","lang":"zh-CN","frontmatter":{"description":"Vue——王红元 本课程又小码哥教育王红元提供 目录 Vuejs知识量化 一. 邂逅Vuejs 二. Vue基础语法 三. 组件化开发 四. Vue Cli详解 五. Vue-Router 六. Vuex详解（状态管理） 七. 网络封装 八. 项目实战 九. 项目部署 十. 原理相关 杂记 ES定义变量 ES6一般不用var，用let(变量)和cons...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Web/02.%20%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/Vue2/%E7%8E%8B%E7%BA%A2%E5%85%83.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Vue——王红元"}],["meta",{"property":"og:description","content":"Vue——王红元 本课程又小码哥教育王红元提供 目录 Vuejs知识量化 一. 邂逅Vuejs 二. Vue基础语法 三. 组件化开发 四. Vue Cli详解 五. Vue-Router 六. Vuex详解（状态管理） 七. 网络封装 八. 项目实战 九. 项目部署 十. 原理相关 杂记 ES定义变量 ES6一般不用var，用let(变量)和cons..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue——王红元\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Vue——王红元","slug":"vue——王红元","link":"#vue——王红元","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"杂记","slug":"杂记","link":"#杂记","children":[{"level":2,"title":"ES定义变量","slug":"es定义变量","link":"#es定义变量","children":[]},{"level":2,"title":"MVVM","slug":"mvvm","link":"#mvvm","children":[]},{"level":2,"title":"Vue的生命周期","slug":"vue的生命周期","link":"#vue的生命周期","children":[]},{"level":2,"title":"代码规范","slug":"代码规范","link":"#代码规范","children":[]},{"level":2,"title":"代码编辑器模板","slug":"代码编辑器模板","link":"#代码编辑器模板","children":[]},{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":2,"title":"其他问题","slug":"其他问题","link":"#其他问题","children":[]}]},{"level":1,"title":"基础语法","slug":"基础语法","link":"#基础语法","children":[{"level":2,"title":"Vue——Html部分","slug":"vue——html部分","link":"#vue——html部分","children":[]},{"level":2,"title":"Vue——Script部分","slug":"vue——script部分","link":"#vue——script部分","children":[]},{"level":2,"title":"其他补充","slug":"其他补充","link":"#其他补充","children":[]}]},{"level":1,"title":"组件化","slug":"组件化","link":"#组件化","children":[{"level":2,"title":"组件化使用","slug":"组件化使用","link":"#组件化使用","children":[{"level":3,"title":"创建组件构造器【Vue.extend】","slug":"创建组件构造器【vue-extend】","link":"#创建组件构造器【vue-extend】","children":[]},{"level":3,"title":"注册组件【Vue,component】，并定义组件标签的名称","slug":"注册组件【vue-component】-并定义组件标签的名称","link":"#注册组件【vue-component】-并定义组件标签的名称","children":[]},{"level":3,"title":"使用组件","slug":"使用组件","link":"#使用组件","children":[]}]},{"level":2,"title":"父组件和子组件","slug":"父组件和子组件","link":"#父组件和子组件","children":[{"level":3,"title":"嵌套","slug":"嵌套","link":"#嵌套","children":[]},{"level":3,"title":"Vue实例也是组件 & el和template共存","slug":"vue实例也是组件-el和template共存","link":"#vue实例也是组件-el和template共存","children":[]}]},{"level":2,"title":"组件化使用的语法糖","slug":"组件化使用的语法糖","link":"#组件化使用的语法糖","children":[{"level":3,"title":"全局注册组件","slug":"全局注册组件","link":"#全局注册组件","children":[]},{"level":3,"title":"局部注册组件","slug":"局部注册组件","link":"#局部注册组件","children":[]}]},{"level":2,"title":"组件模板抽离&组件数据分离","slug":"组件模板抽离-组件数据分离","link":"#组件模板抽离-组件数据分离","children":[{"level":3,"title":"方法1","slug":"方法1","link":"#方法1","children":[]},{"level":3,"title":"方法2 √","slug":"方法2-√","link":"#方法2-√","children":[]},{"level":3,"title":"数据抽离","slug":"数据抽离","link":"#数据抽离","children":[]}]},{"level":2,"title":"父子组件的通信 (Parent-Child)","slug":"父子组件的通信-parent-child","link":"#父子组件的通信-parent-child","children":[{"level":3,"title":"父组件传递数据给子组件：props(properties)，自定义属性","slug":"父组件传递数据给子组件-props-properties-自定义属性","link":"#父组件传递数据给子组件-props-properties-自定义属性","children":[]},{"level":3,"title":"子组件传递数据给子组件：$emit Event，自定义事件","slug":"子组件传递数据给子组件-emit-event-自定义事件","link":"#子组件传递数据给子组件-emit-event-自定义事件","children":[]},{"level":3,"title":"互通信案例","slug":"互通信案例","link":"#互通信案例","children":[]},{"level":3,"title":"父组件访问子组件：$children，$refs(reference引用)","slug":"父组件访问子组件-children-refs-reference引用","link":"#父组件访问子组件-children-refs-reference引用","children":[]},{"level":3,"title":"子组件访问父组件：$parent，$root","slug":"子组件访问父组件-parent-root","link":"#子组件访问父组件-parent-root","children":[]}]},{"level":2,"title":"插槽slot","slug":"插槽slot","link":"#插槽slot","children":[{"level":3,"title":"插槽","slug":"插槽","link":"#插槽","children":[]},{"level":3,"title":"具名插槽","slug":"具名插槽","link":"#具名插槽","children":[]},{"level":3,"title":"编译作用域与作用域插槽（伪 · 父用子）","slug":"编译作用域与作用域插槽-伪-·-父用子","link":"#编译作用域与作用域插槽-伪-·-父用子","children":[]}]},{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[]}]},{"level":1,"title":"模块化开发(webpack，一堆配置)","slug":"模块化开发-webpack-一堆配置","link":"#模块化开发-webpack-一堆配置","children":[{"level":2,"title":"Webpack（依赖于node环境）","slug":"webpack-依赖于node环境","link":"#webpack-依赖于node环境","children":[{"level":3,"title":"其他打包工具","slug":"其他打包工具","link":"#其他打包工具","children":[]},{"level":3,"title":"项目目录","slug":"项目目录","link":"#项目目录","children":[]},{"level":3,"title":"终端打包","slug":"终端打包","link":"#终端打包","children":[]},{"level":3,"title":"webpack配置实现智能打包","slug":"webpack配置实现智能打包","link":"#webpack配置实现智能打包","children":[]}]},{"level":2,"title":"Webpack配置loader","slug":"webpack配置loader","link":"#webpack配置loader","children":[{"level":3,"title":"loader（CSS）","slug":"loader-css","link":"#loader-css","children":[]},{"level":3,"title":"loader（图片）","slug":"loader-图片","link":"#loader-图片","children":[]},{"level":3,"title":"loader（ES5-ES6）","slug":"loader-es5-es6","link":"#loader-es5-es6","children":[]},{"level":3,"title":"loader（.Vue）","slug":"loader-vue","link":"#loader-vue","children":[]}]},{"level":2,"title":"webpack配置Vue","slug":"webpack配置vue","link":"#webpack配置vue","children":[]},{"level":2,"title":"Vue最终方案","slug":"vue最终方案","link":"#vue最终方案","children":[]},{"level":2,"title":"Plugin——webpack插件","slug":"plugin——webpack插件","link":"#plugin——webpack插件","children":[{"level":3,"title":"框架和插件","slug":"框架和插件","link":"#框架和插件","children":[]},{"level":3,"title":"loader和plugin区别","slug":"loader和plugin区别","link":"#loader和plugin区别","children":[]},{"level":3,"title":"其他插件：webpack.BannerPlugin","slug":"其他插件-webpack-bannerplugin","link":"#其他插件-webpack-bannerplugin","children":[]},{"level":3,"title":"其他插件：html-webpack-plugin","slug":"其他插件-html-webpack-plugin","link":"#其他插件-html-webpack-plugin","children":[]},{"level":3,"title":"其他插件：uglifyjs-webpack-plugin","slug":"其他插件-uglifyjs-webpack-plugin","link":"#其他插件-uglifyjs-webpack-plugin","children":[]},{"level":3,"title":"其他插件：webpack-dev-server","slug":"其他插件-webpack-dev-server","link":"#其他插件-webpack-dev-server","children":[]}]},{"level":2,"title":"webpack配置文件的分离","slug":"webpack配置文件的分离","link":"#webpack配置文件的分离","children":[{"level":3,"title":"配置分离","slug":"配置分离","link":"#配置分离","children":[]},{"level":3,"title":"配置文件合并","slug":"配置文件合并","link":"#配置文件合并","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":15.29,"words":4588},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Platform/Web/02. 前端框架/Vue/Vue2/王红元.md","excerpt":"\\n<p>本课程又小码哥教育王红元提供</p>\\n<h1>目录</h1>\\n<p>Vuejs知识量化</p>\\n<p>一. 邂逅Vuejs</p>\\n<p>二. Vue基础语法</p>\\n<p>三. 组件化开发</p>\\n<p>四. Vue Cli详解</p>\\n<p>五. Vue-Router</p>\\n<p>六. Vuex详解（状态管理）</p>\\n<p>七. 网络封装</p>\\n<p>八. 项目实战</p>\\n<p>九. 项目部署</p>\\n<p>十. 原理相关</p>\\n<h1>杂记</h1>\\n<h2>ES定义变量</h2>\\n<p>ES6一般不用var，用let(变量)和const(常量)</p>\\n<h2>MVVM</h2>","autoDesc":true}');export{b as comp,h as data};
