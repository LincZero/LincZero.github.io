import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as l,c as p,a as n,b as s,d as t,e}from"./app-Y52ihg76.js";const c="/assets/06_groupby_select_detail-CVtJIJNY.svg",u={},d=e('<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="excel库-pandas" tabindex="-1"><a class="header-anchor" href="#excel库-pandas"><span>Excel库 - Pandas</span></a></h1><p>参考：</p><ul><li>官方网站：https://pandas.pydata.org/</li><li>中文网站：https://www.pypandas.cn/</li><li>官方文档：https://pandas.pydata.org/pandas-docs/stable/ <ul><li>入门教程：https://pandas.pydata.org/pandas-docs/stable/user_guide/index.html</li><li>进阶教程：https://pandas.pydata.org/pandas-docs/stable/getting_started/index.html</li><li>API手册：https://pandas.pydata.org/pandas-docs/stable/reference/index.html</li></ul></li></ul><h2 id="pandas简概" tabindex="-1"><a class="header-anchor" href="#pandas简概"><span>Pandas简概</span></a></h2><h3 id="特点-开箱即用-out-of-the-box-feature-也称ootb或off-the-shelf" tabindex="-1"><a class="header-anchor" href="#特点-开箱即用-out-of-the-box-feature-也称ootb或off-the-shelf"><span>特点：开箱即用（out-of-the-box feature，也称OOTB或off the shelf）</span></a></h3><blockquote><p>WIKI</p><p>**开箱即用功能（out-of-the-box feature，也称OOTB或off the shelf）**在软件上指产品在安装后，无需配置或修改，即可使用的功能或特性。 也指默认即对所有用户可用，不需支付额外费用或进行另外的配置。</p></blockquote><p>我们常说的spring-boot或者vue组件等可以开箱即用，就是可以无需配置就可以实现大部分功能，但是他们依旧是可以配置的。<strong>（强调约定优于配置）</strong></p>',9),r=n("p",null,"算了，这人回答得怪怪的，不参考了",-1),v={href:"https://www.zhihu.com/question/66883424/answer/346153201",target:"_blank",rel:"noopener noreferrer"},k=e("<ol><li><p>“Out of box” &amp; “In the box”</p><ol><li><p><strong>“Out of box”</strong> 用于描述某种不确定的事件</p><p>常常作为副词来形容某种观点的不确定性</p><blockquote><p>来源：据说这个词同20世纪早期的英国数学家亨利?恩斯特?杜德耐解答一个著名数学谜语的思路相关 题目要求用四条直线连接平面上三乘三分布的九个点，要求一笔连成,也就是在画线的时候笔不能离开纸面 解决这个数学问题的关键在于要克服传统的在三乘三边界内画点的思想，如果将线连接到边界之外，那么问题可以迎刃而解。</p><p>这样就产生了 <strong>“Out of box”</strong> 这个词。相应的，将思维受限这种情况称 <strong>“boxed－in”</strong></p></blockquote><p>在IT领域,节奏变化很快，因此每个人都在寻找 “Out of box” 的思维方式，尝试创新.</p></li><li><p><strong>“In the box”</strong> 用于表示某种确定的事情</p><p>比如：最近有一篇文章讨论了MP3以及盗版音乐的关系，其中引用了一位业内人士的话表示： “主流唱片公司很少关心互联网上的发展，他们的思维就是 <strong>&quot;Inside the box&quot;</strong></p></li></ol></li><li><p><strong>&quot;Out of the box&quot; (开箱即用)</strong> 也用作 <strong>&quot;off the shelf&quot;（现货供应</strong>）的同义词</p><p>其含义是指能够满足一定需求的、已经作好了的软件、硬件或两者的结合形式。如不采用，就需要投入专门的人力物力来开发</p></li></ol>",1),m=e(`<h3 id="包概述" tabindex="-1"><a class="header-anchor" href="#包概述"><span>包概述</span></a></h3><blockquote><p>pandas 是一个 Python 包，提供快速、 灵活且富有表现力的数据结构，旨在使 “关系” 或 “标记” 数据既简单又直观。 它旨在成为 的基本高级构建块 实际 数据 Python中的分析。 成为 即 最强大、最灵活的开源数据分析/操作工具 提供任何语言版本 。 它已经在朝着这个目标迈进。</p></blockquote><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>強烈建議使用 <code>conda</code>，用於快速安裝以及包和依賴項更新</p><ul><li><p>使用 Anaconda 安裝</p></li><li><p>使用 Miniconda 安裝</p></li><li><p>使用 ActivePython 安裝</p></li><li><p>从 PyPI 安裝</p></li><li><p>使用 Linux 发行版的包管理器进行安装</p><ul><li><p>處理 ImportErrors：如果遇到 ImportError，通常意味著 Python 在可用列表中找不到 pandas 圖書館。 Python 內部有一個它搜索的目錄列表，用於查找包。 你可以 獲取這些目錄</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
sys<span class="token punctuation">.</span>path
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>從源代碼安裝</p></li></ul><h3 id="運行測試套件" tabindex="-1"><a class="header-anchor" href="#運行測試套件"><span>運行測試套件</span></a></h3><p>pandas 配備了一套詳盡的單元測試，覆蓋了大約 97% 撰寫本文時的代碼庫。 在你的機器上運行它來驗證 一切正常</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> pd.test<span class="token punctuation">(</span><span class="token punctuation">)</span>
running: pytest --skip-slow --skip-network C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>TP<span class="token punctuation">\\</span>Anaconda3<span class="token punctuation">\\</span>envs<span class="token punctuation">\\</span>py36<span class="token punctuation">\\</span>lib<span class="token punctuation">\\</span>site-packages<span class="token punctuation">\\</span>pandas
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> <span class="token builtin class-name">test</span> session starts <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
platform win32 -- Python <span class="token number">3.6</span>.2, pytest-3.6.0, py-1.4.34, pluggy-0.4.0
rootdir: C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>TP<span class="token punctuation">\\</span>Documents<span class="token punctuation">\\</span>Python<span class="token punctuation">\\</span>pandasdev<span class="token punctuation">\\</span>pandas, inifile: setup.cfg
collected <span class="token number">12145</span> items / <span class="token number">3</span> skipped

<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>S<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>S<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.

<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> <span class="token number">12130</span> passed, <span class="token number">12</span> skipped <span class="token keyword">in</span> <span class="token number">368.339</span> seconds <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖"><span>依赖</span></a></h3>`,9),b=n("thead",null,[n("tr",null,[n("th",null,"Package"),n("th",null,"Minimum supported version")])],-1),h={href:"https://numpy.org",target:"_blank",rel:"noopener noreferrer"},g=n("td",null,"1.18.5",-1),q={href:"https://dateutil.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"},y=n("td",null,"2.8.1",-1),_={href:"https://pypi.org/project/pytz/",target:"_blank",rel:"noopener noreferrer"},f=n("td",null,"2020.1",-1),x=n("h4",{id:"依赖推荐",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#依赖推荐"},[n("span",null,"依赖推荐")])],-1),N={href:"https://github.com/pydata/numexpr",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"numexpr",-1),A={href:"https://github.com/pydata/bottleneck",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"nan",-1),E=n("code",null,"bottleneck",-1),M=e('<h4 id="可选依赖项" tabindex="-1"><a class="header-anchor" href="#可选依赖项"><span>可选依赖项</span></a></h4><p>pandas 有许多可选依赖项，它们仅用于特定方法</p><p>例如</p><ul><li>pandas.read_hdf() 需要 pytables包</li><li>DataFrame.to_markdown() 需要 tabulate包</li></ul><p>如果 未安装可选依赖项，pandas 将引发 ImportError什么时候 调用需要该依赖项的方法</p><blockquote><h5 id="visualization" tabindex="-1"><a class="header-anchor" href="#visualization"><span>Visualization</span></a></h5></blockquote>',6),F=n("thead",null,[n("tr",null,[n("th",null,"依赖"),n("th",null,"最低版本"),n("th",null,"笔记")])],-1),w=n("tr",null,[n("td",null,"matplotlib"),n("td",null,"3.3.2"),n("td",null,"Plotting library")],-1),B=n("tr",null,[n("td",null,"Jinja2"),n("td",null,"2.11"),n("td",null,"Conditional formatting with DataFrame.style")],-1),T=n("td",null,"tabulate",-1),D=n("td",null,"0.8.7",-1),O={href:"https://github.com/astanin/python-tabulate",target:"_blank",rel:"noopener noreferrer"},C=n("blockquote",null,[n("h5",{id:"computation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#computation"},[n("span",null,"Computation")])])],-1),L=n("thead",null,[n("tr",null,[n("th",null,"依赖"),n("th",null,"最低版本"),n("th",null,"笔记")])],-1),H=n("tr",null,[n("td",null,"SciPy"),n("td",null,"1.4.1"),n("td",null,"Miscellaneous statistical functions")],-1),I=n("td",null,"numba",-1),R=n("td",null,"0.50.1",-1),z={href:"https://pandas.pydata.org/pandas-docs/stable/user_guide/enhancingperf.html#enhancingperf-numba",target:"_blank",rel:"noopener noreferrer"},J=n("tr",null,[n("td",null,"xarray"),n("td",null,"0.15.1"),n("td",null,"pandas-like API for N-dimensional data")],-1),W=e(`<blockquote><h5 id="excel-files" tabindex="-1"><a class="header-anchor" href="#excel-files"><span>Excel files</span></a></h5></blockquote><table><thead><tr><th>依赖</th><th>最低版本</th><th>笔记</th><th>依赖操作</th></tr></thead><tbody><tr><td>xlrd</td><td>2.0.1</td><td>Reading Excel</td><td></td></tr><tr><td>xlwt</td><td>1.3.0</td><td>Writing Excel</td><td></td></tr><tr><td>xlsxwriter</td><td>1.2.2</td><td>Writing Excel</td><td></td></tr><tr><td>openpyxl</td><td>3.0.3</td><td>Reading / writing for xlsx files</td><td>.to_excel</td></tr><tr><td>pyxlsb</td><td>1.0.6</td><td>Reading for xlsb files</td><td></td></tr></tbody></table><blockquote><h5 id="html" tabindex="-1"><a class="header-anchor" href="#html"><span>HTML</span></a></h5></blockquote><table><thead><tr><th>依赖</th><th>最低版本</th><th>笔记</th></tr></thead><tbody><tr><td>BeautifulSoup4</td><td>4.8.2</td><td>HTML parser for read_html</td></tr><tr><td>html5lib</td><td>1.1</td><td>HTML parser for read_html</td></tr><tr><td>lxml</td><td>4.5.0</td><td>HTML parser for read_html</td></tr></tbody></table><blockquote><h5 id="xml" tabindex="-1"><a class="header-anchor" href="#xml"><span>XML</span></a></h5></blockquote><table><thead><tr><th>依赖</th><th>最低版本</th><th>笔记</th></tr></thead><tbody><tr><td>lxml</td><td>4.5.0</td><td>XML parser for read_xml and tree builder for to_xml</td></tr></tbody></table><blockquote><h5 id="sql-databases" tabindex="-1"><a class="header-anchor" href="#sql-databases"><span>SQL databases</span></a></h5></blockquote><table><thead><tr><th>依赖</th><th>最低版本</th><th>笔记</th></tr></thead><tbody><tr><td>SQLAlchemy</td><td>1.4.0</td><td>SQL support for databases other than sqlite</td></tr><tr><td>psycopg2</td><td>2.8.4</td><td>PostgreSQL engine for sqlalchemy</td></tr><tr><td>pymysql</td><td>0.10.1</td><td>MySQL engine for sqlalchemy</td></tr></tbody></table><blockquote><h5 id="other-data-sources" tabindex="-1"><a class="header-anchor" href="#other-data-sources"><span>Other data sources</span></a></h5></blockquote><table><thead><tr><th>依赖</th><th>最低版本</th><th>笔记</th></tr></thead><tbody><tr><td>PyTables</td><td>3.6.1</td><td>HDF5-based reading / writing</td></tr><tr><td>blosc</td><td>1.20.1</td><td>Compression for HDF5</td></tr><tr><td>zlib</td><td></td><td>Compression for HDF5</td></tr><tr><td>fastparquet</td><td>0.4.0</td><td>Parquet reading / writing</td></tr><tr><td>pyarrow</td><td>1.0.1</td><td>Parquet, ORC, and feather reading / writing</td></tr><tr><td>pyreadstat</td><td>1.1.0</td><td>SPSS files (.sav) reading</td></tr></tbody></table><blockquote><h5 id="access-data-in-the-cloud" tabindex="-1"><a class="header-anchor" href="#access-data-in-the-cloud"><span>Access data in the cloud</span></a></h5></blockquote><table><thead><tr><th>依赖</th><th>最低版本</th><th>笔记</th></tr></thead><tbody><tr><td>fsspec</td><td>0.7.4</td><td>Handling files aside from simple local and HTTP</td></tr><tr><td>gcsfs</td><td>0.6.0</td><td>Google Cloud Storage access</td></tr><tr><td>pandas-gbq</td><td>0.14.0</td><td>Google Big Query access</td></tr><tr><td>s3fs</td><td>0.4.0</td><td>Amazon S3 access</td></tr></tbody></table><blockquote><h5 id="clipboard" tabindex="-1"><a class="header-anchor" href="#clipboard"><span>Clipboard</span></a></h5></blockquote><table><thead><tr><th>依赖</th><th>最低版本</th><th>笔记</th></tr></thead><tbody><tr><td>PyQt4/PyQt5</td><td></td><td>Clipboard I/O</td></tr><tr><td>qtpy</td><td></td><td>Clipboard I/O</td></tr><tr><td>xclip</td><td></td><td>Clipboard I/O on linux</td></tr><tr><td>xsel</td><td></td><td>Clipboard I/O on linux</td></tr></tbody></table><blockquote><h5 id="compression" tabindex="-1"><a class="header-anchor" href="#compression"><span>Compression</span></a></h5></blockquote><table><thead><tr><th>依赖</th><th>最低版本</th><th>笔记</th></tr></thead><tbody><tr><td>brotli</td><td>0.7.0</td><td>Brotli compression</td></tr><tr><td>python-snappy</td><td>0.6.0</td><td>Snappy compression</td></tr><tr><td>Zstandard</td><td>0.15.2</td><td>Zstandard compression</td></tr></tbody></table><h1 id="入门教程" tabindex="-1"><a class="header-anchor" href="#入门教程"><span>入门教程</span></a></h1><h2 id="基本数据" tabindex="-1"><a class="header-anchor" href="#基本数据"><span>基本数据</span></a></h2><p>核心概念：DateFrame 、row 行、column 竖</p><h3 id="导入" tabindex="-1"><a class="header-anchor" href="#导入"><span>导入</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构"><span>数据结构</span></a></h3><table><thead><tr><th>方面</th><th>姓名</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>Series</td><td>一维标记的同质类型数组</td></tr><tr><td>2</td><td>DataFrame</td><td>具有潜在异构类型列的通用 2D 标记、大小可变的表格结构</td></tr></tbody></table><p>所有 pandas 数据结构都是值可变的（它们包含的值可以是 改变）但并不总是大小可变的</p><h4 id="dataframe" tabindex="-1"><a class="header-anchor" href="#dataframe"><span>DataFrame</span></a></h4><p>要在表中手动存储数据，请创建一个 <code>DataFrame</code></p><p>一个 DateFram 是一种二维数据结构，可以存储 不同的类型（包括字符、整数、浮点值、 分类数据等）在列中。 它类似于电子表格， SQL 表或 <code>data.frame</code>在 R。</p><p>用DataFrame存储一些数据</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        <span class="token string">&quot;Name&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;Braund, Mr. Owen Harris&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Allen, Mr. William Henry&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Bonnell, Miss. Elizabeth&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Age&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Sex&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;male&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;female&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

df
<span class="token triple-quoted-string string">&quot;&quot;&quot;
                       Name  Age     Sex
0   Braund, Mr. Owen Harris   22    male
1  Allen, Mr. William Henry   35    male
2  Bonnell, Miss. Elizabeth   58  female
&quot;&quot;&quot;</span>

<span class="token builtin">type</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>	<span class="token comment"># 类型</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; pandas.core.frame.DataFrame &quot;&quot;&quot;</span>

dp<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape	<span class="token comment"># 返回行列数</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; (891, 2) &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="series" tabindex="-1"><a class="header-anchor" href="#series"><span>Series</span></a></h4><p>每一列 <code>DataFrame</code>是一个 <code>Series</code></p><p>比如我只是对使用列中的数据感兴趣 <code>Age</code>：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
0    22
1    35
2    58
Name: Age, dtype: int64
&quot;&quot;&quot;</span>

<span class="token builtin">type</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>				<span class="token comment"># 类型</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; pandas.core.series.Series &quot;&quot;&quot;</span>

df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape  			<span class="token comment"># 返回行列数</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; (3,) &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接创建一个 <code>Series</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ages <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">)</span>

ages
<span class="token triple-quoted-string string">&quot;&quot;&quot;
0    22
1    35
2    58
Name: Age, dtype: int64
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读写表格数据" tabindex="-1"><a class="header-anchor" href="#读写表格数据"><span>读写表格数据</span></a></h2><h3 id="read-读取文件" tabindex="-1"><a class="header-anchor" href="#read-读取文件"><span>read_* 读取文件</span></a></h3><p>pandas 支持许多不同的文件 开箱即用的格式或数据源（csv、excel、sql、json、parquet、 …)，每个都带有前缀 <code>read_*</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;data/titanic.csv&quot;</span><span class="token punctuation">)</span>	<span class="token comment"># 读取存储为 csv 的数据的函数并归档成 DataFrame</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="to-存储到文件" tabindex="-1"><a class="header-anchor" href="#to-存储到文件"><span>to_* 存储到文件</span></a></h3>`,40),j=n("code",null,"read_*",-1),Q=n("code",null,"to_*",-1),G={href:"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"to_excel()",-1),K=e(`<p><mark>注意：默认为utf-8编码，而Excel打开utd-8编码的csv文件时，中文部分会乱码</mark></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># excel, 需要openpyxl的依赖</span>
titanic<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">&quot;titanic.xlsx&quot;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>	<span class="token comment"># 向Excel写入</span>
titanic <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;titanic.xlsx&quot;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">)</span>		<span class="token comment"># 读取</span>

<span class="token comment"># csv, 不需要openpyxl的依赖</span>
data_frame<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&quot;汉字.csv&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;gbk&quot;</span><span class="token punctuation">)</span>
data_frame <span class="token operator">=</span>pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;汉字.csv&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;gbk&quot;</span><span class="token punctuation">)</span>						<span class="token comment"># 不加编码会抛出报编码错误</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;																		 # 如果存储时不加index=False，则再次取回时会多出一列
																		 # 按理说应该能有一个选项可以把这列给去掉，或者用该列作为序列
       Unnamed: 0 word oldword  strokes pinyin radicals
0               0    嗄       嗄       13      á        口
1               1    吖       吖        6      ā        口
2               2    阿       阿        7      ā        阝
3               3    啊       啊       10      ā        口
4               4    锕       録       12      ā        钅
...           ...  ...     ...      ...    ...      ...
16137       16137    酢       酢       12    zuò        酉
16138       16138    阝       阝       14    zuǒ      NaN
16139       16139    左       左        5    zuǒ        工
16140       16140    佐       佐        7    zuǒ        亻
16141       16141    繓       繓       10    zuǒ      NaN
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常见报错" tabindex="-1"><a class="header-anchor" href="#常见报错"><span>常见报错</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 常见报错</span>
<span class="token comment"># 编码错误：encoding Permission Error</span>
<span class="token comment"># 没有权限（文件被其他软件打开了）：Permission denied</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法原型" tabindex="-1"><a class="header-anchor" href="#方法原型"><span>方法原型</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">to_csv</span><span class="token punctuation">(</span>
    self<span class="token punctuation">,</span>
    path_or_buf<span class="token punctuation">:</span> FilePathOrBuffer<span class="token punctuation">[</span>AnyStr<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    sep<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span>
    na_rep<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    float_format<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    columns<span class="token punctuation">:</span> Sequence<span class="token punctuation">[</span>Hashable<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    header<span class="token punctuation">:</span> bool_t <span class="token operator">|</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
    index<span class="token punctuation">:</span> bool_t <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
    index_label<span class="token punctuation">:</span> IndexLabel <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    mode<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span>
    encoding<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    compression<span class="token punctuation">:</span> CompressionOptions <span class="token operator">=</span> <span class="token string">&quot;infer&quot;</span><span class="token punctuation">,</span>
    quoting<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    quotechar<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">,</span>
    line_terminator<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    chunksize<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    date_format<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    doublequote<span class="token punctuation">:</span> bool_t <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
    escapechar<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    decimal<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>
    errors<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;strict&quot;</span><span class="token punctuation">,</span>
    storage_options<span class="token punctuation">:</span> StorageOptions <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    
<span class="token keyword">def</span> <span class="token function">read_csv</span><span class="token punctuation">(</span>
    filepath_or_buffer<span class="token punctuation">:</span> FilePathOrBuffer<span class="token punctuation">,</span>
    sep<span class="token operator">=</span>lib<span class="token punctuation">.</span>no_default<span class="token punctuation">,</span>
    delimiter<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token comment"># Column and Index Locations and Names</span>
    header<span class="token operator">=</span><span class="token string">&quot;infer&quot;</span><span class="token punctuation">,</span>
    names<span class="token operator">=</span>lib<span class="token punctuation">.</span>no_default<span class="token punctuation">,</span>
    index_col<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    usecols<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    squeeze<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    prefix<span class="token operator">=</span>lib<span class="token punctuation">.</span>no_default<span class="token punctuation">,</span>
    mangle_dupe_cols<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    <span class="token comment"># General Parsing Configuration</span>
    dtype<span class="token punctuation">:</span> DtypeArg <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    engine<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    converters<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    true_values<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    false_values<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    skipinitialspace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    skiprows<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    skipfooter<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
    nrows<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token comment"># NA and Missing Data Handling</span>
    na_values<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    keep_default_na<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    na_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    verbose<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    skip_blank_lines<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    <span class="token comment"># Datetime Handling</span>
    parse_dates<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    infer_datetime_format<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    keep_date_col<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    date_parser<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    dayfirst<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    cache_dates<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    <span class="token comment"># Iteration</span>
    iterator<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    chunksize<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token comment"># Quoting, Compression, and File Format</span>
    compression<span class="token operator">=</span><span class="token string">&quot;infer&quot;</span><span class="token punctuation">,</span>
    thousands<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    decimal<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>
    lineterminator<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    quotechar<span class="token operator">=</span><span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">,</span>
    quoting<span class="token operator">=</span>csv<span class="token punctuation">.</span>QUOTE_MINIMAL<span class="token punctuation">,</span>
    doublequote<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    escapechar<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    comment<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    encoding<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    encoding_errors<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token string">&quot;strict&quot;</span><span class="token punctuation">,</span>
    dialect<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token comment"># Error Handling</span>
    error_bad_lines<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    warn_bad_lines<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token comment"># TODO (2.0): set on_bad_lines to &quot;error&quot;.</span>
    <span class="token comment"># See _refine_defaults_read comment for why we do this.</span>
    on_bad_lines<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token comment"># Internal</span>
    delim_whitespace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    low_memory<span class="token operator">=</span>_c_parser_defaults<span class="token punctuation">[</span><span class="token string">&quot;low_memory&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    memory_map<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    float_precision<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    storage_options<span class="token punctuation">:</span> StorageOptions <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="显示方法" tabindex="-1"><a class="header-anchor" href="#显示方法"><span>显示方法</span></a></h2><h3 id="数据显示" tabindex="-1"><a class="header-anchor" href="#数据显示"><span>数据显示</span></a></h3><h4 id="默认仅显示前后5行数据" tabindex="-1"><a class="header-anchor" href="#默认仅显示前后5行数据"><span>默认仅显示前后5行数据</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic				<span class="token comment"># 默认仅显示前后5行数据</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
     PassengerId  Survived  Pclass                         Name  ...            Ticket     Fare  Cabin  Embarked
0              1         0       3      Braund, Mr. Owen Harris  ...         A/5 21171   7.2500    NaN         S
1              2         1       1       Cumings, Mrs. John ...  ...          PC 17599  71.2833    C85         C
2              3         1       3       Heikkinen, Miss. Laina  ...  STON/O2. 3101282   7.9250    NaN         S
3              4         1       1    Futrelle, Mrs. Jacques...  ...            113803  53.1000   C123         S
4              5         0       3     Allen, Mr. William Henry  ...            373450   8.0500    NaN         S
..           ...       ...     ...                          ...  ...               ...      ...    ...       ...
886          887         0       2        Montvila, Rev. Juozas  ...            211536  13.0000    NaN         S
887          888         1       1   Graham, Miss. Margaret ...  ...            112053  30.0000    B42         S
888          889         0       3          Johnston, Miss. ...  ...        W./C. 6607  23.4500    NaN         S
889          890         1       1        Behr, Mr. Karl Howell  ...            111369  30.0000   C148         C
890          891         0       3          Dooley, Mr. Patrick  ...            370376   7.7500    NaN         Q

[891 rows x 12 columns]
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="head-查看前面几行" tabindex="-1"><a class="header-anchor" href="#head-查看前面几行"><span>head() 查看前面几行</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 无参数则默认查看前5行</span>
titanic<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>		<span class="token comment"># 查看前8行</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
     PassengerId  Survived  Pclass                         Name  ...            Ticket     Fare  Cabin  Embarked
0              1         0       3      Braund, Mr. Owen Harris  ...         A/5 21171   7.2500    NaN         S
1              2         1       1       Cumings, Mrs. John ...  ...          PC 17599  71.2833    C85         C
2              3         1       3       Heikkinen, Miss. Laina  ...  STON/O2. 3101282   7.9250    NaN         S
3              4         1       1    Futrelle, Mrs. Jacques...  ...            113803  53.1000   C123         S
4              5         0       3     Allen, Mr. William Henry  ...            373450   8.0500    NaN         S
5              6         0       3     Moran, Mr. James    male  ...             330877   8.4583   NaN         Q
6              7         0       1    McCarthy, Mr. Timothy ...  ...              17463  51.8625   E46         S
7              8         0       3   Palsson, Master. Gosta ...  ...             349909  21.0750   NaN         S

[8 rows x 12 columns]
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="tail-查看最后5行" tabindex="-1"><a class="header-anchor" href="#tail-查看最后5行"><span>tail() 查看最后5行</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>	<span class="token comment"># 查看最后10行</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; 略 &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="信息显示" tabindex="-1"><a class="header-anchor" href="#信息显示"><span>信息显示</span></a></h3><h4 id="shape-显示行列数" tabindex="-1"><a class="header-anchor" href="#shape-显示行列数"><span>shape 显示行列数</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dp<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape	<span class="token comment"># 返回行列数</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; (891, 2) &quot;&quot;&quot;</span>

df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape  			<span class="token comment"># 返回行列数</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; (3,) &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="describe-快速统计" tabindex="-1"><a class="header-anchor" href="#describe-快速统计"><span>describe() 快速统计</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 許多 pandas 操作返回一個 DataFrame或一個 Series</span>

df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 获取最大值</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; 58 &quot;&quot;&quot;</span>
ages<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>			<span class="token comment"># 获取最大值</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; 58 &quot;&quot;&quot;</span>

df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 快速生成基本统计</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
             Age
count   3.000000
mean   38.333333
std    18.230012
min    22.000000
25%    28.500000
50%    35.000000
75%    46.500000
max    58.000000
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dtypes-解释每种列数据类型" tabindex="-1"><a class="header-anchor" href="#dtypes-解释每种列数据类型"><span>dtypes 解释每种列数据类型</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">.</span>dtypes		<span class="token comment"># 解释每种列数据类型</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
PassengerId      int64
Survived         int64
Pclass           int64
Name            object
Sex             object
Age            float64
SibSp            int64
Parch            int64
Ticket          object
Fare           float64
Cabin           object
Embarked        object
dtype: object
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="info-查看dataframe总结信息" tabindex="-1"><a class="header-anchor" href="#info-查看dataframe总结信息"><span>info() 查看DataFrame总结信息</span></a></h4><p>该输出也是一个DateFrame</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建dateframe子集的方法" tabindex="-1"><a class="header-anchor" href="#创建dateframe子集的方法"><span>创建DateFrame子集的方法</span></a></h2><p>准备工作</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;data/titanic.csv&quot;</span><span class="token punctuation">)</span>
ages <span class="token operator">=</span> titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span>		<span class="token comment"># 单列</span>
titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape		<span class="token comment"># 输出：(891,)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span>[ ]</span></a></h3><h4 id="的三种参数" tabindex="-1"><a class="header-anchor" href="#的三种参数"><span>[ ] 的三种参数</span></a></h4><p>接受三种参数</p><ul><li>字符串：返回的是Series</li><li>字符串列表：返回DateFrame</li><li>Series：返回DateFrame</li></ul><h4 id="字符串参数-筛选列" tabindex="-1"><a class="header-anchor" href="#字符串参数-筛选列"><span>字符串参数 - 筛选列</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
0    22
1    35
2    58
Name: Age, dtype: int64
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字符串列表参数-筛选多列" tabindex="-1"><a class="header-anchor" href="#字符串列表参数-筛选多列"><span>字符串列表参数 - 筛选多列</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>age_sex <span class="token operator">=</span> titanic<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>		<span class="token comment"># 创建子表 - 按列</span>
age_sex<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
    Age     Sex
0  22.0    male
1  38.0  female
2  26.0  female
3  35.0  female
4  35.0    male
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="series参数-筛选行-条件筛选行" tabindex="-1"><a class="header-anchor" href="#series参数-筛选行-条件筛选行"><span>Series参数 - 筛选行/条件筛选行</span></a></h4><h5 id="原理-条件筛选原理-series做逻辑运算" tabindex="-1"><a class="header-anchor" href="#原理-条件筛选原理-series做逻辑运算"><span>原理（条件筛选原理：Series做逻辑运算）</span></a></h5><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 原理如下</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>			<span class="token comment"># 返回的都是Series类型</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; pandas.core.series.Series  pandas.core.series.Series &quot;&quot;&quot;</span>

titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">35</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
0      False
1       True
2      False
3      False
4      False
       ...  
886    False
887    False
888    False
889    False
890    False
Name: Age, Length: 891, dtype: bool
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="比较" tabindex="-1"><a class="header-anchor" href="#比较"><span>比较</span></a></h5><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>above_35 <span class="token operator">=</span> titanic<span class="token punctuation">[</span>titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">35</span><span class="token punctuation">]</span>					<span class="token comment"># 年龄大于35</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
    PassengerId  Survived  Pclass                                               Name     Sex  ...  Parch    Ticket     Fare
1             2         1       1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  ...      0  PC 17599  71.2833
6             7         0       1                            McCarthy, Mr. Timothy J    male  ...      0     17463  51.8625
11           12         1       1                           Bonnell, Miss. Elizabeth  female  ...      0    113783  26.5500
13           14         0       3                        Andersson, Mr. Anders Johan    male  ...      5    347082  31.2750
15           16         1       2                   Hewlett, Mrs. (Mary D Kingcome)   female  ...      0    248706  16.0000

[5 rows x 12 columns]
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="包含" tabindex="-1"><a class="header-anchor" href="#包含"><span>包含</span></a></h5><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>class_23 <span class="token operator">=</span> titanic<span class="token punctuation">[</span>titanic<span class="token punctuation">[</span><span class="token string">&quot;Pclass&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>		<span class="token comment"># 2 和 3 舱的泰坦尼克号乘客</span>
class_23<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
   PassengerId  Survived  Pclass                            Name     Sex   Age  SibSp  Parch            Ticket     Fare
0            1         0       3         Braund, Mr. Owen Harris    male  22.0      1      0         A/5 21171   7.2500
2            3         1       3          Heikkinen, Miss. Laina  female  26.0      0      0  STON/O2. 3101282   7.9250
4            5         0       3        Allen, Mr. William Henry    male  35.0      0      0            373450   8.0500
5            6         0       3                Moran, Mr. James    male   NaN      0      0            330877   8.4583
7            8         0       3  Palsson, Master. Gosta Leonard    male   2.0      3      1            349909  21.0750
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="逻辑运算" tabindex="-1"><a class="header-anchor" href="#逻辑运算"><span>逻辑运算</span></a></h5><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>class_23 <span class="token operator">=</span> titanic<span class="token punctuation">[</span><span class="token punctuation">(</span>titanic<span class="token punctuation">[</span><span class="token string">&quot;Pclass&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>titanic<span class="token punctuation">[</span><span class="token string">&quot;Pclass&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>		<span class="token comment"># 即：Series类型可以做逻辑运算</span>
class_23<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Out[19]: 
   PassengerId  Survived  Pclass                            Name     Sex   Age  SibSp  Parch            Ticket     Fare
0            1         0       3         Braund, Mr. Owen Harris    male  22.0      1      0         A/5 21171   7.2500
2            3         1       3          Heikkinen, Miss. Laina  female  26.0      0      0  STON/O2. 3101282   7.9250
4            5         0       3        Allen, Mr. William Henry    male  35.0      0      0            373450   8.0500
5            6         0       3                Moran, Mr. James    male   NaN      0      0            330877   8.4583
7            8         0       3  Palsson, Master. Gosta Leonard    male   2.0      3      1            349909  21.0750
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="非空" tabindex="-1"><a class="header-anchor" href="#非空"><span>非空</span></a></h5><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>age_no_na <span class="token operator">=</span> titanic<span class="token punctuation">[</span>titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>notna<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>					<span class="token comment"># 已知年龄的乘客数据</span>
age_no_na<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
   PassengerId  Survived  Pclass                                               Name     Sex  ...  Parch            Ticket
0            1         0       3                            Braund, Mr. Owen Harris    male  ...      0         A/5 21171 
1            2         1       1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  ...      0          PC 17599 
2            3         1       3                             Heikkinen, Miss. Laina  female  ...      0  STON/O2. 3101282 
3            4         1       1       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  ...      0            113803
4            5         0       3                           Allen, Mr. William Henry    male  ...      0            373450

[5 rows x 12 columns]
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="loc-子集-条件" tabindex="-1"><a class="header-anchor" href="#loc-子集-条件"><span>loc() 子集 + 条件</span></a></h3><p>也可以选择到某个单元格</p><p>完全等同于 <code>titanic[titanic[&quot;Age&quot;] &gt; 35][&quot;Name&quot;]</code>？（https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy）</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 完全等同于 titanic[titanic[&quot;Age&quot;] &gt; 35][&quot;Name&quot;]</span>
adult_names <span class="token operator">=</span> titanic<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token string">&quot;Name&quot;</span><span class="token punctuation">]</span>
adult_names<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
1     Cumings, Mrs. John Bradley (Florence Briggs Th...
6                               McCarthy, Mr. Timothy J
11                             Bonnell, Miss. Elizabeth
13                          Andersson, Mr. Anders Johan
15                     Hewlett, Mrs. (Mary D Kingcome) 
Name: Name, dtype: object
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iloc-二维切片、切片并赋值" tabindex="-1"><a class="header-anchor" href="#iloc-二维切片、切片并赋值"><span>iloc() 二维切片、切片并赋值</span></a></h3><p>切片</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span>		<span class="token comment"># 第 10 到 25 行和第 3 到 5 列</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
    Pclass                                 Name     Sex
9        2  Nasser, Mrs. Nicholas (Adele Achem)  female
10       3      Sandstrom, Miss. Marguerite Rut  female
11       1             Bonnell, Miss. Elizabeth  female
12       3       Saundercock, Mr. William Henry    male
13       3          Andersson, Mr. Anders Johan    male
..     ...                                  ...     ...
20       2                 Fynney, Mr. Joseph J    male
21       2                Beesley, Mr. Lawrence    male
22       3          McGowan, Miss. Anna &quot;Annie&quot;  female
23       1         Sloper, Mr. William Thompson    male
24       3        Palsson, Miss. Torborg Danira  female

[16 rows x 3 columns]
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>切片并赋值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;anonymous&quot;</span>
titanic<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
   PassengerId  Survived  Pclass                                          Name     Sex  ...  Parch            Ticke
0            1         0       3                                     anonymous    male  ...      0         A/5 21171
1            2         1       1                                     anonymous  female  ...      0          PC 17599
2            3         1       3                                     anonymous  female  ...      0  STON/O2. 3101282
3            4         1       1  Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  ...      0            113803
4            5         0       3                      Allen, Mr. William Henry    male  ...      0            373450

[5 rows x 12 columns]
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展新列" tabindex="-1"><a class="header-anchor" href="#扩展新列"><span>扩展新列</span></a></h2><h3 id="扩展新列-1" tabindex="-1"><a class="header-anchor" href="#扩展新列-1"><span>扩展新列</span></a></h3><p>本质：等号右边是一个Series类型</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># Series与数字四则运算</span>
air_quality<span class="token punctuation">[</span><span class="token string">&quot;london_mg_per_cubic&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> air_quality<span class="token punctuation">[</span><span class="token string">&quot;station_london&quot;</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">1.882</span>  <span class="token comment"># 添加新列 &quot;london_mg_per_cubic&quot;</span>

<span class="token comment"># Series与Series四则运算</span>
air_quality<span class="token punctuation">[</span><span class="token string">&quot;ratio_paris_antwerp&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
    air_quality<span class="token punctuation">[</span><span class="token string">&quot;station_paris&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> air_quality<span class="token punctuation">[</span><span class="token string">&quot;station_antwerp&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rename-将数据列重命名" tabindex="-1"><a class="header-anchor" href="#rename-将数据列重命名"><span>rename() 将数据列重命名</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>air_quality_renamed <span class="token operator">=</span> air_quality<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>		<span class="token comment"># 修改其中三列的字段</span>
    columns<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token string">&quot;station_antwerp&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;BETR801&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;station_paris&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FR04014&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;station_london&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;London Westminster&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

air_quality_renamed <span class="token operator">=</span> air_quality_renamed<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">)</span>	<span class="token comment"># 将字段名全部修改为小写</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q-todo-话说我要让他们执行同一个方法怎么办-比如-lower-数据-而不是-xx方法" tabindex="-1"><a class="header-anchor" href="#q-todo-话说我要让他们执行同一个方法怎么办-比如-lower-数据-而不是-xx方法"><span>Q？TODO 话说我要让他们执行同一个方法怎么办，比如 lower(数据)，而不是.xx方法</span></a></h3><h2 id="在pandas中创建图形" tabindex="-1"><a class="header-anchor" href="#在pandas中创建图形"><span>在Pandas中创建图形</span></a></h2><p>准备工作</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
air_quality <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;data/air_quality_no2.csv&quot;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> parse_dates<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="plot-折线图" tabindex="-1"><a class="header-anchor" href="#plot-折线图"><span>plot() 折线图</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>air_quality<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">)</span>					<span class="token comment"># 默认为每一个具有数字数据的列创建一个折线图</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;AxesSubplot:xlabel=&#39;datetime&#39;&gt;
【这里是一张图片】
&quot;&quot;&quot;</span>

air_quality<span class="token punctuation">[</span><span class="token string">&quot;station_paris&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># 仅为某个数据创建折线图</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;AxesSubplot:xlabel=&#39;datetime&#39;&gt;
【这里是一张图片】
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="plot-scatter-散点图" tabindex="-1"><a class="header-anchor" href="#plot-scatter-散点图"><span>plot.scatter() 散点图</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>air_quality<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&quot;station_london&quot;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&quot;station_paris&quot;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Out[7]: &lt;AxesSubplot:xlabel=&#39;station_london&#39;, ylabel=&#39;station_paris&#39;&gt;
【这里是一张图片】
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="todo-此略-暂时跳过" tabindex="-1"><a class="header-anchor" href="#todo-此略-暂时跳过"><span>TODO：此略，暂时跳过</span></a></h3><h2 id="计算汇总统计" tabindex="-1"><a class="header-anchor" href="#计算汇总统计"><span>计算汇总统计</span></a></h2><h3 id="聚合统计" tabindex="-1"><a class="header-anchor" href="#聚合统计"><span>聚合统计</span></a></h3><h4 id="数值统计" tabindex="-1"><a class="header-anchor" href="#数值统计"><span>数值统计</span></a></h4><p>最大值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>						<span class="token comment"># 获取最大值（Series方法）</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; 58 &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>平均值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>				<span class="token comment"># 泰坦尼克号乘客的平均年龄是多少？（Series方法）</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot; 29.69911764705882 &quot;&quot;&quot;</span>

titanic<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fare&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># 泰坦尼克号乘客的平均年龄和票价是多少？ （DataFrame方法）</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Age     28.0000
Fare    14.4542
dtype: float64
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="describe-快速统计-1" tabindex="-1"><a class="header-anchor" href="#describe-快速统计-1"><span>describe() 快速统计</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ages<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 快速生成基本统计</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
             Age
count   3.000000
mean   38.333333
std    18.230012
min    22.000000
25%    28.500000
50%    35.000000
75%    46.500000
max    58.000000
&quot;&quot;&quot;</span>

titanic<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fare&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
              Age        Fare
count  714.000000  891.000000
mean    29.699118   32.204208
std     14.526497   49.693429
min      0.420000    0.000000
25%     20.125000    7.910400
50%     28.000000   14.454200
75%     38.000000   31.000000
max     80.000000  512.329200
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="agg-制定多项统计" tabindex="-1"><a class="header-anchor" href="#agg-制定多项统计"><span>agg() 制定多项统计</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">.</span>agg<span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        <span class="token string">&quot;Age&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;min&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;max&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;median&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;skew&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Fare&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;min&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;max&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;median&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mean&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
              Age        Fare
min      0.420000    0.000000
max     80.000000  512.329200
median  28.000000   14.454200
skew     0.389108         NaN
mean          NaN   32.204208
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="groupby-按分组统计" tabindex="-1"><a class="header-anchor" href="#groupby-按分组统计"><span>groupby 按分组统计</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&quot;Sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># 男性和女性泰坦尼克號乘客的平均年齡是多少？ </span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
              Age
Sex              
female  27.915709
male    30.726645
&quot;&quot;&quot;</span>

titanic<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&quot;Sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>					<span class="token comment"># 男性和女性泰坦尼克號乘客的平均数据</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
        PassengerId  Survived    Pclass        Age     SibSp     Parch       Fare
Sex                                                                              
female   431.028662  0.742038  2.159236  27.915709  0.694268  0.649682  44.479818
male     454.147314  0.188908  2.389948  30.726645  0.429809  0.235702  25.523893
&quot;&quot;&quot;</span>

titanic<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&quot;Sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>			<span class="token comment"># 好像和第一种方法的区别不大</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Sex
female    27.915709
male      30.726645
Name: Age, dtype: float64
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原理</p><figure><img src="`+c+`" alt="06_groupby_select_detail.svg" tabindex="0" loading="lazy"><figcaption>06_groupby_select_detail.svg</figcaption></figure><p>双重分组</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Pclass&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;Fare&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># 每個性別和艙位組合的平均票價是多少？ </span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Sex     Pclass
female  1         106.125798
        2          21.970121
        3          16.118810
male    1          67.226127
        2          19.741782
        3          12.661633
Name: Fare, dtype: float64
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="按类别计数" tabindex="-1"><a class="header-anchor" href="#按类别计数"><span>按类别计数</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>titanic<span class="token punctuation">[</span><span class="token string">&quot;Pclass&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 每個艙位的乘客人數是多少？</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
3    491
1    216
2    184
Name: Pclass, dtype: int64
&quot;&quot;&quot;</span>

<span class="token comment"># 該函數是一個快捷方式，因為它實際上是一個 groupby 操作結合記錄數的計數 每組內</span>
titanic<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&quot;Pclass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;Pclass&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Pclass
1    216
2    184
3    491
Name: Pclass, dtype: int64
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="合并多个表格数据" tabindex="-1"><a class="header-anchor" href="#合并多个表格数据"><span>合并多个表格数据</span></a></h2><p>准备工作</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>air_quality_no2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;data/air_quality_no2_long.csv&quot;</span><span class="token punctuation">,</span>
                              parse_dates<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

air_quality_no2 <span class="token operator">=</span> air_quality_no2<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;date.utc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;location&quot;</span><span class="token punctuation">,</span>
                                   <span class="token string">&quot;parameter&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

air_quality_no2<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
                    date.utc location parameter  value
0  2019-06-21 00:00:00+00:00  FR04014       no2   20.0
1  2019-06-20 23:00:00+00:00  FR04014       no2   21.8
2  2019-06-20 22:00:00+00:00  FR04014       no2   26.5
3  2019-06-20 21:00:00+00:00  FR04014       no2   24.9
4  2019-06-20 20:00:00+00:00  FR04014       no2   21.4
&quot;&quot;&quot;</span>

air_quality_pm25 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;data/air_quality_pm25_long.csv&quot;</span><span class="token punctuation">,</span>
                               parse_dates<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

air_quality_pm25 <span class="token operator">=</span> air_quality_pm25<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;date.utc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;location&quot;</span><span class="token punctuation">,</span>
                                     <span class="token string">&quot;parameter&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

air_quality_pm25<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
                    date.utc location parameter  value
0  2019-06-18 06:00:00+00:00  BETR801      pm25   18.0
1  2019-06-17 08:00:00+00:00  BETR801      pm25    6.5
2  2019-06-17 07:00:00+00:00  BETR801      pm25   18.5
3  2019-06-17 06:00:00+00:00  BETR801      pm25   16.0
4  2019-06-17 05:00:00+00:00  BETR801      pm25    7.5
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concat-上下合并-連接對象" tabindex="-1"><a class="header-anchor" href="#concat-上下合并-連接對象"><span>concat() 上下合并（連接對象）</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>air_quality <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>air_quality_pm25<span class="token punctuation">,</span> air_quality_no2<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

air_quality<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
                    date.utc location parameter  value
0  2019-06-18 06:00:00+00:00  BETR801      pm25   18.0
1  2019-06-17 08:00:00+00:00  BETR801      pm25    6.5
2  2019-06-17 07:00:00+00:00  BETR801      pm25   18.5
3  2019-06-17 06:00:00+00:00  BETR801      pm25   16.0
4  2019-06-17 05:00:00+00:00  BETR801      pm25    7.5
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="左右合并-使用通用标识符" tabindex="-1"><a class="header-anchor" href="#左右合并-使用通用标识符"><span>左右合并（使用通用标识符）</span></a></h3><p>准备</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>stations_coord <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;data/air_quality_stations.csv&quot;</span><span class="token punctuation">)</span>

stations_coord<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
  location  coordinates.latitude  coordinates.longitude
0  BELAL01              51.23619                4.38522
1  BELHB23              51.17030                4.34100
2  BELLD01              51.10998                5.00486
3  BELLD02              51.12038                5.02155
4  BELR833              51.32766                4.36226
&quot;&quot;&quot;</span>

air_quality<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
                       date.utc            location parameter  value
2067  2019-05-07 01:00:00+00:00  London Westminster       no2   23.0
1003  2019-05-07 01:00:00+00:00             FR04014       no2   25.0
100   2019-05-07 01:00:00+00:00             BETR801      pm25   12.5
1098  2019-05-07 01:00:00+00:00             BETR801       no2   50.5
1109  2019-05-07 01:00:00+00:00  London Westminster      pm25    8.0
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>合并</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>air_quality <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>air_quality<span class="token punctuation">,</span> stations_coord<span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&quot;location&quot;</span><span class="token punctuation">)</span>	<span class="token comment"># 其中&quot;location&quot;为主键</span>
<span class="token comment"># # how: inner共有 left左为准 cross用id作为on参数</span>

air_quality<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
                    date.utc            location parameter  value  coordinates.latitude  coordinates.longitude
0  2019-05-07 01:00:00+00:00  London Westminster       no2   23.0              51.49467               -0.13193
1  2019-05-07 01:00:00+00:00             FR04014       no2   25.0              48.83724                2.39390
2  2019-05-07 01:00:00+00:00             FR04014       no2   25.0              48.83722                2.39390
3  2019-05-07 01:00:00+00:00             BETR801      pm25   12.5              51.20966                4.43182
4  2019-05-07 01:00:00+00:00             BETR801       no2   50.5              51.20966                4.43182
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_0" tabindex="-1"><a class="header-anchor" href="#_0"><span>0</span></a></h2><h3 id="重塑表格布局" tabindex="-1"><a class="header-anchor" href="#重塑表格布局"><span>重塑表格布局</span></a></h3><h3 id="处理时间序列数据" tabindex="-1"><a class="header-anchor" href="#处理时间序列数据"><span>处理时间序列数据</span></a></h3><h3 id="操作文本数据" tabindex="-1"><a class="header-anchor" href="#操作文本数据"><span>操作文本数据</span></a></h3>`,103);function Z(U,X){const a=i("ExternalLinkIcon");return l(),p("div",null,[d,n("blockquote",null,[r,n("p",null,[n("s",null,[s("参考："),n("a",v,[s("【知乎】怎样理解spring中的开箱即用，可插拔等抽象概念？"),t(a)])])]),k]),m,n("table",null,[b,n("tbody",null,[n("tr",null,[n("td",null,[n("a",h,[s("NumPy"),t(a)])]),g]),n("tr",null,[n("td",null,[n("a",q,[s("python-dateutil"),t(a)])]),y]),n("tr",null,[n("td",null,[n("a",_,[s("pytz"),t(a)])]),f])])]),x,n("ul",null,[n("li",null,[n("a",N,[s("numexpr"),t(a)]),s(": 用於加速某些數值運算。 "),S,s("使用多個核心以及智能分塊和緩存來實現大幅加速。 如果已安裝，則必須是 2.7.1 或更高版本")]),n("li",null,[n("a",A,[s("bottleneck"),t(a)]),s(": 用於加速某些類型的 "),P,s(" 評價。 "),E,s("使用專門的 cython 例程來實現大幅加速。 如果安裝， 必須是 1.3.1 或更高版本")])]),M,n("table",null,[F,n("tbody",null,[w,B,n("tr",null,[T,D,n("td",null,[s("Printing in Markdown-friendly format (see "),n("a",O,[s("tabulate"),t(a)]),s(")")])])])]),C,n("table",null,[L,n("tbody",null,[H,n("tr",null,[I,R,n("td",null,[s("Alternative execution engine for rolling operations (see "),n("a",z,[s("Enhancing Performance"),t(a)]),s(")")])]),J])]),W,n("p",null,[j,s("函数用于向 pandas 读取数据， "),Q,s("方法用于存储数据。 这 "),n("a",G,[V,t(a)]),s("方法存储 数据作为excel文件")]),K])}const nn=o(u,[["render",Z],["__file","Excel库-Pandas.html.vue"]]),sn=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Python/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E7%B1%BB/Excel%E5%BA%93-Pandas.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 Excel库 - Pandas 参考： 官方网站：https://pandas.pydata.org/ 中文网站：https://www.pypandas.cn/ 官方文档：https://pandas.pydata.org/pandas-docs/stable/ 入门教程：https://pandas.pydata.org/pan...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Python/07.%20%E6%A8%A1%E5%9D%97%E5%BA%93/%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E7%B1%BB/Excel%E5%BA%93-Pandas.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 Excel库 - Pandas 参考： 官方网站：https://pandas.pydata.org/ 中文网站：https://www.pypandas.cn/ 官方文档：https://pandas.pydata.org/pandas-docs/stable/ 入门教程：https://pandas.pydata.org/pan..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"Excel库 - Pandas","slug":"excel库-pandas","link":"#excel库-pandas","children":[{"level":2,"title":"Pandas简概","slug":"pandas简概","link":"#pandas简概","children":[{"level":3,"title":"特点：开箱即用（out-of-the-box feature，也称OOTB或off the shelf）","slug":"特点-开箱即用-out-of-the-box-feature-也称ootb或off-the-shelf","link":"#特点-开箱即用-out-of-the-box-feature-也称ootb或off-the-shelf","children":[]},{"level":3,"title":"包概述","slug":"包概述","link":"#包概述","children":[]}]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"運行測試套件","slug":"運行測試套件","link":"#運行測試套件","children":[]},{"level":3,"title":"依赖","slug":"依赖","link":"#依赖","children":[{"level":4,"title":"依赖推荐","slug":"依赖推荐","link":"#依赖推荐","children":[]},{"level":4,"title":"可选依赖项","slug":"可选依赖项","link":"#可选依赖项","children":[]}]}]}]},{"level":1,"title":"入门教程","slug":"入门教程","link":"#入门教程","children":[{"level":2,"title":"基本数据","slug":"基本数据","link":"#基本数据","children":[{"level":3,"title":"导入","slug":"导入","link":"#导入","children":[]},{"level":3,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[{"level":4,"title":"DataFrame","slug":"dataframe","link":"#dataframe","children":[]},{"level":4,"title":"Series","slug":"series","link":"#series","children":[]}]}]},{"level":2,"title":"读写表格数据","slug":"读写表格数据","link":"#读写表格数据","children":[{"level":3,"title":"read_*  读取文件","slug":"read-读取文件","link":"#read-读取文件","children":[]},{"level":3,"title":"to_*  存储到文件","slug":"to-存储到文件","link":"#to-存储到文件","children":[]},{"level":3,"title":"常见报错","slug":"常见报错","link":"#常见报错","children":[]},{"level":3,"title":"方法原型","slug":"方法原型","link":"#方法原型","children":[]}]},{"level":2,"title":"显示方法","slug":"显示方法","link":"#显示方法","children":[{"level":3,"title":"数据显示","slug":"数据显示","link":"#数据显示","children":[{"level":4,"title":"默认仅显示前后5行数据","slug":"默认仅显示前后5行数据","link":"#默认仅显示前后5行数据","children":[]},{"level":4,"title":"head()  查看前面几行","slug":"head-查看前面几行","link":"#head-查看前面几行","children":[]},{"level":4,"title":"tail()  查看最后5行","slug":"tail-查看最后5行","link":"#tail-查看最后5行","children":[]}]},{"level":3,"title":"信息显示","slug":"信息显示","link":"#信息显示","children":[{"level":4,"title":"shape  显示行列数","slug":"shape-显示行列数","link":"#shape-显示行列数","children":[]},{"level":4,"title":"describe()  快速统计","slug":"describe-快速统计","link":"#describe-快速统计","children":[]},{"level":4,"title":"dtypes  解释每种列数据类型","slug":"dtypes-解释每种列数据类型","link":"#dtypes-解释每种列数据类型","children":[]},{"level":4,"title":"info()  查看DataFrame总结信息","slug":"info-查看dataframe总结信息","link":"#info-查看dataframe总结信息","children":[]}]}]},{"level":2,"title":"创建DateFrame子集的方法","slug":"创建dateframe子集的方法","link":"#创建dateframe子集的方法","children":[{"level":3,"title":"[ ]","slug":"","link":"#","children":[{"level":4,"title":"[ ] 的三种参数","slug":"的三种参数","link":"#的三种参数","children":[]},{"level":4,"title":"字符串参数 - 筛选列","slug":"字符串参数-筛选列","link":"#字符串参数-筛选列","children":[]},{"level":4,"title":"字符串列表参数 - 筛选多列","slug":"字符串列表参数-筛选多列","link":"#字符串列表参数-筛选多列","children":[]},{"level":4,"title":"Series参数 - 筛选行/条件筛选行","slug":"series参数-筛选行-条件筛选行","link":"#series参数-筛选行-条件筛选行","children":[{"level":5,"title":"原理（条件筛选原理：Series做逻辑运算）","slug":"原理-条件筛选原理-series做逻辑运算","link":"#原理-条件筛选原理-series做逻辑运算","children":[]},{"level":5,"title":"比较","slug":"比较","link":"#比较","children":[]},{"level":5,"title":"包含","slug":"包含","link":"#包含","children":[]},{"level":5,"title":"逻辑运算","slug":"逻辑运算","link":"#逻辑运算","children":[]},{"level":5,"title":"非空","slug":"非空","link":"#非空","children":[]}]}]},{"level":3,"title":"loc()  子集 + 条件","slug":"loc-子集-条件","link":"#loc-子集-条件","children":[]},{"level":3,"title":"iloc()  二维切片、切片并赋值","slug":"iloc-二维切片、切片并赋值","link":"#iloc-二维切片、切片并赋值","children":[]}]},{"level":2,"title":"扩展新列","slug":"扩展新列","link":"#扩展新列","children":[{"level":3,"title":"扩展新列","slug":"扩展新列-1","link":"#扩展新列-1","children":[]},{"level":3,"title":"rename()  将数据列重命名","slug":"rename-将数据列重命名","link":"#rename-将数据列重命名","children":[]},{"level":3,"title":"Q？TODO 话说我要让他们执行同一个方法怎么办，比如 lower(数据)，而不是.xx方法","slug":"q-todo-话说我要让他们执行同一个方法怎么办-比如-lower-数据-而不是-xx方法","link":"#q-todo-话说我要让他们执行同一个方法怎么办-比如-lower-数据-而不是-xx方法","children":[]}]},{"level":2,"title":"在Pandas中创建图形","slug":"在pandas中创建图形","link":"#在pandas中创建图形","children":[{"level":3,"title":"plot()  折线图","slug":"plot-折线图","link":"#plot-折线图","children":[]},{"level":3,"title":"plot.scatter()  散点图","slug":"plot-scatter-散点图","link":"#plot-scatter-散点图","children":[]},{"level":3,"title":"TODO：此略，暂时跳过","slug":"todo-此略-暂时跳过","link":"#todo-此略-暂时跳过","children":[]}]},{"level":2,"title":"计算汇总统计","slug":"计算汇总统计","link":"#计算汇总统计","children":[{"level":3,"title":"聚合统计","slug":"聚合统计","link":"#聚合统计","children":[{"level":4,"title":"数值统计","slug":"数值统计","link":"#数值统计","children":[]},{"level":4,"title":"describe()  快速统计","slug":"describe-快速统计-1","link":"#describe-快速统计-1","children":[]},{"level":4,"title":"agg()  制定多项统计","slug":"agg-制定多项统计","link":"#agg-制定多项统计","children":[]}]},{"level":3,"title":"groupby  按分组统计","slug":"groupby-按分组统计","link":"#groupby-按分组统计","children":[]},{"level":3,"title":"按类别计数","slug":"按类别计数","link":"#按类别计数","children":[]}]},{"level":2,"title":"合并多个表格数据","slug":"合并多个表格数据","link":"#合并多个表格数据","children":[{"level":3,"title":"concat()  上下合并（連接對象）","slug":"concat-上下合并-連接對象","link":"#concat-上下合并-連接對象","children":[]},{"level":3,"title":"左右合并（使用通用标识符）","slug":"左右合并-使用通用标识符","link":"#左右合并-使用通用标识符","children":[]}]},{"level":2,"title":"0","slug":"_0","link":"#_0","children":[{"level":3,"title":"重塑表格布局","slug":"重塑表格布局","link":"#重塑表格布局","children":[]},{"level":3,"title":"处理时间序列数据","slug":"处理时间序列数据","link":"#处理时间序列数据","children":[]},{"level":3,"title":"操作文本数据","slug":"操作文本数据","link":"#操作文本数据","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":16.81,"words":5043},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Python/07. 模块库/功能实现类/Excel库-Pandas.md","autoDesc":true}');export{nn as comp,sn as data};
