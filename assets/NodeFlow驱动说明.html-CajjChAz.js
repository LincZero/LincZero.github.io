import{_ as l,e as o,g as i,o as t}from"./app-EuS-Ookm.js";const n={};function a(d,e){return t(),o("div",null,e[0]||(e[0]=[i('<h1 id="nodeflow驱动说明" tabindex="-1"><a class="header-anchor" href="#nodeflow驱动说明"><span>NodeFLow驱动说明</span></a></h1><p>（TODO 部分设计未实现）</p><h2 id="节点流驱动分类-及选用策略" tabindex="-1"><a class="header-anchor" href="#节点流驱动分类-及选用策略"><span>节点流驱动分类，及选用策略</span></a></h2><h3 id="是否自动" tabindex="-1"><a class="header-anchor" href="#是否自动"><span>是否自动</span></a></h3><ul><li>自动运行</li><li><strong>手动运行</strong></li></ul><p>这里选择手动运行。理由：</p><ul><li>自动运行更适用于所有节点均耗时较少的情况，如简单的计算节点。而手动运行更适用于应对复杂和高耗时的任务</li><li>编辑过程中，会出现不完整代码、不完整url等。此时运行容易出错</li><li>手动运行也可以模拟自动运行，自动加一个定时器或监控变换的开始板机，就行了</li><li>仅显示版。最简单的版本是仅显示，得益于以 <code>节点项</code> 为中心的构建策略，用户可以无需编程自定义各种自定义节点，用于显示各种结构。这种节点流用于显示，并不要求运行和实现运行代码</li></ul><h3 id="驱动方式" tabindex="-1"><a class="header-anchor" href="#驱动方式"><span>驱动方式</span></a></h3><ul><li>数据节点驱动 <ul><li>多用于材质流程等</li><li>例如：各种三维软件的材质编辑都是这种、Comfyui也是这种</li><li>驱动：节点X有多个上游数据流时，等所有上游数据流完成后，该节点X开始运行</li><li>特点：数据socket的输入往往只有一个，一个节点可以有多个输入的数据socket。<br> 本质上也能看成是特殊的流程socket。开始节点会自动判断</li><li>实现：节点的状态分为：未运行过、运行中、运行结束 (数据准备就续)</li></ul></li><li>流程节点驱动 <ul><li>多用于流程控制等</li><li>例如：这种比较少像UE</li><li>驱动：节点X上的输入的流程socket被激发后，立即运行该节点</li><li>特点：流程socket的输入可以有多个，一个节点往往只有一个输入的流程socket</li></ul></li><li><strong>混合节点驱动</strong><ul><li>例如：像UE就是这样</li><li>驱动：首先，没有流程socket的节点先自动触发并完成工作。然后，有流程socekt的节点从头开始进行触发。<br> 节点X上的输入流程socket被激发后，此时其也应该会满足另一个条件：其输入的数据socket均为就续状态。<br> 即该节点X同时满足数据节点和流程节点的触发条件，此时会自动触发</li><li>特点：将socket分为数据socket和流程socket，各自沿用各自的特性</li></ul></li></ul><h2 id="数据一致性问题" tabindex="-1"><a class="header-anchor" href="#数据一致性问题"><span>数据一致性问题</span></a></h2><p>数据源</p><ul><li>源数据 (可能是非Json，可能是非规范数据)</li><li>自维护数据 (json，直接与源数据互相序列化和反序列化。带嵌套结构)</li><li>库维护数据 (包含库默认信息。无嵌套结构。通常包含自维护数据的对象)</li></ul><p>一致性</p><ul><li>第一和第二通常不用关心一致性，都是用手动序列化和反序列化直接关联的。这里说一致性主要是第二和第三个数据之间的一致性</li><li>节点内data的数据一致性也不用担心，因为这部分是第三个包含第二个的</li><li>主要需要关注的有： <ul><li>一是数据驱动，需要 updateNodeData 激发 (如 <code>isRunning</code> 状态)</li><li>二是增删、id、位置。这种不在节点里的data数据所包含的内容</li></ul></li></ul><h2 id="多重类型" tabindex="-1"><a class="header-anchor" href="#多重类型"><span>多重类型</span></a></h2><ul><li>itemType (node、socket、edge)</li><li>refType (socketType/handleType)</li><li>valueType (string、enum、color、……)</li></ul><p>值</p><ul><li>defaultValue (value)</li><li>cacheValue</li></ul>',18)]))}const s=l(n,[["render",a],["__file","NodeFlow驱动说明.html.vue"]]),u=JSON.parse('{"path":"/MdNote_Public/ProductDoc/Plugin/NodeFlow/docs/zh/NodeFlow%E9%A9%B1%E5%8A%A8%E8%AF%B4%E6%98%8E.html","title":"NodeFLow驱动说明","lang":"zh-CN","frontmatter":{"description":"NodeFLow驱动说明 （TODO 部分设计未实现） 节点流驱动分类，及选用策略 是否自动 自动运行 手动运行 这里选择手动运行。理由： 自动运行更适用于所有节点均耗时较少的情况，如简单的计算节点。而手动运行更适用于应对复杂和高耗时的任务 编辑过程中，会出现不完整代码、不完整url等。此时运行容易出错 手动运行也可以模拟自动运行，自动加一个定时器或监...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/ProductDoc/Plugin/NodeFlow/docs/zh/NodeFlow%E9%A9%B1%E5%8A%A8%E8%AF%B4%E6%98%8E.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"NodeFLow驱动说明"}],["meta",{"property":"og:description","content":"NodeFLow驱动说明 （TODO 部分设计未实现） 节点流驱动分类，及选用策略 是否自动 自动运行 手动运行 这里选择手动运行。理由： 自动运行更适用于所有节点均耗时较少的情况，如简单的计算节点。而手动运行更适用于应对复杂和高耗时的任务 编辑过程中，会出现不完整代码、不完整url等。此时运行容易出错 手动运行也可以模拟自动运行，自动加一个定时器或监..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NodeFLow驱动说明\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.8,"words":840},"filePathRelative":"MdNote_Public/ProductDoc/Plugin/NodeFlow/docs/zh/NodeFlow驱动说明.md","excerpt":"\\n<p>（TODO 部分设计未实现）</p>\\n<h2>节点流驱动分类，及选用策略</h2>\\n<h3>是否自动</h3>\\n<ul>\\n<li>自动运行</li>\\n<li><strong>手动运行</strong></li>\\n</ul>\\n<p>这里选择手动运行。理由：</p>\\n<ul>\\n<li>自动运行更适用于所有节点均耗时较少的情况，如简单的计算节点。而手动运行更适用于应对复杂和高耗时的任务</li>\\n<li>编辑过程中，会出现不完整代码、不完整url等。此时运行容易出错</li>\\n<li>手动运行也可以模拟自动运行，自动加一个定时器或监控变换的开始板机，就行了</li>\\n<li>仅显示版。最简单的版本是仅显示，得益于以 <code>节点项</code> 为中心的构建策略，用户可以无需编程自定义各种自定义节点，用于显示各种结构。这种节点流用于显示，并不要求运行和实现运行代码</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"01. Language/","link":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/LowCode/README.html"}],"localMap":{"nodes":[{"id":"MdNote_Public/ProductDoc/Plugin/NodeFlow/docs/zh/NodeFlow驱动说明.md","value":{"title":"NodeFlow驱动说明","path":"MdNote_Public/ProductDoc/Plugin/NodeFlow/docs/zh/NodeFlow驱动说明.md","outlink":[],"backlink":["MdNote_Public/01. DesignAndDevelop/Develop/01. Language/LowCode/README.md"]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/LowCode/README.md","value":{"title":"01. Language/","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/LowCode/README.md","outlink":[],"backlink":[]}}],"links":[{"source":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/LowCode/README.md","target":"MdNote_Public/ProductDoc/Plugin/NodeFlow/docs/zh/NodeFlow驱动说明.md"}]}}}');export{s as comp,u as data};
