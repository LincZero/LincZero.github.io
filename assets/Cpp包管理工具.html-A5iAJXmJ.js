import{_ as t,e as p,g as h,f as s,j as a,h as l,i as n,r as d,o as k}from"./app-DeGPQmv-.js";const o={};function r(c,i){const e=d("RouteLink");return k(),p("div",null,[i[4]||(i[4]=h(`<h1 id="cpp包管理工具" tabindex="-1"><a class="header-anchor" href="#cpp包管理工具"><span>Cpp包管理工具</span></a></h1><h2 id="原依赖" tabindex="-1"><a class="header-anchor" href="#原依赖"><span>原依赖</span></a></h2><p>C++在不使用包管理工具时，一般会去哪找标准包和扩展包？CMakeList.txt 中 <code>find_package(fmt CONFIG REQUIRED) </code> 又会去哪找？</p><ul><li>系统包管理器安装的库</li><li>CMAKE_PREFIX_PATH 环境变量：你可以通过设置 <code>CMAKE_PREFIX_PATH</code> 环境变量来指定 CMake 查找库的路径<br> 例如：<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">CMAKE_PREFIX_PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/path/to/fmt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>CMake 自带的模块路径：CMake 自带一些模块来查找常用的库，可以在 <code>/usr/share/cmake-&lt;version&gt;/Modules/</code> 下找到</li><li>手动指定路径：如果你知道库的具体安装路径，可以通过 <code>CMAKE_MODULE_PATH</code> 或者 <code>CMAKE_PREFIX_PATH</code> 手动指定。</li></ul><p>一些IDE软件安装时也会有对应的路径：</p><ul><li>VS：例如 <code>C:\\Program Files (x86)\\Microsoft Visual Studio\\&lt;version&gt;\\VC\\Tools\\MSVC\\&lt;version&gt;\\lib\\x64</code></li><li>CLion：例如 <code>C:\\MinGW\\lib</code> 或 <code>C:\\cygwin64\\lib</code></li><li>WSL：例如 <code>/usr/lib</code> 和 <code>/usr/local/lib</code></li></ul><h2 id="手动编译及管理" tabindex="-1"><a class="header-anchor" href="#手动编译及管理"><span>手动编译及管理</span></a></h2><p>以添加spdlog包为例：</p><h3 id="手动编译" tabindex="-1"><a class="header-anchor" href="#手动编译"><span>手动编译</span></a></h3><p>Linux</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/gabime/spdlog.git</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> spdlog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Windows</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/gabime/spdlog.git</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> spdlog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手动路径" tabindex="-1"><a class="header-anchor" href="#手动路径"><span>手动路径</span></a></h3><p>然后搜包路径改一下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这个是原来用vcpkg的写法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find_package(spdlog</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CONFIG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REQUIRED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 vcpkg 的清单模式时，\`find_package(spdlog CONFIG REQUIRED)\` 能够找到 \`spdlog\` 的原因在于 vcpkg 的工具链文件机制 (通过 -D-DCMAKE_TOOLCHAIN_FILE=../../vcpkg/scripts/buildsystems/vcpkg.cmake 找到，这个工具链文件会自动将vcpkg_installed目录添加到CMake的搜索路径中) 以及 CMake 的配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改成直接指定搜包路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find_package(spdlog</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CONFIG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REQUIRED</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATHS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PROJECT_SOURCE_DIR</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/libs/spdlog/build/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者添加该语句 (整体添加搜包路径)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">list(APPEND</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMAKE_PREFIX_PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PROJECT_SOURCE_DIR</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/libs/spdlog/build/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者添加该语句 (整体设置搜包路径)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">CMAKE_PREFIX_PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PROJECT_SOURCE_DIR</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/libs/spdlog/build/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局安装" tabindex="-1"><a class="header-anchor" href="#全局安装"><span>全局安装</span></a></h3><p>或者直接安装到默认寻找路径也行</p><p>linux</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装完成后，spdlog 的头文件和库文件会被安装到 /usr/local/include 和 /usr/local/lib 目录下。例如：</p><ul><li>头文件路径：<code>/usr/local/include/spdlog</code></li><li>库文件路径：<code>/usr/local/lib/libspdlog.so</code>（或 .a 文件）</li></ul><p>windows</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;C:\\Program Files\\spdlog&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="vcpkg" tabindex="-1"><a class="header-anchor" href="#vcpkg"><span>Vcpkg</span></a></h2>`,25)),s("p",null,[i[1]||(i[1]=a("详见 ")),l(e,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/03.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/03.%20%E5%BA%93%E6%88%96%E5%8C%85%E7%AE%A1%E7%90%86/BackEnd/Cpp%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Vcpkg.html"},{default:n(()=>i[0]||(i[0]=[a("Cpp包管理工具Vcpkg")])),_:1})]),i[5]||(i[5]=s("h2",{id:"find-package搜包语句",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#find-package搜包语句"},[s("span",null,"find_package搜包语句")])],-1)),i[6]||(i[6]=s("p",null,"无论前面哪种方式，都有一个非常重要的语句：搜包",-1)),s("p",null,[i[3]||(i[3]=a("详见 ")),l(e,{to:"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/03.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/03.%20%E5%BA%93%E6%88%96%E5%8C%85%E7%AE%A1%E7%90%86/BackEnd/Cpp%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7find_package.html"},{default:n(()=>i[2]||(i[2]=[a("Cpp包管理工具find_package")])),_:1})])])}const A=t(o,[["render",r],["__file","Cpp包管理工具.html.vue"]]),E=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/03.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/03.%20%E5%BA%93%E6%88%96%E5%8C%85%E7%AE%A1%E7%90%86/BackEnd/Cpp%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.html","title":"Cpp包管理工具","lang":"zh-CN","frontmatter":{"create_time":"2025-02-06T00:00:00.000Z","Author":"LincZero","description":"Cpp包管理工具 原依赖 C++在不使用包管理工具时，一般会去哪找标准包和扩展包？CMakeList.txt 中 find_package(fmt CONFIG REQUIRED) 又会去哪找？ 系统包管理器安装的库 CMAKE_PREFIX_PATH 环境变量：你可以通过设置 CMAKE_PREFIX_PATH 环境变量来指定 CMake 查找库的路...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/03.%20%E7%AE%A1%E7%90%86%E5%B1%82/03.%20%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/03.%20%E5%BA%93%E6%88%96%E5%8C%85%E7%AE%A1%E7%90%86/BackEnd/Cpp%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Cpp包管理工具"}],["meta",{"property":"og:description","content":"Cpp包管理工具 原依赖 C++在不使用包管理工具时，一般会去哪找标准包和扩展包？CMakeList.txt 中 find_package(fmt CONFIG REQUIRED) 又会去哪找？ 系统包管理器安装的库 CMAKE_PREFIX_PATH 环境变量：你可以通过设置 CMAKE_PREFIX_PATH 环境变量来指定 CMake 查找库的路..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cpp包管理工具\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.84,"words":553},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具.md","excerpt":"\\n<h2>原依赖</h2>\\n<p>C++在不使用包管理工具时，一般会去哪找标准包和扩展包？CMakeList.txt 中 <code>find_package(fmt CONFIG REQUIRED) </code> 又会去哪找？</p>\\n<ul>\\n<li>系统包管理器安装的库</li>\\n<li>CMAKE_PREFIX_PATH 环境变量：你可以通过设置 <code>CMAKE_PREFIX_PATH</code> 环境变量来指定 CMake 查找库的路径<br>\\n例如：<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">set</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\">CMAKE_PREFIX_PATH</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \\"/path/to/fmt\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>CMake 自带的模块路径：CMake 自带一些模块来查找常用的库，可以在 <code>/usr/share/cmake-&lt;version&gt;/Modules/</code> 下找到</li>\\n<li>手动指定路径：如果你知道库的具体安装路径，可以通过 <code>CMAKE_MODULE_PATH</code> 或者 <code>CMAKE_PREFIX_PATH</code> 手动指定。</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[{"title":"Cpp包管理工具Vcpkg","link":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具Vcpkg.html"},{"title":"Cpp包管理工具find_package","link":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具find_package.html"}],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具.md","value":{"title":"Cpp包管理工具","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具.md","outlink":["MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具Vcpkg.md","MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具find_package.md"],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具Vcpkg.md","value":{"title":"Cpp包管理工具Vcpkg","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具Vcpkg.md","outlink":[],"backlink":[]}},{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具find_package.md","value":{"title":"Cpp包管理工具find_package","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具find_package.md","outlink":[],"backlink":[]}}],"links":[{"source":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具Vcpkg.md"},{"source":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具.md","target":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/03. 多项目管理/03. 库或包管理/BackEnd/Cpp包管理工具find_package.md"}]}}}');export{A as comp,E as data};
