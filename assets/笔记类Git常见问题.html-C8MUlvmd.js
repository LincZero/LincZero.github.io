import{_ as s,e,g as a,o as t}from"./app-EuS-Ookm.js";const n={};function l(h,i){return t(),e("div",null,i[0]||(i[0]=[a(`<h1 id="笔记类git常见问题" tabindex="-1"><a class="header-anchor" href="#笔记类git常见问题"><span>笔记类Git常见问题</span></a></h1><h2 id="换行符" tabindex="-1"><a class="header-anchor" href="#换行符"><span>换行符</span></a></h2><p>这里指 <code>\\r</code> 和 <code>\\n\\r</code> 的问题</p><p>这个主要是我用obsidian会出现的问题。像typora编辑他不会去改动换行符，而obsidian会将你的旧笔记转成Linux换行符。这就会导致obsidian打开过的旧文件，有可能会被git检测到有更改</p><h2 id="编码" tabindex="-1"><a class="header-anchor" href="#编码"><span>编码</span></a></h2><p>略</p><h2 id="文件名大小写" tabindex="-1"><a class="header-anchor" href="#文件名大小写"><span>文件名大小写</span></a></h2><p>默认情况下，Linux中Git对文件名大小写敏感，而Windows中Git对文件名大小写不敏感的问题</p><p>解决方案：</p><p>https://blog.csdn.net/weixin_44814196/article/details/135834224 这里有几种解决方法</p><h3 id="配置方法" tabindex="-1"><a class="header-anchor" href="#配置方法"><span><s>配置方法</s></span></a></h3><p>这里我仅举例配置的方式：</p><p>关闭git 忽略大小写配置 （可以当前项目设置，也可以全局设置 --global）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core.ignorecase</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 查看当前配置，不出意外，返回true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core.ignorecase</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 修改配置，关闭 git 忽略大小写配置</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git命令重命名" tabindex="-1"><a class="header-anchor" href="#git命令重命名"><span>git命令重命名</span></a></h3><p>后来发现上面的配置方式会有一个问题：只有被重命名的文件夹及里面的文件是增加的，而非被移动的</p><p>我们可以用git命令来重命名</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Folder</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> folder.tmp</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> folder.tmp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> folder</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或强制重命名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OldFile.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> newfile.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18)]))}const d=s(n,[["render",l],["__file","笔记类Git常见问题.html.vue"]]),o=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/03.%20%E7%AE%A1%E7%90%86%E5%B1%82/05.%20%E5%88%86%E5%8F%91%E7%AE%A1%E7%90%86/%E7%89%88%E6%9C%AC%E4%B8%8E%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/Git/%E7%AC%94%E8%AE%B0%E7%B1%BBGit%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html","title":"笔记类Git常见问题","lang":"zh-CN","frontmatter":{"description":"笔记类Git常见问题 换行符 这里指 \\\\r 和 \\\\n\\\\r 的问题 这个主要是我用obsidian会出现的问题。像typora编辑他不会去改动换行符，而obsidian会将你的旧笔记转成Linux换行符。这就会导致obsidian打开过的旧文件，有可能会被git检测到有更改 编码 略 文件名大小写 默认情况下，Linux中Git对文件名大小写敏感，而Wi...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/03.%20%E7%AE%A1%E7%90%86%E5%B1%82/05.%20%E5%88%86%E5%8F%91%E7%AE%A1%E7%90%86/%E7%89%88%E6%9C%AC%E4%B8%8E%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/Git/%E7%AC%94%E8%AE%B0%E7%B1%BBGit%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"笔记类Git常见问题"}],["meta",{"property":"og:description","content":"笔记类Git常见问题 换行符 这里指 \\\\r 和 \\\\n\\\\r 的问题 这个主要是我用obsidian会出现的问题。像typora编辑他不会去改动换行符，而obsidian会将你的旧笔记转成Linux换行符。这就会导致obsidian打开过的旧文件，有可能会被git检测到有更改 编码 略 文件名大小写 默认情况下，Linux中Git对文件名大小写敏感，而Wi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"笔记类Git常见问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.01,"words":303},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/05. 分发管理/版本与分支管理/Git/笔记类Git常见问题.md","excerpt":"\\n<h2>换行符</h2>\\n<p>这里指 <code>\\\\r</code> 和 <code>\\\\n\\\\r</code> 的问题</p>\\n<p>这个主要是我用obsidian会出现的问题。像typora编辑他不会去改动换行符，而obsidian会将你的旧笔记转成Linux换行符。这就会导致obsidian打开过的旧文件，有可能会被git检测到有更改</p>\\n<h2>编码</h2>\\n<p>略</p>\\n<h2>文件名大小写</h2>\\n<p>默认情况下，Linux中Git对文件名大小写敏感，而Windows中Git对文件名大小写不敏感的问题</p>\\n<p>解决方案：</p>\\n<p>https://blog.csdn.net/weixin_44814196/article/details/135834224 这里有几种解决方法</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/05. 分发管理/版本与分支管理/Git/笔记类Git常见问题.md","value":{"title":"笔记类Git常见问题","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/03. 管理层/05. 分发管理/版本与分支管理/Git/笔记类Git常见问题.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,o as data};
