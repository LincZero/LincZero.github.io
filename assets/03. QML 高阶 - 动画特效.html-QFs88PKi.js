import{_ as n,c as l,e as s,b as t,o as e,r as h}from"./app-7Hf1q1UN.js";const k={};function p(r,i){const a=h("Mermaid");return e(),l("div",null,[i[0]||(i[0]=s('<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>Qt</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="qml-动画特效" tabindex="-1"><a class="header-anchor" href="#qml-动画特效"><span>QML 动画特效</span></a></h1><h2 id="qml-动画元素" tabindex="-1"><a class="header-anchor" href="#qml-动画元素"><span>QML 动画元素</span></a></h2><h3 id="animation-动画元素" tabindex="-1"><a class="header-anchor" href="#animation-动画元素"><span>Animation 动画元素</span></a></h3><p>Animation，无法直接创建对象，为动画元素提供通用的属性和方法</p><ul><li>running</li><li>start()，控制动画开始</li><li>stop()，控制动画停止</li><li>loops，动画循环次数</li></ul><p>继承树，其中大多数动画元素继承自PropertyAnimation</p>',8)),t(a,{id:"mermaid-43",code:"eJxLL0osyFAIceKKiHbMy8xNLMnMz4vV1bWLjA4oyi9ILSqpRAhzcUYCZfxKc5NSi+Ciunq6T3bserpu3rOpG55O6nk2dQuQ8Xxt57P+CU/2zX42e8vTpXuBss/7NkC0O+fn5CN0Q8SC8kvAPDThsNTkkvwi4xQ0u57PX/Syvd/YBYsNEUBdENX5RVwAEM9jGg=="}),i[1]||(i[1]=s(`<h3 id="propertyanimation-属性动画元素" tabindex="-1"><a class="header-anchor" href="#propertyanimation-属性动画元素"><span>PropertyAnimation 属性动画元素</span></a></h3><p>PropertyAnimation 属性动画元素，继承于Animation</p><p>可以用作动画的属性</p><ul><li>real</li><li>int</li><li>color</li><li>rect</li><li>point</li><li>size</li><li>vector3d</li></ul><p>四种使用方式</p><ul><li>作为属性值的来源</li><li>在信号处理器中创建一个动画元素</li><li>独立创建一个动画元素</li><li>在属性值改变的行为中创建</li></ul><h4 id="作为属性值的来源" tabindex="-1"><a class="header-anchor" href="#作为属性值的来源"><span>作为属性值的来源</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Rectangle{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    height:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    color:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;orange&quot;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    PropertyAnimation</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> on</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{             </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 【动画被应用为属性来源】</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                         // 起点</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        to:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">500</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                          // 终点</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        duration:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2000</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                   // 运动时间2s</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        loops:Animation.Infinite</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 循环无限次</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        easing.type:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> Easing.OutBounce</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   // 运动曲线 - 反弹</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在信号处理器中创建" tabindex="-1"><a class="header-anchor" href="#在信号处理器中创建"><span>在信号处理器中创建</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Rectangle{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">rect</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    width:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    height:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    color:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lightgreen&quot;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    MouseArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        anchors.fill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">parent</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        onClicked:PropertyAnimation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 【信号处理器中创建一个动画元素】</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">rect</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               // 作用目标</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            property:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;y&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                // 作用属性</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            from:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                     // 起点</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            to:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">400</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                      // 终点</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            duration:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               // 运动时间1s</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            loops:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                     // 循环3次</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            easing.type:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> Easing.Linear</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 运动曲线 - 线性</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="作为独立动画元素" tabindex="-1"><a class="header-anchor" href="#作为独立动画元素"><span>作为独立动画元素</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Rectangle{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">rect</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    width:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    height:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    color:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;aqua&quot;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    PropertyAnimation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{                  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 【独立的动画元素】</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">animation</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        target:rect</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                    // 作用目标</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        properties:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;x,y&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                // 作用属性</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        duration:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                   // 运动时间1s</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        easing.type:Easing.InOutBack</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 运动曲线 - 两边反弹</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    MouseArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        anchors.fill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">parent</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        onClicked:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            animation.from</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> =</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> 20</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         // 起点</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            animation.to</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> =</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> 200</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // 终点</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            animation.running</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> =</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> true</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 开启动画</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在属性值改变的行为中创建" tabindex="-1"><a class="header-anchor" href="#在属性值改变的行为中创建"><span>在属性值改变的行为中创建</span></a></h4><p>如果被绑定的属性还绑定到其他属性上，那么这些 属性改变时也都会触发动画</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MouseArea{                              </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 需要注意qml后声明元素会覆盖前声明元素，包括点击区域</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">mouseArea</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    anchors.fill:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> parent</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    onClicked:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        rect4.x=mouseArea.mouseX</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        rect4.y=mouseArea.mouseY</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Rectangle{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">rect</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    width:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    height:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    color:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lightblue&quot;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    Behavior</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> on</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{                      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 【定义x属性上的行为动画】</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        PropertyAnimation{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               // 运动时间1s</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            easing.type:Easing.InQuart</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 运动曲线 - 加速</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Behavior on y{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">        PropertyAnimation{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">            easing.type:Easing.InQuart</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他动画元素" tabindex="-1"><a class="header-anchor" href="#其他动画元素"><span>其他动画元素</span></a></h3><p>大多数动画元素继承自PropertyAnimation</p><ul><li>NumberAnimation，为实数和整数等提供更好实现</li><li>ColorAnimation</li><li>RotationAnimation</li><li>Vector3dAnimation，为矢量3D提供更好实现</li></ul><h3 id="animator-元素" tabindex="-1"><a class="header-anchor" href="#animator-元素"><span>Animator 元素</span></a></h3><h2 id="动画流ui界面" tabindex="-1"><a class="header-anchor" href="#动画流ui界面"><span>动画流UI界面</span></a></h2><h3 id="状态和切换" tabindex="-1"><a class="header-anchor" href="#状态和切换"><span>状态和切换</span></a></h3><h3 id="设计组合动画" tabindex="-1"><a class="header-anchor" href="#设计组合动画"><span>设计组合动画</span></a></h3><h2 id="图像特效" tabindex="-1"><a class="header-anchor" href="#图像特效"><span>图像特效</span></a></h2><h3 id="_3d旋转" tabindex="-1"><a class="header-anchor" href="#_3d旋转"><span>3D旋转</span></a></h3><h3 id="色彩处理" tabindex="-1"><a class="header-anchor" href="#色彩处理"><span>色彩处理</span></a></h3><h2 id="qt5-5-qt-quick-extras-1-4-新增饼状菜单" tabindex="-1"><a class="header-anchor" href="#qt5-5-qt-quick-extras-1-4-新增饼状菜单"><span>Qt5.5（Qt Quick Extras 1.4）新增饼状菜单</span></a></h2>`,26))])}const F=n(k,[["render",p],["__file","03. QML 高阶 - 动画特效.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/02.%20QtQuick/01.%20QML/03.%20QML%20%E9%AB%98%E9%98%B6%20-%20%E5%8A%A8%E7%94%BB%E7%89%B9%E6%95%88.html","title":"Qt","lang":"zh-CN","frontmatter":{"description":"Qt 目录 QML 动画特效 QML 动画元素 Animation 动画元素 Animation，无法直接创建对象，为动画元素提供通用的属性和方法 running start()，控制动画开始 stop()，控制动画停止 loops，动画循环次数 继承树，其中大多数动画元素继承自PropertyAnimation PropertyAnimation 属...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/02.%20QtQuick/01.%20QML/03.%20QML%20%E9%AB%98%E9%98%B6%20-%20%E5%8A%A8%E7%94%BB%E7%89%B9%E6%95%88.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Qt"}],["meta",{"property":"og:description","content":"Qt 目录 QML 动画特效 QML 动画元素 Animation 动画元素 Animation，无法直接创建对象，为动画元素提供通用的属性和方法 running start()，控制动画开始 stop()，控制动画停止 loops，动画循环次数 继承树，其中大多数动画元素继承自PropertyAnimation PropertyAnimation 属..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Qt","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"QML 动画特效","slug":"qml-动画特效","link":"#qml-动画特效","children":[{"level":2,"title":"QML 动画元素","slug":"qml-动画元素","link":"#qml-动画元素","children":[{"level":3,"title":"Animation  动画元素","slug":"animation-动画元素","link":"#animation-动画元素","children":[]},{"level":3,"title":"PropertyAnimation  属性动画元素","slug":"propertyanimation-属性动画元素","link":"#propertyanimation-属性动画元素","children":[{"level":4,"title":"作为属性值的来源","slug":"作为属性值的来源","link":"#作为属性值的来源","children":[]},{"level":4,"title":"在信号处理器中创建","slug":"在信号处理器中创建","link":"#在信号处理器中创建","children":[]},{"level":4,"title":"作为独立动画元素","slug":"作为独立动画元素","link":"#作为独立动画元素","children":[]},{"level":4,"title":"在属性值改变的行为中创建","slug":"在属性值改变的行为中创建","link":"#在属性值改变的行为中创建","children":[]}]},{"level":3,"title":"其他动画元素","slug":"其他动画元素","link":"#其他动画元素","children":[]},{"level":3,"title":"Animator 元素","slug":"animator-元素","link":"#animator-元素","children":[]}]},{"level":2,"title":"动画流UI界面","slug":"动画流ui界面","link":"#动画流ui界面","children":[{"level":3,"title":"状态和切换","slug":"状态和切换","link":"#状态和切换","children":[]},{"level":3,"title":"设计组合动画","slug":"设计组合动画","link":"#设计组合动画","children":[]}]},{"level":2,"title":"图像特效","slug":"图像特效","link":"#图像特效","children":[{"level":3,"title":"3D旋转","slug":"_3d旋转","link":"#_3d旋转","children":[]},{"level":3,"title":"色彩处理","slug":"色彩处理","link":"#色彩处理","children":[]}]},{"level":2,"title":"Qt5.5（Qt Quick Extras 1.4）新增饼状菜单","slug":"qt5-5-qt-quick-extras-1-4-新增饼状菜单","link":"#qt5-5-qt-quick-extras-1-4-新增饼状菜单","children":[]}]}],"git":{},"readingTime":{"minutes":2.2,"words":660},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/02. QtQuick/01. QML/03. QML 高阶 - 动画特效.md","excerpt":"\\n<h1>目录</h1>\\n<h1>QML 动画特效</h1>\\n<h2>QML 动画元素</h2>\\n<h3>Animation  动画元素</h3>\\n<p>Animation，无法直接创建对象，为动画元素提供通用的属性和方法</p>\\n<ul>\\n<li>running</li>\\n<li>start()，控制动画开始</li>\\n<li>stop()，控制动画停止</li>\\n<li>loops，动画循环次数</li>\\n</ul>\\n<p>继承树，其中大多数动画元素继承自PropertyAnimation</p>\\n<h3>PropertyAnimation  属性动画元素</h3>\\n<p>PropertyAnimation 属性动画元素，继承于Animation</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/02. QtQuick/01. QML/03. QML 高阶 - 动画特效.md","value":{"title":"03. QML 高阶 - 动画特效","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/02. QtQuick/01. QML/03. QML 高阶 - 动画特效.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{F as comp,c as data};
