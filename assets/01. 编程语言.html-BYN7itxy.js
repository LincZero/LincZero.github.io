import{_ as t,c as o,e as i,a,b as n,d as e,o as r,r as p}from"./app-DEbg6qWK.js";const d="/assets/02020-CjwOeu3r.jpeg",c={},u={href:"https://docs.oracle.com/javase/8/docs/api",target:"_blank",rel:"noopener noreferrer"},v={href:"http://docs.oracle.com/javase/specs",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.bilibili.com/video/BV17F411T7Ao",target:"_blank",rel:"noopener noreferrer"};function m(k,l){const s=p("ExternalLinkIcon");return r(),o("div",null,[l[8]||(l[8]=i('<h1 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="编程语言" tabindex="-1"><a class="header-anchor" href="#编程语言"><span>编程语言</span></a></h1><h2 id="学习资料、查阅文档" tabindex="-1"><a class="header-anchor" href="#学习资料、查阅文档"><span>学习资料、查阅文档</span></a></h2><h3 id="进度笔记" tabindex="-1"><a class="header-anchor" href="#进度笔记"><span>进度笔记</span></a></h3><ul><li>《Java 核心编程 卷1 基础知识（原书第10版）》，看的电子版 <ul><li>P57 - 7.1start</li><li>略读：5.7.5、5.7.6、6.4 内部类、6.5 代理</li><li>粗读第一章大纲 <ul><li>7 异常、断言、日志</li><li>8 泛型程序设计</li><li>9 集合</li><li><s>10 图形程序设计 - Swing</s>（公孙二狗好像叫我别看来着）</li><li><s>11 事件处理 - Awt</s>（公孙二狗好像叫我别看来着）</li><li><s>12 Swing用户界面组件</s></li><li><s>13 部署Java应用程序</s></li><li>14 并发</li></ul></li><li>粗读第二章大纲 <ul><li>流与文件。文本、二进制、ZIP、对象流和序列化、内存映射</li><li>XML</li><li>网络</li><li>数据库编程</li><li>国际化</li><li><s>高级Swing</s></li><li><s>高级AWT</s></li><li>JavaBean构件</li><li>安全</li><li>脚本、编译与注解处理</li><li>分布式对象。客户与服务器</li><li>本地方法。调用C函数、访问Windows注册表</li></ul></li></ul></li></ul><h3 id="在线api文档" tabindex="-1"><a class="header-anchor" href="#在线api文档"><span>在线API文档</span></a></h3>',7)),a("ul",null,[a("li",null,[a("a",u,[l[0]||(l[0]=n("Oracle官网_Java_API文档 (https://docs.oracle.com/javase/8/docs/api)")),e(s)]),l[1]||(l[1]=a("ul",null,[a("li",null,"使用方法：API文档的三个窗格"),a("li",null,"左上方显示了可使用的所有包，选择后对左下方的类进行一个筛选"),a("li",null,"左下方显示了所有类，选择后右侧的文档进行该类的文档显示"),a("li",null,[n("右侧显示选择类的文档，再点击里面的方法可以看到更详细的信息 "),a("ul",null,[a("li",null,"下面Method Summary的筛选Tab分别为：全部方法、静态方法、实例方法、具体方法、弃用方法")])])],-1))]),a("li",null,[a("a",v,[l[2]||(l[2]=n("Oracle官网 Java语言规范")),e(s)])]),l[3]||(l[3]=a("li",null,"Oracle官网的内容都是全英，有各种Packages",-1)),l[4]||(l[4]=a("li",null,[n("API和API帮助文档（离线） "),a("ul",null,[a("li",null,"JDK_API_1_6_zh_CN.CHM（注意这个是机翻）"),a("li",null,"常用API：太多不举例了，java.io、java.lang 等"),a("li",null,'一般使用方法：通过索引搜索关键词，例如 “Random"')])],-1))]),l[9]||(l[9]=i('<h3 id="学习路线" tabindex="-1"><a class="header-anchor" href="#学习路线"><span>学习路线</span></a></h3><p>By 与公孙二狗的聊天记录</p><blockquote><p>Q：学java先学什么框架？spring？我以前倒是折腾过android</p><p>A：J2SE -&gt; Spring -&gt; Spring Boot，同时看看数据库、消息中间件、缓存 Redis 之类的。还有一个 MyBatis</p><p>Q：java圣经是哪本</p><p>A：《Java 核心编程》，不要看里面的 Ui 编程部分 (Swing, Awt)。《Java 编程思想》我觉得不好</p></blockquote><h3 id="学习资料" tabindex="-1"><a class="header-anchor" href="#学习资料"><span>学习资料</span></a></h3><h4 id="视频" tabindex="-1"><a class="header-anchor" href="#视频"><span>视频</span></a></h4><p>（我主要跟书学，视频主要用来跳着看点理解不了的东西、查漏补缺。但这个视频确实很可以，可以当主要参考，很细）</p>',6)),a("ul",null,[a("li",null,[a("a",h,[l[5]||(l[5]=n("【Bilibili】黑马程序员Java零基础视频教程")),e(s)]),l[6]||(l[6]=n("，")),l[7]||(l[7]=a("mark",null,[a("strong",null,"这个视频PPT的MG动画非常赞，还有内存图分析，很细")],-1))])]),l[10]||(l[10]=i('<h4 id="学习书籍" tabindex="-1"><a class="header-anchor" href="#学习书籍"><span>学习书籍</span></a></h4><ul><li>《Java 核心编程 卷1 基础知识（原书第10版）》（主要参考） <ul><li>第10版2016年出版。针对Java 8打造，有了大幅的修订和更新，以反映Java 8增补、删改的内容</li><li>第11版2019年出版</li></ul></li><li>《Java 编程思想》</li></ul><blockquote><p>《Java 核心编程 卷1 基础知识（原书第10版）》目录大章</p><ol><li>Java程序设计概述</li><li>Java程序设计环境</li><li>Java的基本程序设计结构</li><li>对象与类</li><li>继承</li><li>接口、lambda表达式与内部类</li><li>异常、断言和日志</li><li>泛型程序设计</li><li>集合</li><li>图形程序设计</li><li>事件处理</li><li>Swing用户界面实践</li><li>部署Java应用程序</li><li>并发</li><li></li></ol></blockquote><h2 id="语言风格、书写风格" tabindex="-1"><a class="header-anchor" href="#语言风格、书写风格"><span>语言风格、书写风格</span></a></h2><h2 id="语言简介、特点、简史" tabindex="-1"><a class="header-anchor" href="#语言简介、特点、简史"><span>语言简介、特点、简史</span></a></h2><h3 id="简史" tabindex="-1"><a class="header-anchor" href="#简史"><span>简史</span></a></h3><ul><li>1991年：由Patrick Naughton和James Gosling（一个全能的计算机奇才）带领的Sun公司的工程师小组想要设计一种小型的计算机语言。这个项目被命名为“Green”。</li><li>1992年：Green项目发布了它的第一个产品，称之为“*7”</li><li>1996年年初，Sun发布了Java的第1个版本。</li><li>1998年JavaOne会议的头号新闻是即将发布Java 1.2版。</li><li>2004：5.0版是自1.1版以来第一个对Java语言做出重大改进的版本（这一版本原来被命名为1.5版，在2004年的JavaOne会议之后，版本数字升至5.0）。经历了多年的研究，这个版本添加了泛型类型（generic type）（类似于C++的模板），其挑战性在于添加这一特性并没有对虚拟机做出任何修改。</li><li>2006年12月：从Sun公司发布Java 6。版本6（没有后缀.0）于2006年年末发布。同样，这个版本没有对语言方面再进行改进。但是，改进了其他性能，并增强了类库。</li><li>2009年：Sun被Oracle公司收购</li><li>2011年7月底：Oracle发布了Java 7正式版，其中只做了一些简单的改进</li><li>2014年：Oracle终于发布了Java 8的正式版，在近20年中这个版本有了最大的改变。Java 8提供了一种“函数式”编程方式</li></ul><p><img src="'+d+`" alt="img" loading="lazy"></p><h2 id="语言标准、新增特性、版本变迁" tabindex="-1"><a class="header-anchor" href="#语言标准、新增特性、版本变迁"><span>语言标准、新增特性、版本变迁</span></a></h2><h3 id="java白皮书" tabindex="-1"><a class="header-anchor" href="#java白皮书"><span>Java白皮书</span></a></h3><p>白皮书可以在www.oracle.com/technetwork/java/langenv-140151.html上找到</p><p>对于11个关键术语的论述请参看http://horstmann.com/corejava/java-an-overview/7Gosling.pdf</p><p>Java的设计者已经编写了颇有影响力的“白皮书”，用来解释设计的初衷以及完成的情况，并且发布了一个简短的摘要。这个摘要用下面11个关键术语进行组织：</p><blockquote><table><thead><tr><th>简单性</th><th>易学且小</th></tr></thead><tbody><tr><td>面向对象</td><td>（不解释）</td></tr><tr><td>分布式</td><td>Java应用程序能够通过URL打开和访问网络上的对象，其便捷程度就好像访问本地文件一样</td></tr><tr><td>健壮性</td><td><mark>与C++不同</mark>：最大的不同在于Java采用的指针模型可以消除重写内存和损坏数据的可能性</td></tr><tr><td>安全性</td><td>虚拟机。Java适用于网络/分布式环境。为了达到这个目标，在安全方面投入了很大精力。使用Java可以构建防病毒、防篡改的系统</td></tr><tr><td>体系结构中立</td><td>虚拟机。编译器生成一个体系结构中立的目标文件格式，这是一种编译过的代码，只要有Java运行时系统，这些编译后的代码可以在许多处理器上运行。</td></tr><tr><td>可移植性</td><td><mark>与C和C++不同</mark>：Java规范中没有“依赖具体实现”的地方。基本数据类型的大小以及有关运算都做了明确的说明</td></tr><tr><td>解释型</td><td>Java解释器可以在任何移植了解释器的机器上执行Java字节码</td></tr><tr><td>高性能</td><td>即时编译器。字节码可以（在运行时刻）动态地翻译成对应运行这个应用的特定CPU的机器码</td></tr><tr><td>多线程</td><td>（不解释）</td></tr><tr><td>动态性</td><td>（不解释）</td></tr></tbody></table></blockquote><h3 id="java语言规范" tabindex="-1"><a class="header-anchor" href="#java语言规范"><span>Java语言规范</span></a></h3><p>Java语言规范是描述Java语言的官方文档。可以从网站http://docs.oracle.com/javase/specs上阅读或下载</p><p>例如：根据Java语言规范，main方法<strong>必须</strong>声明为public</p><h3 id="版本问题" tabindex="-1"><a class="header-anchor" href="#版本问题"><span>版本问题</span></a></h3><p>三大使用平台</p><ul><li>Java SE <ul><li>Java语言的<strong>标准版</strong>，用于桌面应用的开发，是其他两个版本的基础</li><li>但是Java的桌面应用不占优势，速度不够快</li><li>学习目的：不是为了开发桌面应用，而是为Java EE打基础</li></ul></li><li>Java ME <ul><li>Java语言的<strong>小型版</strong>，用于嵌入式电子设备或者小型移动设备</li><li>以前诺基亚的大班开机时会有Java的图标，就是用Java开发的。当然现在的Java也能开发安卓、鸿蒙等系统的软件</li></ul></li><li>Java EE <ul><li>Java语言的<strong>企业版</strong>，用于Web方向的网站开发</li><li>在服务器领域，Java是最强的</li></ul></li></ul><p>Java的六大应用、与开发产品</p><ul><li>桌面应用开发。例如：各种管理软件、IDEA、Cline、PyCharm</li><li>企业级应用开发（服务器）。例如：微服务、Springcloud</li><li>移动应用开发。例如：鸿蒙、Android、医疗设备</li><li>科学计算。例如：Matlab</li><li>大数据开发。例如：Hadoop</li><li>游戏开发。例如：Minecraft</li></ul><h2 id="helloworld、基础知识" tabindex="-1"><a class="header-anchor" href="#helloworld、基础知识"><span>HelloWorld、基础知识</span></a></h2><h3 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h3><h4 id="helloworld" tabindex="-1"><a class="header-anchor" href="#helloworld"><span>HelloWorld</span></a></h4><p>FirstSample.java</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstSample</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> 						<span class="token comment">// 可以打psvm+tab来自动生成。公共类的main方法</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;We will not use &#39;Hello, World!&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 可以打soun+tab来自动生成</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详解版</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 文件名：源代码的文件名必须与公共类的名字相同，并用.java作为扩展名。因此，存储这段源代码的文件名必须为FirstSample.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstSample</span>
<span class="token comment">// public关键字: 访问修饰符（access modifier）：这些修饰符用于控制程序的其他部分对这段代码的访问级别</span>
<span class="token comment">// class关键字：表明Java程序中的全部内容都包含在类中，类是构建所有Java应用程序和applet的构建块。Java应用程序中的全部内容都必须放置在类中。</span>
<span class="token comment">// 类名：必须字母开头，后面跟字母和数字的任意组合，一般Java类名使用大驼峰法</span>
<span class="token punctuation">{</span>	<span class="token comment">// 块</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
    <span class="token comment">// public: 根据Java语言规范，main方法必须声明为public</span>
    <span class="token comment">// static void: （暂时不理会）</span>
    <span class="token comment">// main: 入口函数，java工具执行编译后的java代码时会从main函数开始</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;We will not use &#39;Hello, World!&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 使用了System.out对象并调用了它的println方法</span>
        <span class="token comment">// System.out.print则不换行</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h4><p>和C的注释方法一样：</p><ul><li><p><code>//</code> 单行注释</p></li><li><p><code>/**/</code> 多行注释</p></li><li><p>文档注释：可以用来自动地生成文档</p></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * This program displays a greeting for the reader.
 * <span class="token keyword">@version</span> 1.30 2014-02-27										版本
 * <span class="token keyword">@author</span> Cay Horstmann										作者
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33))])}const b=t(c,[["render",m],["__file","01. 编程语言.html.vue"]]),J=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Java/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.html","title":"Java","lang":"zh-CN","frontmatter":{"description":"Java 目录 编程语言 学习资料、查阅文档 进度笔记 《Java 核心编程 卷1 基础知识（原书第10版）》，看的电子版 P57 - 7.1start 略读：5.7.5、5.7.6、6.4 内部类、6.5 代理 粗读第一章大纲 7 异常、断言、日志 8 泛型程序设计 9 集合 （公孙二狗好像叫我别看来着） （公孙二狗好像叫我别看来着） 14 并发 粗...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Java/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Java"}],["meta",{"property":"og:description","content":"Java 目录 编程语言 学习资料、查阅文档 进度笔记 《Java 核心编程 卷1 基础知识（原书第10版）》，看的电子版 P57 - 7.1start 略读：5.7.5、5.7.6、6.4 内部类、6.5 代理 粗读第一章大纲 7 异常、断言、日志 8 泛型程序设计 9 集合 （公孙二狗好像叫我别看来着） （公孙二狗好像叫我别看来着） 14 并发 粗..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Java","slug":"java","link":"#java","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"编程语言","slug":"编程语言","link":"#编程语言","children":[{"level":2,"title":"学习资料、查阅文档","slug":"学习资料、查阅文档","link":"#学习资料、查阅文档","children":[{"level":3,"title":"进度笔记","slug":"进度笔记","link":"#进度笔记","children":[]},{"level":3,"title":"在线API文档","slug":"在线api文档","link":"#在线api文档","children":[]},{"level":3,"title":"学习路线","slug":"学习路线","link":"#学习路线","children":[]},{"level":3,"title":"学习资料","slug":"学习资料","link":"#学习资料","children":[{"level":4,"title":"视频","slug":"视频","link":"#视频","children":[]},{"level":4,"title":"学习书籍","slug":"学习书籍","link":"#学习书籍","children":[]}]}]},{"level":2,"title":"语言风格、书写风格","slug":"语言风格、书写风格","link":"#语言风格、书写风格","children":[]},{"level":2,"title":"语言简介、特点、简史","slug":"语言简介、特点、简史","link":"#语言简介、特点、简史","children":[{"level":3,"title":"简史","slug":"简史","link":"#简史","children":[]}]},{"level":2,"title":"语言标准、新增特性、版本变迁","slug":"语言标准、新增特性、版本变迁","link":"#语言标准、新增特性、版本变迁","children":[{"level":3,"title":"Java白皮书","slug":"java白皮书","link":"#java白皮书","children":[]},{"level":3,"title":"Java语言规范","slug":"java语言规范","link":"#java语言规范","children":[]},{"level":3,"title":"版本问题","slug":"版本问题","link":"#版本问题","children":[]}]},{"level":2,"title":"HelloWorld、基础知识","slug":"helloworld、基础知识","link":"#helloworld、基础知识","children":[{"level":3,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[{"level":4,"title":"HelloWorld","slug":"helloworld","link":"#helloworld","children":[]},{"level":4,"title":"注释","slug":"注释","link":"#注释","children":[]}]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":7.77,"words":2330},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Java/01. 编程语言/01. 编程语言.md","excerpt":"\\n<h1>目录</h1>\\n<h1>编程语言</h1>\\n<h2>学习资料、查阅文档</h2>\\n<h3>进度笔记</h3>\\n<ul>\\n<li>《Java 核心编程 卷1 基础知识（原书第10版）》，看的电子版\\n<ul>\\n<li>P57 - 7.1start</li>\\n<li>略读：5.7.5、5.7.6、6.4 内部类、6.5 代理</li>\\n<li>粗读第一章大纲\\n<ul>\\n<li>7 异常、断言、日志</li>\\n<li>8 泛型程序设计</li>\\n<li>9 集合</li>\\n<li><s>10 图形程序设计 - Swing</s>（公孙二狗好像叫我别看来着）</li>\\n<li><s>11 事件处理 - Awt</s>（公孙二狗好像叫我别看来着）</li>\\n<li><s>12 Swing用户界面组件</s></li>\\n<li><s>13 部署Java应用程序</s></li>\\n<li>14 并发</li>\\n</ul>\\n</li>\\n<li>粗读第二章大纲\\n<ul>\\n<li>流与文件。文本、二进制、ZIP、对象流和序列化、内存映射</li>\\n<li>XML</li>\\n<li>网络</li>\\n<li>数据库编程</li>\\n<li>国际化</li>\\n<li><s>高级Swing</s></li>\\n<li><s>高级AWT</s></li>\\n<li>JavaBean构件</li>\\n<li>安全</li>\\n<li>脚本、编译与注解处理</li>\\n<li>分布式对象。客户与服务器</li>\\n<li>本地方法。调用C函数、访问Windows注册表</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{b as comp,J as data};
