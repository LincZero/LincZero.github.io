import{_ as i,e as t,g as e,o as a}from"./app-EuS-Ookm.js";const d="/assets/image-20210126101426385-Ds7Ewgg5.png",r="/assets/image-20210126101533126-gYKhyk_N.png",p={};function s(n,l){return a(),t("div",null,l[0]||(l[0]=[e('<h1 id="fiddler-旧版" tabindex="-1"><a class="header-anchor" href="#fiddler-旧版"><span>Fiddler（旧版）</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="fiddler" tabindex="-1"><a class="header-anchor" href="#fiddler"><span>Fiddler</span></a></h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>简概</p><ul><li>Fiddler是位于客户端和服务器端的HTTP代理</li><li>目前最常用的http抓包工具之一</li><li>功能非常强大，是web调试的利器 <ul><li>监控浏览器所有的HTTP/HTTPS流量</li><li>查看、分析请求内容细节</li><li>伪造客户端请求和服务器响应</li><li>测试网站的性能</li><li>解密HTTPS的web会话</li><li>全局、局部断点功能</li><li>第三方插件</li></ul></li><li>使用场景 <ul><li>接口调试、接口测试、线上环境调式、web性能分析</li><li>判断前后端bug、开发环境hosts配置、mock、弱网断网测试</li></ul></li></ul><h2 id="软件安装" tabindex="-1"><a class="header-anchor" href="#软件安装"><span>软件安装</span></a></h2><ul><li><p>旧版</p><ul><li>下旧版的好处：有汉化，不强制安装在C盘，使用前无需登录，网络资源暂时比较多</li></ul></li><li><p>新版</p><ul><li><p>和旧版的界面区别有点大</p></li><li><p>官网下就好，不过强制安装在C盘了</p></li><li><p>免费，另有付费版，但使用前都需要登录（可使用谷歌账号）</p></li></ul></li></ul><h1 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点"><span>知识点</span></a></h1><h2 id="b-s架构" tabindex="-1"><a class="header-anchor" href="#b-s架构"><span>B/S架构</span></a></h2><p>Web Client（Browsers）——————HTTP Server</p><h2 id="fiddler原理" tabindex="-1"><a class="header-anchor" href="#fiddler原理"><span>Fiddler原理</span></a></h2><p>简概</p><ul><li><p>监听原理：软件启动时设置了系统代理，而浏览器读的就是系统代理</p></li><li><p>浏览器使用的系统代理</p><ul><li><p>火狐浏览器 &gt; 选项 &gt; 常规 &gt; 网络设置 &gt; 设置 &gt; 配置访问互联网的代理服务器 &gt; 默认选项为使用系统代理设置</p></li><li><p>谷歌浏览器 &gt; 设置 &gt; 高级 &gt; 系统 &gt; 打开您计算机的代理设置</p><p>（话说我这里为了看B站港澳台，这里显示的是 “chrome使用的是由某款扩展程序制定的代理设置”）</p></li><li><p>系统代理</p><ul><li>控制面板看：控制面板\\所有控制面板项\\网络和共享中心 &gt; Internet选项 &gt; 连接 &gt; 局域网设置</li><li>win10设置看：可以直接从谷歌浏览器跳转进入</li></ul></li></ul></li><li><p>代理服务器</p><ul><li><p>软件开启后，可以在系统代理中看到勾选了启用代理服务器</p><p>默认代理服务器地址127.0.0.1，端口8888（但我的电脑不是，而是8866端口，可能8888被占用了，也可能是新版的Fiddler默认端口不同）</p></li><li><p>另外，当我使用ssr代理时，自动配置使用了端口25378</p></li><li><p>注意代理服务器好像会覆盖掉自动配置？</p></li></ul></li></ul><h2 id="http协议" tabindex="-1"><a class="header-anchor" href="#http协议"><span>HTTP协议</span></a></h2><p>简概</p><ul><li>Hyper Text Transfer Protocol（超文本传输协议）</li><li>用于从万维网服务器传输超文本到本地浏览器的传送协议</li><li>HTTP是基于TCP的应用层协议，它不关系数据传输的细节，主要用来规定客户端和服务器的数据传输格式。最初是用来想客户端传输HTML页面的内容。默认端口是80</li><li>http是基于请求和响应模式的、无状态的、应用层的协议</li></ul><p>抓包会话的内容</p><ul><li><p>请求报文</p><ul><li><p>请求行</p><table><thead><tr><th>请求方法</th><th>说明</th></tr></thead><tbody><tr><td>GET</td><td>请求资源</td></tr><tr><td>POST</td><td>提交资源</td></tr><tr><td>Head</td><td>获取响应头</td></tr><tr><td>PUT</td><td>替换资源</td></tr><tr><td>DELETE</td><td>删除资源</td></tr><tr><td>OPTIONS</td><td>允许客户端查看服务器性能</td></tr><tr><td>TRACE</td><td>回显服务器收到的请求，用于测试或诊断</td></tr></tbody></table></li><li><p>请求头 / 首部行（Request Header）</p><table><thead><tr><th>请求头</th><th>说明</th></tr></thead><tbody><tr><td>Host</td><td>主机ip地址或域名</td></tr><tr><td>User-Agent</td><td>客户端相关信息，如操作系统、浏览器等信息</td></tr><tr><td>Accept-Charset</td><td>指定客户端接收信息类型，如：image/jpg, text/html, application</td></tr><tr><td>Accept-Encoding</td><td>客户端接收的字符集，如gb2312, ios-8859-1</td></tr><tr><td>Accept-Language</td><td>可接受的内容编码，如gzip</td></tr><tr><td>Authorization</td><td>接受的语言，如Accept-Language: zh-cn</td></tr><tr><td>Cookie</td><td>携带的cookie信息</td></tr><tr><td>Referer</td><td>当前的文档的URL，即从哪个连接来的（可防止盗链）</td></tr><tr><td>Content-Type</td><td>请求体内容类型，如Content-Type: application/x-www-form-url</td></tr><tr><td>Content-Length</td><td>数据长度</td></tr><tr><td>Cache-Control</td><td>缓存机制，如Cache-Control: no-cache</td></tr><tr><td>Pragma</td><td>防止页面被缓存，和Cache-Control: no-cache作用一样</td></tr></tbody></table></li><li><p>空一行</p></li><li><p>请求正文（请求体，get没有请求体）</p></li></ul></li><li><p>响应报文</p><ul><li><p>状态行（包含状态码）</p><table><thead><tr><th>状态码</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>1XX</td><td>提示信息，请求被成功接收</td><td></td></tr><tr><td>2XX</td><td>请求被成功处理</td><td>200</td></tr><tr><td>3XX</td><td>重定向相关（已缓存 / 重定向）</td><td>304</td></tr><tr><td>4XX</td><td>客户端错误</td><td>404</td></tr><tr><td>5XX</td><td>服务端错误</td><td>500</td></tr></tbody></table></li><li><p>响应头 / 首部行（Response Header）</p><table><thead><tr><th>响应头</th><th>描述</th></tr></thead><tbody><tr><td>Server</td><td>HTTP服务器的软件信息</td></tr><tr><td>Date</td><td>响应报文的时间</td></tr><tr><td>Expires</td><td>指定缓存过期时间</td></tr><tr><td>Set-Cookie</td><td>设置Cookie</td></tr><tr><td>Last-Modified</td><td>资源最后修改时间</td></tr><tr><td>Content-Type</td><td>响应的类型和字符集，如：COntent-Type：text/html，charset=utf-8</td></tr><tr><td>Content-Length</td><td>内容长度</td></tr><tr><td>Connection</td><td>如KEep-Alive，表示保持tcp连接不关闭，不会永久保持连接，服务器可设置</td></tr><tr><td>Location</td><td>指明重定向的位置，新的URL地址，如304的情况</td></tr></tbody></table></li><li><p>空行</p></li><li><p>响应体</p></li></ul></li></ul><p>状态码URL</p><ul><li>Uniform Resource Locator同一资源定位符</li></ul><h1 id="软件" tabindex="-1"><a class="header-anchor" href="#软件"><span>软件</span></a></h1><h2 id="软件界面" tabindex="-1"><a class="header-anchor" href="#软件界面"><span>软件界面</span></a></h2><h3 id="菜单栏" tabindex="-1"><a class="header-anchor" href="#菜单栏"><span>菜单栏</span></a></h3><ul><li>File</li><li>Edit</li><li>Rules规则 <ul><li>可以隐藏304和隐藏CONNECTs</li><li>Customize Rules自定义规则，<code>Ctrl+R</code>，打开后是一个C#脚本，可以黏贴网上找的脚本进去。如添加ip列</li></ul></li><li>Tool工具 <ul><li>Options选项 &gt; 可以修改监听端口</li><li>WinNETOptions</li></ul></li><li>View</li><li>Help</li></ul><h3 id="工具栏" tabindex="-1"><a class="header-anchor" href="#工具栏"><span>工具栏</span></a></h3><ul><li>WinConfig</li><li>备注</li><li>Replay重放，<code>R</code>重放一次，<code>Shift+R</code>设置连续重放多少次</li><li>Remove清除，Remove all等，<code>Ctrl+X</code>清除全部</li><li>Go，配合断点使用，下一步</li><li>Stream，流模式，原来是缓冲模式，一般不用</li><li>Decode，解码，解码所有Traffic。也可以不点这里，点报文上面的提示按钮，单独界面一个响应</li><li>Keep: All sessions，保持会话的数量，默认保持全部</li><li>Any Process，选择监听的程序。可以拖拽到指定程序上，如只监听某浏览器</li><li>Find查找，<code>Ctrl+F</code>快捷键，常用且实用</li><li>Save保存，保存为saz格式的文件，是可用Fiddler打开的工程文件</li><li>截图，就是截屏幕，小工具，没啥用</li><li>计时器，小工具，没啥用</li><li>Browse，浏览器，可以打开浏览器，没啥用</li><li>Clear Cache，清除ie缓存</li><li>TextWizard，解码编码窗口</li><li>Tearoff，分离窗口</li><li>MSDN Search，在MSDN中搜索</li><li>Online在线，本机的一些信息</li></ul><h3 id="监控面板-会话列表-session-list" tabindex="-1"><a class="header-anchor" href="#监控面板-会话列表-session-list"><span>监控面板 / 会话列表（Session List）</span></a></h3><p>可排序标记等，还可以右键保存所选会话到文本文件</p><ul><li><code>#</code>，id和类型图标</li><li>Result，结果，即状态码</li><li>Protocol，协议</li><li>Host，主机名</li><li>URL，统一资源定位符</li><li>Body，大小</li><li>Caching，缓存</li><li>Content-Type，内容类型</li><li>Process，哪个进程抓包来的</li><li>Comments，注释</li><li>Custom，自定义</li></ul><h3 id="命令行" tabindex="-1"><a class="header-anchor" href="#命令行"><span>命令行</span></a></h3><p><code>Alt+Q</code>快速执行命令，输入help会打开官网文档</p><ul><li><code>dpu keyword</code>，断点指定traffic</li><li><code>dpu</code>（第二次），结束断点</li><li><code>?keyword</code>，高亮显示指定traffic</li><li><code>&gt;number</code>，高亮显示文件大小大于指定值的traffic</li></ul><h3 id="状态栏" tabindex="-1"><a class="header-anchor" href="#状态栏"><span>状态栏</span></a></h3><ul><li>Capturing，捕获状态开启/关闭</li><li>断点状态，不断点 / 请求前断点 / 响应后断点 <ul><li>对应菜单功能：Rules &gt; Automatic Beakpoints自动断点 &gt; Before Requests / After Responsets</li></ul></li><li>All Processes，选择监听的进程，所有进程 / 浏览器进程 / 非浏览器进程</li><li>选择了多少个session/共多少个session</li><li>附加信息</li></ul><h3 id="辅助标签-工具" tabindex="-1"><a class="header-anchor" href="#辅助标签-工具"><span>辅助标签 + 工具</span></a></h3><h4 id="statistics-统计信息" tabindex="-1"><a class="header-anchor" href="#statistics-统计信息"><span>statistics 统计信息</span></a></h4><p>统计时间、吞吐量等</p><h4 id="inspectors-检查器【常用】" tabindex="-1"><a class="header-anchor" href="#inspectors-检查器【常用】"><span>Inspectors 检查器【常用】</span></a></h4><p>查看请求头请求体内容，可以用多种的形式去查看内容</p><ul><li>Headers标头，分类</li><li>TextView文本视图</li><li>SyntaxView语法视图，带格式和着色</li><li>WebForm表单</li><li>HexView十六进制视图</li><li>Auth认证</li><li>Cookies</li><li>Raw原始</li><li>JSON</li><li>XML</li><li>Transformer</li><li>Caching缓存</li></ul><h4 id="autoresponder-自动响应器【常用】" tabindex="-1"><a class="header-anchor" href="#autoresponder-自动响应器【常用】"><span>AutoResponder 自动响应器【常用】</span></a></h4><p>应用，例如：替换图片、替换修改过的js以钓鱼</p><p>使用</p><ul><li><p>(1) 勾选启用规则</p></li><li><p>(2) AddRule添加规则 &gt; RuleEditor规则编辑器 &gt; 填写原traffic和替换traffic</p><p>后者可以是url/本地资源，也可以是软件内置的traffic，如404</p><p>也可以直接从SessionsList拖拽进来，再进行修改</p></li></ul><h4 id="composer-组合器【常用】" tabindex="-1"><a class="header-anchor" href="#composer-组合器【常用】"><span>Composer 组合器【常用】</span></a></h4><p>作用：自定义请求/响应报文，简单的接口测试工具。类似于postman那种</p><p>使用</p><ul><li><p>手动设置报文内容</p><p>也可以直接从SessionsList拖拽进来，再进行修改</p></li><li><p>Execute执行</p></li></ul><p>视图</p><ul><li>Parsed解析</li><li>Raw原生</li><li>Scratchpad多个请求</li><li>Options选项</li></ul><h4 id="filters-过滤器【常用】" tabindex="-1"><a class="header-anchor" href="#filters-过滤器【常用】"><span>Filters 过滤器【常用】</span></a></h4><p>使用</p><ul><li>勾选Use Filters，启用过滤器</li></ul><p>选项</p><ul><li>Host 主机 <ul><li>不带过滤 / 只显式广域网 / 只显式局域网</li><li>不带主机过滤 / 隐藏以下主机 / 仅显示以下主机 / 标记下列主机</li></ul></li><li>Client Process 客户端进程 <ul><li>仅显示通信：电脑上运行软件的进程</li><li>仅显示IE通信</li></ul></li><li>Request Headers 请求头 <ul><li>筛选指定URL</li><li>隐藏指定URL</li><li>标记指定URL</li><li>删除指定URL</li><li>设置请求头（新加请求头）</li></ul></li><li>Breakpoints 断点 <ul><li>在POST中断请求</li><li>中断请求的查询字符串</li><li>中断对XML HTTP请求</li><li>中断响应的内容类型</li></ul></li><li>Response Status Code 响应状态码 <ul><li><div class="ab-note drop-shadow"><div class="markdown-rendered"><div><ul><li>Response Type and Size 响应类型和大小 <ul><li><div class="ab-note drop-shadow"><div class="markdown-rendered"><div><ul><li>Response HEaders 响应头 <ul><li>[略]</li></ul></li></ul></div></div></div></li></ul></li></ul></div></div></div></li></ul></li></ul><h4 id="fiddler-orchestra-beta" tabindex="-1"><a class="header-anchor" href="#fiddler-orchestra-beta"><span>Fiddler Orchestra Beta</span></a></h4><p>新出的功能（Beta版本）</p><h4 id="画廊" tabindex="-1"><a class="header-anchor" href="#画廊"><span>画廊</span></a></h4><h4 id="ecode" tabindex="-1"><a class="header-anchor" href="#ecode"><span>ECode</span></a></h4><h4 id="fiddlerscript-脚本" tabindex="-1"><a class="header-anchor" href="#fiddlerscript-脚本"><span>FiddlerScript 脚本</span></a></h4><h4 id="log-日志" tabindex="-1"><a class="header-anchor" href="#log-日志"><span>Log 日志</span></a></h4><h4 id="timeline-时间轴" tabindex="-1"><a class="header-anchor" href="#timeline-时间轴"><span>Timeline 时间轴</span></a></h4><h1 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h1><h2 id="断点" tabindex="-1"><a class="header-anchor" href="#断点"><span>断点</span></a></h2><p>使用</p><ul><li>全局断点 <ul><li>菜单工具设置Automatic Beakpoints 自动断点</li><li>状态栏点击对应位置快速设置断点</li></ul></li><li>局部断点 <ul><li>命令行：<code>bpu keyword</code>/<code>dpafter keyword</code>断点指定通信，再次输入<code>bpu</code>/<code>dpafter</code>取消</li></ul></li></ul><p>作用</p><ul><li>修改内容</li><li>模拟网络中断</li></ul><h2 id="模拟弱网状态" tabindex="-1"><a class="header-anchor" href="#模拟弱网状态"><span>模拟弱网状态</span></a></h2><p>菜单Rules规则 &gt; Rerformance性能 &gt; Simulate Modem Speeds模拟调制解调器速度</p><p>菜单Rules规则 &gt; 自定义规则 &gt; 搜索simulate &gt; 修改参数可以自定义延迟的量，值是每1kb延迟多少毫秒</p><h2 id="https证书问题" tabindex="-1"><a class="header-anchor" href="#https证书问题"><span>HTTPS证书问题</span></a></h2><p>原理</p><ul><li>https其实能捕捉到，但问题在于无法解码</li><li>https加密：http + ssl + TLS，存在一个证书</li></ul><hr><p>安装证书</p><ul><li><p>菜单Tools工具 &gt; Options选项 &gt; HTTPS &gt; 里面有两个勾选项和一个按钮</p><p>Capture HTTPS CONNECTs 捕获HTTPS连接，默认勾选了</p><p>Decrypt HTTPS traffic 解密HTTPS通信，需要勾选，即可</p></li><li><p>如果不行</p><p>Actions &gt; Reset All Certificates重置证书</p></li></ul><hr><p>火狐的解决方案</p><ul><li><p>火狐不使用</p><p>先在Actions处导出证书到桌面</p><p>然后打开火狐浏览器 &gt; 隐私与安全 &gt; 证书 &gt; 查看证书 &gt; 导入 &gt; 全部勾选 &gt; 确定</p></li></ul><hr><p>火狐问题的原理</p><ul><li>Actions用于配置，可以从中打开Windows证书管理器，即根证书</li><li>谷歌是使用的Windows证书管理器中的根证书</li><li>但火狐不是，他使用自己的证书，需要手动导入</li></ul><h2 id="抓手机设备app包" tabindex="-1"><a class="header-anchor" href="#抓手机设备app包"><span>抓手机设备APP包</span></a></h2><ul><li><p>(1) 先设置代理，手机设置：wifi设置 &gt; 代理 &gt; 手动 &gt;</p><ul><li>主机名：<code>电脑的局域网ip</code>（可以在工具栏的Online中查看）</li><li>端口：<code>Fiddler监听的端口</code>（可在工具 &gt; 选项 &gt; 连接中查看监听的端口）</li></ul></li><li><p>(2) Fiddler设置</p><ul><li>工具 &gt; 选项 &gt; 连接 &gt; 要勾选Allow remote computers to connect（允许远程计算机连接）</li></ul></li><li><p>(3) 下载根证书</p><ul><li><p>此时头条 / 浏览器等有的APP能直接抓到，而有的软件抓不到，因为证书有问题。需要安装根证书</p></li><li><p>方法：浏览器访问：<code>http://电脑的局域网ip:Fiddler监听的端口/</code>会进入一个页面</p><p>点击you can download thi FiddlerRoot certificate下载根证书</p></li></ul></li><li><p>(4) 安装根证书</p><ul><li>手机设置 &gt; 更多/高级设置 &gt; 系统安全 &gt; 加密与凭据 &gt; 从存储设备安装 &gt; 安装前面下载来的根证书</li></ul></li></ul><p>不保证都可以进行抓包，有的软件会防止抓包，抓包越来越困难了</p><h2 id="willow插件" tabindex="-1"><a class="header-anchor" href="#willow插件"><span>Willow插件</span></a></h2><p>Fiddler插件网站：www.telerik.com/fiddler/add-ons</p><p>虽然Willow不在该插件网站上</p><p>Willow插件作用：工具 &gt; Host管理，的加强版，用来管理规则的</p><h1 id="补充-踩坑" tabindex="-1"><a class="header-anchor" href="#补充-踩坑"><span>补充 / 踩坑</span></a></h1><h2 id="乱码问题" tabindex="-1"><a class="header-anchor" href="#乱码问题"><span>乱码问题</span></a></h2><p>要单击工具栏上的Decode（解码）按钮，以启用解码功能</p><h2 id="默认的8888端口被占用" tabindex="-1"><a class="header-anchor" href="#默认的8888端口被占用"><span>默认的8888端口被占用</span></a></h2><p><img src="'+d+'" alt="image-20210126101426385" loading="lazy"></p><p>这个端口是被ipython notebook的默认端口<code>8888</code>给占用了</p><p>但如果这里点 “是” 的话，不太好</p><ul><li>每次生成的随机端口都是随机的</li><li>生成的随机端口不可修改</li><li>每次都会弹出这个对话框</li></ul><p>这给调试带来不便，所以应该点否，然后进去以后再修改默认端口。修改一次再重启软件后就指定默认端口了</p><p><img src="'+r+'" alt="image-20210126101533126" loading="lazy"></p><h2 id="网络安全启示" tabindex="-1"><a class="header-anchor" href="#网络安全启示"><span>网络安全启示</span></a></h2><ul><li>加密：防止断点轻易修改数据</li><li>后端做好校验：防止绕过前端向后端发起非法请求而导致后端崩溃</li></ul><h2 id="fiddler和wireshark区别" tabindex="-1"><a class="header-anchor" href="#fiddler和wireshark区别"><span>Fiddler和Wireshark区别</span></a></h2><h3 id="原理不同" tabindex="-1"><a class="header-anchor" href="#原理不同"><span>原理不同</span></a></h3><ul><li>Fiddler：系统代理</li><li>Wireshark：网卡数据复制</li></ul><h3 id="局限性" tabindex="-1"><a class="header-anchor" href="#局限性"><span>局限性</span></a></h3><ul><li>Fiddler：手机设备需要安装证书，而且Firefox无法抓到https，而且有的App别说解密，连包都抓不到（不走你的系统代理）</li></ul><h3 id="手机上的一些无法被抓包的内容" tabindex="-1"><a class="header-anchor" href="#手机上的一些无法被抓包的内容"><span>手机上的一些无法被抓包的内容</span></a></h3><p>比如支付宝、腾讯</p><p>参考链接：https://www.zhihu.com/question/54900955</p><p>原因</p><p>你在手机上设置代理，应用可以不使用的。比如在安卓上使用一些第三方的http/https库，它们是不会使用系统代理的<br> 但是，要抓的话也还是可以的，安卓上root了的话，可以使用proxydroid，它会识别出数据协议然后转发到你指定的代理那里过去。</p>',113)]))}const h=i(p,[["render",s],["__file","Fiddler.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/Capture/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/Fiddler.html","title":"Fiddler（旧版）","lang":"zh-CN","frontmatter":{"description":"Fiddler（旧版） 目录 Fiddler 简介 简概 Fiddler是位于客户端和服务器端的HTTP代理 目前最常用的http抓包工具之一 功能非常强大，是web调试的利器 监控浏览器所有的HTTP/HTTPS流量 查看、分析请求内容细节 伪造客户端请求和服务器响应 测试网站的性能 解密HTTPS的web会话 全局、局部断点功能 第三方插件 使用场...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/Capture/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/Fiddler.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Fiddler（旧版）"}],["meta",{"property":"og:description","content":"Fiddler（旧版） 目录 Fiddler 简介 简概 Fiddler是位于客户端和服务器端的HTTP代理 目前最常用的http抓包工具之一 功能非常强大，是web调试的利器 监控浏览器所有的HTTP/HTTPS流量 查看、分析请求内容细节 伪造客户端请求和服务器响应 测试网站的性能 解密HTTPS的web会话 全局、局部断点功能 第三方插件 使用场..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Fiddler（旧版）\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":10.88,"words":3264},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/软件工具/Fiddler.md","excerpt":"\\n<h1>目录</h1>\\n<h1>Fiddler</h1>\\n<h2>简介</h2>\\n<p>简概</p>\\n<ul>\\n<li>Fiddler是位于客户端和服务器端的HTTP代理</li>\\n<li>目前最常用的http抓包工具之一</li>\\n<li>功能非常强大，是web调试的利器\\n<ul>\\n<li>监控浏览器所有的HTTP/HTTPS流量</li>\\n<li>查看、分析请求内容细节</li>\\n<li>伪造客户端请求和服务器响应</li>\\n<li>测试网站的性能</li>\\n<li>解密HTTPS的web会话</li>\\n<li>全局、局部断点功能</li>\\n<li>第三方插件</li>\\n</ul>\\n</li>\\n<li>使用场景\\n<ul>\\n<li>接口调试、接口测试、线上环境调式、web性能分析</li>\\n<li>判断前后端bug、开发环境hosts配置、mock、弱网断网测试</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/软件工具/Fiddler.md","value":{"title":"Fiddler","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/网络工具/Capture/软件工具/Fiddler.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{h as comp,c as data};
