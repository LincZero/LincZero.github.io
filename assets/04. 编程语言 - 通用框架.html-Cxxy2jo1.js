import{_ as e,e as h,g as n,o as s}from"./app-CbGUE4hV.js";const r={};function d(i,a){return s(),h("div",null,a[0]||(a[0]=[n('<h1 id="_04-编程语言-通用框架" tabindex="-1"><a class="header-anchor" href="#_04-编程语言-通用框架"><span>04. 编程语言 - 通用框架</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><p>使用需知：</p><p><s>原则：不包括概念、术语、原理描述，只写用法</s></p><p>原则（新）：<code>简概</code>包括概念、术语、原理描述，而<code>使用</code>仅包括用法</p><p>前三级目录基本上是固定的，第四级目录可以根据具体情况修改（一般是增减），第五级目录根据具体情况自行增加</p><p>（技巧：使用子类选择符，可以进行拆解，把<code>n</code>层数据坍塌为<code>n-1</code>层）</p><h1 id="编程语言" tabindex="-1"><a class="header-anchor" href="#编程语言"><span>编程语言</span></a></h1><h2 id="资料类" tabindex="-1"><a class="header-anchor" href="#资料类"><span>资料类</span></a></h2><h3 id="学习资料" tabindex="-1"><a class="header-anchor" href="#学习资料"><span>学习资料</span></a></h3><h3 id="查阅文档" tabindex="-1"><a class="header-anchor" href="#查阅文档"><span>查阅文档</span></a></h3><h2 id="语言特性类" tabindex="-1"><a class="header-anchor" href="#语言特性类"><span>语言特性类</span></a></h2><h3 id="简介类特性" tabindex="-1"><a class="header-anchor" href="#简介类特性"><span>简介类特性</span></a></h3><h4 id="语言简介" tabindex="-1"><a class="header-anchor" href="#语言简介"><span>语言简介*</span></a></h4><h4 id="语言特点" tabindex="-1"><a class="header-anchor" href="#语言特点"><span>语言特点*</span></a></h4><h4 id="语言简史" tabindex="-1"><a class="header-anchor" href="#语言简史"><span>语言简史*</span></a></h4><h3 id="版本类特性" tabindex="-1"><a class="header-anchor" href="#版本类特性"><span>版本类特性</span></a></h3><h4 id="语言标准" tabindex="-1"><a class="header-anchor" href="#语言标准"><span>语言标准*</span></a></h4><h4 id="新增特性" tabindex="-1"><a class="header-anchor" href="#新增特性"><span>新增特性*</span></a></h4><h4 id="版本变迁" tabindex="-1"><a class="header-anchor" href="#版本变迁"><span>版本变迁*</span></a></h4><h2 id="项目工程类" tabindex="-1"><a class="header-anchor" href="#项目工程类"><span>项目工程类</span></a></h2><h3 id="项目创建" tabindex="-1"><a class="header-anchor" href="#项目创建"><span>项目创建</span></a></h3><h3 id="环境安装" tabindex="-1"><a class="header-anchor" href="#环境安装"><span>环境安装</span></a></h3><h4 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux*</span></a></h4><h4 id="mac-os-x" tabindex="-1"><a class="header-anchor" href="#mac-os-x"><span>Mac OS X*</span></a></h4><h4 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows*</span></a></h4><h3 id="开发工具" tabindex="-1"><a class="header-anchor" href="#开发工具"><span>开发工具</span></a></h3><h3 id="helloworld" tabindex="-1"><a class="header-anchor" href="#helloworld"><span>HelloWorld</span></a></h3><h1 id="数据-程序-数据-算法中的数据" tabindex="-1"><a class="header-anchor" href="#数据-程序-数据-算法中的数据"><span>数据（程序=数据+算法中的数据）</span></a></h1><p>数据分类核心</p><ul><li>按类型分类 <ul><li>泛</li><li>类1</li><li>类2</li></ul></li><li>按操作分类 <ul><li>（简概）</li><li>输入输出</li><li>定义</li><li>使用</li></ul></li></ul><h2 id="常量" tabindex="-1"><a class="header-anchor" href="#常量"><span>常量</span></a></h2><h3 id="简概" tabindex="-1"><a class="header-anchor" href="#简概"><span>简概</span></a></h3><h3 id="使用-定义" tabindex="-1"><a class="header-anchor" href="#使用-定义"><span>使用（定义）</span></a></h3><h4 id="内置常量" tabindex="-1"><a class="header-anchor" href="#内置常量"><span>内置常量*</span></a></h4><h4 id="声明" tabindex="-1"><a class="header-anchor" href="#声明"><span>声明*</span></a></h4><h4 id="初始" tabindex="-1"><a class="header-anchor" href="#初始"><span>初始*</span></a></h4><h4 id="赋值-与简写" tabindex="-1"><a class="header-anchor" href="#赋值-与简写"><span>赋值（与简写）*</span></a></h4><h2 id="变量泛操作-内置" tabindex="-1"><a class="header-anchor" href="#变量泛操作-内置"><span>变量泛操作（内置）</span></a></h2><h3 id="简概-1" tabindex="-1"><a class="header-anchor" href="#简概-1"><span>简概</span></a></h3><h4 id="分类型" tabindex="-1"><a class="header-anchor" href="#分类型"><span>分类型*</span></a></h4><p>基本类型 / 基本数据类型</p><p>复合类型 / 对象数据类型</p><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><h4 id="声明-1" tabindex="-1"><a class="header-anchor" href="#声明-1"><span>声明*</span></a></h4><h4 id="初始-1" tabindex="-1"><a class="header-anchor" href="#初始-1"><span>初始*</span></a></h4><h4 id="赋值-与简写-1" tabindex="-1"><a class="header-anchor" href="#赋值-与简写-1"><span>赋值（与简写）*</span></a></h4><h3 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1"><span>使用</span></a></h3><h4 id="内置常量-1" tabindex="-1"><a class="header-anchor" href="#内置常量-1"><span>内置常量*</span></a></h4><h3 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换"><span>类型转换</span></a></h3><h4 id="显式" tabindex="-1"><a class="header-anchor" href="#显式"><span>显式*</span></a></h4><h4 id="隐式" tabindex="-1"><a class="header-anchor" href="#隐式"><span>隐式*</span></a></h4><h2 id="数字【基本类型】" tabindex="-1"><a class="header-anchor" href="#数字【基本类型】"><span>数字【基本类型】</span></a></h2><h3 id="简概-2" tabindex="-1"><a class="header-anchor" href="#简概-2"><span>简概</span></a></h3><h4 id="子类型" tabindex="-1"><a class="header-anchor" href="#子类型"><span>子类型*</span></a></h4><h4 id="类型宽度" tabindex="-1"><a class="header-anchor" href="#类型宽度"><span>类型宽度*</span></a></h4><h4 id="类型性质" tabindex="-1"><a class="header-anchor" href="#类型性质"><span>类型性质*</span></a></h4><h3 id="使用-2" tabindex="-1"><a class="header-anchor" href="#使用-2"><span>使用</span></a></h3><h4 id="字面量方式" tabindex="-1"><a class="header-anchor" href="#字面量方式"><span>字面量方式*</span></a></h4><h4 id="符号操作" tabindex="-1"><a class="header-anchor" href="#符号操作"><span>符号操作*</span></a></h4><h4 id="对象方法操作" tabindex="-1"><a class="header-anchor" href="#对象方法操作"><span>对象方法操作*</span></a></h4><h4 id="内置函数操作" tabindex="-1"><a class="header-anchor" href="#内置函数操作"><span>内置函数操作*</span></a></h4><p>输出类</p><h2 id="字符串【对象类型】" tabindex="-1"><a class="header-anchor" href="#字符串【对象类型】"><span>字符串【对象类型】</span></a></h2><h2 id="数组【对象类型】" tabindex="-1"><a class="header-anchor" href="#数组【对象类型】"><span>数组【对象类型】</span></a></h2><h2 id="对象类型嵌套【对象类型】" tabindex="-1"><a class="header-anchor" href="#对象类型嵌套【对象类型】"><span>对象类型嵌套【对象类型】</span></a></h2><h2 id="指针【特殊类型】" tabindex="-1"><a class="header-anchor" href="#指针【特殊类型】"><span>指针【特殊类型】</span></a></h2><h2 id="共用体【特殊类型】" tabindex="-1"><a class="header-anchor" href="#共用体【特殊类型】"><span>共用体【特殊类型】</span></a></h2><h2 id="枚举【特殊类型】" tabindex="-1"><a class="header-anchor" href="#枚举【特殊类型】"><span>枚举【特殊类型】</span></a></h2><h2 id="变量通用字面量-符号" tabindex="-1"><a class="header-anchor" href="#变量通用字面量-符号"><span>变量通用字面量：符号</span></a></h2><h3 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符"><span>算术运算符</span></a></h3><h3 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h3><h3 id="运算符与结合性" tabindex="-1"><a class="header-anchor" href="#运算符与结合性"><span>运算符与结合性</span></a></h3><h1 id="编程的思想形态" tabindex="-1"><a class="header-anchor" href="#编程的思想形态"><span>编程的思想形态</span></a></h1><h2 id="代码易读性" tabindex="-1"><a class="header-anchor" href="#代码易读性"><span>代码易读性</span></a></h2><h3 id="注释-注释符" tabindex="-1"><a class="header-anchor" href="#注释-注释符"><span>注释(注释符)</span></a></h3><h3 id="书写风格类" tabindex="-1"><a class="header-anchor" href="#书写风格类"><span>书写风格类</span></a></h3><h4 id="语言风格" tabindex="-1"><a class="header-anchor" href="#语言风格"><span>语言风格*</span></a></h4><h4 id="书写风格" tabindex="-1"><a class="header-anchor" href="#书写风格"><span>书写风格*</span></a></h4><h4 id="命名风格-与关键字" tabindex="-1"><a class="header-anchor" href="#命名风格-与关键字"><span>命名风格（与关键字）*</span></a></h4><h2 id="代码易用性" tabindex="-1"><a class="header-anchor" href="#代码易用性"><span>代码易用性</span></a></h2><h3 id="头文件" tabindex="-1"><a class="header-anchor" href="#头文件"><span>头文件</span></a></h3><h3 id="dir-和help-语法" tabindex="-1"><a class="header-anchor" href="#dir-和help-语法"><span>dir()和help()语法</span></a></h3><h2 id="交互" tabindex="-1"><a class="header-anchor" href="#交互"><span>交互</span></a></h2><h3 id="控制台-i-o" tabindex="-1"><a class="header-anchor" href="#控制台-i-o"><span>控制台 I/O</span></a></h3><h3 id="文件-i-o" tabindex="-1"><a class="header-anchor" href="#文件-i-o"><span>文件 I/O</span></a></h3><h3 id="脚本型-i-o-依赖于宿主软件的行为" tabindex="-1"><a class="header-anchor" href="#脚本型-i-o-依赖于宿主软件的行为"><span>脚本型 I/O（依赖于宿主软件的行为）</span></a></h3><h3 id="gui" tabindex="-1"><a class="header-anchor" href="#gui"><span>GUI</span></a></h3><h2 id="代码管理-结构化编程思想-逻辑控制" tabindex="-1"><a class="header-anchor" href="#代码管理-结构化编程思想-逻辑控制"><span>代码管理 &gt; 结构化编程思想（逻辑控制）</span></a></h2><h3 id="for" tabindex="-1"><a class="header-anchor" href="#for"><span>for</span></a></h3><h3 id="while" tabindex="-1"><a class="header-anchor" href="#while"><span>while</span></a></h3><h3 id="if" tabindex="-1"><a class="header-anchor" href="#if"><span>if</span></a></h3><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch"><span>switch</span></a></h3><h3 id="三目运算符" tabindex="-1"><a class="header-anchor" href="#三目运算符"><span>三目运算符</span></a></h3><h3 id="跳转-break和continue" tabindex="-1"><a class="header-anchor" href="#跳转-break和continue"><span>跳转（break和continue）</span></a></h3><h3 id="异常捕捉" tabindex="-1"><a class="header-anchor" href="#异常捕捉"><span>异常捕捉</span></a></h3><h2 id="动态联结思想-自由存储空间" tabindex="-1"><a class="header-anchor" href="#动态联结思想-自由存储空间"><span>动态联结思想 &gt; 自由存储空间</span></a></h2><h3 id="oop思想" tabindex="-1"><a class="header-anchor" href="#oop思想"><span>OOP思想</span></a></h3><h3 id="class类与对象" tabindex="-1"><a class="header-anchor" href="#class类与对象"><span>Class类与对象</span></a></h3><h2 id="封装思想-函数式编程" tabindex="-1"><a class="header-anchor" href="#封装思想-函数式编程"><span>封装思想 &gt; 函数式编程</span></a></h2><h3 id="自带函数" tabindex="-1"><a class="header-anchor" href="#自带函数"><span>自带函数</span></a></h3><h2 id="封装思想-面向对象编程" tabindex="-1"><a class="header-anchor" href="#封装思想-面向对象编程"><span>封装思想 &gt; 面向对象编程</span></a></h2><h2 id="封装思想-模块系统" tabindex="-1"><a class="header-anchor" href="#封装思想-模块系统"><span>封装思想 &gt; 模块系统</span></a></h2><h3 id="内置模块-无需下载-无需显式导入" tabindex="-1"><a class="header-anchor" href="#内置模块-无需下载-无需显式导入"><span>内置模块（无需下载，无需显式导入）</span></a></h3><h3 id="自带模块-标准库模块-无需下载-需显式导入" tabindex="-1"><a class="header-anchor" href="#自带模块-标准库模块-无需下载-需显式导入"><span>自带模块 / 标准库模块（无需下载，需显式导入）</span></a></h3><h3 id="第三方模块-需要下载-需显式导入" tabindex="-1"><a class="header-anchor" href="#第三方模块-需要下载-需显式导入"><span>第三方模块（需要下载，需显式导入）</span></a></h3><h3 id="自定义模块-需自己编写-需显式导入" tabindex="-1"><a class="header-anchor" href="#自定义模块-需自己编写-需显式导入"><span>自定义模块（需自己编写，需显式导入）</span></a></h3><h3 id="【专题模块】" tabindex="-1"><a class="header-anchor" href="#【专题模块】"><span>【专题模块】</span></a></h3><h2 id="封装思想-泛型编程" tabindex="-1"><a class="header-anchor" href="#封装思想-泛型编程"><span>封装思想 &gt; 泛型编程</span></a></h2><h2 id="异步思想" tabindex="-1"><a class="header-anchor" href="#异步思想"><span>异步思想</span></a></h2><h3 id="promise" tabindex="-1"><a class="header-anchor" href="#promise"><span>Promise</span></a></h3><h3 id="async-await" tabindex="-1"><a class="header-anchor" href="#async-await"><span>async - await</span></a></h3>',112)]))}const c=e(r,[["render",d],["__file","04. 编程语言 - 通用框架.html.vue"]]),o=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/01.%20ALL/04.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%20-%20%E9%80%9A%E7%94%A8%E6%A1%86%E6%9E%B6.html","title":"04. 编程语言 - 通用框架","lang":"zh-CN","frontmatter":{"description":"04. 编程语言 - 通用框架 目录 使用需知： 原则（新）：简概包括概念、术语、原理描述，而使用仅包括用法 前三级目录基本上是固定的，第四级目录可以根据具体情况修改（一般是增减），第五级目录根据具体情况自行增加 （技巧：使用子类选择符，可以进行拆解，把n层数据坍塌为n-1层） 编程语言 资料类 学习资料 查阅文档 语言特性类 简介类特性 语言简介* ...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/01.%20ALL/04.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%20-%20%E9%80%9A%E7%94%A8%E6%A1%86%E6%9E%B6.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"04. 编程语言 - 通用框架"}],["meta",{"property":"og:description","content":"04. 编程语言 - 通用框架 目录 使用需知： 原则（新）：简概包括概念、术语、原理描述，而使用仅包括用法 前三级目录基本上是固定的，第四级目录可以根据具体情况修改（一般是增减），第五级目录根据具体情况自行增加 （技巧：使用子类选择符，可以进行拆解，把n层数据坍塌为n-1层） 编程语言 资料类 学习资料 查阅文档 语言特性类 简介类特性 语言简介* ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04. 编程语言 - 通用框架\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.27,"words":681},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/04. 编程语言 - 通用框架.md","excerpt":"\\n<h1>目录</h1>\\n<p>使用需知：</p>\\n<p><s>原则：不包括概念、术语、原理描述，只写用法</s></p>\\n<p>原则（新）：<code>简概</code>包括概念、术语、原理描述，而<code>使用</code>仅包括用法</p>\\n<p>前三级目录基本上是固定的，第四级目录可以根据具体情况修改（一般是增减），第五级目录根据具体情况自行增加</p>\\n<p>（技巧：使用子类选择符，可以进行拆解，把<code>n</code>层数据坍塌为<code>n-1</code>层）</p>\\n<h1>编程语言</h1>\\n<h2>资料类</h2>\\n<h3>学习资料</h3>\\n<h3>查阅文档</h3>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/04. 编程语言 - 通用框架.md","value":{"title":"04. 编程语言 - 通用框架","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/04. 编程语言 - 通用框架.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{c as comp,o as data};
