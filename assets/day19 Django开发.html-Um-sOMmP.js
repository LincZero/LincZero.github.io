import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-IRYUHD7s.js";const e={},p=t(`<h1 id="day19-django开发" tabindex="-1"><a class="header-anchor" href="#day19-django开发"><span>day19 Django开发</span></a></h1><p>知识点的回顾：</p><ul><li><p>安装Django</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>pip install django
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建Django项目</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&gt;&gt;&gt; django-admin startproject mysite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：Pycharm可以创建。如果用Pycharm创建，记得settings.py中的DIR templates 删除。</p></li><li><p>创建app &amp; 注册</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&gt;&gt;&gt;python manage.py startapp app01
&gt;&gt;&gt;python manage.py startapp app02
&gt;&gt;&gt;python manage.py startapp app03
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>INSTALLED_APPS = [
    ...
    &#39;app01.apps.App01Config&#39;
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：否则app下的models.py写类时，无法在数据库中创建表。</p></li><li><p>配置 静态文件路径 &amp; 模板的路径（放在app目录下）。</p></li><li><p>配置数据库相关操作（MySQL）</p><ul><li><p>第三方模块（django3版本）</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>pip install mysqlclient
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>自己先去MySQL创建一个数据库。</p></li><li><p>配置数据库连接settings.py</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>DATABASES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;default&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;ENGINE&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;django.db.backends.mysql&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;NAME&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;gx_day16&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 数据库名字</span>
        <span class="token string">&#39;USER&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;PASSWORD&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;root123&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;HOST&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 那台机器安装了MySQL</span>
        <span class="token string">&#39;PORT&#39;</span><span class="token punctuation">:</span> <span class="token number">3306</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在app下的models.py中编写</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models


<span class="token keyword">class</span> <span class="token class-name">Admin</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; 管理员 &quot;&quot;&quot;</span>
    username <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>verbose_name<span class="token operator">=</span><span class="token string">&quot;用户名&quot;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span>
    password <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>verbose_name<span class="token operator">=</span><span class="token string">&quot;密码&quot;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>username

    
<span class="token keyword">class</span> <span class="token class-name">Department</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; 部门表 &quot;&quot;&quot;</span>
    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>verbose_name<span class="token operator">=</span><span class="token string">&#39;标题&#39;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行两个命令：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>python manange<span class="token punctuation">.</span>py makemigrations
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>python manange<span class="token punctuation">.</span>py migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>在 urls.py ，路由 （ URL 和 函数的对应关系）。</p></li><li><p>在views.py，视图函数，编写业务逻辑。</p></li><li><p>templates目录，编写HTML模板（含有模板语法、继承、<code>{% static &#39;xx&#39;%}</code>）</p></li><li><p>ModelForm &amp; Form组件，在我们开发增删改查功能。</p><ul><li>生成HTML标签（生成默认值）</li><li>请求数据进行校验。</li><li>保存到数据库（ModelForm）</li><li>获取错误信息。</li></ul></li><li><p>Cookie和Session，用户登录信息保存起来。</p></li><li><p>中间件，基于中间件实现用户认证 ，基于：<code>process_request</code>。</p></li><li><p>ORM操作</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>models.User.objects.filter(id=&quot;xxx&quot;)
models.User.objects.filter(id=&quot;xxx&quot;).order_by(&quot;-id&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>分页组件。</p></li></ul><h2 id="_1-ajax请求" tabindex="-1"><a class="header-anchor" href="#_1-ajax请求"><span>1.Ajax请求</span></a></h2><h2 id="_2-订单" tabindex="-1"><a class="header-anchor" href="#_2-订单"><span>2.订单</span></a></h2><p>![image-20211129092011994](day19 Django开发.assets/image-20211129092011994.png)</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Order</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; 订单 &quot;&quot;&quot;</span>
    oid <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>verbose_name<span class="token operator">=</span><span class="token string">&quot;订单号&quot;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>
    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>verbose_name<span class="token operator">=</span><span class="token string">&quot;名称&quot;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span>
    price <span class="token operator">=</span> models<span class="token punctuation">.</span>IntegerField<span class="token punctuation">(</span>verbose_name<span class="token operator">=</span><span class="token string">&quot;价格&quot;</span><span class="token punctuation">)</span>

    status_choices <span class="token operator">=</span> <span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;待支付&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;已支付&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    status <span class="token operator">=</span> models<span class="token punctuation">.</span>SmallIntegerField<span class="token punctuation">(</span>verbose_name<span class="token operator">=</span><span class="token string">&quot;状态&quot;</span><span class="token punctuation">,</span> choices<span class="token operator">=</span>status_choices<span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    admin <span class="token operator">=</span> models<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span>verbose_name<span class="token operator">=</span><span class="token string">&quot;管理员&quot;</span><span class="token punctuation">,</span> to<span class="token operator">=</span><span class="token string">&quot;Admin&quot;</span><span class="token punctuation">,</span> on_delete<span class="token operator">=</span>models<span class="token punctuation">.</span>CASCADE<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想要去数据库中获取数据时：对象/字典</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 对象，当前行的所有数据。</span>
row_object <span class="token operator">=</span> models<span class="token punctuation">.</span>Order<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span>uid<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
row_object<span class="token punctuation">.</span><span class="token builtin">id</span>
row_object<span class="token punctuation">.</span>title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 字典，{&quot;id&quot;:1,&quot;title&quot;:&quot;xx&quot;}</span>
row_dict <span class="token operator">=</span> models<span class="token punctuation">.</span>Order<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span>uid<span class="token punctuation">)</span><span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># queryset = [obj,obj,obj,]</span>
queryset <span class="token operator">=</span> models<span class="token punctuation">.</span>Order<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># queryset = [ {&#39;id&#39;:1,&#39;title&#39;:&quot;xx&quot;},{&#39;id&#39;:2,&#39;title&#39;:&quot;xx&quot;}, ]</span>
queryset <span class="token operator">=</span> models<span class="token punctuation">.</span>Order<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># queryset = [ (1,&quot;xx&quot;),(2,&quot;xxx&quot;), ]</span>
queryset <span class="token operator">=</span> models<span class="token punctuation">.</span>Order<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values_list<span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>至此，基于Ajax + 对话框的形式实现的页面的增删改查。</p><ul><li>表单，实现增删改查。</li><li>Ajax，实现增删改查。</li></ul><h2 id="_3-图表" tabindex="-1"><a class="header-anchor" href="#_3-图表"><span>3.图表</span></a></h2><ul><li>highchart，国外。</li><li>echarts，国内。</li></ul><p>更多参考文档：https://echarts.apache.org/handbook/zh/get-started</p>`,19),o=[p];function l(i,c){return s(),a("div",null,o)}const r=n(e,[["render",l],["__file","day19 Django开发.html.vue"]]),k=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/04.%20Py-Django/B%E7%AB%99%E6%AD%A6%E6%B2%9B%E9%BD%90/day19%20Django%E5%BC%80%E5%8F%91.html","title":"day19 Django开发","lang":"zh-CN","frontmatter":{"description":"day19 Django开发 知识点的回顾： 安装Django 创建Django项目 注意：Pycharm可以创建。如果用Pycharm创建，记得settings.py中的DIR templates 删除。 创建app & 注册 注意：否则app下的models.py写类时，无法在数据库中创建表。 配置 静态文件路径 & 模板的路径（放在app目录下）...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/04.%20Py-Django/B%E7%AB%99%E6%AD%A6%E6%B2%9B%E9%BD%90/day19%20Django%E5%BC%80%E5%8F%91.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"day19 Django开发"}],["meta",{"property":"og:description","content":"day19 Django开发 知识点的回顾： 安装Django 创建Django项目 注意：Pycharm可以创建。如果用Pycharm创建，记得settings.py中的DIR templates 删除。 创建app & 注册 注意：否则app下的models.py写类时，无法在数据库中创建表。 配置 静态文件路径 & 模板的路径（放在app目录下）..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day19 Django开发\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"day19 Django开发","slug":"day19-django开发","link":"#day19-django开发","children":[{"level":2,"title":"1.Ajax请求","slug":"_1-ajax请求","link":"#_1-ajax请求","children":[]},{"level":2,"title":"2.订单","slug":"_2-订单","link":"#_2-订单","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"3.图表","slug":"_3-图表","link":"#_3-图表","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.96,"words":587},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Platform/Web/04. 后端/04. Py-Django/B站武沛齐/day19 Django开发.md","autoDesc":true}');export{r as comp,k as data};
