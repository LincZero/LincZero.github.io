import{_ as l,c as r,e as i,o as a}from"./app-BgHc8lP1.js";const o="/assets/v2-2cf38321be3fc0fc56e6ee61ac8ec8a3_720w-BY5sOFpf.webp",t="/assets/v2-546f430c8ba14c980102c1e60b8a5d38_720w-BIdMNBZ_.webp",n="/assets/v2-078c092aecca764600feb25953c12d6c_720w-B9kl6sx-.webp",A="/assets/v2-77073b0a7ebd3c9ef1615ef3a5e9d3be_720w-gaZ_zflO.webp",p={};function s(P,e){return a(),r("div",null,e[0]||(e[0]=[i('<h1 id="arp-地址解析协议-address-resolution-protocol" tabindex="-1"><a class="header-anchor" href="#arp-地址解析协议-address-resolution-protocol"><span>ARP（地址解析协议，Address Resolution Protocol）</span></a></h1><p>参考</p><ul><li><a href="https://zhuanlan.zhihu.com/p/370507243" target="_blank" rel="noopener noreferrer">彻底搞懂系列之：ARP协议</a>（Good）</li><li><a href="https://info.support.huawei.com/info-finder/encyclopedia/zh/ARP.html" target="_blank" rel="noopener noreferrer">什么是ARP？</a>（可以作为补充，有一些概念我还没去了解：更深入的 路由式Proxy ARP、VLAN内Proxy ARP、ARP老化机制 等）</li><li><s><a href="https://www.cnblogs.com/cxuanBlog/p/14265315.html" target="_blank" rel="noopener noreferrer">一文详解 ARP 协议</a></s>（图片缺失）</li></ul><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><h3 id="一些概念" tabindex="-1"><a class="header-anchor" href="#一些概念"><span>一些概念</span></a></h3><ul><li><p>定义</p><ul><li>地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP/IP协议。</li></ul></li><li><p>直接作用</p><ul><li>IP以太网中，当一个上层协议要发包时，有了该节点的IP地址，ARP就能提供该节点的MAC地址。</li></ul></li><li><p>大致原理</p><ul><li>主机发送信息时将包含目标IP地址的ARP请求广播到局域网络上的所有主机，并接收返回消息，以此确定目标的物理地址；</li></ul></li><li><p>ARP缓存</p><ul><li>收到返回消息后将该IP地址和物理地址存入本机ARP缓存中并保留一定时间，下次请求时直接查询ARP缓存以节约资源。</li></ul></li><li><p>ARP欺骗</p><ul><li>是一种非常<strong>不安全</strong>的协议。地址解析协议是建立在网络中各个主机互相信任的基础上的，局域网络上的主机可以自主发送ARP应答消息，其他主机收到应答报文时不会检测该报文的真实性就会将其记入本机ARP缓存；这就有可能产生ARP欺骗或ARP攻击</li></ul></li><li><p>IPV6问题</p><ul><li>ARP（地址解析协议，Address Resolution Protocol）：只用于IPV4，<strong>IPV6不用</strong>这个</li><li>NDP（邻居发现协议，Neighbor Discovery Protocol）：这个是IPV6使用的</li></ul></li></ul><h3 id="沟通l2和l3" tabindex="-1"><a class="header-anchor" href="#沟通l2和l3"><span>沟通L2和L3</span></a></h3><p>大家都知道，OSI模式把网络工作分为七层，彼此不直接打交道，只通过接口 (layre interface).</p><p>IP地址在第三层（网络层）, MAC地址在第二层（数据链路层）。协议在发送数据包时，首先要封装第三层（IP地址）和第二层 （MAC地址）的报头, 但协议只知道目的节点的IP地址，不知道其物理地址，又不能跨第二、三层，所以得用ARP的服务拿到MAC地址。</p><h3 id="osi定位问题" tabindex="-1"><a class="header-anchor" href="#osi定位问题"><span>OSI定位问题</span></a></h3><p>ARP应该是L2层还是L3层有争议（OSI模型中有很多协议都是这样，可A层可B层的，ICMP也是）</p><p>从使用信息的角度看是L2，从作用的角度看是L3 (打通L3和L2)</p><p>维基中特别提到了这点：</p><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE#%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%88%86%E5%B1%82" target="_blank" rel="noopener noreferrer">地址解析协议#协议的分层</a></p><p>ARP协议在<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E5%A5%97%E4%BB%B6" target="_blank" rel="noopener noreferrer">互联网协议包</a>和<a href="https://zh.wikipedia.org/wiki/OSI%E6%A8%A1%E5%9E%8B" target="_blank" rel="noopener noreferrer">OSI模型</a>的位置可能会造成混乱和争议。 在 <a href="https://zh.wikipedia.org/wiki/RFC" target="_blank" rel="noopener noreferrer">RFC</a> <a href="https://tools.ietf.org/html/rfc1122" target="_blank" rel="noopener noreferrer">1122</a> 仅仅在<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82" target="_blank" rel="noopener noreferrer">数据链路层</a>提及ARP协议当并未说明将此协议置于该层[<a href="https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE#cite_note-2" target="_blank" rel="noopener noreferrer">2]</a>。 一些较旧的文档将ARP置于OSI的<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82" target="_blank" rel="noopener noreferrer">数据链路层</a>[<a href="https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE#cite_note-3" target="_blank" rel="noopener noreferrer">3]</a>，但是一些新的版本却将其与<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%B1%82" target="_blank" rel="noopener noreferrer">网络层</a>联系起来。[<a href="https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE#cite_note-4" target="_blank" rel="noopener noreferrer">4]</a></p></blockquote><h2 id="工作过程" tabindex="-1"><a class="header-anchor" href="#工作过程"><span>工作过程</span></a></h2><h3 id="工作过程-1" tabindex="-1"><a class="header-anchor" href="#工作过程-1"><span>工作过程</span></a></h3><p>假设主机A和B在同一个网段，主机A要向主机B发送信息，具体的地址解析过程如下：</p><ol><li><p>主机A -&gt; 主机B：</p><ul><li><p>主机A首先<strong>检查自己的ARP缓存表</strong>，确定其中是否包含有主机B对应的ARP表项。</p></li><li><p>如果找到了对应的MAC地址，则主机A直接利用ARP表中的MAC地址，对IP数据包进行<strong>帧封装并发送</strong>给主机B。并跳过后续步骤</p></li><li><p>如果主机A在ARP表中找不到对应的MAC地址，则将缓存该数据报文，然后以广播方式<strong>发送一个ARP请求报文</strong>。</p><blockquote><p>该请求报文中</p><ul><li><p>发送端IP地址和发送端MAC地址为主机A的IP地址和MAC地址</p></li><li><p>目标IP地址和目标MAC地址为主机B的IP地址和全0的MAC地址</p></li></ul><p>由于ARP请求报文以广播方式发送，该网段上的所有主机都可以接收到该请求，但只有被请求的主机（即主机B）会对该请求进行处理。</p></blockquote></li></ul></li><li><p>主机B &lt;- 主机A：</p><ul><li>主机B<strong>更新ARP缓存表</strong>：比较自己的IP地址和ARP请求报文中的目标IP地址，当两者相同时进行如下处理：将ARP请求报文中的发送端（即主机A）的IP地址和MAC地址存入自己的ARP表中。</li><li>之后以单播方式发送ARP响应报文给主机A，即<strong>ARP应答</strong>，其中包含了自己的MAC地址。</li></ul></li><li><p>主机A &lt;- 主机B：</p><ul><li>主机A收到ARP响应报文后，<strong>更新ARP缓存表</strong>，将主机B的MAC地址加入到自己的ARP表中以用于后续报文的转发。</li><li>同时将IP数据包进行<strong>封装并发送</strong>出去。</li></ul></li></ol><h3 id="跨网段" tabindex="-1"><a class="header-anchor" href="#跨网段"><span>跨网段</span></a></h3><p>当主机A和主机B不在同一网段时，有一些不同：</p><ol><li><p>主机A -&gt; 网关</p><ul><li><p><strong>检查ARP表</strong>，如果有主机B的ARP表项，则直接发。并跳过后续步骤</p></li><li><p>主机A会先向网关发出<strong>ARP请求</strong>，ARP请求报文中的目标IP地址为网关的IP地址。</p><p>当主机A从收到的响应报文中获得网关的MAC地址后，将报文<strong>封装并发</strong>给网关。</p></li></ul></li><li><p>网管 &lt;- 主机A</p><ul><li><p><strong>检查ARP表</strong>，如果有主机B的ARP表项，则直接发。并跳过后续步骤</p></li><li><p>如果网关没有主机B的ARP表项，网关会广播<strong>ARP请求</strong>，目标IP地址为主机B的IP地址</p><p>当网关从收到的响应报文中获得主机B的MAC地址后，就可以将报文<strong>发</strong>给主机B；</p></li></ul></li></ol><p>补充：如果目标设备位于其他网络则源设备会在<strong>ARP缓存表中查找网关的MAC地址</strong>，然后将数据发送给网关，网关再把数据转发给目的设备。</p><h2 id="arp缓存表和ttl" tabindex="-1"><a class="header-anchor" href="#arp缓存表和ttl"><span>ARP缓存表和TTL</span></a></h2><h3 id="arp表-arp缓存" tabindex="-1"><a class="header-anchor" href="#arp表-arp缓存"><span>ARP表 / ARP缓存</span></a></h3><p>几个不同的叫法：ARP表 / ARP缓存 (ARP Cache) / ARP缓存表。而缓存的过程又叫ARP表的学习</p><p>网络设备一般都有一个ARP缓存（除了收发设备有，路由网关自己也会有），ARP缓存用来存放IP地址和MAC地址的关联信息。</p><ul><li>在发送数据前，设备会先查找ARP缓存表。 <ul><li>如果缓存表中存在对方设备的MAC地址，则直接采用该MAC地址来封装帧，然后将帧发送出去。</li><li>如果缓存表中不存在相应的信息，则通过发送ARP request报文来获得它。</li></ul></li><li>学习到的IP地址和MAC地址的映射关系会被放入ARP缓存表中存放<strong>一段时间</strong>。 <ul><li>在有效期内，设备可以直接从这个表中查找目的MAC地址来进行数据封装，而无需进行ARP查询。</li><li>过了这段有效期，ARP表现会被自动删除。</li></ul></li></ul><p>ARP表项又分为：</p><ul><li>动态ARP表项</li><li>静态ARP表项 <ul><li>长静态ARP表项</li><li>短静态ARP表项</li></ul></li></ul><h3 id="动态arp表项、静态arp表项" tabindex="-1"><a class="header-anchor" href="#动态arp表项、静态arp表项"><span>动态ARP表项、静态ARP表项</span></a></h3><h4 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h4><ul><li><p>动态ARP表项</p><ul><li><p>由ARP协议通过ARP报文<strong>自动生成和维护</strong>，可以被<strong>老化</strong>，可以被新的ARP报文<strong>更新</strong>，可以被静态ARP表项<strong>覆盖</strong>。</p><p>一般情况下，ARP动态执行并自动寻求IP地址到以太网MAC地址的解析，无需管理员的介入。</p></li></ul></li><li><p>静态ARP表项</p><ul><li>通过<strong>手工配置和维护</strong>，不会被老化，不会被动态ARP表项覆盖。直到重新启动计算机为止。</li><li>配置静态ARP表项可以增加通信的<strong>安全性</strong>。静态ARP表项可以限制和指定IP地址的设备通信时只使用指定的MAC地址，此时攻击报文无法修改此表项的IP地址和MAC地址的映射关系，从而保护了本设备和指定设备间的正常通信。</li></ul></li></ul><h4 id="动态arp-生命周期-老化机制" tabindex="-1"><a class="header-anchor" href="#动态arp-生命周期-老化机制"><span>动态ARP - 生命周期 (老化机制)</span></a></h4><p>新加到缓存中的项目带有时间戳，每个动态ARP缓存项的潜在生命周期是<strong>10分钟</strong></p><p>如果某个项目添加后2分钟内没有再使用，则此项目过期并从ARP缓存中删除；</p><p>如果某个项目已在使用，则又收到2分钟的生命周期；如果某个项目始终在使用，则会另外收到2分钟的生命周期，一直到10分钟的最长生命周期。</p><h4 id="静态arp-短静态arp表项的配置" tabindex="-1"><a class="header-anchor" href="#静态arp-短静态arp表项的配置"><span>静态ARP - 短静态ARP表项的配置</span></a></h4><p>静态ARP表项分为短静态ARP表项和长静态ARP表项：</p><ul><li>配置项：只需要配置IP地址和MAC地址项。 <ul><li>如果出接口是三层以太网接口，短静态ARP表项可以直接用于报文转发；</li><li>如果出接口是VLAN虚接口，短静态ARP表项不能直接用于报文转发，当要发送IP数据包时，先发送ARP请求报文，如果收到的响应报文中的源IP地址和源MAC地址与所配置的IP地址和MAC地址相同，则将接收ARP响应报文的接口加入该静态ARP表项中，之后就可以用于IP数据包的转发</li></ul></li><li>选用：当希望设备和指定用户只能使用某个固定的IP地址和MAC地址通信时，可以配置短静态ARP表项</li></ul><h4 id="静态arp-长静态arp表项的配置" tabindex="-1"><a class="header-anchor" href="#静态arp-长静态arp表项的配置"><span>静态ARP - 长静态ARP表项的配置</span></a></h4><ul><li>配置项：除了配置IP地址和MAC地址项外，还必须配置该ARP表项所在VLAN和出接口。长静态ARP表项可以直接用于报文转发</li><li>选用：当进一步希望限定这个用户只在某VLAN内的某个特定接口上连接时，可以配置长静态ARP表项</li></ul><h2 id="arp报文格式" tabindex="-1"><a class="header-anchor" href="#arp报文格式"><span>ARP报文格式</span></a></h2><p>在局域网中，当主机或其它网络设备有数据要发送给另一个主机或设备时，它必须知道对方的网络层地址（即IP地址）。但是仅仅有IP地址是不够的，因为IP数据报文必须封装成帧才能通过物理网络发送，因此发送站还必须有接收站的物理地址，所以需要一个从IP地址到物理地址的映射。APR就是实现这个功能的协议。</p><p>ARP协议是通过报文进行工作的，是一个<strong>独立的三层协议</strong>，所以ARP报文在向数据链路层传输时<strong>不需要经过IP协议的封装</strong>，而是直接生成自己的报文，其中包括ARP报头，到数据链路层后再由对应的数据链路层协议（如以太网协议）进行封装。</p><p>ARP报文分为ARP请求和ARP应答报文两种，它们的报文格式可以统一为下图所示。</p><p>下图中，前面Ethernet Address of destination、Ethernet Address of sender、Frame Type 属于数据链路层的封装，往后的就是真正的ARP报文数据结构。</p><p><img src="'+o+'" alt="img" loading="lazy"></p><h3 id="arp请求" tabindex="-1"><a class="header-anchor" href="#arp请求"><span>ARP请求</span></a></h3><p>下面是Wireshark抓的ARP请求报文，大家可以看到：</p><ul><li>数据链路层的 Ethernet Address of destination是<strong>全ff</strong>，说明这是一个<strong>广播包</strong>，是为了获取指定IP的MAC地址</li><li>可以看到ARP包中的Target IP address是192.168.0.7</li><li>但Target MAC address是<strong>全0</strong>，说明当前还<strong>不知道目标主机的MAC地址</strong></li><li>Opcode为1，说明这是一个ARP请求报文</li></ul><p><img src="'+t+'" alt="img" loading="lazy"></p><h3 id="arp响应" tabindex="-1"><a class="header-anchor" href="#arp响应"><span>ARP响应</span></a></h3><p>下面是Wireshark抓的ARP响应报文，大家参照上面的报文格式解析一下咯：</p><p><img src="'+n+'" alt="img" loading="lazy"></p><h3 id="免费arp" tabindex="-1"><a class="header-anchor" href="#免费arp"><span>免费ARP</span></a></h3><p>免费 ARP（Gratuitous ARP）包是一种<strong>特殊</strong>的ARP请求。 它并非期待得到IP对应的 MAC 地址，而是当主机启动的时候，发送一个 Gratuitous ARP请求，即<strong>请求自己的IP地址的MAC地址</strong>。</p><p><img src="'+A+'" alt="img" loading="lazy"></p><p>与普通ARP的区别：（在于报文中的目标IP地址）</p><ul><li>普通ARP报文中的目标IP地址是其他主机的IP地址</li><li>而免费ARP的请求报文中，目标IP地址是自己的IP地址。</li></ul><p>三个作用：</p><ul><li>该类型报文起到一个<strong>宣告</strong>作用。它以广播的形式将数据包发送出去，不需要得到回应，只为了告诉其他计算机自己的IP地址和MAC地址。</li><li>可用于<strong>检测IP地址冲突</strong>。当一台主机发送了免费ARP请求报文后，如果收到了ARP响应报文，则说明网络内已经存在使用该IP地址的主机。</li><li>可用于<strong>更新其他主机</strong>的ARP缓存表。如果该主机更换了网卡，而其他主机的ARP缓存表仍然保留着原来的MAC地址。这时，可以发送免费的 ARP数据包。其他主机收到该数据包后，将更新ARP缓存表，将原来的 MAC地址替换为新的MAC地址。</li></ul><h2 id="其他用途" tabindex="-1"><a class="header-anchor" href="#其他用途"><span>其他用途</span></a></h2><h3 id="arp代理" tabindex="-1"><a class="header-anchor" href="#arp代理"><span>ARP代理</span></a></h3><p>当局域网内部主机发起跨网段的ARP请求时，出口路由器/网关设备将自身MAC地址回复该请求时，这个过程称为代理ARP。（eg：1.没有路由功能的主机；2.有路由功能，目的地指向本地出口）</p><p>地址解析协议工作在一个网段中，而代理ARP（Proxy ARP，也被称作混杂ARP（Promiscuous ARP））工作在不同的网段间，其一般被像路由器这样的设备使用，用来代替处于另一个网段的主机回答本网段主机的ARP请求。</p><p>例如，主机PC1（192.168.20.66/24）需要向主机PC2（192.168.20.20/24）发送报文，因为主机PC1不知道子网的存在且和目标主机PC2在同一主网络网段，所以主机PC1将发送ARP协议请求广播报文请求192.168.20.20的MAC地址。这时，路由器将识别出报文的目标地址属于另一个子网（注意，路由器的接口IP地址配置的是28位的掩码），因此向请求主机回复自己的硬件地址（0004.dd9e.cca0）。之后，PC1将发往PC2的数据包都发往MAC地址0004.dd9e.cca0（路由器的接口E0/0），由路由器将数据包转发到目标主机PC2。（接下来路由器将为PC2做同样的代理发送数据包的工作）。代理ARP协议使得子网化网络拓扑对于主机来说是透明的（或者可以说是路由器以一个不真实的PC2的MAC地址欺骗了源主机PC1）。</p><h3 id="arp欺骗" tabindex="-1"><a class="header-anchor" href="#arp欺骗"><span>ARP欺骗</span></a></h3><p>地址解析协议是建立在网络中各个主机互相信任的基础上的，它的诞生使得网络能够更加高效的运行，但其本身也存在缺陷：</p><p>ARP地址转换表是依赖于计算机中高速缓冲存储器动态更新的，而高速缓冲存储器的更新是受到更新周期的限制的，只保存最近使用的地址的映射关系表项，这使得攻击者有了可乘之机，可以在高速缓冲存储器更新表项之前修改地址转换表，实现攻击。ARP请求为广播形式发送的，网络上的主机可以自主发送ARP应答消息，并且当其他主机收到应答报文时不会检测该报文的真实性就将其记录在本地的MAC地址转换表，这样攻击者就可以向目标主机发送伪ARP应答报文，从而篡改本地的MAC地址表。ARP欺骗可以导致目标计算机与网关通信失败，更会导致通信重定向，所有的数据都会通过攻击者的机器，因此存在极大的安全隐患。</p><p><strong>「防御措施」</strong></p><ul><li>不要把网络安全信任关系建立在IP基础上或MAC基础上（RARP同样存在欺骗的问题），理想的关系应该建立在IP+MAC基础上。</li><li>设置静态的MAC--&gt;IP对应表，不要让主机刷新设定好的转换表。</li><li>除非很有必要，否则停止使用ARP，将ARP做为永久条目保存在对应表中。</li><li>使用ARP服务器。通过该服务器查找自己的ARP转换表来响应其他机器的ARP广播。确保这台ARP服务器不被黑。</li><li>使用“proxy”代理IP的传输。</li><li>使用硬件屏蔽主机。设置好路由，确保IP地址能到达合法的路径（静态配置路由ARP条目），注意，使用交换集线器和网桥无法阻止ARP欺骗。</li><li>管理员定期用响应的IP包中获得一个RARP请求，然后检查ARP响应的真实性。</li><li>管理员定期轮询，检查主机上的ARP缓存。</li><li>使用防火墙连续监控网络。注意有使用SNMP的情况下，ARP的欺骗有可能导致陷阱包丢失。</li><li>若感染ARP病毒，可以通过清空ARP缓存、指定ARP对应关系、添加路由信息、使用防病毒软件等方式解决。</li></ul><h3 id="arp攻击" tabindex="-1"><a class="header-anchor" href="#arp攻击"><span>ARP攻击</span></a></h3><p>ARP协议的基本功能就是通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的进行。基于ARP协议的这一工作特性，黑客向对方计算机不断发送有欺诈性质的ARP数据包，数据包内包含有与当前设备重复的Mac地址，使对方在回应报文时，由于简单的地址重复错误而导致不能进行正常的网络通信，或者如果不及时处理，便会造成网络通道阻塞、网络设备的承载过重、网络的通讯质量不佳等情况。。</p><p>一般情况下，受到ARP攻击的计算机会出现两种现象：</p><ol><li>不断弹出“本机的XXX段硬件地址与网络中的XXX段地址冲突”的对话框。</li><li>计算机不能正常上网，出现网络中断的症状。</li></ol><p>因为这种攻击是利用ARP请求报文进行“欺骗”的，所以防火墙会误以为是正常的请求数据包，不予拦截。因此普通的防火墙很难抵挡这种攻击。</p><p><strong>ARP 是一种非常不安全的协议</strong>，目前已经有很多涉及 ARP 的攻击，最主要的就是使用代理 ARP 功能假扮主机，对 ARP 请求作出应答，通过伪造 ARP 数据包来窃取合法用户的通信数据，造成影响网络传输速率和盗取用户隐私信息等严重危害。</p><p>ARP 主要攻击方式分为下面这几种：</p><ul><li><code>ARP 泛洪攻击</code>：通过向网关发送大量 ARP 报文，导致网关无法正常响应。首先发送大量的 ARP 请求报文，然后又发送大量虚假的 ARP 响应报文，从而造成网关部分的 CPU 利用率上升难以响应正常服务请求，而且网关还会被错误的 ARP 缓存表充满导致无法更新维护正常 ARP 缓存表，消耗网络带宽资源。</li><li><code>ARP 欺骗主机攻击</code>：ARP 欺骗主机的攻击也是 ARP 众多攻击类型中很常见的一种。攻击者通过 ARP 欺骗使得局域网内被攻击主机发送给网关的流量信息实际上都发送给攻击者。主机刷新自己的 ARP 使得在自己的ARP 缓存表中对应的 MAC 为攻击者的 MAC，这样一来其他用户要通过网关发送出去的数据流就会发往主机这里，这样就会造成用户的数据外泄。</li><li><code>欺骗网关的攻击</code>: 欺骗网关就是把别的主机发送给网关的数据通过欺骗网关的形式使得这些数据通过网关发送给攻击者。这种攻击目标选择的不是个人主机而是局域网的网关，这样就会攻击者源源不断的获取局域网内其他用户韵数据．造成数据的泄露，同时用户电脑中病毒的概率也会提升。</li><li><code>中间人攻击</code>: 中间人攻击是同时欺骗局域网内的主机和网关，局域网中用户的数据和网关的数据会发给同一个攻击者，这样，用户与网关的数据就会泄露。</li><li><code>IP地址冲突攻击</code>: 通过对局域网中的物理主机进行扫描，扫描出局域网中的物理主机的 MAC 地址，然后根据物理主机的 MAC 进行攻击，导致局域网内的主机产生 IP 地址冲突，影响用户的网络正常使用。</li></ul>',79)]))}const h=l(p,[["render",s],["__file","0826 ARP.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E5%B8%B8%E7%94%A8%E5%8D%8F%E8%AE%AE/RFC/0826%20ARP.html","title":"ARP（地址解析协议，Address Resolution  Protocol）","lang":"zh-CN","frontmatter":{"description":"ARP（地址解析协议，Address Resolution Protocol） 参考 彻底搞懂系列之：ARP协议（Good） 什么是ARP？（可以作为补充，有一些概念我还没去了解：更深入的 路由式Proxy ARP、VLAN内Proxy ARP、ARP老化机制 等） （图片缺失） 概念 一些概念 定义 地址解析协议，即ARP（Address Resol...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E5%B8%B8%E7%94%A8%E5%8D%8F%E8%AE%AE/RFC/0826%20ARP.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"ARP（地址解析协议，Address Resolution  Protocol）"}],["meta",{"property":"og:description","content":"ARP（地址解析协议，Address Resolution Protocol） 参考 彻底搞懂系列之：ARP协议（Good） 什么是ARP？（可以作为补充，有一些概念我还没去了解：更深入的 路由式Proxy ARP、VLAN内Proxy ARP、ARP老化机制 等） （图片缺失） 概念 一些概念 定义 地址解析协议，即ARP（Address Resol..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ARP（地址解析协议，Address Resolution  Protocol）\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"ARP（地址解析协议，Address Resolution  Protocol）","slug":"arp-地址解析协议-address-resolution-protocol","link":"#arp-地址解析协议-address-resolution-protocol","children":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[{"level":3,"title":"一些概念","slug":"一些概念","link":"#一些概念","children":[]},{"level":3,"title":"沟通L2和L3","slug":"沟通l2和l3","link":"#沟通l2和l3","children":[]},{"level":3,"title":"OSI定位问题","slug":"osi定位问题","link":"#osi定位问题","children":[]}]},{"level":2,"title":"工作过程","slug":"工作过程","link":"#工作过程","children":[{"level":3,"title":"工作过程","slug":"工作过程-1","link":"#工作过程-1","children":[]},{"level":3,"title":"跨网段","slug":"跨网段","link":"#跨网段","children":[]}]},{"level":2,"title":"ARP缓存表和TTL","slug":"arp缓存表和ttl","link":"#arp缓存表和ttl","children":[{"level":3,"title":"ARP表 / ARP缓存","slug":"arp表-arp缓存","link":"#arp表-arp缓存","children":[]},{"level":3,"title":"动态ARP表项、静态ARP表项","slug":"动态arp表项、静态arp表项","link":"#动态arp表项、静态arp表项","children":[{"level":4,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":4,"title":"动态ARP - 生命周期 (老化机制)","slug":"动态arp-生命周期-老化机制","link":"#动态arp-生命周期-老化机制","children":[]},{"level":4,"title":"静态ARP - 短静态ARP表项的配置","slug":"静态arp-短静态arp表项的配置","link":"#静态arp-短静态arp表项的配置","children":[]},{"level":4,"title":"静态ARP - 长静态ARP表项的配置","slug":"静态arp-长静态arp表项的配置","link":"#静态arp-长静态arp表项的配置","children":[]}]}]},{"level":2,"title":"ARP报文格式","slug":"arp报文格式","link":"#arp报文格式","children":[{"level":3,"title":"ARP请求","slug":"arp请求","link":"#arp请求","children":[]},{"level":3,"title":"ARP响应","slug":"arp响应","link":"#arp响应","children":[]},{"level":3,"title":"免费ARP","slug":"免费arp","link":"#免费arp","children":[]}]},{"level":2,"title":"其他用途","slug":"其他用途","link":"#其他用途","children":[{"level":3,"title":"ARP代理","slug":"arp代理","link":"#arp代理","children":[]},{"level":3,"title":"ARP欺骗","slug":"arp欺骗","link":"#arp欺骗","children":[]},{"level":3,"title":"ARP攻击","slug":"arp攻击","link":"#arp攻击","children":[]}]}]}],"git":{},"readingTime":{"minutes":17.65,"words":5295},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/常用协议/RFC/0826 ARP.md","excerpt":"\\n<p>参考</p>\\n<ul>\\n<li><a href=\\"https://zhuanlan.zhihu.com/p/370507243\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">彻底搞懂系列之：ARP协议</a>（Good）</li>\\n<li><a href=\\"https://info.support.huawei.com/info-finder/encyclopedia/zh/ARP.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">什么是ARP？</a>（可以作为补充，有一些概念我还没去了解：更深入的 路由式Proxy ARP、VLAN内Proxy ARP、ARP老化机制 等）</li>\\n<li><s><a href=\\"https://www.cnblogs.com/cxuanBlog/p/14265315.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">一文详解 ARP 协议</a></s>（图片缺失）</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/常用协议/RFC/0826 ARP.md","value":{"title":"0826 ARP","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/常用协议/RFC/0826 ARP.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{h as comp,d as data};
