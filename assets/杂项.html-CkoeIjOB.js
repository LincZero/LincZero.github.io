import{_ as t,c as p,e as s,a,d as o,b as c,o as l,r as i}from"./app-Cv0SG700.js";const u="/assets/image-20240920224341829-Cl9PikfT.png",r={},d={href:"https://github.com/vuepress/ecosystem/blob/b7ab87b954d40036b3ceae05f645191a4dc571d1/plugins/features/plugin-copy-code/src/client/composables/useCopyCode.ts",target:"_blank",rel:"noopener noreferrer"};function k(v,n){const e=i("ExternalLinkIcon");return l(),p("div",null,[n[1]||(n[1]=s(`<h1 id="杂项" tabindex="-1"><a class="header-anchor" href="#杂项"><span>杂项</span></a></h1><h2 id="资源大纲问题" tabindex="-1"><a class="header-anchor" href="#资源大纲问题"><span>资源大纲问题</span></a></h2><p>大佬们，问个问题：</p><h3 id="_1-我的需求" tabindex="-1"><a class="header-anchor" href="#_1-我的需求"><span>1. 我的需求</span></a></h3><p>要求同时具有文件资源管理器列和文章大纲列的（通过插件实现的也行），同时要求可以支持嵌套结构比较复杂以及md笔记数比较多的情况。</p><p>说人话就是这种效果： ![img](file:///C:\\Users\\A\\AppData\\Roaming\\Tencent\\Users\\762699299\\QQ\\WinTemp\\RichOle]QLT%NG1[)5Y0NQ3HX69~OD.png)</p><h3 id="_2-相关插件" tabindex="-1"><a class="header-anchor" href="#_2-相关插件"><span>2. 相关插件</span></a></h3><p>关于vuepress资源文件夹和大纲，我只搜出来下面几个相关插件：</p><ol><li>![img](file:///C:\\Users\\A\\AppData\\Roaming\\Tencent\\QQTempSys[5UQ[BL(6~BS2JV6W}N6[%S.png)https://github.com/ekoeryanto/vuepress-plugin-table-of-contents （失效了，这个链接gpt给我的）</li><li>![img](file:///C:\\Users\\A\\AppData\\Roaming\\Tencent\\QQTempSys[5UQ[BL(6~BS2JV6W}N6[%S.png)https://github.com/vuepress/vuepress-plugin-table-of-contents 这个好像用不了？</li><li>![img](file:///C:\\Users\\A\\AppData\\Roaming\\Tencent\\QQTempSys[5UQ[BL(6~BS2JV6W}N6[%S.png)https://github.com/shanyuhai123/vuepress-plugin-auto-sidebar 这个我感觉很怪。 一来有bug 结构会莫名其妙乱掉 二来我接受不了文件和大纲共用一个栏，我要分开，而auto-sidebar的是共用的</li><li>![img](file:///C:\\Users\\A\\AppData\\Roaming\\Tencent\\QQTempSys[5UQ[BL(6~BS2JV6W}N6[%S.png)https://github.com/xuekai-china/vuepress-plugin-right-anchor 这个应该是能用的</li></ol><h3 id="_3-其他补充" tabindex="-1"><a class="header-anchor" href="#_3-其他补充"><span>3. 其他补充</span></a></h3><p>vuepress-theme-hope 官网的其实比较接近我想要的（可能还需要自己微调，比如说我要把点开另一个位置时原来的位置自动折叠回去这一特性给咔掉） 官网页面好像不开源，所以我来问一下：这个左栏是自动生成的还是手写的，用的什么解决方案？</p><p>开头说了，一千多个.md，且嵌套结构复杂。不适合 如果实在没法，感觉哪怕使用一个批处理工具生成个txt出来，再手动复制进去都更方便（就是每次更新都要重复一次这个动作比较难受）</p><h2 id="文档页脚本问题" tabindex="-1"><a class="header-anchor" href="#文档页脚本问题"><span>文档页脚本问题</span></a></h2><h3 id="需求" tabindex="-1"><a class="header-anchor" href="#需求"><span>需求</span></a></h3><blockquote><p>如果我想要绑定一段js代码，在新的文档页加载出来后执行，可以放在哪？</p><p>有对应的钩子吗？</p><p>举个具体的例子： 例如检测当前dom元素中有.classA的元素，如果高度&gt;600px则将其折叠 每次页面加载后自动执行这么一段js代码</p></blockquote><h3 id="head属性" tabindex="-1"><a class="header-anchor" href="#head属性"><span>head属性</span></a></h3><p>https://theme-hope.vuejs.press/zh/guide/customize/external.html</p><p>其中可以在配置文件中设置head属性，导入外部脚本。但不知道对应的监听事件，没办法解决</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  head<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// 导入一个外部脚本</span>
    <span class="token punctuation">[</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> src<span class="token operator">:</span> <span class="token string">&quot;YOUR_SCRIPT_LINK&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 添加一段脚本</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;script&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\
        // your script here
      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 添加一个外部 CSS</span>
    <span class="token punctuation">[</span><span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> rel<span class="token operator">:</span> <span class="token string">&quot;stylesheet&quot;</span><span class="token punctuation">,</span> href<span class="token operator">:</span> <span class="token string">&quot;YOUR_STYLE_LINK&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 添加一段样式</span>
    <span class="token comment">// 我们不建议这么做，你应该首选使用 .vuepress/style/index.scss</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\
        /* your style here */
      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插件api-hook" tabindex="-1"><a class="header-anchor" href="#插件api-hook"><span>插件API Hook</span></a></h3><p>https://v2.vuepress.vuejs.org/zh/reference/plugin-api.html</p><p>然后尝试了下看插件API有没有对应的Hook，但没找到我想要的 “文档被客户端加载” 的事件</p><p>只有什么：</p><ul><li>onInitialized： 在 VuePress App 初始化后被立即调用</li><li>onPrepared： 在 VuePress App 完成文件准备后被立即调用</li><li>onWatched： 在 VuePress App 启动开发服务器并开始监听文件修改后被调用</li><li>onGenerated： 在 VuePress App 完成静态文件生成后被立即调用</li></ul><h3 id="参考复制button的做法" tabindex="-1"><a class="header-anchor" href="#参考复制button的做法"><span>参考复制button的做法</span></a></h3><h4 id="效果" tabindex="-1"><a class="header-anchor" href="#效果"><span>效果</span></a></h4><p>最后Mr.Hope大佬建议我看复制按钮的实现：</p><ul><li>参考代码页面：https://github.com/vuepress/ecosystem/blob/b7ab87b954d40036b3ceae05f645191a4dc571d1/plugins/features/plugin-copy-code/src/client/composables/useCopyCode.ts</li><li>调试页面：https://theme-hope.vuejs.press/zh/guide/customize/external.html</li></ul><p><img src="`+u+'" alt="image-20240920224341829" loading="lazy"></p><p>首先通过调试页面可以发现，button元素确实是后来才被加载进去的。浏览器调试工具&gt;网络 中发现 https://theme-hope.vuejs.press/zh/guide/customize/external.html 的dom结构本身并不包含该元素。能实现这个效果也就能实现我想要的效果</p><h4 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h4><p>既然知道了这种方法可以实现，那么我们再来看他具体是怎么实现的</p>',32)),a("p",null,[a("a",d,[n[0]||(n[0]=o("ecosystem/plugins/features/plugin-copy-code/src/client/composables/useCopyCode.ts")),c(e)])]),n[2]||(n[2]=s(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useLocaleConfig<span class="token punctuation">,</span> wait <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/helper/client&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useClipboard<span class="token punctuation">,</span> useEventListener<span class="token punctuation">,</span> useMediaQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> nextTick<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> usePageData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> CopyCodePluginLocaleConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../shared/index.js&#39;</span>

<span class="token keyword">import</span> <span class="token string">&#39;../styles/copy-code.css&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;../styles/vars.css&#39;</span>

<span class="token doc-comment comment">/**
 * 配置项
 */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UseCopyCodeOptions</span> <span class="token punctuation">{</span>
  locales<span class="token operator">:</span> CopyCodePluginLocaleConfig
  <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token doc-comment comment">/** <span class="token keyword">@default</span> 500 */</span>
  delay<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token doc-comment comment">/** <span class="token keyword">@default</span> 2000 */</span>
  duration<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token doc-comment comment">/** <span class="token keyword">@default</span> false */</span>
  showInMobile<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
  <span class="token doc-comment comment">/** <span class="token keyword">@default</span> [] */</span>
  ignoreSelector<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token doc-comment comment">/**
   * 在复制前变换预元素
   *
   * 例如，在复制之前删除某些元素，或插入版权信息
   *
   * <span class="token keyword">@param</span> <span class="token parameter">preElement</span> \`&lt;pre&gt;\` clone Node
   *
   * <span class="token keyword">@example</span>
   * \`\`\`js
   * <span class="token punctuation">{</span>
   *   transform(pre) <span class="token punctuation">{</span>
   *     // Remove all \`.ignore\` elements
   *     pre.querySelectorAll(&#39;.ignore&#39;).remove()
   *     // insert copyright
   *     pre.innerHTML += \`\\n Copied by VuePress\`
   *   <span class="token punctuation">}</span>
   * <span class="token punctuation">}</span>
   * \`\`\`
   */</span>
  transform<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>preElement<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token constant">SHELL_RE</span> <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">language-(shellscript|shell|bash|sh|zsh)</span><span class="token regex-delimiter">/</span></span>

<span class="token doc-comment comment">/**
 * 被./index.ts调用被export
 *
 * 调用周期：猜测只会在全局被调用一次？
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> useCopyCode <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  delay <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span>
  duration <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">,</span>
  locales<span class="token punctuation">,</span>
  selector<span class="token punctuation">,</span>
  showInMobile<span class="token punctuation">,</span>
  ignoreSelector <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  transform<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> UseCopyCodeOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>__VUEPRESS_SSR__<span class="token punctuation">)</span> <span class="token keyword">return</span>

  <span class="token doc-comment comment">/**
   * 一些参数准备
   * 在小屏幕设备上，默认情况下不显示复制按钮，以防止它阻碍内容，因为“:hover”效果可以由“touch”事件触发
   */</span>
  <span class="token keyword">const</span> is419 <span class="token operator">=</span> <span class="token function">useMediaQuery</span><span class="token punctuation">(</span><span class="token string">&#39;(max-width: 419px)&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> enabled <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>is419<span class="token punctuation">.</span>value <span class="token operator">||</span> showInMobile<span class="token punctuation">)</span>
  <span class="token keyword">const</span> locale <span class="token operator">=</span> <span class="token function">useLocaleConfig</span><span class="token punctuation">(</span>locales<span class="token punctuation">)</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token function">usePageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">/*
   * (下一个函数的子函数，被下一个函数递归调用)
   *
   * 局部 - 插入复制按钮
   *
   * @param codeBlockElement 对应的代码块
   */</span>
  <span class="token keyword">const</span> insertCopyButton <span class="token operator">=</span> <span class="token punctuation">(</span>codeBlockElement<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>codeBlockElement<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;copy-code&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">const</span> copyElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span>
    copyElement<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;button&#39;</span>
    copyElement<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;vp-copy-code-button&#39;</span><span class="token punctuation">)</span>
    copyElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;aria-label&#39;</span><span class="token punctuation">,</span> locale<span class="token punctuation">.</span>value<span class="token punctuation">.</span>copy<span class="token punctuation">)</span>
    copyElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-copied&#39;</span><span class="token punctuation">,</span> locale<span class="token punctuation">.</span>value<span class="token punctuation">.</span>copied<span class="token punctuation">)</span>
    codeBlockElement<span class="token punctuation">.</span>parentElement<span class="token operator">?.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>copyElement<span class="token punctuation">,</span> codeBlockElement<span class="token punctuation">)</span>
    codeBlockElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;copy-code&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * 全局 - 追加复制按钮
   * 
   * 调用频率：每个页面加载出来后被调用一次
   */</span>
  <span class="token keyword">const</span> appendCopyButton <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">&#39;no-copy-code&#39;</span><span class="token punctuation">,</span> <span class="token operator">!</span>enabled<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>enabled<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">wait</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span>
    document
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelectorAll</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>selector<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>insertCopyButton<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * 【重点】
   * 事件触发的开始位置 ---------------------------------------------------------
   * 
   * 注意这里的watch需要有vue组件的支持
   * 
   * 每个页面加载出来后会自动调用一次。原理：监听 page.value.path 和 enabled.value，两个值中任意一个发生变化时触发
   */</span>
  <span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>page<span class="token punctuation">.</span>value<span class="token punctuation">.</span>path<span class="token punctuation">,</span> enabled<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">,</span> appendCopyButton<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    immediate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> copy <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useClipboard</span><span class="token punctuation">(</span><span class="token punctuation">{</span> legacy<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> timeoutIdMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap<span class="token operator">&lt;</span>HTMLElement<span class="token punctuation">,</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> setTimeout<span class="token operator">&gt;&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// (下一个函数的子函数)</span>
  <span class="token keyword">const</span> copyContent <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>
    codeContainer<span class="token operator">:</span> HTMLDivElement<span class="token punctuation">,</span>
    codeContent<span class="token operator">:</span> HTMLPreElement<span class="token punctuation">,</span>
    button<span class="token operator">:</span> HTMLButtonElement<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> clone <span class="token operator">=</span> codeContent<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLPreElement
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ignoreSelector<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      clone<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span>ignoreSelector<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>transform<span class="token punctuation">)</span> <span class="token function">transform</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span>
    <span class="token keyword">let</span> text <span class="token operator">=</span> clone<span class="token punctuation">.</span>textContent <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">SHELL_RE</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>codeContainer<span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span>
      text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^ *(\\$|&gt;) </span><span class="token regex-delimiter">/</span><span class="token regex-flags">gm</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">copy</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>duration <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    button<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;copied&#39;</span><span class="token punctuation">)</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeoutIdMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> timeoutId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      button<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;copied&#39;</span><span class="token punctuation">)</span>
      button<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      timeoutIdMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> duration<span class="token punctuation">)</span>
    timeoutIdMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> timeoutId<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 事件监听：按钮点击事件 (靠class识别是否按钮) */</span>
  <span class="token function">useEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> el <span class="token operator">=</span> event<span class="token punctuation">.</span>target <span class="token keyword">as</span> HTMLElement
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      enabled<span class="token punctuation">.</span>value <span class="token operator">&amp;&amp;</span>
      el<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">&#39;div[class*=&quot;language-&quot;] &gt; button.vp-copy-code-button&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> codeContainer <span class="token operator">=</span> el<span class="token punctuation">.</span>parentElement <span class="token keyword">as</span> HTMLDivElement <span class="token operator">|</span> <span class="token keyword">null</span>
      <span class="token keyword">const</span> preBlock <span class="token operator">=</span> el<span class="token punctuation">.</span>nextElementSibling <span class="token keyword">as</span> HTMLPreElement <span class="token operator">|</span> <span class="token keyword">null</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>codeContainer <span class="token operator">||</span> <span class="token operator">!</span>preBlock<span class="token punctuation">)</span> <span class="token keyword">return</span>
      <span class="token keyword">void</span> <span class="token function">copyContent</span><span class="token punctuation">(</span>codeContainer<span class="token punctuation">,</span> preBlock<span class="token punctuation">,</span> el <span class="token keyword">as</span> HTMLButtonElement<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])}const b=t(r,[["render",k],["__file","杂项.html.vue"]]),g=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/09.%20%E5%85%B6%E4%BB%96/%E6%9D%82%E9%A1%B9.html","title":"杂项","lang":"zh-CN","frontmatter":{"description":"杂项 资源大纲问题 大佬们，问个问题： 1. 我的需求 要求同时具有文件资源管理器列和文章大纲列的（通过插件实现的也行），同时要求可以支持嵌套结构比较复杂以及md笔记数比较多的情况。 说人话就是这种效果： ![img](file:///C:\\\\Users\\\\A\\\\AppData\\\\Roaming\\\\Tencent\\\\Users\\\\762699299\\\\QQ\\\\WinTe...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/09.%20%E5%85%B6%E4%BB%96/%E6%9D%82%E9%A1%B9.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"杂项"}],["meta",{"property":"og:description","content":"杂项 资源大纲问题 大佬们，问个问题： 1. 我的需求 要求同时具有文件资源管理器列和文章大纲列的（通过插件实现的也行），同时要求可以支持嵌套结构比较复杂以及md笔记数比较多的情况。 说人话就是这种效果： ![img](file:///C:\\\\Users\\\\A\\\\AppData\\\\Roaming\\\\Tencent\\\\Users\\\\762699299\\\\QQ\\\\WinTe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"file:///C:\\\\Users\\\\A\\\\AppData\\\\Roaming\\\\Tencent\\\\Users\\\\762699299\\\\QQ\\\\WinTemp\\\\RichOle\\\\]QLT%NG1["}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"杂项\\",\\"image\\":[\\"file:///C:\\\\\\\\Users\\\\\\\\A\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Tencent\\\\\\\\Users\\\\\\\\762699299\\\\\\\\QQ\\\\\\\\WinTemp\\\\\\\\RichOle\\\\\\\\]QLT%NG1[\\",\\"file:///C:\\\\\\\\Users\\\\\\\\A\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Tencent\\\\\\\\QQTempSys\\\\\\\\[5UQ[BL(6~BS2JV6W}N6[%S.png\\",\\"file:///C:\\\\\\\\Users\\\\\\\\A\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Tencent\\\\\\\\QQTempSys\\\\\\\\[5UQ[BL(6~BS2JV6W}N6[%S.png\\",\\"file:///C:\\\\\\\\Users\\\\\\\\A\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Tencent\\\\\\\\QQTempSys\\\\\\\\[5UQ[BL(6~BS2JV6W}N6[%S.png\\",\\"file:///C:\\\\\\\\Users\\\\\\\\A\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Tencent\\\\\\\\QQTempSys\\\\\\\\[5UQ[BL(6~BS2JV6W}N6[%S.png\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"杂项","slug":"杂项","link":"#杂项","children":[{"level":2,"title":"资源大纲问题","slug":"资源大纲问题","link":"#资源大纲问题","children":[{"level":3,"title":"1. 我的需求","slug":"_1-我的需求","link":"#_1-我的需求","children":[]},{"level":3,"title":"2. 相关插件","slug":"_2-相关插件","link":"#_2-相关插件","children":[]},{"level":3,"title":"3. 其他补充","slug":"_3-其他补充","link":"#_3-其他补充","children":[]}]},{"level":2,"title":"文档页脚本问题","slug":"文档页脚本问题","link":"#文档页脚本问题","children":[{"level":3,"title":"需求","slug":"需求","link":"#需求","children":[]},{"level":3,"title":"head属性","slug":"head属性","link":"#head属性","children":[]},{"level":3,"title":"插件API Hook","slug":"插件api-hook","link":"#插件api-hook","children":[]},{"level":3,"title":"参考复制button的做法","slug":"参考复制button的做法","link":"#参考复制button的做法","children":[{"level":4,"title":"效果","slug":"效果","link":"#效果","children":[]},{"level":4,"title":"实现","slug":"实现","link":"#实现","children":[]}]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.16,"words":1549},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/09. 其他/杂项.md","excerpt":"\\n<h2>资源大纲问题</h2>\\n<p>大佬们，问个问题：</p>\\n<h3>1. 我的需求</h3>\\n<p>要求同时具有文件资源管理器列和文章大纲列的（通过插件实现的也行），同时要求可以支持嵌套结构比较复杂以及md笔记数比较多的情况。</p>\\n<p>说人话就是这种效果：\\n![img](file:///C:\\\\Users\\\\A\\\\AppData\\\\Roaming\\\\Tencent\\\\Users\\\\762699299\\\\QQ\\\\WinTemp\\\\RichOle]QLT%NG1[)5Y0NQ3HX69~OD.png)</p>\\n<h3>2. 相关插件</h3>\\n<p>关于vuepress资源文件夹和大纲，我只搜出来下面几个相关插件：</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/09. 其他/杂项.md","value":{"title":"杂项","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/09. 其他/杂项.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{b as comp,g as data};
