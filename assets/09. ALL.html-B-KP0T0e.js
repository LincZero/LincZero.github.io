import{_ as d,e as i,g as e,o as a}from"./app-BapqMaOt.js";const s={};function n(r,t){return a(),i("div",null,t[0]||(t[0]=[e(`<h1 id="basicdemo-all" tabindex="-1"><a class="header-anchor" href="#basicdemo-all"><span>BasicDemo_ALL</span></a></h1><h1 id="还没转移完" tabindex="-1"><a class="header-anchor" href="#还没转移完"><span><strong>还没转移完</strong></span></a></h1><p>[toc]</p><h1 id="编程语言命名规范" tabindex="-1"><a class="header-anchor" href="#编程语言命名规范"><span>编程语言命名规范</span></a></h1><h2 id="业界规范" tabindex="-1"><a class="header-anchor" href="#业界规范"><span>业界规范</span></a></h2><table><thead><tr><th>语言</th><th>普通变量</th><th>函数名</th><th>常量</th><th>类名</th><th>其他</th></tr></thead><tbody><tr><td>C/C++</td><td>驼峰<br>下划线<br>大驼峰</td><td>驼峰<br>下划线<br>大驼峰</td><td>大写+下划线</td><td>结构体：大写</td><td>文件名：<code>file_</code>开头<br>指针：<code>ptr_</code>开头<br></td></tr><tr><td>Java</td><td>驼峰<br>下划线<br>帕斯卡</td><td>驼峰</td><td>大写+下划线</td><td>大驼峰</td><td>包名：中文 / 驼峰<br>项目名：<code>java</code>开头<br>接口名：同抽象类、类名<br>异常类：大驼峰+<code>Exception</code>结尾</td></tr><tr><td>Python</td><td>下划线</td><td>下划线</td><td>大写+下划线</td><td>大驼峰<br>模块内部：<code>_</code>+大驼峰</td><td>模块名：下划线，尽量短小<br>包名：尽量短小，不推荐下划线<br>特殊：单/双下划线开头：<strong>见下</strong></td></tr><tr><td>个人习惯</td><td>下划线</td><td><code>fn_</code>下划线</td><td>大写+下划线</td><td>大驼峰</td><td>js文件：小驼峰，Vue：大驼峰<br>偶尔匈牙利：<br><code>str_</code>,<code>json_</code>,<code>ptr_</code>,<code>file_</code>,<code>fn_</code></td></tr></tbody></table><p>Python补充</p><blockquote><p>Python中，使用单下划线开头的模块变量或者函数是受保护的，在使用from xxx import*语句从模块中导入时这些变量或者函数不能被导入</p><p>使用双下划线“__”开头的实例变量或方法是类私有的</p></blockquote><p>文章参考</p><blockquote><p>《各种语言命名规范》https://blog.csdn.net/LCX13141314/article/details/86773700</p></blockquote><h2 id="各类命名法" tabindex="-1"><a class="header-anchor" href="#各类命名法"><span>各类命名法</span></a></h2><blockquote><p>注：业界一般使用<code>帕斯卡</code>称呼的较多，也更为标准。但我认为<code>大驼峰</code>更形象，故多用后者！<code>小驼峰</code>我一般就不加”小“字了</p></blockquote><table><thead><tr><th>命名法</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>驼峰 / 小驼峰 命名法</td><td>首个单词首字母小写，其他单词首字母大写</td><td>printEmployeePaychecks</td></tr><tr><td>帕斯卡 / 大驼峰 命名法</td><td>每个单词首字母大写</td><td>PrintEmployeePaychecks</td></tr><tr><td>下划线命名法</td><td>多个单词使用下划线分隔，单词全小写</td><td>print_employee_paychecks</td></tr><tr><td>大写下划线</td><td>多个单词使用下划线分隔，单词全大写</td><td>CAR_STATUS_1</td></tr><tr><td>匈牙利命名法</td><td>具体见下</td><td></td></tr></tbody></table><p>匈牙利表示法补充：</p><blockquote><p>缺点</p><ol><li>弱类型一般不用，比如：<code>res = JSON.parse(res)</code></li><li>现在的IDE会自动检查变量类型，使用意义不大</li><li>修改变量类型时麻烦</li></ol><p>流派</p><blockquote><p>有应用型匈牙利命名法与系统型匈牙利命名法两种</p><p>应用型（正统、鲜为人知）</p><ul><li>“ix” 表示数组的索引值（index）</li><li>“c” 表示一个计数器（count）</li><li>“d” 表示两个数量之间的差（difference），“dx” 就可以表示宽度</li></ul><p>系统性（流传）</p><ul><li>“l” 表示长整型（long）</li><li>“ul” 表示无符号长整型（unsigned long）</li><li>“dw” 表示双精度值（double word），这实际上也是一个无符号的长整型</li></ul></blockquote><p>但可以作为参考</p></blockquote><p>系统型匈牙利命名法 - 前缀表</p><table><thead><tr><th>前缀</th><th>隐含的数据类型</th><th>说明</th></tr></thead><tbody><tr><td>b</td><td>BOOL</td><td>整型</td></tr><tr><td>by</td><td>BYTE</td><td>无符号字符</td></tr><tr><td>c</td><td>char</td><td>字符</td></tr><tr><td>dw</td><td>DWORD</td><td>无符号长型</td></tr><tr><td>fn</td><td>function</td><td>函数</td></tr><tr><td>h</td><td>HANDLE</td><td>无符号整型</td></tr><tr><td>i</td><td>integer</td><td>整型</td></tr><tr><td>l</td><td>LONG</td><td>长整数型</td></tr><tr><td>lp</td><td>Long pointer</td><td>远指针</td></tr><tr><td>n</td><td>Short（integer）</td><td>整型</td></tr><tr><td>np</td><td>Near pointer</td><td>近指针</td></tr><tr><td>p</td><td>pointer</td><td>指针</td></tr><tr><td>s</td><td>string</td><td>字符串</td></tr><tr><td>sz</td><td>Zero terminated string</td><td>以0结尾的字符串</td></tr><tr><td>w</td><td>WORD</td><td>整数或字</td></tr><tr><td>x,y</td><td>short</td><td>x坐标和y坐标</td></tr><tr><td>cx,cy</td><td>short</td><td>x和y方向长，c代表count（量度）</td></tr></tbody></table><h2 id="常用程序命名" tabindex="-1"><a class="header-anchor" href="#常用程序命名"><span>常用程序命名</span></a></h2><table><thead><tr><th>命名</th><th>说明</th></tr></thead><tbody><tr><td>bar，foo</td><td>[无意义]</td></tr><tr><td>sum</td><td>和</td></tr><tr><td>product</td><td>积</td></tr><tr><td>count</td><td>计数</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>size</td><td>大小</td></tr><tr><td>parameter/argument</td><td>参数</td></tr></tbody></table><h2 id="常用程序缩写" tabindex="-1"><a class="header-anchor" href="#常用程序缩写"><span>常用程序缩写</span></a></h2><table><thead><tr><th>缩写</th><th>全拼</th><th>说明</th></tr></thead><tbody><tr><td>tmp</td><td>temp</td><td>临时变量</td></tr><tr><td>flg</td><td>flag</td><td>标志</td></tr><tr><td>stat</td><td>statistic</td><td>统计</td></tr><tr><td>inc</td><td>increment</td><td>加1</td></tr><tr><td>dec</td><td>decrement</td><td>减1</td></tr><tr><td>msg</td><td>message</td><td>信息</td></tr><tr><td>val</td><td>value</td><td>值</td></tr><tr><td>add</td><td>addition</td><td>加</td></tr><tr><td>sub</td><td>subtraction</td><td>减</td></tr><tr><td>mul</td><td>multiplication</td><td>乘</td></tr><tr><td>div</td><td>divide</td><td>除</td></tr><tr><td>mod</td><td>modulus</td><td>取余</td></tr><tr><td>pos</td><td>position</td><td>位置</td></tr><tr><td>idx</td><td>index</td><td>位置</td></tr><tr><td>arr</td><td>array</td><td>数组</td></tr></tbody></table><h1 id="编程语言其他规范" tabindex="-1"><a class="header-anchor" href="#编程语言其他规范"><span>编程语言其他规范</span></a></h1><h2 id="社区规范" tabindex="-1"><a class="header-anchor" href="#社区规范"><span>社区规范</span></a></h2><blockquote><p>这个每个语言都不同，而且可能有几套，且篇幅极大，此处略</p></blockquote><h2 id="函数标准注释" tabindex="-1"><a class="header-anchor" href="#函数标准注释"><span>函数标准注释</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 下方函数的意义.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> arr</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 一个数组</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> n</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   数组的长度</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    最大值的下标</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ddd</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> arr[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> n)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26)]))}const o=d(s,[["render",n],["__file","09. ALL.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/01.%20ALL/09.%20ALL.html","title":"BasicDemo_ALL","lang":"zh-CN","frontmatter":{"description":"BasicDemo_ALL 还没转移完 [toc] 编程语言命名规范 业界规范 Python补充 Python中，使用单下划线开头的模块变量或者函数是受保护的，在使用from xxx import*语句从模块中导入时这些变量或者函数不能被导入 使用双下划线“__”开头的实例变量或方法是类私有的 文章参考 《各种语言命名规范》https://blog.c...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/01.%20ALL/09.%20ALL.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"BasicDemo_ALL"}],["meta",{"property":"og:description","content":"BasicDemo_ALL 还没转移完 [toc] 编程语言命名规范 业界规范 Python补充 Python中，使用单下划线开头的模块变量或者函数是受保护的，在使用from xxx import*语句从模块中导入时这些变量或者函数不能被导入 使用双下划线“__”开头的实例变量或方法是类私有的 文章参考 《各种语言命名规范》https://blog.c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BasicDemo_ALL\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":3.34,"words":1001},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/09. ALL.md","excerpt":"\\n<h1><strong>还没转移完</strong></h1>\\n<p>[toc]</p>\\n<h1>编程语言命名规范</h1>\\n<h2>业界规范</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>语言</th>\\n<th>普通变量</th>\\n<th>函数名</th>\\n<th>常量</th>\\n<th>类名</th>\\n<th>其他</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>C/C++</td>\\n<td>驼峰<br>下划线<br>大驼峰</td>\\n<td>驼峰<br>下划线<br>大驼峰</td>\\n<td>大写+下划线</td>\\n<td>结构体：大写</td>\\n<td>文件名：<code>file_</code>开头<br>指针：<code>ptr_</code>开头<br></td>\\n</tr>\\n<tr>\\n<td>Java</td>\\n<td>驼峰<br>下划线<br>帕斯卡</td>\\n<td>驼峰</td>\\n<td>大写+下划线</td>\\n<td>大驼峰</td>\\n<td>包名：中文 / 驼峰<br>项目名：<code>java</code>开头<br>接口名：同抽象类、类名<br>异常类：大驼峰+<code>Exception</code>结尾</td>\\n</tr>\\n<tr>\\n<td>Python</td>\\n<td>下划线</td>\\n<td>下划线</td>\\n<td>大写+下划线</td>\\n<td>大驼峰<br>模块内部：<code>_</code>+大驼峰</td>\\n<td>模块名：下划线，尽量短小<br>包名：尽量短小，不推荐下划线<br>特殊：单/双下划线开头：<strong>见下</strong></td>\\n</tr>\\n<tr>\\n<td>个人习惯</td>\\n<td>下划线</td>\\n<td><code>fn_</code>下划线</td>\\n<td>大写+下划线</td>\\n<td>大驼峰</td>\\n<td>js文件：小驼峰，Vue：大驼峰<br>偶尔匈牙利：<br><code>str_</code>,<code>json_</code>,<code>ptr_</code>,<code>file_</code>,<code>fn_</code></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/09. ALL.md","value":{"title":"09. ALL","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/归纳总结/01. ALL/09. ALL.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{o as comp,h as data};
