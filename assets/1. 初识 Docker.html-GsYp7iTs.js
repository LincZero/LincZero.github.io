import{_ as s,e,g as a,o as n}from"./app-HvNDXJEG.js";const l={};function t(r,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h1 id="初识-docker" tabindex="-1"><a class="header-anchor" href="#初识-docker"><span>初识 Docker</span></a></h1><h2 id="初识docker" tabindex="-1"><a class="header-anchor" href="#初识docker"><span>初识Docker</span></a></h2><ul><li>为什么 <ul><li>解决软件跨环境迁移的问题：代码“水土”不服</li></ul></li><li>是什么 <ul><li>是一个开源的应用容器引擎，诞生于2013年初，基于Go语言实现。Docker17版本后分为CE社区版和EE企业版</li></ul></li><li>容器 <ul><li>容器完全使用沙箱机制、互相隔离。容器性能开销低</li></ul></li><li>作用 <ul><li>可以让开发者打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的Linux机器上</li></ul></li></ul><h2 id="安装docker-原始版" tabindex="-1"><a class="header-anchor" href="#安装docker-原始版"><span>安装Docker（原始版）</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # yum包安装到最新</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yum-utils</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> device-mapper-persistent-data</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lvm2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 安装需要的三个软件包。yum-utils提供yum-config-manager功能，后两个是devicemapper驱动所依赖的</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum-config-manger</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add-repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://download.docker.com/linux/centos/docker-ce.repo</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 添加yum源</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-ce</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 安装docker(向导都按y)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 查看版本</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装docker-一键版" tabindex="-1"><a class="header-anchor" href="#安装docker-一键版"><span>安装Docker（一键版）</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -fsSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://get.docker.com</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get-docker.sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get-docker.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker架构" tabindex="-1"><a class="header-anchor" href="#docker架构"><span>Docker架构</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Clients ——&gt; Host ——&gt; Registries</span></span>
<span class="line"><span>————————————————————————————————————</span></span>
<span class="line"><span>Clients(客户端)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>Host(Docker核心)</span></span>
<span class="line"><span>    local host(守护进程)</span></span>
<span class="line"><span>        container(容器) 与 image(类)，类可以创建容器</span></span>
<span class="line"><span>    registries host</span></span>
<span class="line"><span>        container(容器) 与 image(类)，类可以创建容器</span></span>
<span class="line"><span>        </span></span>
<span class="line"><span>Registries(仓库)</span></span>
<span class="line"><span>    Docker hub(官方仓库)</span></span>
<span class="line"><span>    private registry(私人仓库)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用docker镜像提升速度" tabindex="-1"><a class="header-anchor" href="#用docker镜像提升速度"><span>用Docker镜像提升速度</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1Docker仓库官网，https://hub.docker.com/</span></span>
<span class="line"><span>国内镜像：</span></span>
<span class="line"><span>    USTC：中科大镜像加速器（https://docker.mirrors.ustc.edu.cn）</span></span>
<span class="line"><span>    阿里云：阿里云官网 &gt; 登录 &gt; 右上-控制台 &gt; 左-产品与服务 &gt; 搜索“镜像” &gt; 容器镜像服务 &gt; 左-镜像加速器 &gt; 得到地址（每个人的不同，所以要登录阿里云）&gt; 复制配置即可</span></span>
<span class="line"><span>    网易云</span></span>
<span class="line"><span>    腾讯云</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const p=s(l,[["render",t],["__file","1. 初识 Docker.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E8%99%9A%E6%8B%9F%E6%9C%BA/Docker/Docker/1.%20%E5%88%9D%E8%AF%86%20Docker.html","title":"初识 Docker","lang":"zh-CN","frontmatter":{"create_time":"2020.04.21","tags":"有道云","description":"初识 Docker 初识Docker 为什么 解决软件跨环境迁移的问题：代码“水土”不服 是什么 是一个开源的应用容器引擎，诞生于2013年初，基于Go语言实现。Docker17版本后分为CE社区版和EE企业版 容器 容器完全使用沙箱机制、互相隔离。容器性能开销低 作用 可以让开发者打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的L...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Virtual/%E8%99%9A%E6%8B%9F%E6%9C%BA/Docker/Docker/1.%20%E5%88%9D%E8%AF%86%20Docker.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"初识 Docker"}],["meta",{"property":"og:description","content":"初识 Docker 初识Docker 为什么 解决软件跨环境迁移的问题：代码“水土”不服 是什么 是一个开源的应用容器引擎，诞生于2013年初，基于Go语言实现。Docker17版本后分为CE社区版和EE企业版 容器 容器完全使用沙箱机制、互相隔离。容器性能开销低 作用 可以让开发者打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的L..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初识 Docker\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.36,"words":407},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Virtual/虚拟机/Docker/Docker/1. 初识 Docker.md","excerpt":"\\n<h2>初识Docker</h2>\\n<ul>\\n<li>为什么\\n<ul>\\n<li>解决软件跨环境迁移的问题：代码“水土”不服</li>\\n</ul>\\n</li>\\n<li>是什么\\n<ul>\\n<li>是一个开源的应用容器引擎，诞生于2013年初，基于Go语言实现。Docker17版本后分为CE社区版和EE企业版</li>\\n</ul>\\n</li>\\n<li>容器\\n<ul>\\n<li>容器完全使用沙箱机制、互相隔离。容器性能开销低</li>\\n</ul>\\n</li>\\n<li>作用\\n<ul>\\n<li>可以让开发者打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的Linux机器上</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Virtual/虚拟机/Docker/Docker/1. 初识 Docker.md","value":{"title":"1. 初识 Docker","path":"MdNote_Public/01. DesignAndDevelop/Virtual/虚拟机/Docker/Docker/1. 初识 Docker.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,h as data};
