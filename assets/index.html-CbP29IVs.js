import{_ as l,c as i,e as t,o as a}from"./app-7Hf1q1UN.js";const n={};function r(o,e){return a(),i("div",null,e[0]||(e[0]=[t('<h1 id="比较桌面开发框架" tabindex="-1"><a class="header-anchor" href="#比较桌面开发框架"><span>比较桌面开发框架</span></a></h1><h2 id="常用的各语言的跨平台gui开发工具" tabindex="-1"><a class="header-anchor" href="#常用的各语言的跨平台gui开发工具"><span>常用的各语言的跨平台GUI开发工具</span></a></h2><p>Java：桌面是SE，移动设备是ME，网站是EE</p><ul><li>比较常用的： java.awt java.swing 还有swt，eclipse官方封装了一套swt</li><li>安卓应该awt和swt多点，桌面可能swing会多点</li></ul><p>C#</p><ul><li>WPF（基于 .NET Framework 3.0。Windows only 的话就选WPF）</li></ul><p>MFC（没饭吃，据说上手难度低，界面不太好看） 简单只支持windows平台，现在社区也不是很活跃，开发挺容易上手的，但好多地方不明不白的，只是说明只能这么用；</p><p>QT（嵌入式适合）</p><h2 id="qt-vs-wpf" tabindex="-1"><a class="header-anchor" href="#qt-vs-wpf"><span>QT vs WPF</span></a></h2><h2 id="qt-vs-electron" tabindex="-1"><a class="header-anchor" href="#qt-vs-electron"><span>Qt vs Electron</span></a></h2><p>参考：https://www.zhihu.com/question/53230344</p><p>产品一览</p><p>Qt</p><ul><li>wps</li><li>yy语音</li><li>VirtualBox</li><li>部分adobe的桌面工具</li><li>Maya</li></ul><p>Electron （基本都在C盘，例如 C:\\Users\\用户\\AppData\\Local\\Programs(不一定有这一层)\\软件，然后文件夹里有个 <code>LICENSE.electron.txt</code> 的都是）</p><ul><li>文本编辑类居多 <ul><li>Obsidian</li><li>Notion</li><li>VSCode</li><li>Typora</li></ul></li><li>业务类 <ul><li>钉钉</li><li>slack</li></ul></li><li>和网络相关的 <ul><li>八爪鱼</li><li>Fiddler Everywhere</li><li>Genshin_Wish_Export</li><li>BaiduNetdisk</li><li>Unity Hub</li><li>GitHubDesktop（不确定）</li></ul></li><li>超轻量 <ul><li>UTools</li></ul></li><li>Bridge</li><li>VIA</li><li>XMind ZEN</li><li>NeatReader</li><li>EPUB_NeatConverter</li></ul><p><a href="https://www.zhihu.com/search?q=native%E6%96%B9%E6%A1%88&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A134482729%7D" target="_blank" rel="noopener noreferrer">native方案</a>（Qt，WPF等）适合于高性能的专业应用， Electron适合想要把网页版和桌面端共享代码，同时对性能没有苛刻要求的场景。</p><p>如果不在乎成本，native一定是体验更好的（微信）， 但是如果认为桌面端复用网页版的体验也能接受，那Electron成本会更低一些。</p><h2 id="一些gui和数据的模式" tabindex="-1"><a class="header-anchor" href="#一些gui和数据的模式"><span>一些GUI和数据的模式</span></a></h2><h3 id="mvc" tabindex="-1"><a class="header-anchor" href="#mvc"><span>mvc</span></a></h3><h3 id="mvvc" tabindex="-1"><a class="header-anchor" href="#mvvc"><span>mvvc</span></a></h3><h2 id="补充-什么是native" tabindex="-1"><a class="header-anchor" href="#补充-什么是native"><span>补充：什么是native</span></a></h2><p>原译：原生、本土出生、本地的</p><p>Native APP指的是<strong>原生程序，一般依托于操作系统，有很强的交互，是一个完整的App，可拓展性强，需要用户下载安装使用</strong>。</p>',24)]))}const p=l(n,[["render",r],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/","title":"比较桌面开发框架","lang":"zh-CN","frontmatter":{"description":"比较桌面开发框架 常用的各语言的跨平台GUI开发工具 Java：桌面是SE，移动设备是ME，网站是EE 比较常用的： java.awt java.swing 还有swt，eclipse官方封装了一套swt 安卓应该awt和swt多点，桌面可能swing会多点 C# WPF（基于 .NET Framework 3.0。Windows only 的话就选W...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Multi/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"比较桌面开发框架"}],["meta",{"property":"og:description","content":"比较桌面开发框架 常用的各语言的跨平台GUI开发工具 Java：桌面是SE，移动设备是ME，网站是EE 比较常用的： java.awt java.swing 还有swt，eclipse官方封装了一套swt 安卓应该awt和swt多点，桌面可能swing会多点 C# WPF（基于 .NET Framework 3.0。Windows only 的话就选W..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"比较桌面开发框架\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"比较桌面开发框架","slug":"比较桌面开发框架","link":"#比较桌面开发框架","children":[{"level":2,"title":"常用的各语言的跨平台GUI开发工具","slug":"常用的各语言的跨平台gui开发工具","link":"#常用的各语言的跨平台gui开发工具","children":[]},{"level":2,"title":"QT vs WPF","slug":"qt-vs-wpf","link":"#qt-vs-wpf","children":[]},{"level":2,"title":"Qt vs Electron","slug":"qt-vs-electron","link":"#qt-vs-electron","children":[]},{"level":2,"title":"一些GUI和数据的模式","slug":"一些gui和数据的模式","link":"#一些gui和数据的模式","children":[{"level":3,"title":"mvc","slug":"mvc","link":"#mvc","children":[]},{"level":3,"title":"mvvc","slug":"mvvc","link":"#mvvc","children":[]}]},{"level":2,"title":"补充：什么是native","slug":"补充-什么是native","link":"#补充-什么是native","children":[]}]}],"git":{},"readingTime":{"minutes":1.52,"words":455},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/README.md","excerpt":"\\n<h2>常用的各语言的跨平台GUI开发工具</h2>\\n<p>Java：桌面是SE，移动设备是ME，网站是EE</p>\\n<ul>\\n<li>比较常用的：\\njava.awt\\njava.swing\\n还有swt，eclipse官方封装了一套swt</li>\\n<li>安卓应该awt和swt多点，桌面可能swing会多点</li>\\n</ul>\\n<p>C#</p>\\n<ul>\\n<li>WPF（基于 .NET Framework 3.0。Windows only 的话就选WPF）</li>\\n</ul>\\n<p>MFC（没饭吃，据说上手难度低，界面不太好看）\\n简单只支持windows平台，现在社区也不是很活跃，开发挺容易上手的，但好多地方不明不白的，只是说明只能这么用；</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/README.md","value":{"title":"Platform/","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Multi/README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,c as data};
