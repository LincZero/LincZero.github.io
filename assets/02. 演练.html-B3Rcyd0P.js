import{_ as e,c as l,e as a,a as s,f as n,o as t}from"./app-CcegWvWz.js";const h={};function k(p,i){return t(),l("div",null,i[0]||(i[0]=[a(`<h1 id="演练" tabindex="-1"><a class="header-anchor" href="#演练"><span>演练</span></a></h1><p>本页将逐步指导您创建自定义节点的过程。</p><p>该节点会获取一批图像并返回其中一张图像。最初，该节点将返回平均颜色最浅的图像；然后我们将对其进行扩展，使其具有一系列选择标准，最后添加一些客户端代码。</p><p>本页面假设您对 Python 或 Javascript 的了解很少。</p><p><a href="https://docs.comfy.org/essentials/custom_node_server_overview" target="_blank" rel="noopener noreferrer">完成本演练后，深入了解服务器端代码</a>、 <a href="https://docs.comfy.org/essentials/custom_node_server_overview" target="_blank" rel="noopener noreferrer">客户端代码</a>或<a href="https://docs.comfy.org/essentials/comms_overview" target="_blank" rel="noopener noreferrer">客户端-服务器通信</a>的细节。</p><h2 id="基本节点" tabindex="-1"><a class="header-anchor" href="#基本节点"><span>基本节点</span></a></h2><h3 id="代码位置-设置、自定义节点的安装" tabindex="-1"><a class="header-anchor" href="#代码位置-设置、自定义节点的安装"><span>代码位置（设置、自定义节点的安装）</span></a></h3><p>（开始这里之前，建议先了解ComfyUI的自定义节点的安装方法（手动安装方法））</p><p>此自定义节点的所有代码都将位于一个目录中。因此，首先 <code>custom_nodes</code> 在您的文件夹中找到该目录 <code>ComfyUI</code>，然后在其中创建一个新目录，命名为（例如）<code>image_selector</code>。此新目录是与新自定义节点相关的所有代码的基础目录。</p><h3 id="代码内容" tabindex="-1"><a class="header-anchor" href="#代码内容"><span>代码内容</span></a></h3><h4 id="python框架的四个基本内容" tabindex="-1"><a class="header-anchor" href="#python框架的四个基本内容"><span>Python框架的四个基本内容</span></a></h4><p>自定义节点的基本结构将在<a href="https://docs.comfy.org/essentials/custom_node_server_overview" target="_blank" rel="noopener noreferrer">后面</a>详细描述。我们从基本必需品开始：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ImageSelector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">    CATEGORY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;example&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    @</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">classmethod</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> INPUT_TYPES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;required&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  { </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;images&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;IMAGE&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,), } }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">    RETURN_TYPES</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;IMAGE&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">    FUNCTION</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;choose_image&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 这里利用python的反射机制直接通过字符串调用对应的函数名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自定义节点是一个 Python 类，它必须包含以下四个内容：</p>`,14),s("div",{class:"ab-note drop-shadow"},[s("table",{class:"ab-table ab-branch-table"},[s("tbody",null,[s("tr",null,[s("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[s("div",null,[s("p",null,"CATEGORY")])]),s("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[s("div",null,[s("p",null,"节点类别")])]),s("td",{rowspan:"1",col_index:"2",class:"markdown-rendered"},[s("div",null,[s("p",null,"指定自定义节点在添加新节点菜单中的位置")])])]),s("tr",null,[s("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[s("div",null,[s("p",null,"INPUT_TYPES")])]),s("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[s("div",null,[s("p",null,"输入类型")])]),s("td",{rowspan:"1",col_index:"2",class:"markdown-rendered"},[s("div",null,[s("p",null,[n("这是一个类方法，定义节点将采取的输入（"),s("a",{href:"https://docs.comfy.org/essentials/custom_node_server_overview#input-types",target:"_blank",rel:"noopener noreferrer"},"稍后"),n("请参阅返回的字典的详细信息）")])])])]),s("tr",null,[s("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[s("div",null,[s("p",null,"RETURN_TYPES")])]),s("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[s("div",null,[s("p",null,"返回类型")])]),s("td",{rowspan:"1",col_index:"2",class:"markdown-rendered"},[s("div",null,[s("p",null,"定义节点将产生的输出")])])]),s("tr",null,[s("td",{rowspan:"1",col_index:"0",class:"markdown-rendered"},[s("div",null,[s("p",null,"FUNCTION")])]),s("td",{rowspan:"1",col_index:"1",class:"markdown-rendered"},[s("div",null,[s("p",null,"函数")])]),s("td",{rowspan:"1",col_index:"2",class:"markdown-rendered"},[s("div",null,[s("p",null,"执行节点时将调用的函数的名称")])])])])])],-1),a(`<div class="callout" data-callout="tip"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg></div><div class="callout-title-inner">Tip</div></div><div class="callout-content"><p></p><p><code>IMAGE</code> 请注意，尽管我们期望接收一批图像并仅返回一张，但输入和输出的数据类型为(单数)。在 Comfy 中，<code>IMAGE</code> 表示图像批次，单个图像被视为大小为 1 的批次。</p></div></div><h4 id="添加主要函数" tabindex="-1"><a class="header-anchor" href="#添加主要函数"><span>添加主要函数</span></a></h4><blockquote><p>这个函数的功能需要有一定的torch代码基础</p></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> torch </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 由于我们处理的图像在内部存储为 \`torch.Tensor\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> choose_image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> images</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    功能：</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    接收 中定义的命名参数 \`INPUT_TYPES\`</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    并返回 \`tuple\` 中定义的 \`RETURN_TYPES\`</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    brightness </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(torch.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">mean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">flatten</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> images)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    brightest </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> brightness.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(brightness))</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # \`images[brightest]\`将返回一个形状为的张量 \`[H,W,C]\`。\`unsqueeze\` 用于在零维度处插入一个（长度为 1）维度，为我们提供 \`[B,H,W,C]\`：\`B=1\`单个图像。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> images[brightest].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">unsqueeze</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (result,) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 尾随逗号是至关重要的，以确保您返回一个元组</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将函数添加到您的类中。图像的数据类型为 <code>torch.Tensor</code> 形状为 <code>[B,H,W,C]</code>。其中：</p><ul><li><code>B</code> 是批处理大小，</li><li><code>C</code> 是通道数，RGB 时为 3</li><li><code>H,W</code> 是宽高<br> 如果我们迭代这样的张量，我们将得到一系列 <code>B</code> 形状为的张量 <code>[H,W,C]</code>。该 <code>.flatten()</code> 方法将其转换为长度为的一维张量 <code>H*W*C</code>，<code>torch.mean()</code> 取平均值，并将 <code>.item()</code> 单值张量转换为 Python 浮点数。</li></ul><h4 id="python模块的形式" tabindex="-1"><a class="header-anchor" href="#python模块的形式"><span>Python模块的形式</span></a></h4><p>为了让 Comfy 识别新节点，我们需要将 <code>image_selector</code> 目录转换为 Python 模块，通过添加 <code>__init__.py</code>，如下所示：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .image_selector_node </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ImageSelector</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">NODE_CLASS_MAPPINGS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Image Selector&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ImageSelector,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__all__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;NODE_CLASS_MAPPINGS&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我们只是导出 <code>NODE_CLASS_MAPPINGS</code>，它为每个新的自定义节点提供一个唯一的名称，并映射到类。</p><h3 id="运行comfy" tabindex="-1"><a class="header-anchor" href="#运行comfy"><span>运行Comfy</span></a></h3><p>启动（或重新启动）Comfy 服务器，您应该在自定义节点列表中看到如下一行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> seconds:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [your </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">path]</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">omfyUI</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ustom_nodes</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mage_selector</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在浏览器中重新加载 Comfy 页面，您将在 <code>Add Node</code> 菜单的 <code>example</code> 目录下找到 <code>image_selector</code>。如果没有找到，请查看 Python 控制台输出中的错误！</p><h3 id="添加一些选项" tabindex="-1"><a class="header-anchor" href="#添加一些选项"><span>添加一些选项</span></a></h3><p>该节点可能有点无聊，所以我们可能会添加一些选项；一个小部件，允许您选择最亮的图像，或最红、最蓝或最绿的图像。编辑您的 Python 以添加另一个输入，如下 <code>INPUT_TYPES</code> 所示：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">classmethod</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> INPUT_TYPES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;required&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  { </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;images&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;IMAGE&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,), </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            &quot;mode&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: ([</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;brightest&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;reddest&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;greenest&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;bluest&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],)} }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后更新主函数。我们将使用一个相当简单的“最红”定义，即 <code>R</code> 像素的平均值除以所有三种颜色的平均值。所以：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> choose_image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> images</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    batch_size </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> images.shape[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    brightness </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(torch.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">mean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">flatten</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> images)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (mode</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;brightest&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        scores </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> brightness</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        channel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mode</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;reddest&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mode</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;greenest&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> else</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        absolute </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(torch.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">mean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(image[:,:,channel].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">flatten</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> images)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        scores </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( absolute[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(brightness[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1e-8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(batch_size) )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    best </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> scores.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(scores))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> images[best].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">unsqueeze</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (result,)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="调整-ui" tabindex="-1"><a class="header-anchor" href="#调整-ui"><span>调整 UI</span></a></h2><p>也许我们想要一些视觉反馈，所以让我们发送一条小短信来显示。</p><h3 id="从服务器发送消息" tabindex="-1"><a class="header-anchor" href="#从服务器发送消息"><span>从服务器发送消息</span></a></h3><p>这需要在 Python 代码中添加两行：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> server </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PromptServer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>并且在方法的末尾<code>choose_image</code>添加一行来向前端发送消息（<code>send_sync</code>采用一个应该是唯一的消息类型和一个字典）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">PromptServer.instance.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">send_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;example.imageselector.textmessage&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;message&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Picked image </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">best</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (result,)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写客户端扩展" tabindex="-1"><a class="header-anchor" href="#编写客户端扩展"><span>编写客户端扩展</span></a></h3><p>要向客户端添加一些 Javascript，请<code>js</code>在​​自定义节点目录中创建一个子目录，并修改 <code>__init__.py</code> 末尾以通过导出 <code>WEB_DIRECTORY</code> 来告知 Comfy：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">WEB_DIRECTORY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./js&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__all__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;NODE_CLASS_MAPPINGS&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;WEB_DIRECTORY&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端扩展作为文件保存 <code>.js</code> 在 <code>js</code> 子目录中，因此 <code>image_selector/js/image_selector.js</code> 请使用以下代码创建。（有关详细信息，请参阅<a href="https://docs.comfy.org/essentials/javascript_overview" target="_blank" rel="noopener noreferrer">客户端编码</a>）。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;../../../scripts/app.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;../../../scripts/api.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">registerExtension</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;example.imageselector&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    async</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> messageHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">detail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;example.imageselector.textmessage&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">messageHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们所做的就是注册一个扩展，并在其<code>setup()</code>方法中为我们发送的消息类型添加一个监听器，并读取我们发送的字典（存储在<code>event.detail</code>）</p><p>停止 Comfy 服务器，重新启动，重新加载网页，并运行您的工作流程。</p>`,33)]))}const d=e(h,[["render",k],["__file","02. 演练.html.vue"]]),o=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/Plugin_ComfyUI/01.%20%E4%BB%8B%E7%BB%8D/02.%20%E6%BC%94%E7%BB%83.html","title":"演练","lang":"zh-CN","frontmatter":{"description":"演练 本页将逐步指导您创建自定义节点的过程。 该节点会获取一批图像并返回其中一张图像。最初，该节点将返回平均颜色最浅的图像；然后我们将对其进行扩展，使其具有一系列选择标准，最后添加一些客户端代码。 本页面假设您对 Python 或 Javascript 的了解很少。 完成本演练后，深入了解服务器端代码、 客户端代码或客户端-服务器通信的细节。 基本节点...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/Plugin_ComfyUI/01.%20%E4%BB%8B%E7%BB%8D/02.%20%E6%BC%94%E7%BB%83.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"演练"}],["meta",{"property":"og:description","content":"演练 本页将逐步指导您创建自定义节点的过程。 该节点会获取一批图像并返回其中一张图像。最初，该节点将返回平均颜色最浅的图像；然后我们将对其进行扩展，使其具有一系列选择标准，最后添加一些客户端代码。 本页面假设您对 Python 或 Javascript 的了解很少。 完成本演练后，深入了解服务器端代码、 客户端代码或客户端-服务器通信的细节。 基本节点..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"演练\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"演练","slug":"演练","link":"#演练","children":[{"level":2,"title":"基本节点","slug":"基本节点","link":"#基本节点","children":[{"level":3,"title":"代码位置（设置、自定义节点的安装）","slug":"代码位置-设置、自定义节点的安装","link":"#代码位置-设置、自定义节点的安装","children":[]},{"level":3,"title":"代码内容","slug":"代码内容","link":"#代码内容","children":[{"level":4,"title":"Python框架的四个基本内容","slug":"python框架的四个基本内容","link":"#python框架的四个基本内容","children":[]},{"level":4,"title":"添加主要函数","slug":"添加主要函数","link":"#添加主要函数","children":[]},{"level":4,"title":"Python模块的形式","slug":"python模块的形式","link":"#python模块的形式","children":[]}]},{"level":3,"title":"运行Comfy","slug":"运行comfy","link":"#运行comfy","children":[]},{"level":3,"title":"添加一些选项","slug":"添加一些选项","link":"#添加一些选项","children":[]}]},{"level":2,"title":"调整 UI","slug":"调整-ui","link":"#调整-ui","children":[{"level":3,"title":"从服务器发送消息","slug":"从服务器发送消息","link":"#从服务器发送消息","children":[]},{"level":3,"title":"编写客户端扩展","slug":"编写客户端扩展","link":"#编写客户端扩展","children":[]}]}]}],"git":{},"readingTime":{"minutes":4.97,"words":1492},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Plugin_ComfyUI/01. 介绍/02. 演练.md","excerpt":"\\n<p>本页将逐步指导您创建自定义节点的过程。</p>\\n<p>该节点会获取一批图像并返回其中一张图像。最初，该节点将返回平均颜色最浅的图像；然后我们将对其进行扩展，使其具有一系列选择标准，最后添加一些客户端代码。</p>\\n<p>本页面假设您对 Python 或 Javascript 的了解很少。</p>\\n<p><a href=\\"https://docs.comfy.org/essentials/custom_node_server_overview\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">完成本演练后，深入了解服务器端代码</a>、&nbsp;<a href=\\"https://docs.comfy.org/essentials/custom_node_server_overview\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">客户端代码</a>或<a href=\\"https://docs.comfy.org/essentials/comms_overview\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">客户端-服务器通信</a>的细节。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Plugin_ComfyUI/01. 介绍/02. 演练.md","value":{"title":"02. 演练","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Plugin_ComfyUI/01. 介绍/02. 演练.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,o as data};
