import{_ as a,c as n,e as i,o as t}from"./app-CZqDObZ4.js";const o={};function s(l,e){return t(),n("div",null,e[0]||(e[0]=[i(`<h1 id="kanata-design" tabindex="-1"><a class="header-anchor" href="#kanata-design"><span>kanata design</span></a></h1><h2 id="obligatory-diagram" tabindex="-1"><a class="header-anchor" href="#obligatory-diagram"><span>Obligatory diagram</span></a></h2><p><a href="https://github.com/jtroo/kanata/blob/main/docs/kanata-basic-diagram.svg" target="_blank" rel="noopener noreferrer"><img src="https://github.com/jtroo/kanata/raw/main/docs/kanata-basic-diagram.svg" alt="" loading="lazy"></a></p><h2 id="main" tabindex="-1"><a class="header-anchor" href="#main"><span>main</span></a></h2><ul><li>read args</li><li>read config</li><li>start event loops</li></ul><h2 id="event-loop" tabindex="-1"><a class="header-anchor" href="#event-loop"><span>event loop</span></a></h2><ul><li>read key events</li><li>send events to processing loop on channel</li></ul><h2 id="processing-loop" tabindex="-1"><a class="header-anchor" href="#processing-loop"><span>processing loop</span></a></h2><ul><li>check for events on mpsc</li><li>if event: send event to layout</li><li>tick() the keyberon layout, send any events needed</li><li>if no event: sleep for 1ms</li><li>separate monotonic time checks, because can&#39;t rely on sleep to be fine-grained or accurate</li><li>send <code>ServerMessage</code>s to the TCP server</li></ul><h2 id="tcp-server" tabindex="-1"><a class="header-anchor" href="#tcp-server"><span>TCP server</span></a></h2><ul><li>listen for <code>ClientMessage</code>s and act on them</li><li>recv <code>ServerMessage</code>s from processing loop and forward to all connected clients</li></ul><h2 id="layout" tabindex="-1"><a class="header-anchor" href="#layout"><span>layout</span></a></h2><ul><li>uses keyberon</li><li>indices of <code>kanata_keyberon::layout::Event::{Press, Release}(x,y)</code>:<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>x = 0 or 1 (0 is for physical key presses, 1 is for fake keys)</span></span>
<span class="line"><span>y = OS code of key used as an index</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="os-specific-code" tabindex="-1"><a class="header-anchor" href="#os-specific-code"><span>OS-specific code</span></a></h2><p>Most of the OS specific code is in <code>oskbd/</code> and <code>keys/</code>. There&#39;s a bit of it in <code>kanata/</code> since the event loops to receive OS events are different.</p>`,15)]))}const c=a(o,[["render",s],["__file","design.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/Kanata/docs/design.html","title":"kanata design","lang":"zh-CN","frontmatter":{"Author":"https://github.com/jtroo/kanata/blob/main/docs/design.md","create_time":"2025-01-07T00:00:00.000Z","description":"kanata design Obligatory diagram main read args read config start event loops event loop read key events send events to processing loop on channel processing loop check for even...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Script/Kanata/docs/design.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"kanata design"}],["meta",{"property":"og:description","content":"kanata design Obligatory diagram main read args read config start event loops event loop read key events send events to processing loop on channel processing loop check for even..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/jtroo/kanata/raw/main/docs/kanata-basic-diagram.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"kanata design\\",\\"image\\":[\\"https://github.com/jtroo/kanata/raw/main/docs/kanata-basic-diagram.svg\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"kanata design","slug":"kanata-design","link":"#kanata-design","children":[{"level":2,"title":"Obligatory diagram","slug":"obligatory-diagram","link":"#obligatory-diagram","children":[]},{"level":2,"title":"main","slug":"main","link":"#main","children":[]},{"level":2,"title":"event loop","slug":"event-loop","link":"#event-loop","children":[]},{"level":2,"title":"processing loop","slug":"processing-loop","link":"#processing-loop","children":[]},{"level":2,"title":"TCP server","slug":"tcp-server","link":"#tcp-server","children":[]},{"level":2,"title":"layout","slug":"layout","link":"#layout","children":[]},{"level":2,"title":"OS-specific code","slug":"os-specific-code","link":"#os-specific-code","children":[]}]}],"git":{},"readingTime":{"minutes":0.6,"words":180},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Kanata/docs/design.md","excerpt":"\\n<h2>Obligatory diagram</h2>\\n<p><a href=\\"https://github.com/jtroo/kanata/blob/main/docs/kanata-basic-diagram.svg\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://github.com/jtroo/kanata/raw/main/docs/kanata-basic-diagram.svg\\" alt=\\"\\" loading=\\"lazy\\"></a></p>\\n<h2>main</h2>\\n<ul>\\n<li>read args</li>\\n<li>read config</li>\\n<li>start event loops</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Kanata/docs/design.md","value":{"title":"design","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Script/Kanata/docs/design.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{c as comp,d as data};
