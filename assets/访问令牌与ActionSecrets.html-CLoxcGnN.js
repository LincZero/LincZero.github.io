import{_ as l,c as o,e as i,a as e,d as s,b as t,o as c,r as p}from"./app-DaW0uU2l.js";const r={},u={href:"https://blog.csdn.net/chengwenyang/article/details/120060010",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8A%E4%BD%BF%E7%94%A8-personal-access-token",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/scopes-for-oauth-apps",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.github.com/en/rest/authentication/permissions-required-for-fine-grained-personal-access-tokens?apiVersion=2022-11-28",target:"_blank",rel:"noopener noreferrer"};function b(g,n){const a=p("ExternalLinkIcon");return c(),o("div",null,[n[13]||(n[13]=i(`<h1 id="访问令牌与actionsecrets" tabindex="-1"><a class="header-anchor" href="#访问令牌与actionsecrets"><span>访问令牌与ActionSecrets</span></a></h1><h2 id="gitlab-访问令牌" tabindex="-1"><a class="header-anchor" href="#gitlab-访问令牌"><span>GitLab 访问令牌</span></a></h2><h3 id="创建" tabindex="-1"><a class="header-anchor" href="#创建"><span>创建</span></a></h3><p>GitLab 是直接在仓库下的Setting就能看到对应选项并创建</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone http://dependToken:glpat-CbkyNxTQ3ibn35m8dqBS@192.168.1.50/recorder/recorder.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><p>例如：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">prepare_linux_cpp</span><span class="token punctuation">:</span>
  <span class="token key atrule">stage</span><span class="token punctuation">:</span> prepare
  <span class="token key atrule">tags</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> gcc48
  <span class="token key atrule">image</span><span class="token punctuation">:</span> 192.168.1.208<span class="token punctuation">:</span>9050/msy/android<span class="token punctuation">:</span>jdk17
  <span class="token key atrule">script</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> git clone http<span class="token punctuation">:</span>//dependToken<span class="token punctuation">:</span>glpat<span class="token punctuation">-</span>CbkyNxTQ3ibn35m8dqBS@192.168.1.50/recorder/recorder.git	<span class="token comment"># 这里clone，注意这里的\`dependToken是令牌名\`</span>
    <span class="token punctuation">-</span> mkdir <span class="token punctuation">-</span>p app/src/main/cpp/cmake
    <span class="token punctuation">-</span> mkdir <span class="token punctuation">-</span>p app/src/main/cpp/src
    <span class="token punctuation">-</span> cp <span class="token punctuation">-</span>r recorder/cmake/* app/src/main/cpp/cmake
    <span class="token punctuation">-</span> cp <span class="token punctuation">-</span>r recorder/src/* app/src/main/cpp/src
    <span class="token punctuation">-</span> cp recorder/main.cpp app/src/main/cpp/main.cpp
    <span class="token punctuation">-</span> cp recorder/CMakeLists.txt app/src/main/cpp/CMakeLists.txt
    <span class="token punctuation">-</span> cp recorder/config.h.in app/src/main/cpp/config.h.in
    <span class="token punctuation">-</span> cp recorder/hconfig.h.in app/src/main/cpp/hconfig.h.in
  <span class="token key atrule">artifacts</span><span class="token punctuation">:</span>
    <span class="token key atrule">paths</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> app/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="github-访问令牌" tabindex="-1"><a class="header-anchor" href="#github-访问令牌"><span>GitHub 访问令牌</span></a></h2><p>（感觉没GitLab的好用，坑更多）</p><h3 id="创建-1" tabindex="-1"><a class="header-anchor" href="#创建-1"><span>创建</span></a></h3><p>不同于GitLab，GitHub 相关设置不在仓库中，在个人设置里。 右上角头像 &gt; Setting &gt; 左侧栏 Developer Setting (一般在最下) &gt; 左侧栏 Personal access tokens / Tokens (classic) &gt; Generate new token &gt; classic &gt; 填好选项后创建成功 (推荐先创建再修改具体内容)</p><h3 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1"><span>使用</span></a></h3><p>除了比较常用的clone/pull/push等操作，访问令牌能调取各种 github/gitlab 的 api，例如获取CICD列表、获取构建产物等</p><p>旧版使用：</p>`,15)),e("p",null,[n[2]||(n[2]=s("旧版的使用方式是类似")),e("a",u,[n[0]||(n[0]=s("这样")),t(a)]),n[3]||(n[3]=s("或")),e("a",d,[n[1]||(n[1]=s("这样")),t(a)]),n[4]||(n[4]=s("的"))]),n[14]||(n[14]=i(`<p>就是直接clone，然后会让你输入账号和密码，此时可以用tokens代替。但是现在Github由于安全原因，不再允许使用账号密码方式了。该方法不再能使用</p><p>新版使用 (将token放置到url中)：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://oauth2:<span class="token punctuation">[</span>Your_Access_Token<span class="token punctuation">]</span>@<span class="token punctuation">[</span>Git_Host<span class="token punctuation">]</span>/<span class="token punctuation">[</span>User_Or_Org<span class="token punctuation">]</span>/<span class="token punctuation">[</span>Repo_Name<span class="token punctuation">]</span>.git
<span class="token comment"># 例如：</span>
<span class="token function">git</span> clone https://oauth2:1234567890abcdef@github.com/user/repo.git
<span class="token comment"># 注意这里的oauth2是协议前缀，指定Git操作使用OAuth 2.0协议进行身份验证。</span>
<span class="token comment"># 这个前缀通常与你的个人访问令牌一起使用，以便在不需要输入用户名和密码的情况下，通过令牌来验证你对GitHub仓库的访问权限。</span>
<span class="token comment"># 这个前缀似乎是可选的，不必填</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>手把手demo：</p><blockquote><p>github的访问令牌怎么clone</p><p>我的令牌：<code>github_pat_11AGFN......MVrMIq</code></p><p>我的仓库：<code>git@github.com:LincZero/MdNote_Work.git</code> 或 <code>https://github.com/LincZero/MdNote_Work.git </code></p><hr><p>最终命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 格式</span>
<span class="token function">git</span> clone https://YOUR_PAT@github.com/LincZero/MdNote_Work.git
<span class="token comment"># (你会发现这个地址类似于git+https版的混合，其实就是https版多了个 \`pat@\` 部分而已)</span>

<span class="token comment"># 即</span>
<span class="token function">git</span> clone https://github_pat_11AGFN<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>MVrMIq@github.com/LincZero/MdNote_Work.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>_</p></blockquote><h3 id="遇到的坑" tabindex="-1"><a class="header-anchor" href="#遇到的坑"><span>遇到的坑</span></a></h3><h4 id="github的令牌创建位置居然在个人设置而非仓库里" tabindex="-1"><a class="header-anchor" href="#github的令牌创建位置居然在个人设置而非仓库里"><span>GitHub的令牌创建位置居然在个人设置而非仓库里</span></a></h4><p>如题，害我找半天</p><h4 id="classic-的细粒度太低-不能针对仓库-要用beta那个token" tabindex="-1"><a class="header-anchor" href="#classic-的细粒度太低-不能针对仓库-要用beta那个token"><span>classic 的细粒度太低，不能针对仓库，要用beta那个token</span></a></h4><p>如题。但是这两者的设置又不太一样。前者的资料比较多，后者很少，害我又踩了些坑</p><h4 id="资料陈旧" tabindex="-1"><a class="header-anchor" href="#资料陈旧"><span>资料陈旧</span></a></h4><p>例如现在的Github不支持帐密的问题</p><p>再例如权限名的问题：</p>`,13)),e("ul",null,[e("li",null,[e("p",null,[n[6]||(n[6]=s("例如 ")),n[7]||(n[7]=e("strong",null,"classic tokens",-1)),n[8]||(n[8]=s(" 的权限一般只用开 repo 那几个，")),e("a",k,[n[5]||(n[5]=s("参数文档")),t(a)])]),e("p",null,[n[10]||(n[10]=s("而在 beta 版的 ")),n[11]||(n[11]=e("strong",null,"fine-grained tokens",-1)),n[12]||(n[12]=s(" 里，这里权限的名字又有所不同，")),e("a",h,[n[9]||(n[9]=s("参数文档")),t(a)])])])]),n[15]||(n[15]=i(`<h4 id="权限问题" tabindex="-1"><a class="header-anchor" href="#权限问题"><span>权限问题</span></a></h4><p>github的访问令牌需要什么权限才能clone，我设置了：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Administration Access: Read-only
Commit statuses Access: Read-only
Contents Access: Read-only
Metadata Access: Read-only
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后使用：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone github_pat_11AGFNV<span class="token punctuation">..</span>.WNZ4gzta@github.com:LincZero/MdNote_Work.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但报错：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>TGN7WNZ4gzta@github.com: Permission denied <span class="token punctuation">(</span>publickey<span class="token punctuation">)</span>. fatal: Could not <span class="token builtin class-name">read</span> from remote repository. Please <span class="token function">make</span> sure you have the correct access rights and the repository exists. 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>原因：命令写错了，要用https的基础上加token才对</p><h2 id="在cicd工具流中使用的技巧" tabindex="-1"><a class="header-anchor" href="#在cicd工具流中使用的技巧"><span>在CICD工具流中使用的技巧</span></a></h2><p><strong>（以 GitHub 为例）</strong></p><h3 id="actions-secrets-and-variables" tabindex="-1"><a class="header-anchor" href="#actions-secrets-and-variables"><span>Actions secrets and variables</span></a></h3><p>应用场景</p><blockquote><p>我有个Github工作流权限相关问题：</p><p>例如我将网页源码分别放在三个仓库：VuePress工程、共建笔记库、只读笔记库。</p><p>其中第一个开源，第三个不开源，而第一个仓库会通过 github action 拉取“只读笔记库”的笔记。</p><p>这个时候一般的做法是什么？笔记库创建一个只读的访问令牌？然后 VuePress工程使用 Github Setting/Security/Actions 里的Repository sercrets？</p></blockquote><p>设置</p><blockquote><p>得到访问令牌后，在 Github Setting/Security/Actions 里添加一个 Secrets，例如这里我添加一个名为 “VUPRESS” 的 Secrets</p></blockquote><p>工作流中使用，例如：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 更新子模块到最新 (通过访问令牌)
        <span class="token comment"># \${{ secrets.VUEPRESS }}</span>
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          export VUEPRESS_TOKEN = \${{ secrets.VUEPRESS }}
          git config --global http.extraheader &quot;Authorization: token $VUEPRESS_TOKEN&quot;
          git config --global url.&quot;https://x-access-token:\${{ secrets.VUEPRESS }}@github.com/&quot;.insteadOf &quot;https://github.com/&quot;
          git submodule foreach git pull origin main</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="环境config方法" tabindex="-1"><a class="header-anchor" href="#环境config方法"><span>环境config方法</span></a></h3><p>有时我们不仅是使用 clone 方法，例如在 CICD 中使用：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 更新子模块到最新 (通过访问令牌)
        <span class="token comment"># \${{ secrets.VUEPRESS }}</span>
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          export VUEPRESS_TOKEN = \${{ secrets.VUEPRESS }}
          git config --global http.extraheader &quot;Authorization: token $VUEPRESS_TOKEN&quot;
          # 或
          git config --global url.&quot;https://x-access-token:\${{ secrets.VUEPRESS }}@github.com/&quot;.insteadOf &quot;https://github.com/&quot;
          git submodule foreach git pull origin main</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cicd语法糖" tabindex="-1"><a class="header-anchor" href="#cicd语法糖"><span>CICD语法糖</span></a></h3><p>通过 <code>uses: actions/checkout@v3</code> (或v4)，可以很方便地处理好子模块、以及token。</p><p>不需要也不能像前面那样再通过 <code>git config --global ...</code> 来配置tokens，否则会因为重复设置 tokens 报错 重复头 问题</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">deploy-gh-pages</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v4
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">fetch-depth</span><span class="token punctuation">:</span> <span class="token number">0</span>
          <span class="token comment"># 如果你文档需要 Git 子模块，取消注释下一行</span>
          <span class="token key atrule">submodules</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token key atrule">token</span><span class="token punctuation">:</span> <span class="token string">&#39;\${{ secrets.VUEPRESS }}&#39;</span>
          
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout <span class="token punctuation">-</span> 更新子模块到最新
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          git submodule foreach git pull origin main</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组织令牌问题" tabindex="-1"><a class="header-anchor" href="#组织令牌问题"><span>组织令牌问题</span></a></h2><p>Github的token太奇怪了，不在仓库中……文档也没说，找了半天</p><ol><li>首先需要在组织中开启允许个人创建令牌的开关（但他不叫这个） https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens</li><li>然后接下来的流程同个人创建tokens，在个人设置&gt;开发者选项里设置</li><li>此时需要注意！你可以在这个页面里先切换资源拥有者，切换成组织（如果这里没看到组织，就是你在组织那没设置好）</li><li>切回去组织里，Personal access tokens &gt; Active tokens，看一下token生效了没</li></ol><h2 id="user-token还是只token" tabindex="-1"><a class="header-anchor" href="#user-token还是只token"><span>user:token还是只token？</span></a></h2><p>在有的资料中，我看到格式是 <code>https://&lt;user&gt;:&lt;secrets&gt;@github.com/...</code> ，但有的资料却有没最前面那个 <code>user</code>。</p><p>反正我试下来就是：</p><ul><li>github的话。不加直接user也行加也行，加的话他是用户名（如果是组织token也是填你的个人用户名）。不是组织名，也不是token名</li><li>gitlab的话。不加似乎不行（不知道是不是与设置有关），提示上是 <code>dependToken:</code> <code>oauth2:</code>，我忘了具体是什么来着，和github的似乎不一样。不是填用户名，好像是填token名，或者固定字符 <code>oauth2</code>？</li></ul>`,31))])}const v=l(r,[["render",b],["__file","访问令牌与ActionSecrets.html.vue"]]),E=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/05.%20%E5%88%86%E5%8F%91%E7%AE%A1%E7%90%86/%E7%89%88%E6%9C%AC%E4%B8%8E%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/Git/%E8%AE%BF%E9%97%AE%E4%BB%A4%E7%89%8C%E4%B8%8EActionSecrets.html","title":"访问令牌与ActionSecrets","lang":"zh-CN","frontmatter":{"description":"访问令牌与ActionSecrets GitLab 访问令牌 创建 GitLab 是直接在仓库下的Setting就能看到对应选项并创建 使用 例如： GitHub 访问令牌 （感觉没GitLab的好用，坑更多） 创建 不同于GitLab，GitHub 相关设置不在仓库中，在个人设置里。 右上角头像 > Setting > 左侧栏 Developer S...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/05.%20%E5%88%86%E5%8F%91%E7%AE%A1%E7%90%86/%E7%89%88%E6%9C%AC%E4%B8%8E%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/Git/%E8%AE%BF%E9%97%AE%E4%BB%A4%E7%89%8C%E4%B8%8EActionSecrets.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"访问令牌与ActionSecrets"}],["meta",{"property":"og:description","content":"访问令牌与ActionSecrets GitLab 访问令牌 创建 GitLab 是直接在仓库下的Setting就能看到对应选项并创建 使用 例如： GitHub 访问令牌 （感觉没GitLab的好用，坑更多） 创建 不同于GitLab，GitHub 相关设置不在仓库中，在个人设置里。 右上角头像 > Setting > 左侧栏 Developer S..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"访问令牌与ActionSecrets\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"访问令牌与ActionSecrets","slug":"访问令牌与actionsecrets","link":"#访问令牌与actionsecrets","children":[{"level":2,"title":"GitLab 访问令牌","slug":"gitlab-访问令牌","link":"#gitlab-访问令牌","children":[{"level":3,"title":"创建","slug":"创建","link":"#创建","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]}]},{"level":2,"title":"GitHub 访问令牌","slug":"github-访问令牌","link":"#github-访问令牌","children":[{"level":3,"title":"创建","slug":"创建-1","link":"#创建-1","children":[]},{"level":3,"title":"使用","slug":"使用-1","link":"#使用-1","children":[]},{"level":3,"title":"遇到的坑","slug":"遇到的坑","link":"#遇到的坑","children":[{"level":4,"title":"GitHub的令牌创建位置居然在个人设置而非仓库里","slug":"github的令牌创建位置居然在个人设置而非仓库里","link":"#github的令牌创建位置居然在个人设置而非仓库里","children":[]},{"level":4,"title":"classic 的细粒度太低，不能针对仓库，要用beta那个token","slug":"classic-的细粒度太低-不能针对仓库-要用beta那个token","link":"#classic-的细粒度太低-不能针对仓库-要用beta那个token","children":[]},{"level":4,"title":"资料陈旧","slug":"资料陈旧","link":"#资料陈旧","children":[]},{"level":4,"title":"权限问题","slug":"权限问题","link":"#权限问题","children":[]}]}]},{"level":2,"title":"在CICD工具流中使用的技巧","slug":"在cicd工具流中使用的技巧","link":"#在cicd工具流中使用的技巧","children":[{"level":3,"title":"Actions secrets and variables","slug":"actions-secrets-and-variables","link":"#actions-secrets-and-variables","children":[]},{"level":3,"title":"环境config方法","slug":"环境config方法","link":"#环境config方法","children":[]},{"level":3,"title":"CICD语法糖","slug":"cicd语法糖","link":"#cicd语法糖","children":[]}]},{"level":2,"title":"组织令牌问题","slug":"组织令牌问题","link":"#组织令牌问题","children":[]},{"level":2,"title":"user:token还是只token？","slug":"user-token还是只token","link":"#user-token还是只token","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.19,"words":1558},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/05. 分发管理/版本与分支管理/Git/访问令牌与ActionSecrets.md","excerpt":"\\n<h2>GitLab 访问令牌</h2>\\n<h3>创建</h3>\\n<p>GitLab 是直接在仓库下的Setting就能看到对应选项并创建</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">git</span> clone http://dependToken:glpat-CbkyNxTQ3ibn35m8dqBS@192.168.1.50/recorder/recorder.git\\n</code></pre></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/05. 分发管理/版本与分支管理/Git/访问令牌与ActionSecrets.md","value":{"title":"访问令牌与ActionSecrets","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/05. 分发管理/版本与分支管理/Git/访问令牌与ActionSecrets.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{v as comp,E as data};
