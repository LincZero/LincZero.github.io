import{_ as l,c as i,e as p,a as s,d as a,b as e,o as c,r as o}from"./app-Bf7apqQc.js";const u={},d={href:"https://rollupjs.org/",target:"_blank",rel:"noopener noreferrer"},r={href:"https://webpack.js.org/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/sveltejs/integrations#bundler-plugins",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture",target:"_blank",rel:"noopener noreferrer"};function g(m,n){const t=o("ExternalLinkIcon");return c(),i("div",null,[n[20]||(n[20]=p(`<h1 id="svelte" tabindex="-1"><a class="header-anchor" href="#svelte"><span>Svelte</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="svelte-1" tabindex="-1"><a class="header-anchor" href="#svelte-1"><span>Svelte</span></a></h1><p>https://www.sveltejs.cn/（有中文，挺好）</p><p>Table.svelte</p><p>这个官网文档就<strong>非常非常非常不错</strong>，而且网站上还有配套的在线运行</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let name = &#39;world&#39;;
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello </span><span class="token punctuation">{</span>name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="语法糖" tabindex="-1"><a class="header-anchor" href="#语法糖"><span>语法糖</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let src = &#39;tutorial/image.gif&#39;;
	let name = &#39;Rick Astley&#39;;
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>src<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{name} dances.<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">	普通写法
&lt;img </span><span class="token punctuation">{</span>src<span class="token punctuation">}</span><span class="token plain-text"> alt=&quot;{name} dances.&quot;&gt;		语法糖
    
    
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="样式" tabindex="-1"><a class="header-anchor" href="#样式"><span>样式</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	p {
		color: purple;
		font-family: &#39;Comic Sans MS&#39;, cursive;
		font-size: 2em;
	}
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is a paragraph.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="导入" tabindex="-1"><a class="header-anchor" href="#导入"><span>导入</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// App.svelte</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	import Nested from &#39;./Nested.svelte&#39;;
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is a paragraph.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Nested</span></span><span class="token punctuation">/&gt;</span></span>
    
<span class="token comment">// Nested.scelte</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">This is another paragraph.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="html方式渲染" tabindex="-1"><a class="header-anchor" href="#html方式渲染"><span>html方式渲染</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let string = \`this string contains some &lt;strong&gt;HTML!!!&lt;/strong&gt;\`;
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">html</span></span> <span class="token builtin">string</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">// @attention 如果使用此功能，则必须手动转义来自不信任源的 HTML 代码，否则会使用户面临 XSS 攻击的风险</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17)),s("p",null,[n[3]||(n[3]=a("官方提供了针对 ")),s("a",d,[n[0]||(n[0]=a("Rollup")),e(t)]),n[4]||(n[4]=a(" 和 ")),s("a",r,[n[1]||(n[1]=a("webpack")),e(t)]),n[5]||(n[5]=a(" 的插件，另外还有很多是")),s("a",k,[n[2]||(n[2]=a("社区维护的插件")),e(t)]),n[6]||(n[6]=a("。"))]),n[21]||(n[21]=p(`<h2 id="反应性能力" tabindex="-1"><a class="header-anchor" href="#反应性能力"><span>反应性能力</span></a></h2><h4 id="普通赋值语句" tabindex="-1"><a class="header-anchor" href="#普通赋值语句"><span>普通赋值语句</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let count = 0;

	function handleClick() {
		count += 1;
	}
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	Clicked </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token plain-text"> </span><span class="token punctuation">{</span>count <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;time&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;times&#39;</span><span class="token punctuation">}</span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="反应式声明-reactive-declarations" tabindex="-1"><a class="header-anchor" href="#反应式声明-reactive-declarations"><span>反应式声明（reactive declarations）</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let count = 0;
	$: doubled = count * 2;		// 更新dom时，自动计算

	function handleClick() {
		count += 1;
	}
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	Clicked </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token plain-text"> </span><span class="token punctuation">{</span>count <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;time&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;times&#39;</span><span class="token punctuation">}</span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token plain-text"> doubled is </span><span class="token punctuation">{</span>doubled<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="语句" tabindex="-1"><a class="header-anchor" href="#语句"><span>语句</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let count = 0;

	$: if (count &gt;= 10) {
		alert(\`count is dangerously high!\`);
		count = 9;
	}

	function handleClick() {
		count += 1;
	}

	// 你可以轻松地将一组语句组合成一个代码块
    $: {
        console.log(\`the count is \${count}\`);
        alert(\`I SAID THE COUNT IS \${count}\`);
    }
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	Clicked </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token plain-text"> </span><span class="token punctuation">{</span>count <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;time&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;times&#39;</span><span class="token punctuation">}</span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="更新数组和对象" tabindex="-1"><a class="header-anchor" href="#更新数组和对象"><span>更新数组和对象</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// 由于 Svelte 的反应性是由赋值语句触发的，因此使用数组的诸如 push 和 splice 之类的方法就不会触发自动更新。例如，点击按钮就不会执行任何操作</span>
<span class="token comment">// 解决该问题的一种方法是添加一个多余的赋值语句：</span>
<span class="token keyword">function</span> <span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	numbers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	numbers <span class="token operator">=</span> numbers<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 但还有一个更惯用的解决方案：</span>
<span class="token keyword">function</span> <span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>numbers<span class="token punctuation">,</span> numbers<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 你可以使用类似的模式来替换 pop、shift、unshift 和 splice 方法。</span>
numbers<span class="token punctuation">[</span>numbers<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>	<span class="token comment">// 我怎么感觉这方法很危险呢……</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><h4 id="声明属性" tabindex="-1"><a class="header-anchor" href="#声明属性"><span>声明属性</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// Nested.svelte</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	export let answer;	// 声明属性
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">The answer is </span><span class="token punctuation">{</span>answer<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">// App.svelte</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	import Nested from &#39;./Nested.svelte&#39;;
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Nested</span></span> <span class="token attr-name">answer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">42</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="默认值" tabindex="-1"><a class="header-anchor" href="#默认值"><span>默认值</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	export let answer = &#39;a mystery&#39;;
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="属性传递" tabindex="-1"><a class="header-anchor" href="#属性传递"><span>属性传递</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// Info.svelte</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	export let name;
	export let version;
	export let speed;
	export let website;
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	The </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> package is </span><span class="token punctuation">{</span>speed<span class="token punctuation">}</span><span class="token plain-text"> fast.
	Download version </span><span class="token punctuation">{</span>version<span class="token punctuation">}</span><span class="token plain-text"> from </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://www.npmjs.com/package/{name}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">npm</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	and </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>website<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">learn more here</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">// App.svelte</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	import Info from &#39;./Info.svelte&#39;;

	const pkg = {
		name: &#39;svelte&#39;,
		version: 3,
		speed: &#39;blazing&#39;,
		website: &#39;https://svelte.dev&#39;
	};
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Info</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>pkg<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>	<span class="token comment">// 传递多个参数过去</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="逻辑" tabindex="-1"><a class="header-anchor" href="#逻辑"><span>逻辑</span></a></h2><p>原生HTML没有判断循环等逻辑</p><h4 id="if语句" tabindex="-1"><a class="header-anchor" href="#if语句"><span>if语句</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let user = { loggedIn: false };

	function toggle() {
		user.loggedIn = !user.loggedIn;	// 切换
	}
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token punctuation">{</span>#<span class="token keyword">if</span> user<span class="token punctuation">.</span>loggedIn<span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toggle<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
		Log out
	</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">}</span>

<span class="token punctuation">{</span>#<span class="token keyword">if</span> <span class="token operator">!</span>user<span class="token punctuation">.</span>loggedIn<span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toggle<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
		Log in
	</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="else和else-if语句" tabindex="-1"><a class="header-anchor" href="#else和else-if语句"><span>else和else-if语句</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token punctuation">{</span>#<span class="token keyword">if</span> x <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>x<span class="token punctuation">}</span><span class="token plain-text"> is greater than 10</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">:</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token number">5</span> <span class="token operator">&gt;</span> x<span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>x<span class="token punctuation">}</span><span class="token plain-text"> is less than 5</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">:</span><span class="token keyword">else</span><span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>x<span class="token punctuation">}</span><span class="token plain-text"> is between 5 and 10</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="循环-each块" tabindex="-1"><a class="header-anchor" href="#循环-each块"><span>循环 each块</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let cats = [
		{ id: &#39;J---aiyznGQ&#39;, name: &#39;Keyboard Cat&#39; },
		{ id: &#39;z_AbfPXTKms&#39;, name: &#39;Maru&#39; },
		{ id: &#39;OUtn3pvWmpg&#39;, name: &#39;Henri The Existential Cat&#39; }
	];
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">The Famous Cats of YouTube</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	</span><span class="token punctuation">{</span>#each cats <span class="token keyword">as</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> name <span class="token punctuation">}</span><span class="token punctuation">,</span> i<span class="token punctuation">}</span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">&lt;a target=&quot;_blank&quot; href=&quot;https://www.youtube.com/watch?v={id}&quot;&gt;
			</span><span class="token punctuation">{</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token plain-text">: </span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	</span><span class="token punctuation">{</span><span class="token operator">/</span>each<span class="token punctuation">}</span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="为each块添加key值" tabindex="-1"><a class="header-anchor" href="#为each块添加key值"><span>为each块添加key值</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	import Thing from &#39;./Thing.svelte&#39;;

	let things = [
		{ id: 1, color: &#39;#0d0887&#39; },
		{ id: 2, color: &#39;#6a00a8&#39; },
		{ id: 3, color: &#39;#b12a90&#39; },
		{ id: 4, color: &#39;#e16462&#39; },
		{ id: 5, color: &#39;#fca636&#39; }
	];

	function handleClick() {
		things = things.slice(1);
	}
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	Remove first thing
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token punctuation">{</span>#each things <span class="token keyword">as</span> <span class="token function">thing</span> <span class="token punctuation">(</span>thing<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Thing</span></span> <span class="token attr-name">current</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>thing<span class="token punctuation">.</span>color<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">/</span>each<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="await块-promise" tabindex="-1"><a class="header-anchor" href="#await块-promise"><span>await块（promise）</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let promise = getRandomNumber();	// 这是一个异步函数

	async function getRandomNumber() {
		const res = await fetch(\`tutorial/random-number\`);
		const text = await res.text();

		if (res.ok) {
			return text;
		} else {
			throw new Error(text);
		}
	}

	function handleClick() {
		promise = getRandomNumber();
	}
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	generate random number
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token punctuation">{</span>#<span class="token keyword">await</span> promise<span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">...waiting</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">:</span>then <span class="token builtin">number</span><span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">The number is </span><span class="token punctuation">{</span><span class="token builtin">number</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">:</span>catch error<span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>error<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">await</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件"><span>事件</span></a></h2><h4 id="dom-事件" tabindex="-1"><a class="header-anchor" href="#dom-事件"><span>DOM 事件</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let m = { x: 0, y: 0 };

	function handleMousemove(event) {
		m.x = event.clientX;
		m.y = event.clientY;
	}
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	div { width: 100%; height: 100%; }
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>mousemove</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleMousemove<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	The mouse position is </span><span class="token punctuation">{</span>m<span class="token punctuation">.</span>x<span class="token punctuation">}</span><span class="token plain-text"> x </span><span class="token punctuation">{</span>m<span class="token punctuation">.</span>y<span class="token punctuation">}</span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以内联声明事件处理程序：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	let m = { x: 0, y: 0 };
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	div { width: 100%; height: 100%; }
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>mousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{e =&gt; m = { x: e.clientX, y: e.clientY }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	The mouse position is </span><span class="token punctuation">{</span>m<span class="token punctuation">.</span>x<span class="token punctuation">}</span><span class="token plain-text"> x </span><span class="token punctuation">{</span>m<span class="token punctuation">.</span>y<span class="token punctuation">}</span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="事件修饰符" tabindex="-1"><a class="header-anchor" href="#事件修饰符"><span>事件修饰符</span></a></h4><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	function handleClick() {
		alert(&#39;no more alerts&#39;)
	}
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token operator">&lt;</span>button on<span class="token operator">:</span>click<span class="token operator">|</span>once<span class="token operator">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span><span class="token operator">&gt;</span>	<span class="token comment">// once：运行一次事件处理程序后将其删除。</span>
	Click me
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有修饰符列表：</p>`,36)),s("ul",null,[n[15]||(n[15]=s("li",null,[s("code",null,"preventDefault"),a(" ：调用"),s("code",null,"event.preventDefault()"),a(" ，在运行处理程序之前调用。比如，对客户端表单处理有用。")],-1)),n[16]||(n[16]=s("li",null,[s("code",null,"stopPropagation"),a(" ：调用 "),s("code",null,"event.stopPropagation()"),a(", 防止事件影响到下一个元素。")],-1)),n[17]||(n[17]=s("li",null,[s("code",null,"passive"),a(" ： 优化了对 touch/wheel 事件的滚动表现(Svelte 会在合适的地方自动添加滚动条)。")],-1)),s("li",null,[n[8]||(n[8]=s("code",null,"capture",-1)),n[9]||(n[9]=a(" — 在 ")),n[10]||(n[10]=s("em",null,"capture",-1)),n[11]||(n[11]=a(" 阶段而不是")),n[12]||(n[12]=s("em",null,"bubbling",-1)),n[13]||(n[13]=a(" 阶段触发事件处理程序 (")),s("a",v,[n[7]||(n[7]=a("MDN docs")),e(t)]),n[14]||(n[14]=a(")"))]),n[18]||(n[18]=s("li",null,[s("code",null,"once"),a(" ：运行一次事件处理程序后将其删除。")],-1)),n[19]||(n[19]=s("li",null,[s("code",null,"self"),a(" — 仅当 event.target 是其本身时才执行。")],-1))]),n[22]||(n[22]=s("p",null,[a("你可以将修饰符组合在一起使用，例如："),s("code",null,"on:click|once|capture={...}"),a("。")],-1))])}const h=l(u,[["render",g],["__file","Sveltejs.html.vue"]]),x=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/02.%20%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Svelte/Sveltejs.html","title":"Svelte","lang":"zh-CN","frontmatter":{"description":"Svelte 目录 Svelte https://www.sveltejs.cn/（有中文，挺好） Table.svelte 这个官网文档就非常非常非常不错，而且网站上还有配套的在线运行 简介 使用 语法糖 样式 导入 html方式渲染 官方提供了针对 Rollup 和 webpack 的插件，另外还有很多是社区维护的插件。 反应性能力 普通赋值语句 ...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/02.%20%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Svelte/Sveltejs.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Svelte"}],["meta",{"property":"og:description","content":"Svelte 目录 Svelte https://www.sveltejs.cn/（有中文，挺好） Table.svelte 这个官网文档就非常非常非常不错，而且网站上还有配套的在线运行 简介 使用 语法糖 样式 导入 html方式渲染 官方提供了针对 Rollup 和 webpack 的插件，另外还有很多是社区维护的插件。 反应性能力 普通赋值语句 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Svelte\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Svelte","slug":"svelte","link":"#svelte","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"Svelte","slug":"svelte-1","link":"#svelte-1","children":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":4,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":4,"title":"语法糖","slug":"语法糖","link":"#语法糖","children":[]},{"level":4,"title":"样式","slug":"样式","link":"#样式","children":[]},{"level":4,"title":"导入","slug":"导入","link":"#导入","children":[]},{"level":4,"title":"html方式渲染","slug":"html方式渲染","link":"#html方式渲染","children":[]}]},{"level":2,"title":"反应性能力","slug":"反应性能力","link":"#反应性能力","children":[{"level":4,"title":"普通赋值语句","slug":"普通赋值语句","link":"#普通赋值语句","children":[]},{"level":4,"title":"反应式声明（reactive declarations）","slug":"反应式声明-reactive-declarations","link":"#反应式声明-reactive-declarations","children":[]},{"level":4,"title":"语句","slug":"语句","link":"#语句","children":[]},{"level":4,"title":"更新数组和对象","slug":"更新数组和对象","link":"#更新数组和对象","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":4,"title":"声明属性","slug":"声明属性","link":"#声明属性","children":[]},{"level":4,"title":"默认值","slug":"默认值","link":"#默认值","children":[]},{"level":4,"title":"属性传递","slug":"属性传递","link":"#属性传递","children":[]}]},{"level":2,"title":"逻辑","slug":"逻辑","link":"#逻辑","children":[{"level":4,"title":"if语句","slug":"if语句","link":"#if语句","children":[]},{"level":4,"title":"else和else-if语句","slug":"else和else-if语句","link":"#else和else-if语句","children":[]},{"level":4,"title":"循环 each块","slug":"循环-each块","link":"#循环-each块","children":[]},{"level":4,"title":"为each块添加key值","slug":"为each块添加key值","link":"#为each块添加key值","children":[]},{"level":4,"title":"await块（promise）","slug":"await块-promise","link":"#await块-promise","children":[]}]},{"level":2,"title":"事件","slug":"事件","link":"#事件","children":[{"level":4,"title":"DOM 事件","slug":"dom-事件","link":"#dom-事件","children":[]},{"level":4,"title":"事件修饰符","slug":"事件修饰符","link":"#事件修饰符","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.04,"words":1213},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/Svelte/Sveltejs.md","excerpt":"\\n<h1>目录</h1>\\n<h1>Svelte</h1>\\n<p>https://www.sveltejs.cn/（有中文，挺好）</p>\\n<p>Table.svelte</p>\\n<p>这个官网文档就<strong>非常非常非常不错</strong>，而且网站上还有配套的在线运行</p>\\n<h2>简介</h2>\\n<h4>使用</h4>\\n<div class=\\"language-tsx\\" data-ext=\\"tsx\\" data-title=\\"tsx\\"><pre class=\\"language-tsx\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n\\tlet name = 'world';\\n</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>h1</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">Hello </span><span class=\\"token punctuation\\">{</span>name<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toUpperCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span><span class=\\"token plain-text\\">!</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>h1</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/Svelte/Sveltejs.md","value":{"title":"Sveltejs","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/02. 前端框架/Svelte/Sveltejs.md","outlink":[],"backlink":[]}}],"links":[]}}}`);export{h as comp,x as data};
