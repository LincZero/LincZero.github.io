import{_ as e,e as a,g as s,o as l}from"./app-EuS-Ookm.js";const n={};function t(r,i){return l(),a("div",null,i[0]||(i[0]=[s(`<h1 id="all-pure-terminal" tabindex="-1"><a class="header-anchor" href="#all-pure-terminal"><span>all_pure_terminal</span></a></h1><h2 id="cmake" tabindex="-1"><a class="header-anchor" href="#cmake"><span>CMake</span></a></h2><h3 id="pure-terminal-in-windows" tabindex="-1"><a class="header-anchor" href="#pure-terminal-in-windows"><span>Pure terminal in Windows</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pure-terminal-in-linux" tabindex="-1"><a class="header-anchor" href="#pure-terminal-in-linux"><span>Pure terminal in Linux</span></a></h3><p>其实这个和上面的工作流大差不差，主要都是先一遍cmake，再一遍make</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 旧 (用cmake将cmakelist生成makefile，再用make生成最终产物。但实际上cmake本身就能跨平台，根本用不着make。@mq白cpp 就吐槽过: BV1wHSoYfE1H)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># cd build</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># cmake ..</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># make -j</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="纯gcc-g" tabindex="-1"><a class="header-anchor" href="#纯gcc-g"><span>纯gcc/g++</span></a></h2><p>略，现在一般不会不用make工具</p>`,9)]))}const p=e(n,[["render",t],["__file","09. all_pure_terminal.html.vue"]]),d=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E5%BC%80%E5%8F%91%E5%B1%82/How%20to%20build/Cpp/09.%20all_pure_terminal.html","title":"all_pure_terminal","lang":"zh-CN","frontmatter":{"description":"all_pure_terminal CMake Pure terminal in Windows Pure terminal in Linux 其实这个和上面的工作流大差不差，主要都是先一遍cmake，再一遍make 纯gcc/g++ 略，现在一般不会不用make工具","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E5%BC%80%E5%8F%91%E5%B1%82/How%20to%20build/Cpp/09.%20all_pure_terminal.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"all_pure_terminal"}],["meta",{"property":"og:description","content":"all_pure_terminal CMake Pure terminal in Windows Pure terminal in Linux 其实这个和上面的工作流大差不差，主要都是先一遍cmake，再一遍make 纯gcc/g++ 略，现在一般不会不用make工具"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"all_pure_terminal\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.39,"words":116},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/How to build/Cpp/09. all_pure_terminal.md","excerpt":"\\n<h2>CMake</h2>\\n<h3>Pure terminal in Windows</h3>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">cd</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> build</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">cmake</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ..</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> &amp;&amp; </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">cmake</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> --build</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> .</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/How to build/Cpp/09. all_pure_terminal.md","value":{"title":"09. all_pure_terminal","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 开发层/How to build/Cpp/09. all_pure_terminal.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,d as data};
