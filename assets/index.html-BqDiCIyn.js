import{_ as t,c as d,b as s,a as e,d as l,e as a,o,r}from"./app-BkGjq3n1.js";const u={},c={href:"https://www.bilibili.com/video/BV1dp4y1d7NQ",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/zhaoshenzhai/MathWiki",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.bilibili.com/video/BV1ta4y1Q75u",target:"_blank",rel:"noopener noreferrer"},b={href:"https://insile.github.io/my-notes/%E7%AC%94%E8%AE%B0/%E5%BD%A2%E5%BC%8F%E7%A7%91%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6",target:"_blank",rel:"noopener noreferrer"},m={href:"https://oi-wiki.org/math",target:"_blank",rel:"noopener noreferrer"};function g(v,i){const n=r("ExternalLinkIcon");return o(),d("div",null,[i[10]||(i[10]=s('<h1 id="pkmer-math" tabindex="-1"><a class="header-anchor" href="#pkmer-math"><span>Pkmer-Math</span></a></h1><p>基于Obsidian建立公开共享的数学知识库！ PKMer知识管理交流群(QQ): 825255377 PKMer-Math开发者交流群(QQ): 782017903</p><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>本库亦在用通俗的语言描述 梳理高等数学的主要内容, 整理为Obsidian风格的markdown文件, 内容上会使用大量Obsidian特色风格语法, 包括但不限于:</p><ul><li>使用Obsidian双链语法, 组织目录和相关内容, 构成一个Obsidian的数学知识网络.</li><li>使用Callout语法, 为重点内容制作简易美观的词条卡片.</li><li>使用块引用语法, 引用原子化的内容组织更高层文章</li></ul><p><strong>本库需要使用dataview插件</strong>,用于浏览Home页和章节目录. 但不是必须的, 因为词条内容没有使用dataview查询.</p><p>由于开发者精力有限, 如有内容疏漏/错误 欢迎补充和指出. 希望共同开发的场合, 请联系开发者.</p><h2 id="内容主要来源" tabindex="-1"><a class="header-anchor" href="#内容主要来源"><span>内容主要来源:</span></a></h2><ol><li>国内高数等主流教材</li><li>Wikipedia</li><li>ChatGPT</li><li>开发者们的学识</li></ol><h2 id="其他数学库" tabindex="-1"><a class="header-anchor" href="#其他数学库"><span>其他数学库</span></a></h2>',10)),e("ol",null,[e("li",null,[e("s",null,[e("a",c,[i[0]||(i[0]=l("基于Obsidian的新型考研数学笔记原子分子树的构建")),a(n)]),i[1]||(i[1]=l("(复杂且没用)"))])]),e("li",null,[e("a",p,[i[2]||(i[2]=l("MathWiki")),a(n)]),i[3]||(i[3]=l("(非常高深)"))]),e("li",null,[e("a",h,[i[4]||(i[4]=l("09-22年考研数学一真题")),a(n)]),i[5]||(i[5]=l("(没什么好说的)"))]),e("li",null,[e("a",b,[i[6]||(i[6]=l("数学 (insile.github.io)")),a(n)]),i[7]||(i[7]=l("(内容较基础)"))]),e("li",null,[e("a",m,[i[8]||(i[8]=l("OI Wiki")),a(n)]),i[9]||(i[9]=l("(算法竞赛)"))])]),i[11]||(i[11]=s(`<hr><h1 id="内容" tabindex="-1"><a class="header-anchor" href="#内容"><span>内容</span></a></h1><p>本库中的markdown文档内容按等级从上到下分为三种:</p><ul><li>[[#目录]]</li><li>[[#文档]]</li><li>[[#词条]]</li></ul><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><p>包含章节列表的文件, 有时还会包含简要说明</p><p>总目录的导航页为[[Home]], 包含了以下目录 目录以树状图形式组织, 名称两边加上目录等级数的&quot;-&quot;符号</p><ul><li>一级为总目录 -高等数学-</li><li>二级为--微积分--, --线性代数--, --概率论--等具体学科分支</li><li>三级为学科分支的章节划分, 如极限, 导数与微分</li><li>最下级为具体的原子化词条和由其组织的文章</li></ul><h2 id="文档" tabindex="-1"><a class="header-anchor" href="#文档"><span>文档</span></a></h2><p>为了阐述某概念而按逻辑顺序书写的文章, 有时会引用词条. 文档的内容根据教材pdf总结</p><h2 id="词条" tabindex="-1"><a class="header-anchor" href="#词条"><span>词条</span></a></h2><p>原子化的某一概念, 使用一段话概括. <strong>不允许使用标题</strong>, 可以使用Callouts卡片</p><hr><h1 id="关于合作开发" tabindex="-1"><a class="header-anchor" href="#关于合作开发"><span>关于合作开发</span></a></h1><p>本项目在GitHub开源，为了更好地进行和合作开发，计划在此做一些教程和规范, 目前开发原则和内容规范都在拟定中, 随时会变化, 如有更好的建议欢迎提案.</p><h2 id="开发原则" tabindex="-1"><a class="header-anchor" href="#开发原则"><span>开发原则</span></a></h2><ul><li>尽可能简洁, 让人能够快速理解重点</li><li>对自己写的东西的正确性负责, 多改几次也没有关系</li><li>奥卡姆剃刀原理：如无必要 勿增实体. 尽可能在Obsidian的原生功能基础上进行开发</li><li>如果是时间来不及则先将文件放到对应的一级文件夹下, 有时间再做整理</li></ul><h2 id="关于插件和配置" tabindex="-1"><a class="header-anchor" href="#关于插件和配置"><span>关于插件和配置</span></a></h2><p>设计理念允许不同的配置, 以适应不同的人的使用体验. 其中有必要的相同插件, 有适应不同人群使用习惯的插件.</p><h3 id="个性化配置原则" tabindex="-1"><a class="header-anchor" href="#个性化配置原则"><span>个性化配置原则</span></a></h3><ul><li>推荐插件 <ul><li>dataview 只能在章节目录中使用, 同时保留手写的目录</li><li>Templater 方便新建笔记</li><li>[[#ObsidianGit]] 方便Github合作开发, 当然你也可以用vscode</li></ul></li><li>允许使用轻量级插件(如快捷表格操作, 数学公式等) <ul><li>Force note view mode</li><li>No more flickering inline math</li></ul></li><li>不推荐使用任何破坏性插件(quickadd,Linter等需要谨慎操作, 每次用完后需要关闭插件), 但如果熟悉的话,允许使用 <ul><li>Linter</li><li>QuickAdd</li></ul></li><li>知识词条页面严禁使用html, css, javascript</li></ul><h2 id="内容规范" tabindex="-1"><a class="header-anchor" href="#内容规范"><span>内容规范</span></a></h2><ul><li>所有词条都要按层级顺序添加上级目录的双链, 如: <ul><li>积分表属于微积分的不定积分章节, 则需要添加名为dlink的property, 类型为list, 内容为所属的最近一层目录, <code>dlink: [[不定积分]]</code></li></ul></li><li>最底层的内容应该尽量使用词条来原子化, 即每一个篇章都由单个最基本的概念组成, 如果需要整合多个词条内容, 需要使用内容引用语法: <code>![[向量]]</code><ul><li>词条主要内容放在开头, 不使用标题.</li><li>词条间接介绍部分使用多级标题(如性质, 推广, 例子...)</li></ul></li><li>文档内容结构(历史内容待完善) <ul><li>简介: 可以引用词条, 或使用文档名作为一级标题</li><li>定义: 可以引用词条</li><li>推导</li><li>性质</li><li>例题</li><li>推论</li><li>应用</li></ul></li><li>头部YAML配置项(property) <ul><li>tags: 数学, AI(仅限gpt生成词条)</li><li>dlink: 双链, 记录父级目录和相关词条</li><li>aliases: 别名, 简写, 英语, 日语</li><li>chapter: 章节序号, 根据参考教材决定</li><li>urlink: 外部引用, 如Wikipedia</li><li>author: 作者, 可以是多个</li><li>datetime: 创建时间, 可以不写</li></ul></li></ul><h2 id="准备条件" tabindex="-1"><a class="header-anchor" href="#准备条件"><span>准备条件</span></a></h2><p>大致分为几个部分:</p><ol><li>如果在国内需要首先解决科学问题</li><li>确保你要有个GitHub账号</li><li>向开发者申请权限，有权限才能提交修改</li><li>安装Git命令行工具</li><li>在Obsidian配置Obsidian Git插件设置</li><li>从GitHub第一次拉取项目， 使用clone命令</li></ol><h2 id="obsidiangit" tabindex="-1"><a class="header-anchor" href="#obsidiangit"><span>ObsidianGit</span></a></h2><p>建议在本项目使用Obsidian第三方git插件: <strong>Obsidian Git</strong></p><ol><li>在Commit Author中设置好自己的Github账号</li><li><code>ctrl+p</code>输入<code>obsidian git open source control view</code> 打开Obsidian Git工具的GUI界面, 在此GUI界面点按钮就行</li></ol><h2 id="开发步骤" tabindex="-1"><a class="header-anchor" href="#开发步骤"><span>开发步骤</span></a></h2><p>分为拉取同步，提交修改, 推送，冲突处理等</p><h3 id="_1-拉取-pull" tabindex="-1"><a class="header-anchor" href="#_1-拉取-pull"><span>1. 拉取(Pull)</span></a></h3><p>从GitHub拉取(pull)别人的修改</p><h3 id="_2-提交-commit" tabindex="-1"><a class="header-anchor" href="#_2-提交-commit"><span>2. 提交(commit)</span></a></h3><p>将你的修改提交到GitHub</p><h3 id="_3-推送-push" tabindex="-1"><a class="header-anchor" href="#_3-推送-push"><span>3. 推送(Push)</span></a></h3><p>本地的多个修改保存后</p><h3 id="_4-冲突处理" tabindex="-1"><a class="header-anchor" href="#_4-冲突处理"><span>4. 冲突处理</span></a></h3><p>这个比较麻烦, 日后有空再写, 简单说一下就是如果发生了冲突就是你本地文件新改动的某行和其他人新改动并提交到云端的这行不一样, 你们又都是从同一个版本衍生来的, 所以合并冲突就是你们商量怎么改动, 商量好了你先把你的改动保存下来然后放弃自己的改动, 从云端拉取他人的改动, 你在他的新改动的基础上再做修改</p><p>上述提到的<strong>修改</strong>指的是 文件以及文本内容的增删改, 而文本内容的增删改是以行为单位进行的</p><hr><h1 id="一些技术经验" tabindex="-1"><a class="header-anchor" href="#一些技术经验"><span>一些技术经验</span></a></h1><h2 id="合并分支" tabindex="-1"><a class="header-anchor" href="#合并分支"><span>合并分支</span></a></h2><p>如果有多个分支需要合并, 以下是合并步骤:</p><ol><li>首先切换到自己主要开发的分支, 比如我在main开发, 就先切换到master</li><li>执行命令 <code>git pull origin master</code> 将master合并到main (大概吧,我也没太搞懂谁合并到谁= =)</li><li>解决冲突, 这个如果有的话比较麻烦, 没有就不管</li><li>将合并后的内容推送到指定分支main, <code>git push origin master</code></li></ol><h2 id="子模块" tabindex="-1"><a class="header-anchor" href="#子模块"><span>子模块</span></a></h2><p>如果你想把Math库作为子文件夹放在自己的库中使用, 并且希望Math能够实时更新, 不影响你自己的库, 则可以创建子模块submodule 比如你的笔记目录为Note, 这个Note已经与GitHub上的仓库绑定, 你希望把Math库放到Note/Math位置并且能够实时更新, 则</p><h3 id="情况一" tabindex="-1"><a class="header-anchor" href="#情况一"><span>情况一</span></a></h3><p>Note库存在且已经是GitHub仓库, 本地Math库不存在</p><ol><li><strong>添加一个新的子模块</strong></li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token string">&quot;E:\\Note&quot;</span>
<span class="token function">git</span> submodule <span class="token function">add</span> https://github.com/PKM-er/Pkmer-Math.git Math
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>初始化和更新子模块</strong></li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> submodule init
<span class="token function">git</span> submodule update <span class="token parameter variable">--init</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>提交更改</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Add Math submodule&quot;</span>
<span class="token function">git</span> push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="情况二" tabindex="-1"><a class="header-anchor" href="#情况二"><span>情况二</span></a></h3><p>Note库还不存在, Math库已克隆至本地 上传你的 <code>E:\\Note</code> 仓库到 GitHub 需要以下步骤：</p><ol><li><p><strong>创建一个新的 GitHub 仓库</strong>:</p><ul><li>登录你的 GitHub 账户。</li><li>在 GitHub 的首页或仓库页面，点击“New repository”（新建仓库）。</li><li>为你的仓库命名（例如 <code>Note</code>），可以选择添加描述。</li><li>选择仓库的可见性（公开或私有）。</li><li>点击“Create repository”（创建仓库）。</li></ul></li><li><p><strong>连接本地仓库到 GitHub 仓库</strong>:</p><ul><li>在创建的 GitHub 仓库页面，找到“Quick setup”区域，复制提供的 URL（HTTPS 或 SSH）。</li><li>回到命令行界面，在 <code>E:\\Note</code> 目录下运行以下命令，将你的本地仓库与 GitHub 仓库关联起来（这里以 HTTPS URL 为例）： <code>git remote add origin https://github.com/your-username/Note.git</code> 把 <code>https://github.com/your-username/Note.git</code> 替换成你的 GitHub 仓库 URL。</li></ul></li><li><p><strong>上传你的仓库到 GitHub</strong>:</p><ul><li>首先，上传你的本地更改： <code>git push -u origin master</code> 这个命令会将你的 <code>master</code> 分支的内容推送到 GitHub 仓库。</li></ul></li><li><p><strong>处理子模块</strong>:</p><ol><li><strong>初始化Note仓库</strong></li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token string">&quot;E:\\Note&quot;</span>#改成你自己Note的路径
<span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>将 Math 仓库添加为子模块</strong></li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> submodule <span class="token function">add</span> ./Math Math
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里的 <code>./Math</code> 是 <code>Math</code> 仓库的本地路径 <code>Math</code> 是你希望在 <code>Note</code> 仓库中显示的子模块目录名</p><ol start="3"><li><strong>提交更改</strong></li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Add Math as a submodule&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Math</code> 文件夹已经被正确地添加为子模块。但是这个地址只是你本地的Math文件夹位置, 你的Note项目的GitHub端并不知道这个路径, 所以需要告诉它从哪找到这个Math项目</p><ol start="4"><li>修改Math作为子模块的url 将 <code>Note/.gitmodules</code> 文件中的 URL 改为这个地址：</li></ol><div class="language-gitmodules line-numbers-mode" data-ext="gitmodules" data-title="gitmodules"><pre class="language-gitmodules"><code>[submodule &quot;Math&quot;]
 	path = Math	
 	url = https://github.com/PKM-er/Pkmer-Math.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的配置说明：</p><ul><li><strong>[submodule &quot;Math&quot;]</strong>: 表示这是一个名为 &quot;Math&quot; 的子模块。</li><li><strong>path = Math</strong>: 指定了子模块在 <code>Note</code> 仓库中的相对路径，这里是 <code>Math</code> 目录。</li><li><strong>url = ./Math</strong>: 指定了子模块的源 URL。在这个例子中，使用了相对路径 <code>./Math</code>。 这个配置通常用于当子模块仓库位于与父仓库相同的物理位置时。 然而，当你准备将 <code>Note</code> 仓库推送到 GitHub 时，这里可能需要更改。</li></ul><p>这样，当其他人克隆你的 <code>Note</code> 仓库并初始化子模块时，Git 会知道从哪里克隆 <code>Math</code> 子模块。</p><ol start="5"><li>提交更改 完成更改后，记得在 <code>Note</code> 仓库中提交这些更改：</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git add .gitmodules git commit -m &quot;Update Math submodule URL&quot; git push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会确保 <code>.gitmodules</code> 文件中的更改被推送到你的远程 <code>Note</code> 仓库。</p><p>这样，<code>Math</code> 仓库就作为一个子模块被添加到了 <code>Note</code> 仓库中。你可以在 <code>Note</code> 仓库中看到一个名为 <code>.gitmodules</code> 的文件，这个文件会记录子模块的相关信息。</p></li></ol><h2 id="gitignore构建" tabindex="-1"><a class="header-anchor" href="#gitignore构建"><span>.gitignore构建</span></a></h2><p>由于每个人的配置都不一样, 个人可能有需要用到某些插件和主题外观, 所以如有必要请使用.gitignore根据自己的情况来配置, 如果什么额外的插件都不用, 则不用管</p><div class="language-.gitignore line-numbers-mode" data-ext=".gitignore" data-title=".gitignore"><pre class="language-.gitignore"><code># 首先排除自己, 因为每个人情况不一样,单独配置
.gitignore

# 同步.obsidian文件夹下指定的子文件夹, 这些插件都暂时没有用到, 将来找机会剔除
.obsidian/*
.obsidian/app.json
.obsidian/snippets
.obsidian/community-plugins.json
.obsidian/graph.json
.obsidian/bookmarks.json

.obsidian/plugins
.obsidian/plugins/*
.obsidian/plugins/dataview/
.obsidian/plugins/obsidian-git/
.obsidian/plugins/obsidian-linter/
.obsidian/plugins/quickadd/
.obsidian/plugins/obsidian-outliner/
.obsidian/plugins/table-editor-obsidian/
.obsidian/plugins/obsidian-latex-suite/
.obsidian/plugins/templater-obsidian
.obsidian/v2ray/
.obsidian/Clash/

# 其他ob相关文件夹
.history
.trash

# 针对Mac系统的忽略
.DS_Store

# 子模块相关, 暂时没有用到
.gitmodules

# vscode配置文件夹
.vscode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61))])}const M=t(u,[["render",g],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/MdNote_Other/Pkmer-Math/","title":"Pkmer-Math","lang":"zh-CN","frontmatter":{"description":"Pkmer-Math 基于Obsidian建立公开共享的数学知识库！ PKMer知识管理交流群(QQ): 825255377 PKMer-Math开发者交流群(QQ): 782017903 前言 本库亦在用通俗的语言描述 梳理高等数学的主要内容, 整理为Obsidian风格的markdown文件, 内容上会使用大量Obsidian特色风格语法, 包括但...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Other/Pkmer-Math/"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Pkmer-Math"}],["meta",{"property":"og:description","content":"Pkmer-Math 基于Obsidian建立公开共享的数学知识库！ PKMer知识管理交流群(QQ): 825255377 PKMer-Math开发者交流群(QQ): 782017903 前言 本库亦在用通俗的语言描述 梳理高等数学的主要内容, 整理为Obsidian风格的markdown文件, 内容上会使用大量Obsidian特色风格语法, 包括但..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pkmer-Math\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Pkmer-Math","slug":"pkmer-math","link":"#pkmer-math","children":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"内容主要来源:","slug":"内容主要来源","link":"#内容主要来源","children":[]},{"level":2,"title":"其他数学库","slug":"其他数学库","link":"#其他数学库","children":[]}]},{"level":1,"title":"内容","slug":"内容","link":"#内容","children":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"文档","slug":"文档","link":"#文档","children":[]},{"level":2,"title":"词条","slug":"词条","link":"#词条","children":[]}]},{"level":1,"title":"关于合作开发","slug":"关于合作开发","link":"#关于合作开发","children":[{"level":2,"title":"开发原则","slug":"开发原则","link":"#开发原则","children":[]},{"level":2,"title":"关于插件和配置","slug":"关于插件和配置","link":"#关于插件和配置","children":[{"level":3,"title":"个性化配置原则","slug":"个性化配置原则","link":"#个性化配置原则","children":[]}]},{"level":2,"title":"内容规范","slug":"内容规范","link":"#内容规范","children":[]},{"level":2,"title":"准备条件","slug":"准备条件","link":"#准备条件","children":[]},{"level":2,"title":"ObsidianGit","slug":"obsidiangit","link":"#obsidiangit","children":[]},{"level":2,"title":"开发步骤","slug":"开发步骤","link":"#开发步骤","children":[{"level":3,"title":"1. 拉取(Pull)","slug":"_1-拉取-pull","link":"#_1-拉取-pull","children":[]},{"level":3,"title":"2. 提交(commit)","slug":"_2-提交-commit","link":"#_2-提交-commit","children":[]},{"level":3,"title":"3. 推送(Push)","slug":"_3-推送-push","link":"#_3-推送-push","children":[]},{"level":3,"title":"4. 冲突处理","slug":"_4-冲突处理","link":"#_4-冲突处理","children":[]}]}]},{"level":1,"title":"一些技术经验","slug":"一些技术经验","link":"#一些技术经验","children":[{"level":2,"title":"合并分支","slug":"合并分支","link":"#合并分支","children":[]},{"level":2,"title":"子模块","slug":"子模块","link":"#子模块","children":[{"level":3,"title":"情况一","slug":"情况一","link":"#情况一","children":[]},{"level":3,"title":"情况二","slug":"情况二","link":"#情况二","children":[]}]},{"level":2,"title":".gitignore构建","slug":"gitignore构建","link":"#gitignore构建","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":9.62,"words":2887},"filePathRelative":"MdNote_Other/Pkmer-Math/README.md","excerpt":"\\n<p>基于Obsidian建立公开共享的数学知识库！\\nPKMer知识管理交流群(QQ): 825255377\\nPKMer-Math开发者交流群(QQ): 782017903</p>\\n<h2>前言</h2>\\n<p>本库亦在用通俗的语言描述 梳理高等数学的主要内容, 整理为Obsidian风格的markdown文件, 内容上会使用大量Obsidian特色风格语法, 包括但不限于:</p>\\n<ul>\\n<li>使用Obsidian双链语法, 组织目录和相关内容, 构成一个Obsidian的数学知识网络.</li>\\n<li>使用Callout语法, 为重点内容制作简易美观的词条卡片.</li>\\n<li>使用块引用语法, 引用原子化的内容组织更高层文章</li>\\n</ul>","autoDesc":true}');export{M as comp,f as data};
