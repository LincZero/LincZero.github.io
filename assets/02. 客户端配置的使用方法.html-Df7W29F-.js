import{_ as p,c as l,a as s,b as a,d as e,e as o,o as i,r as u}from"./app-CevDx19p.js";const r={},c={href:"https://vuepress.github.io/zh/guide/configuration.html#%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},d={href:"https://vuepress.github.io/zh/reference/plugin-api.html#clientconfigfile",target:"_blank",rel:"noopener noreferrer"},k={href:"https://vuepress.github.io/zh/reference/client-api.html#defineclientconfig",target:"_blank",rel:"noopener noreferrer"},v={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://vuepress.github.io/zh/reference/frontmatter.html#layout",target:"_blank",rel:"noopener noreferrer"},g={href:"https://staging-cn.vuejs.org/api/application.html#create-app",target:"_blank",rel:"noopener noreferrer"},b={href:"https://router.vuejs.org/zh/api/index.html#createrouter",target:"_blank",rel:"noopener noreferrer"},y={href:"https://vuepress.github.io/zh/reference/config.html#base",target:"_blank",rel:"noopener noreferrer"},E={href:"https://vuepress.github.io/zh/reference/config.html#lang",target:"_blank",rel:"noopener noreferrer"},C={href:"https://vuepress.github.io/zh/reference/config.html#title",target:"_blank",rel:"noopener noreferrer"},w={href:"https://vuepress.github.io/zh/reference/config.html#description",target:"_blank",rel:"noopener noreferrer"},A={href:"https://vuepress.github.io/zh/reference/config.html#head",target:"_blank",rel:"noopener noreferrer"},h={href:"https://vuepress.github.io/zh/reference/config.html#locales",target:"_blank",rel:"noopener noreferrer"},B={href:"https://staging-cn.vuejs.org/api/application.html#app-component",target:"_blank",rel:"noopener noreferrer"},x={href:"https://vuepress.github.io/zh/reference/components.html#clientonly",target:"_blank",rel:"noopener noreferrer"},S={href:"https://vuepress.github.io/zh/reference/client-api.html#ssr",target:"_blank",rel:"noopener noreferrer"},D={href:"https://router.vuejs.org/zh/api/index.html#router-%E6%96%B9%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},P={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},R={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},V={href:"https://vuepress.github.io/zh/reference/client-api.html#ssr",target:"_blank",rel:"noopener noreferrer"},M={href:"https://staging-cn.vuejs.org/api/composition-api-lifecycle.html#onmounted",target:"_blank",rel:"noopener noreferrer"},z={href:"https://vuepress.github.io/zh/reference/frontmatter.html#layout",target:"_blank",rel:"noopener noreferrer"};function F(j,n){const t=u("ExternalLinkIcon");return i(),l("div",null,[n[85]||(n[85]=s("h1",{id:"客户端配置的使用方法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#客户端配置的使用方法"},[s("span",null,"客户端配置的使用方法")])],-1)),n[86]||(n[86]=s("h2",{id:"defineclientconfig-函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#defineclientconfig-函数"},[s("span",null,"defineClientConfig 函数")])],-1)),s("p",null,[n[2]||(n[2]=a("你可以直接在你的项目中使用 ")),s("a",c,[n[0]||(n[0]=a("客户端配置文件")),e(t)]),n[3]||(n[3]=a(" 。或者，在你的插件或者主题中，使用 ")),s("a",d,[n[1]||(n[1]=a("clientConfigFile")),e(t)]),n[4]||(n[4]=a(" Hook 来指定客户端配置文件的路径："))]),n[87]||(n[87]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/utils&#39;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">const</span> pluginOrTheme <span class="token operator">=</span> <span class="token punctuation">{</span>
  clientConfigFile<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/clientConfig.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[6]||(n[6]=a("在客户端配置文件中，")),n[7]||(n[7]=s("code",null,"vuepress/client",-1)),n[8]||(n[8]=a(" 提供了一个 ")),s("a",k,[n[5]||(n[5]=a("defineClientConfig")),e(t)]),n[9]||(n[9]=a(" 函数来帮助你定义客户端配置："))]),n[88]||(n[88]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  rootComponents<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提前总结</p>`,2)),s("ul",null,[n[25]||(n[25]=s("li",null,[a("enhance "),s("ul",null,[s("li",null,[a("调用时机："),s("code",null,"enhance"),a(" 函数会在客户端应用创建后被调用")]),s("li",null,"作用：可以对 Vue 应用添加各种能力")])],-1)),s("li",null,[n[20]||(n[20]=a("setup ")),s("ul",null,[s("li",null,[n[11]||(n[11]=a("调用时机：")),n[12]||(n[12]=s("code",null,"setup",-1)),n[13]||(n[13]=a(" 函数会在客户端 Vue 应用的 ")),s("a",v,[n[10]||(n[10]=a("setup")),e(t)]),n[14]||(n[14]=a(" Hook 中被调用"))]),s("li",null,[n[16]||(n[16]=a("作用：可以把 ")),n[17]||(n[17]=s("code",null,"setup",-1)),n[18]||(n[18]=a(" 函数当作根组件的 ")),s("a",m,[n[15]||(n[15]=a("setup")),e(t)]),n[19]||(n[19]=a(" Hook 中的一部分。因此，所有的组合式 API 都可以在这里使用"))])])]),s("li",null,[n[24]||(n[24]=a("layouts ")),s("ul",null,[s("li",null,[n[22]||(n[22]=a("作用：设置布局组件。你在此处注册布局后，用户就可以通过 ")),s("a",f,[n[21]||(n[21]=a("layout")),e(t)]),n[23]||(n[23]=a(" frontmatter 来使用它们"))])])]),n[26]||(n[26]=s("li",null,[a("rootComponents "),s("ul",null,[s("li",null,"作用：组件数组，它们将会直接被放置在客户端 Vue 应用的根节点下。该选项的典型使用方式就是放置一些全局的 UI 组件，比如全局弹窗等")])],-1))]),n[89]||(n[89]=s("h2",{id:"_1-enhance-函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-enhance-函数"},[s("span",null,"(1) enhance 函数")])],-1)),n[90]||(n[90]=s("p",null,[a("调用时机："),s("code",null,"enhance"),a(" 函数会在客户端应用创建后被调用，你可以对 Vue 应用添加各种能力")],-1)),n[91]||(n[91]=s("p",null,[s("code",null,"enhance"),a(" 函数既可以是同步的，也可以是异步的。它接收一个 Context 参数，包含以下属性：")],-1)),s("ul",null,[s("li",null,[n[28]||(n[28]=s("code",null,"app",-1)),n[29]||(n[29]=a(" 是由 ")),s("a",g,[n[27]||(n[27]=a("createApp")),e(t)]),n[30]||(n[30]=a(" 创建的 Vue 应用实例。"))]),s("li",null,[n[32]||(n[32]=s("code",null,"router",-1)),n[33]||(n[33]=a(" 是由 ")),s("a",b,[n[31]||(n[31]=a("createRouter")),e(t)]),n[34]||(n[34]=a(" 创建的路由实例。"))]),s("li",null,[n[41]||(n[41]=s("code",null,"siteData",-1)),n[42]||(n[42]=a(" 是一个根据用户配置生成的 Ref 对象，包含 ")),s("a",y,[n[35]||(n[35]=a("base")),e(t)]),n[43]||(n[43]=a(", ")),s("a",E,[n[36]||(n[36]=a("lang")),e(t)]),n[44]||(n[44]=a(", ")),s("a",C,[n[37]||(n[37]=a("title")),e(t)]),n[45]||(n[45]=a(", ")),s("a",w,[n[38]||(n[38]=a("description")),e(t)]),n[46]||(n[46]=a(", ")),s("a",A,[n[39]||(n[39]=a("head")),e(t)]),n[47]||(n[47]=a(" 和 ")),s("a",h,[n[40]||(n[40]=a("locales")),e(t)]),n[48]||(n[48]=a("。"))])]),n[92]||(n[92]=s("h3",{id:"注册-vue-组件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#注册-vue-组件"},[s("span",null,"注册 Vue 组件")])],-1)),s("p",null,[n[50]||(n[50]=a("你可以通过 ")),s("a",B,[n[49]||(n[49]=a("app.component")),e(t)]),n[51]||(n[51]=a(" 方法来注册 Vue 全局组件："))]),n[93]||(n[93]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&#39;./MyComponent.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;MyComponent&#39;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用不支持-ssr-的功能" tabindex="-1"><a class="header-anchor" href="#使用不支持-ssr-的功能"><span>使用不支持 SSR 的功能</span></a></h3><p>VuePress 会在构建过程中生成一个 SSR 应用，用以对页面进行预渲染。一般而言，如果一段代码在客户端应用 Mount 之前就使用了浏览器或 DOM API ，我们就认为其对 SSR 不友好，即不支持 SSR 。</p>`,3)),s("p",null,[n[53]||(n[53]=a("我们已经提供了一个 ")),s("a",x,[n[52]||(n[52]=a("ClientOnly")),e(t)]),n[54]||(n[54]=a(" 组件来包裹不支持 SSR 的内容。"))]),s("p",null,[n[56]||(n[56]=a("在 ")),n[57]||(n[57]=s("code",null,"enhance",-1)),n[58]||(n[58]=a(" 函数中，你可以使用 ")),s("a",S,[n[55]||(n[55]=s("code",null,"__VUEPRESS_SSR__",-1)),e(t)]),n[59]||(n[59]=a(" 标记来处理这种情况。"))]),n[94]||(n[94]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>__VUEPRESS_SSR__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nonSsrFriendlyModule <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;non-ssr-friendly-module&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-router-方法" tabindex="-1"><a class="header-anchor" href="#使用-router-方法"><span>使用 Router 方法</span></a></h3>`,2)),s("p",null,[n[61]||(n[61]=a("你可以使用 vue-router 提供的 ")),s("a",D,[n[60]||(n[60]=a("Router 方法")),e(t)]),n[62]||(n[62]=a(" 。例如，添加导航钩子："))]),n[95]||(n[95]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> router <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;before navigation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after navigation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意</p><p>我们不推荐使用 <code>addRoute</code> 方法来添加动态路由，因为这些路由记录 <strong>不会</strong> 在构建模式中被预渲染出来。</p><p>当然，如果你了解了这种用法的缺点，你还是可以这样使用。</p><h2 id="_2-setup-组合式api" tabindex="-1"><a class="header-anchor" href="#_2-setup-组合式api"><span>(2) setup 组合式API</span></a></h2>`,5)),s("p",null,[n[64]||(n[64]=a("调用时机：")),n[65]||(n[65]=s("code",null,"setup",-1)),n[66]||(n[66]=a(" 函数会在客户端 Vue 应用的 ")),s("a",P,[n[63]||(n[63]=a("setup")),e(t)]),n[67]||(n[67]=a(" Hook 中被调用"))]),n[96]||(n[96]=s("h3",{id:"使用组合式-api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用组合式-api"},[s("span",null,"使用组合式 API")])],-1)),s("p",null,[n[69]||(n[69]=a("作用：你可以把 ")),n[70]||(n[70]=s("code",null,"setup",-1)),n[71]||(n[71]=a(" 函数当作根组件的 ")),s("a",R,[n[68]||(n[68]=a("setup")),e(t)]),n[72]||(n[72]=a(" Hook 中的一部分。因此，所有的组合式 API 都可以在这里使用。"))]),n[97]||(n[97]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> provide<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取当前的路由位置</span>
    <span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 或者 vue-router 实例</span>
    <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 供给一个值，可以被布局、页面和其他组件注入</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用不支持-ssr-的功能-1" tabindex="-1"><a class="header-anchor" href="#使用不支持-ssr-的功能-1"><span>使用不支持 SSR 的功能</span></a></h3>`,2)),s("p",null,[n[74]||(n[74]=a("在 ")),n[75]||(n[75]=s("code",null,"setup",-1)),n[76]||(n[76]=a(" 函数中，")),s("a",V,[n[73]||(n[73]=s("code",null,"__VUEPRESS_SSR__",-1)),e(t)]),n[77]||(n[77]=a(" 标记同样可用。"))]),s("p",null,[n[79]||(n[79]=a("使用不支持 SSR 的功能的另一种方式就是将他们放在 ")),s("a",M,[n[78]||(n[78]=a("onMounted")),e(t)]),n[80]||(n[80]=a(" Hook 中："))]),n[98]||(n[98]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 在 mounted 之后使用 DOM API</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-layouts-配置项" tabindex="-1"><a class="header-anchor" href="#_3-layouts-配置项"><span>(3) layouts 配置项</span></a></h2>`,2)),s("p",null,[n[82]||(n[82]=s("code",null,"layouts",-1)),n[83]||(n[83]=a(" 配置项用于设置布局组件。你在此处注册布局后，用户就可以通过 ")),s("a",z,[n[81]||(n[81]=a("layout")),e(t)]),n[84]||(n[84]=a(" frontmatter 来使用它们。"))]),n[99]||(n[99]=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> MyLayout <span class="token keyword">from</span> <span class="token string">&#39;./layouts/MyLayout.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
    MyLayout<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-rootcomponents-放置全局组件" tabindex="-1"><a class="header-anchor" href="#_4-rootcomponents-放置全局组件"><span>(4) rootComponents 放置全局组件</span></a></h2><p><code>rootComponents</code> 是一个组件数组，它们将会直接被放置在客户端 Vue 应用的根节点下。</p><p>该选项的典型使用方式就是放置一些全局的 UI 组件，比如全局弹窗等：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> GlobalPopup <span class="token keyword">from</span> <span class="token string">&#39;./components/GlobalPopup.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  rootComponents<span class="token operator">:</span> <span class="token punctuation">[</span>GlobalPopup<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5))])}const N=p(r,[["render",F],["__file","02. 客户端配置的使用方法.html.vue"]]),H=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/04.%20Cookbook/02.%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html","title":"客户端配置的使用方法","lang":"zh-CN","frontmatter":{"description":"客户端配置的使用方法 defineClientConfig 函数 你可以直接在你的项目中使用 客户端配置文件 。或者，在你的插件或者主题中，使用 clientConfigFile Hook 来指定客户端配置文件的路径： 在客户端配置文件中，vuepress/client 提供了一个 defineClientConfig 函数来帮助你定义客户端配置： 提...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/04.%20Cookbook/02.%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"客户端配置的使用方法"}],["meta",{"property":"og:description","content":"客户端配置的使用方法 defineClientConfig 函数 你可以直接在你的项目中使用 客户端配置文件 。或者，在你的插件或者主题中，使用 clientConfigFile Hook 来指定客户端配置文件的路径： 在客户端配置文件中，vuepress/client 提供了一个 defineClientConfig 函数来帮助你定义客户端配置： 提..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"客户端配置的使用方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"客户端配置的使用方法","slug":"客户端配置的使用方法","link":"#客户端配置的使用方法","children":[{"level":2,"title":"defineClientConfig 函数","slug":"defineclientconfig-函数","link":"#defineclientconfig-函数","children":[]},{"level":2,"title":"(1) enhance 函数","slug":"_1-enhance-函数","link":"#_1-enhance-函数","children":[{"level":3,"title":"注册 Vue 组件","slug":"注册-vue-组件","link":"#注册-vue-组件","children":[]},{"level":3,"title":"使用不支持 SSR 的功能","slug":"使用不支持-ssr-的功能","link":"#使用不支持-ssr-的功能","children":[]},{"level":3,"title":"使用 Router 方法","slug":"使用-router-方法","link":"#使用-router-方法","children":[]}]},{"level":2,"title":"(2) setup 组合式API","slug":"_2-setup-组合式api","link":"#_2-setup-组合式api","children":[{"level":3,"title":"使用组合式 API","slug":"使用组合式-api","link":"#使用组合式-api","children":[]},{"level":3,"title":"使用不支持 SSR 的功能","slug":"使用不支持-ssr-的功能-1","link":"#使用不支持-ssr-的功能-1","children":[]}]},{"level":2,"title":"(3) layouts 配置项","slug":"_3-layouts-配置项","link":"#_3-layouts-配置项","children":[]},{"level":2,"title":"(4) rootComponents 放置全局组件","slug":"_4-rootcomponents-放置全局组件","link":"#_4-rootcomponents-放置全局组件","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.88,"words":1163},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/04. Cookbook/02. 客户端配置的使用方法.md","excerpt":"\\n<h2>defineClientConfig 函数</h2>\\n<p>你可以直接在你的项目中使用 <a href=\\"https://vuepress.github.io/zh/guide/configuration.html#%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">客户端配置文件</a> 。或者，在你的插件或者主题中，使用 <a href=\\"https://vuepress.github.io/zh/reference/plugin-api.html#clientconfigfile\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">clientConfigFile</a> Hook 来指定客户端配置文件的路径：</p>","autoDesc":true}');export{N as comp,H as data};
