import{_ as o,c as p,e as l,a as n,b as s,d as t,o as c,r}from"./app-DEbg6qWK.js";const i={},d={href:"https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.ibm.com/developerworks/cn/linux/l-arp/index.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.kancloud.cn/lifei6671/tcp-ip/139994",target:"_blank",rel:"noopener noreferrer"};function A(E,e){const a=r("ExternalLinkIcon");return c(),p("div",null,[e[3]||(e[3]=l(`<h1 id="arp" tabindex="-1"><a class="header-anchor" href="#arp"><span>ARP</span></a></h1><h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h2><p>链路层通信根据<code>48bit</code>以太网地址（硬件地址）来确定目的接口，而地址解析协议负责<code>32bit</code> <code>IP</code>地址与<code>48bit</code>以太网地址之间的映射：</p><ol><li><code>ARP</code>负责将<code>IP</code>地址映射到对应的硬件地址</li><li><code>RARP</code>负责相反的过程，通常用于无盘系统。</li></ol><h2 id="arp高速缓存" tabindex="-1"><a class="header-anchor" href="#arp高速缓存"><span>ARP高速缓存</span></a></h2><h3 id="位置与生存时间" tabindex="-1"><a class="header-anchor" href="#位置与生存时间"><span>位置与生存时间</span></a></h3><p><code>ARP</code> 高效运行的关键是<strong>每台主机上都有</strong>一个 <code>ARP</code> 高速缓存，缓存中每一项的生存时间一般为20分钟，但不完整表项超时时间一般为3分钟（如 192.168.13.254）</p><h3 id="命令查看" tabindex="-1"><a class="header-anchor" href="#命令查看"><span>命令查看</span></a></h3><p>可以通过<code>arp</code>命令来操作ARP高速缓存：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ arp				<span class="token comment"># 显示当前的\`ARP\`缓存列表</span>
$ arp <span class="token parameter variable">-a</span>
? <span class="token punctuation">(</span><span class="token number">192.168</span>.0.16<span class="token punctuation">)</span> at 00:1b:21:b9:9f:d4 <span class="token punctuation">[</span>ether<span class="token punctuation">]</span> on eth0
? <span class="token punctuation">(</span><span class="token number">192.168</span>.0.6<span class="token punctuation">)</span> at 00:1b:21:b9:9f:d4 <span class="token punctuation">[</span>ether<span class="token punctuation">]</span> on eth0
? <span class="token punctuation">(</span><span class="token number">192.168</span>.13.233<span class="token punctuation">)</span> at 00:16:3e:01:7a:b2 <span class="token punctuation">[</span>ether<span class="token punctuation">]</span> on eth0
? <span class="token punctuation">(</span><span class="token number">192.168</span>.13.254<span class="token punctuation">)</span> at <span class="token operator">&lt;</span>incomplete<span class="token operator">&gt;</span> on eth0

$ arp <span class="token parameter variable">-s</span> <span class="token function">ip</span> mac		<span class="token comment"># 手动添加静态ARP记录，如果需要永久保存，应该编辑\`/etc/ethers\`文件</span>
$ arp <span class="token parameter variable">-f</span>			<span class="token comment"># 使 \`/etc/ethers\` 中的静态ARP记录生效</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="arp分组格式" tabindex="-1"><a class="header-anchor" href="#arp分组格式"><span>ARP分组格式</span></a></h2><p>![ARP帧分组格式](02. ARP.assets/arp-frame.png)</p><p>其中：</p><ul><li><code>ARP</code>协议的帧类型为<code>0x0806</code></li><li>硬件类型：1表示以太网地址</li><li>协议类型：<code>0x800</code>表示<code>IP</code>协议</li><li>硬件地址长度：值为6</li><li>协议地址长度：值为4</li><li><code>op</code>：1为<code>ARP</code>请求，2为<code>ARP</code>应答，3为<code>RARP</code>请求，4为<code>RARP</code>应答</li><li>对于<code>ARP</code>请求来说，目的端硬件地址为广播地址<code>FF:FF:FF:FF:FF:FF</code>），由<code>ARP</code>相应的主机填入。</li></ul><p>一个完整ARP请求应答的抓包：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># tcpdump -e -p arp -n -vv</span>
<span class="token number">21</span>:08:10.329163 00:16:3e:01:79:43 <span class="token operator">&gt;</span> ff:ff:ff:ff:ff:ff, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">192.168</span>.14.23 tell <span class="token number">192.168</span>.13.43, length <span class="token number">28</span>
<span class="token number">21</span>:08:10.329626 00:16:3e:01:7b:17 <span class="token operator">&gt;</span> 00:16:3e:01:79:43, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">60</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">192.168</span>.14.23 is-at 00:16:3e:01:7b:17, length <span class="token number">46</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特殊arp" tabindex="-1"><a class="header-anchor" href="#特殊arp"><span>特殊ARP</span></a></h2><h3 id="arp代理" tabindex="-1"><a class="header-anchor" href="#arp代理"><span>ARP代理</span></a></h3><p>当向位于不同网络的主机发送<code>ARP</code>请求时，由两个网络之间的路由器响应该<code>ARP</code>请求，这个过程称为<code>ARP</code>代理。</p><p><code>ARP</code>代理也称为混合<code>ARP</code>：通过两个网络之间的路由器可以互相隐藏物理网络。</p><h3 id="免费arp-free-arp" tabindex="-1"><a class="header-anchor" href="#免费arp-free-arp"><span>免费ARP (Free ARP)</span></a></h3><p>（Linc：这里的翻译有些问题，我认为不应该翻译成免费ARP，哪怕 “自由ARP” 都比这禽流感）</p><p>主机发送<code>ARP</code>请求查找自己的IP地址。通常有两个用途：</p><ul><li>（1）确认网络中是否有其他主机设置了相同的<code>IP</code>地址；</li><li>（2）当主机的物理地址改变了，可以通过 <code>Free ARP</code>更新更新路由器和其他主机中的高速缓存。</li></ul><h3 id="rarp" tabindex="-1"><a class="header-anchor" href="#rarp"><span>RARP</span></a></h3><ol><li><code>RARP</code>通常用于无盘系统，无盘系统从物理网卡上读到硬件地址后，发送一个<code>RARP</code>请求查询自己的<code>IP</code>地址。</li><li><code>RARP</code>的协议格式：与<code>ARP</code>协议一致，只不过帧类型代码为<code>0x8035</code></li><li><code>RARP</code>使用链路层广播，这样阻止了大多数路由器转发<code>ARAP</code>请求，只返回很小的信息，即<code>IP</code>地址。</li></ol><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,27)),n("ul",null,[n("li",null,[n("a",d,[e[0]||(e[0]=s("地址解析协议 (ARP)")),t(a)])]),n("li",null,[n("a",u,[e[1]||(e[1]=s("ARP协议揭密")),t(a)])]),n("li",null,[n("a",h,[e[2]||(e[2]=s("TCP/IP协议详解卷一 -- ARP：地址解析协议")),t(a)])])])])}const R=o(i,[["render",A],["__file","02. ARP.html.vue"]]),m=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/02.%20%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/02.%20ARP.html","title":"ARP","lang":"zh-CN","frontmatter":{"description":"ARP 作用 链路层通信根据48bit以太网地址（硬件地址）来确定目的接口，而地址解析协议负责32bit IP地址与48bit以太网地址之间的映射： ARP负责将IP地址映射到对应的硬件地址 RARP负责相反的过程，通常用于无盘系统。 ARP高速缓存 位置与生存时间 ARP 高效运行的关键是每台主机上都有一个 ARP 高速缓存，缓存中每一项的生存时间一...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/02.%20%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/02.%20ARP.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"ARP"}],["meta",{"property":"og:description","content":"ARP 作用 链路层通信根据48bit以太网地址（硬件地址）来确定目的接口，而地址解析协议负责32bit IP地址与48bit以太网地址之间的映射： ARP负责将IP地址映射到对应的硬件地址 RARP负责相反的过程，通常用于无盘系统。 ARP高速缓存 位置与生存时间 ARP 高效运行的关键是每台主机上都有一个 ARP 高速缓存，缓存中每一项的生存时间一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ARP\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"ARP","slug":"arp","link":"#arp","children":[{"level":2,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":2,"title":"ARP高速缓存","slug":"arp高速缓存","link":"#arp高速缓存","children":[{"level":3,"title":"位置与生存时间","slug":"位置与生存时间","link":"#位置与生存时间","children":[]},{"level":3,"title":"命令查看","slug":"命令查看","link":"#命令查看","children":[]}]},{"level":2,"title":"ARP分组格式","slug":"arp分组格式","link":"#arp分组格式","children":[]},{"level":2,"title":"特殊ARP","slug":"特殊arp","link":"#特殊arp","children":[{"level":3,"title":"ARP代理","slug":"arp代理","link":"#arp代理","children":[]},{"level":3,"title":"免费ARP (Free ARP)","slug":"免费arp-free-arp","link":"#免费arp-free-arp","children":[]},{"level":3,"title":"RARP","slug":"rarp","link":"#rarp","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.74,"words":823},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/02. 网络基础理论/02. ARP.md","excerpt":"\\n<h2>作用</h2>\\n<p>链路层通信根据<code>48bit</code>以太网地址（硬件地址）来确定目的接口，而地址解析协议负责<code>32bit</code> <code>IP</code>地址与<code>48bit</code>以太网地址之间的映射：</p>\\n<ol>\\n<li><code>ARP</code>负责将<code>IP</code>地址映射到对应的硬件地址</li>\\n<li><code>RARP</code>负责相反的过程，通常用于无盘系统。</li>\\n</ol>\\n<h2>ARP高速缓存</h2>\\n<h3>位置与生存时间</h3>\\n<p><code>ARP</code> 高效运行的关键是<strong>每台主机上都有</strong>一个 <code>ARP</code> 高速缓存，缓存中每一项的生存时间一般为20分钟，但不完整表项超时时间一般为3分钟（如 192.168.13.254）</p>","autoDesc":true}');export{R as comp,m as data};
