import{_ as t,c as o,e as n,o as p}from"./app-7Hf1q1UN.js";const l={};function i(E,e){return p(),o("div",null,e[0]||(e[0]=[n('<h1 id="压缩包编码问题" tabindex="-1"><a class="header-anchor" href="#压缩包编码问题"><span>压缩包编码问题</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="压缩扩展名" tabindex="-1"><a class="header-anchor" href="#压缩扩展名"><span>压缩扩展名</span></a></h1><h2 id="哈夫曼编码-zip和jpg底层都使用到的编码方法" tabindex="-1"><a class="header-anchor" href="#哈夫曼编码-zip和jpg底层都使用到的编码方法"><span>哈夫曼编码（zip和jpg底层都使用到的编码方法）</span></a></h2><p>最简单也是使用最广泛的一种压缩算法</p><p>核心原理：通过构造哈夫曼树得到的哈夫曼编码，将定长编码存储变为变长编码存储</p><blockquote><p>树是一种非线性的数据结构，是若干节点的集合，右图就是一棵树。 节点:图中A，B，C等都是节点，不仅包含数据还包含指向其他节点的分支。A是根节点。 节点的度:节点拥有的分支个数。 叶子节点:度为0的节点。图中E，H，C，l都是叶子节点。 路径和路径长度:路径是指树中一个节点到另一个节点的分支所构成的路线，路径长度就是路径上分支的数目。A-H路径长度为3.</p></blockquote><blockquote><p>二叉树是节点的度≤2的树，且子树有左右之分，顺序不能颠倒。右图就是一棵二叉树。 带权路径长度:节点具有权值，从该节点到根之间的路径长度乘以节点的权值就是该节点的带权路径长度。A节点的带权路径长度=6×3=18。 树的带权路径长度(WPL) :树中所有叶子节点的带权路径长度之和。 拍的WPL=6×3+11×2+3×3=49</p></blockquote>',8)]))}const r=t(l,[["render",i],["__file","压缩扩展名.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E5%85%B6%E4%BB%96%E6%8A%BD%E8%B1%A1/%E7%BC%96%E7%A0%81%E8%AF%A6%E8%A7%A3/%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/%E5%8E%8B%E7%BC%A9%E6%89%A9%E5%B1%95%E5%90%8D.html","title":"压缩包编码问题","lang":"zh-CN","frontmatter":{"description":"压缩包编码问题 目录 压缩扩展名 哈夫曼编码（zip和jpg底层都使用到的编码方法） 最简单也是使用最广泛的一种压缩算法 核心原理：通过构造哈夫曼树得到的哈夫曼编码，将定长编码存储变为变长编码存储 树是一种非线性的数据结构，是若干节点的集合，右图就是一棵树。 节点:图中A，B，C等都是节点，不仅包含数据还包含指向其他节点的分支。A是根节点。 节点的度:...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E5%85%B6%E4%BB%96%E6%8A%BD%E8%B1%A1/%E7%BC%96%E7%A0%81%E8%AF%A6%E8%A7%A3/%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/%E5%8E%8B%E7%BC%A9%E6%89%A9%E5%B1%95%E5%90%8D.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"压缩包编码问题"}],["meta",{"property":"og:description","content":"压缩包编码问题 目录 压缩扩展名 哈夫曼编码（zip和jpg底层都使用到的编码方法） 最简单也是使用最广泛的一种压缩算法 核心原理：通过构造哈夫曼树得到的哈夫曼编码，将定长编码存储变为变长编码存储 树是一种非线性的数据结构，是若干节点的集合，右图就是一棵树。 节点:图中A，B，C等都是节点，不仅包含数据还包含指向其他节点的分支。A是根节点。 节点的度:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"压缩包编码问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"压缩包编码问题","slug":"压缩包编码问题","link":"#压缩包编码问题","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"压缩扩展名","slug":"压缩扩展名","link":"#压缩扩展名","children":[{"level":2,"title":"哈夫曼编码（zip和jpg底层都使用到的编码方法）","slug":"哈夫曼编码-zip和jpg底层都使用到的编码方法","link":"#哈夫曼编码-zip和jpg底层都使用到的编码方法","children":[]}]}],"git":{},"readingTime":{"minutes":1.2,"words":359},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/其他抽象/编码详解/压缩包编码问题/压缩扩展名.md","excerpt":"\\n<h1>目录</h1>\\n<h1>压缩扩展名</h1>\\n<h2>哈夫曼编码（zip和jpg底层都使用到的编码方法）</h2>\\n<p>最简单也是使用最广泛的一种压缩算法</p>\\n<p>核心原理：通过构造哈夫曼树得到的哈夫曼编码，将定长编码存储变为变长编码存储</p>\\n<blockquote>\\n<p>树是一种非线性的数据结构，是若干节点的集合，右图就是一棵树。\\n节点:图中A，B，C等都是节点，不仅包含数据还包含指向其他节点的分支。A是根节点。\\n节点的度:节点拥有的分支个数。\\n叶子节点:度为0的节点。图中E，H，C，l都是叶子节点。\\n路径和路径长度:路径是指树中一个节点到另一个节点的分支所构成的路线，路径长度就是路径上分支的数目。A-H路径长度为3.</p>\\n</blockquote>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/其他抽象/编码详解/压缩包编码问题/压缩扩展名.md","value":{"title":"压缩扩展名","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/其他抽象/编码详解/压缩包编码问题/压缩扩展名.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,c as data};
