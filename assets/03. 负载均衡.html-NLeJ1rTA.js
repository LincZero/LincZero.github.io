import{_ as s,c as i,e as n,o as a}from"./app-Dwsnbiv5.js";const l={};function d(o,e){return a(),i("div",null,e[0]||(e[0]=[n(`<h1 id="负载均衡" tabindex="-1"><a class="header-anchor" href="#负载均衡"><span>负载均衡</span></a></h1><h2 id="lvs" tabindex="-1"><a class="header-anchor" href="#lvs"><span>lvs</span></a></h2><p><code>Linux Virtual Server</code> (<code>lvs</code>) 是<code>Linux</code>内核自带的负载均衡器，也是目前性能最好的软件负载均衡器之一。<code>lvs</code>包括<code>ipvs</code>内核模块和<code>ipvsadm</code>用户空间命令行工具两部分。</p><p>在<code>lvs</code>中，节点分为<code>Director Server</code>和<code>Real Server</code>两个角色，其中<code>Director Server</code>是负载均衡器所在节点，而<code>Real Server</code>则是后端服务节点。当用户的请求到达<code>Director Server</code>时，内核<code>netfilter</code>机制的<code>PREROUTING</code>链会将发往本地<code>IP</code>的包转发给<code>INPUT</code>链（也就是<code>ipvs</code>的工作链），在<code>INPUT</code>链上，<code>ipvs</code>根据用户定义的规则对数据包进行处理（如修改目的IP和端口等），并把新的包发送到<code>POSTROUTING</code>链，进而再转发给<code>Real Server</code>。</p><h3 id="转发模式" tabindex="-1"><a class="header-anchor" href="#转发模式"><span>转发模式</span></a></h3><p><strong>NAT</strong></p><p><code>NAT</code>模式通过修改数据包的目的IP和目的端口来将包转发给<code>Real Server</code>。它的特点包括</p><ul><li><code>Director Server</code>必须作为<code>Real Server</code>的网关，并且它们必须处于同一个网段内</li><li>不需要<code>Real Server</code>做任何特殊配置</li><li>支持端口映射</li><li>请求和响应都需要经过<code>Director Server</code>，易称为性能瓶颈</li></ul><p>![LVS NAT](03. 负载均衡.assets/lvs-nat.png)</p><p><strong>DR</strong></p><p><code>DR</code>（<code>Direct Route</code>）模式通过修改数据包的目的<code>MAC</code>地址将包转发给<code>Real Server</code>。它的特点包括</p><ul><li>需要在<code>Real Server</code>的<code>lo</code>上配置<code>vip</code>，并配置<code>arp_ignore</code>和<code>arp_announce</code>忽略对<code>vip</code>的<code>ARP</code>解析请求</li><li><code>Director Server</code>和<code>Real Server</code>必须在同一个物理网络内，二层可达</li><li>虽然所有请求包都会经过<code>Director Server</code>，但响应报文不经过，有性能上的优势</li></ul><p>![LVS DR](03. 负载均衡.assets/lvs-dr.png)</p><p><strong>TUN</strong></p><p>TUN模式通过将数据包封装在另一个IP包中（源地址为<code>DIP</code>，目的为<code>RIP</code>）将包转发给<code>Real Server</code>。它的特点包括</p><ul><li><code>Real Server</code>需要在<code>lo</code>上配置<code>vip</code>，但不需要<code>Director Server</code>作为网关</li><li>不支持端口映射</li></ul><p>![img](03. 负载均衡.assets/lvs-tun.png)</p><p><strong>FULLNAT</strong></p><p><code>FULLNAT</code>是阿里在NAT基础上增加的一个新转发模式，通过引入<code>local IP</code>（<code>CIP-VIP转换为LIP-&gt;RIP</code>，而<code>LIP</code>和<code>RIP</code>均为<code>IDC内网IP</code>）使得物理网络可以跨越不同<code>vlan</code>，代码维护在<a href="https://github.com/alibaba/LVS" target="_blank" rel="noopener noreferrer">alibaba/LVS</a>上面。其特点是</p><ul><li>物理网络仅要求三层可达</li><li><code>Real Server</code>不需要任何特殊配置</li><li><code>SYNPROXY</code>防止<code>synflooding</code>攻击</li><li>未进入内核主线，维护复杂</li></ul><p>![LVS FULLNAT](03. 负载均衡.assets/lvs-fullnat.png)</p><h3 id="调度算法" tabindex="-1"><a class="header-anchor" href="#调度算法"><span>调度算法</span></a></h3><ul><li>轮叫调度（<code>Round-Robin Scheduling</code>）</li><li>加权轮叫调度（<code>Weighted Round-Robin Scheduling</code>）</li><li>最小连接调度（<code>Least-Connection Scheduling</code>）</li><li>加权最小连接调度（<code>Weighted Least-Connection Scheduling</code>）</li><li>基于局部性的最少链接（<code>Locality-Based Least Connections Scheduling</code>）</li><li>带复制的基于局部性最少链接（<code>Locality-Based Least Connections with Replication Scheduling</code>）</li><li>目标地址散列调度（<code>Destination Hashing Scheduling</code>）</li><li>源地址散列调度（<code>Source Hashing Scheduling</code>）</li><li>最短预期延时调度（<code>Shortest Expected Delay Scheduling</code>）</li><li>不排队调度（<code>Never Queue Scheduling</code>）</li></ul><h3 id="lvs配置示例" tabindex="-1"><a class="header-anchor" href="#lvs配置示例"><span>lvs配置示例</span></a></h3><p>安装<code>ipvs</code>包并开启<code>ip</code>转发</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ipvsadm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keepalived</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sysctl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> net.ipv4.ip_forward=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改<code>/etc/keepalived/keepalived.conf</code>，增加<code>vip</code>和<code>lvs</code>的配置</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>vrrp_instance VI_3 {</span></span>
<span class="line"><span>    state MASTER   # 另一节点为BACKUP</span></span>
<span class="line"><span>    interface eth0</span></span>
<span class="line"><span>    virtual_router_id 11</span></span>
<span class="line"><span>    priority 100   # 另一节点为50</span></span>
<span class="line"><span>    advert_int 1</span></span>
<span class="line"><span>    authentication {</span></span>
<span class="line"><span>        auth_type PASS</span></span>
<span class="line"><span>        auth_pass PASSWORD</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    track_script {</span></span>
<span class="line"><span>        chk_http_port</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    virtual_ipaddress {</span></span>
<span class="line"><span>        192.168.0.100</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>virtual_server 192.168.0.100 9696 {</span></span>
<span class="line"><span>    delay_loop 30</span></span>
<span class="line"><span>    lb_algo rr</span></span>
<span class="line"><span>    lb_kind DR</span></span>
<span class="line"><span>    persistence_timeout 30</span></span>
<span class="line"><span>    protocol TCP</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    real_server 192.168.0.101 9696 {</span></span>
<span class="line"><span>        weight 3</span></span>
<span class="line"><span>        TCP_CHECK {</span></span>
<span class="line"><span>            connect_timeout 10</span></span>
<span class="line"><span>            nb_get_retry 3</span></span>
<span class="line"><span>            delay_before_retry 3</span></span>
<span class="line"><span>            connect_port 9696</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    real_server 192.168.0.102 9696 {</span></span>
<span class="line"><span>        weight 3</span></span>
<span class="line"><span>        TCP_CHECK {</span></span>
<span class="line"><span>            connect_timeout 10</span></span>
<span class="line"><span>            nb_get_retry 3</span></span>
<span class="line"><span>            delay_before_retry 3</span></span>
<span class="line"><span>            connect_port 9696</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启<code>keepalived</code>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keepalived</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>最后在<code>neutron-server</code>所在机器上为<code>lo</code>配置<code>vip</code>，并抑制<code>ARP</code>响应：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">vip</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">192.168.0.100</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ifconfig</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lo:1</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">vip</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> broadcast</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">vip</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netmask</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 255.255.255.255</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">route</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -host</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">vip</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lo:1</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/proc/sys/net/ipv4/conf/lo/arp_ignore</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/proc/sys/net/ipv4/conf/lo/arp_announce</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/proc/sys/net/ipv4/conf/all/arp_ignore</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/proc/sys/net/ipv4/conf/all/arp_announce</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lvs缺点" tabindex="-1"><a class="header-anchor" href="#lvs缺点"><span>LVS缺点</span></a></h3><ul><li><code>Keepalived</code>主备模式设备利用率低；不能横向扩展；<code>VRRP</code>协议，有脑裂的风险。</li><li><code>ECMP</code>的方式需要了解动态路由协议，<code>LVS</code>和交换机均需要较复杂配置；交换机的<code>HASH</code>算法一般比较简单，增加删除节点会造成<code>HASH</code>重分布，可能导致当前<code>TCP</code>连接全部中断；部分交换机的<code>ECMP</code>在处理分片包时会有<code>BUG</code>。</li></ul><h2 id="haproxy" tabindex="-1"><a class="header-anchor" href="#haproxy"><span>Haproxy</span></a></h2><p><code>Haproxy</code>也是<code>Linux</code>最常用的负载均衡软件之一，兼具性能和功能的组合，同时支持<code>TCP</code>和\b<code>HTTP</code>负载均衡。</p><p>配置和使用方法请见<a href="http://www.haproxy.org/" target="_blank" rel="noopener noreferrer">官网</a>。</p><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx"><span>Nginx</span></a></h2><p><code>Nginx</code>也是<code>Linux</code>最常用的负载均衡软件之一，常用作反向代理和<code>HTTP</code>负载均衡（当然也支持<code>TCP</code>和<code>UDP</code>负载均衡）。</p><p>配置和使用方法请见<a href="https://nginx.org/en/" target="_blank" rel="noopener noreferrer">官网</a>。</p><h2 id="自研负载均衡" tabindex="-1"><a class="header-anchor" href="#自研负载均衡"><span>自研负载均衡</span></a></h2><h3 id="google-maglev" tabindex="-1"><a class="header-anchor" href="#google-maglev"><span>Google Maglev</span></a></h3><p><a href="https://research.google.com/pubs/pub44824.html" target="_blank" rel="noopener noreferrer">Maglev</a>是<code>Google</code>自研的负载均衡方案，在2008年就已经开始用于生产环境。<code>Maglev</code>安装后不需要预热5秒内就能处理<code>每秒100万次请求</code>。谷歌的性能基准测试中，<code>Maglev</code>实例运行在一个8核CPU下，网络吞吐率上限为<code>12M PPS（数据包每秒）</code>。如果<code>Maglev</code>使用<code>Linux</code>内核网络堆栈则速度会慢下来，吞吐率小于<code>4M PPS</code>。</p><p>![google maglev](03. 负载均衡.assets/maglev.png)</p><ul><li>路由器<code>ECMP</code> (<code>Equal Cost Multipath</code>) 转发包到<code>Maglev</code>（而不是传统的主从结构)</li><li><code>Kernel Bypass</code>, <code>CPU</code>绑定，共享内存</li><li>一致性哈希保证连接不中断</li></ul><h3 id="ucloud-vortex" tabindex="-1"><a class="header-anchor" href="#ucloud-vortex"><span>UCloud Vortex</span></a></h3><p><code>Vortex</code>参考了<code>Maglev</code>，大致的架构和实现跟<code>Maglev</code>类似：</p><ul><li><p><code>ECMP</code>实现集群的负载均衡</p></li><li><p>一致性哈希保证连接不中断</p><ul><li>即使是不同的<code>Vortex</code>服务器收到了数据包，仍然能够将该数据包转发到同一台后端服务器</li><li>后端服务器变化时，通过连接追踪机制保证当前活动连接的数据包被送往之前选择的服务器，而所有新建连接则会在变化后的服务器集群中进行负载分担</li></ul></li><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>DPDK</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>提升单机性能 (14M PPS，10G, 64字节线速)</p><ul><li>通过<code>RSS</code>直接将网卡队列和<code>CPU Core</code>绑定，消除线程的上下文切换带来的开销</li><li><code>Vortex</code>线程间采用高并发无锁的消息队列通信</li></ul></li><li><p><code>DR</code>模式避免额外开销</p></li></ul><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2><ul><li>http://www.linuxvirtualserver.org/</li><li>http://www.haproxy.org/</li><li><a href="https://mp.weixin.qq.com/s?src=3&amp;timestamp=1495372816&amp;ver=1&amp;signature=ifj0PRCsXKHVPiVcl-dNxhSlKKKcX6hwO1rz-hbipIrL2weMxHv0bSysMyY-yB-AXJrUZix9kjQCpvsRJnxF1grXi*O6nZZjaUFFEdA6ROfgicdAvfEFDM4-i42kY*58X1UmOW8WUoQqc6b8iEuUVw==" target="_blank" rel="noopener noreferrer">揭秘100G＋线速云负载均衡的设计与实现：从Maglev到Vortex</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzA3OTgyMDcwNg%3D%3D&amp;idx=1&amp;mid=2650625837&amp;sn=2b86df07eabba8ff2035583913a0ef41" target="_blank" rel="noopener noreferrer">你真的掌握lvs工作原理吗</a></li><li>[lvs 负载均衡fullnat 模式clientip 怎样传递给 realserver](http://wangxuemin.github.io/2015/07/26/lvs 负载均衡fullnat 模式clientip 怎样传递给 realserver/)</li></ul>`,50)]))}const p=s(l,[["render",d],["__file","03. 负载均衡.html.vue"]]),r=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/03.%20Linux%E7%BD%91%E7%BB%9C/03.%20%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.html","title":"负载均衡","lang":"zh-CN","frontmatter":{"description":"负载均衡 lvs Linux Virtual Server (lvs) 是Linux内核自带的负载均衡器，也是目前性能最好的软件负载均衡器之一。lvs包括ipvs内核模块和ipvsadm用户空间命令行工具两部分。 在lvs中，节点分为Director Server和Real Server两个角色，其中Director Server是负载均衡器所在节点，...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E4%B8%93%E9%A2%98%E6%88%96%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%97%E5%85%B8%E7%89%88/%E4%B8%8B%E5%B1%82%E7%9B%B8%E5%85%B3/Network/%E3%80%8Asdn-handbook%E3%80%8Btonydeng/03.%20Linux%E7%BD%91%E7%BB%9C/03.%20%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"负载均衡"}],["meta",{"property":"og:description","content":"负载均衡 lvs Linux Virtual Server (lvs) 是Linux内核自带的负载均衡器，也是目前性能最好的软件负载均衡器之一。lvs包括ipvs内核模块和ipvsadm用户空间命令行工具两部分。 在lvs中，节点分为Director Server和Real Server两个角色，其中Director Server是负载均衡器所在节点，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"负载均衡\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"负载均衡","slug":"负载均衡","link":"#负载均衡","children":[{"level":2,"title":"lvs","slug":"lvs","link":"#lvs","children":[{"level":3,"title":"转发模式","slug":"转发模式","link":"#转发模式","children":[]},{"level":3,"title":"调度算法","slug":"调度算法","link":"#调度算法","children":[]},{"level":3,"title":"lvs配置示例","slug":"lvs配置示例","link":"#lvs配置示例","children":[]},{"level":3,"title":"LVS缺点","slug":"lvs缺点","link":"#lvs缺点","children":[]}]},{"level":2,"title":"Haproxy","slug":"haproxy","link":"#haproxy","children":[]},{"level":2,"title":"Nginx","slug":"nginx","link":"#nginx","children":[]},{"level":2,"title":"自研负载均衡","slug":"自研负载均衡","link":"#自研负载均衡","children":[{"level":3,"title":"Google Maglev","slug":"google-maglev","link":"#google-maglev","children":[]},{"level":3,"title":"UCloud Vortex","slug":"ucloud-vortex","link":"#ucloud-vortex","children":[]}]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}]}],"git":{},"readingTime":{"minutes":5.34,"words":1602},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/03. Linux网络/03. 负载均衡.md","excerpt":"\\n<h2>lvs</h2>\\n<p><code>Linux Virtual Server</code> (<code>lvs</code>) 是<code>Linux</code>内核自带的负载均衡器，也是目前性能最好的软件负载均衡器之一。<code>lvs</code>包括<code>ipvs</code>内核模块和<code>ipvsadm</code>用户空间命令行工具两部分。</p>\\n<p>在<code>lvs</code>中，节点分为<code>Director Server</code>和<code>Real Server</code>两个角色，其中<code>Director Server</code>是负载均衡器所在节点，而<code>Real Server</code>则是后端服务节点。当用户的请求到达<code>Director Server</code>时，内核<code>netfilter</code>机制的<code>PREROUTING</code>链会将发往本地<code>IP</code>的包转发给<code>INPUT</code>链（也就是<code>ipvs</code>的工作链），在<code>INPUT</code>链上，<code>ipvs</code>根据用户定义的规则对数据包进行处理（如修改目的IP和端口等），并把新的包发送到<code>POSTROUTING</code>链，进而再转发给<code>Real Server</code>。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/03. Linux网络/03. 负载均衡.md","value":{"title":"03. 负载均衡","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/03. 计算机系统 - 专题或子系统的字典版/下层相关/Network/《sdn-handbook》tonydeng/03. Linux网络/03. 负载均衡.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,r as data};
