import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,a as n}from"./app-CctSPqZW.js";const s={},d=n(`<h1 id="qt" tabindex="-1"><a class="header-anchor" href="#qt"><span>Qt</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="布局类" tabindex="-1"><a class="header-anchor" href="#布局类"><span>布局类</span></a></h1><p>多窗口布局</p><p>《Qt5开发及实例》P56</p><h2 id="containers-容器-qwidget继承树系列" tabindex="-1"><a class="header-anchor" href="#containers-容器-qwidget继承树系列"><span>Containers，容器（QWidget继承树系列）</span></a></h2><h3 id="继承树" tabindex="-1"><a class="header-anchor" href="#继承树"><span>继承树</span></a></h3><p>继承树</p><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> TB
QObject<span class="token arrow operator">--&gt;</span>QWidget
QWidget<span class="token arrow operator">--&gt;</span>QGroupBox<span class="token punctuation">;</span>class QGroupBox red
QWidget<span class="token arrow operator">--&gt;</span>QTabWidget<span class="token punctuation">;</span>class QTabWidget red
QWidget<span class="token arrow operator">--&gt;</span>QFrame<span class="token punctuation">;</span>class QFrame red
    QFrame<span class="token arrow operator">--&gt;</span>QAbstractScrollArea
    	QAbstractScrollArea<span class="token arrow operator">--&gt;</span>QScrollArea<span class="token punctuation">;</span>class QScrollArea red
    	QAbstractScrollArea<span class="token arrow operator">--&gt;</span>QMdiArea<span class="token punctuation">;</span>class QMdiArea red
    QFrame<span class="token arrow operator">---&gt;</span>QToolBox<span class="token punctuation">;</span>class QToolBox red
    QFrame<span class="token arrow operator">---&gt;</span>QSplitter
    QFrame<span class="token arrow operator">---&gt;</span>QStackedWidget<span class="token punctuation">;</span>class QStackedWidget red
QWidget<span class="token arrow operator">--&gt;</span>QDockWidget<span class="token punctuation">;</span>class QDockWidget red
QWidget<span class="token arrow operator">--&gt;</span>QAxWidget<span class="token punctuation">;</span>class QAxWidget red
<span class="token keyword">class</span> QWidget red

<span class="token comment">%% 定义样式</span>
<span class="token keyword">classDef</span> red <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f9f<span class="token punctuation">,</span><span class="token property">stroke</span><span class="token operator">:</span>#333<span class="token punctuation">,</span><span class="token property">stroke-width</span><span class="token operator">:</span>4px</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>设计模式控件名</th><th>翻译</th><th>类名</th><th>补充</th></tr></thead><tbody><tr><td>Group Box</td><td>按钮组</td><td>QGroupBox</td><td></td></tr><tr><td>Scrool Area</td><td>滚动区域</td><td>QScrollArea</td><td></td></tr><tr><td>Tool Box</td><td>伸缩区域</td><td>QToolBox</td><td>类似于标签页+树控件，和max的右侧选项有点像</td></tr><tr><td>Tab Widget</td><td>标签页控件</td><td>QTabWidget</td><td>插入页、currentTabText</td></tr><tr><td>Stacked Widget</td><td>栈容器</td><td>QStackedWidget</td><td></td></tr><tr><td>Frame</td><td><s>帧</s>，编辑框？</td><td>QFrame</td><td>用得比较少</td></tr><tr><td>Widget</td><td>窗口控件</td><td>QWidget</td><td></td></tr><tr><td>MDI Area</td><td>MDI区域</td><td>QMdiArea</td><td></td></tr><tr><td>Dock Widget</td><td>铆接容器 / 浮动窗口</td><td>QDockWidget</td><td></td></tr><tr><td>QAxWidget</td><td>封装Flash的ActiveX控件</td><td>QAxWidget</td><td></td></tr></tbody></table><h3 id="普通控件-widget" tabindex="-1"><a class="header-anchor" href="#普通控件-widget"><span>普通控件 <code>Widget</code></span></a></h3><p>Widget常用属性</p><ul><li>基本窗口类QWidget，可进行水平、垂直、栅格布局</li><li><code>sizePolicy</code>属性下的垂直和水平策略，可选Preferred（自动撑大）、Fixed（固定大小）</li></ul><h4 id="widget与layout的区别" tabindex="-1"><a class="header-anchor" href="#widget与layout的区别"><span>Widget与Layout的区别</span></a></h4><h4 id="widget的layout属性" tabindex="-1"><a class="header-anchor" href="#widget的layout属性"><span>Widget的Layout属性</span></a></h4><p>Widget的两个重要方法</p><ul><li><code>setLayout()</code></li><li><code>layout()</code></li></ul><h4 id="qt中setlayout无效的问题" tabindex="-1"><a class="header-anchor" href="#qt中setlayout无效的问题"><span>QT中setLayout无效的问题</span></a></h4><p>原文链接：https://blog.csdn.net/xinzhiyounizhiyouni/article/details/44521501</p><p>在QT开发过程中，有时候会遇到这样的问题，当我们自己创建了一个Layout对象以后，使用QWidget的setLayout方法，将这个Layout对象应用到窗口中的时候，发现窗口上没有我们添加的控件，比如，QMainWindow就是一个例子，还有QToolBar也是这样，还有其他的QT预定义的别的窗口类有时候也会遇到这样的情况。</p><p><strong>之所以出现这样的情况，是因为这个窗口类中，已经有了一个Layout对象了</strong>，这时候，当你再setLayout的时候，就是无效的，这是有三个办法，一个办法是调用layout()方法，返回这个窗口内部的Layout的对象，然后删除它，再调用setLayout设置自己的Layout对象，还有一个办法，就是直接使用这个窗口内部的Layout对象，第三个方法，就是直接创建其子窗口，在这个子窗口中使用Layout对象，如，在QMainWindow中，我们通常创建一个继承于QWidget的窗口对象，然后调用setCentralWidget方法来安装这个窗口，然后在这个窗口中使用自己的Layout。</p><h3 id="铆接部件-qdockwidget-浮靠窗口-可有多个" tabindex="-1"><a class="header-anchor" href="#铆接部件-qdockwidget-浮靠窗口-可有多个"><span>铆接部件 <code>QDockWidget</code>（浮靠窗口）（可有多个）</span></a></h3><p>详见QMAinWindow</p><h3 id="堆栈窗体-qstackedwidget" tabindex="-1"><a class="header-anchor" href="#堆栈窗体-qstackedwidget"><span>堆栈窗体 <code>QStackedWidget</code></span></a></h3><p>（类似于标签页，但没有标签，可下一个或上一个地切换界面，也可用槽函数切）<br>插入页、页 &gt; currentIndex（序列）设置默认页/页：<code>ui-&gt;stackedWidget-&gt;setCurrentIndex(1);</code></p><h3 id="分割窗口-qsplitter-设计界面里没有" tabindex="-1"><a class="header-anchor" href="#分割窗口-qsplitter-设计界面里没有"><span>分割窗口 <code>QSplitter</code>（设计界面里没有）</span></a></h3><p>略</p><h3 id="编辑框-帧-qframe-设计界面里没有" tabindex="-1"><a class="header-anchor" href="#编辑框-帧-qframe-设计界面里没有"><span>编辑框/帧 <code>QFrame</code>（设计界面里没有）</span></a></h3><ul><li>QFrame常用属性 <ul><li>QFrame &gt; frameShape（边框） &gt; NoFrame、Box、WinPanel 粗边框</li><li>QFrame &gt; frameShadow（阴影） &gt; Plain、Raised 凸起、Sunken 下沉</li></ul></li></ul><h2 id="layouts-基本布局" tabindex="-1"><a class="header-anchor" href="#layouts-基本布局"><span>Layouts，基本布局</span></a></h2><h3 id="继承树-1" tabindex="-1"><a class="header-anchor" href="#继承树-1"><span>继承树</span></a></h3><p><code>QLayout</code>，类名与继承树</p><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> TB
QObject<span class="token arrow operator">--&gt;</span>QNode<span class="token arrow operator">--&gt;</span>QComponent<span class="token arrow operator">--&gt;</span>QLayout
QLayout<span class="token arrow operator">--&gt;</span>QBoxLayout
    QBoxLayout<span class="token arrow operator">--&gt;</span>QHBoxLayout<span class="token punctuation">;</span>class QHBoxLayout red
    QBoxLayout<span class="token arrow operator">--&gt;</span>QVBoxLayout<span class="token punctuation">;</span>class QVBoxLayout red
QLayout<span class="token arrow operator">---&gt;</span>QGridLayout<span class="token punctuation">;</span>class QGridLayout red
QLayout<span class="token arrow operator">---&gt;</span>QFormLayout<span class="token punctuation">;</span>class QFormLayout red

<span class="token comment">%% 定义样式</span>
<span class="token keyword">classDef</span> red <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f9f<span class="token punctuation">,</span><span class="token property">stroke</span><span class="token operator">:</span>#333<span class="token punctuation">,</span><span class="token property">stroke-width</span><span class="token operator">:</span>4px</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>（需要注意的是Layouts不继承于QWidget，但是QWidget可以设置Layout属性）</mark></p><table><thead><tr><th>设计模式控件名</th><th>翻译</th><th>类名</th></tr></thead><tbody><tr><td>Vertical Layout</td><td>水平布局</td><td>QVBoxLayout</td></tr><tr><td>Horizontal Layout</td><td>垂直布局</td><td>QHBoxLayout</td></tr><tr><td>Grid Layout</td><td>网格布局</td><td>QGridLayout</td></tr><tr><td>Form Layout</td><td>表格布局</td><td>QFormLayout</td></tr></tbody></table><h3 id="加弹簧" tabindex="-1"><a class="header-anchor" href="#加弹簧"><span>加弹簧</span></a></h3><p><code>layout-&gt;addStretch()</code></p><h3 id="一般用法" tabindex="-1"><a class="header-anchor" href="#一般用法"><span>一般用法</span></a></h3><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>QVBoxLayout* pLayout = new QVBoxLayout();//水平布局

QPushButton* p1 = new QPushButton(&quot;p1&quot;);
QPushButton* p2 = new QPushButton(&quot;p2&quot;);
QPushButton* p3 = new QPushButton(&quot;p3&quot;);
QPushButton* p4 = new QPushButton(&quot;p4&quot;);

pLayout-&gt;addWidget(p1);
pLayout-&gt;addWidget(p2);
pLayout-&gt;addWidget(p3);
pLayout-&gt;addWidget(p4);

this-&gt;setLayout(pLayout);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>widget-&gt;layout()-&gt;addWidget();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="spacers-弹簧" tabindex="-1"><a class="header-anchor" href="#spacers-弹簧"><span>Spacers，弹簧</span></a></h2><h3 id="继承树-2" tabindex="-1"><a class="header-anchor" href="#继承树-2"><span>继承树</span></a></h3><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> TB
QLayoutItem<span class="token arrow operator">--&gt;</span>QLayout
	QObject<span class="token arrow operator">--&gt;</span>QLayout
QLayoutItem<span class="token arrow operator">--&gt;</span>QSpacerItem
QLayoutItem<span class="token arrow operator">--&gt;</span>QWidgetItem
<span class="token keyword">class</span> QLayoutItem red

<span class="token comment">%% 定义样式</span>
<span class="token keyword">classDef</span> red <span class="token style"><span class="token property">fill</span><span class="token operator">:</span>#f9f<span class="token punctuation">,</span><span class="token property">stroke</span><span class="token operator">:</span>#333<span class="token punctuation">,</span><span class="token property">stroke-width</span><span class="token operator">:</span>4px</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="简概" tabindex="-1"><a class="header-anchor" href="#简概"><span>简概</span></a></h3><p>底层原理</p><ul><li>书本上说是类名为<code>Spacer</code>，但是话说我好像没看到有这个类，验证后发现实际类名为<code>QSpacerItem</code>（这个类挺特殊的，可能是版本改了）</li><li>在ui文件中表现为：<code>&lt;spacer name=&quot;verticalSpacer&quot;&gt;</code></li><li>生成的.h文件中为：<code>verticalSpacer = new QSpacerItem(20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding);</code></li></ul><table><thead><tr><th>设计模式控件名</th><th>翻译</th><th>类名</th><th>常用属性</th></tr></thead><tbody><tr><td>Horizontal Spacer</td><td>水平弹簧</td><td>Spacer</td><td>sizeType为Expanding或Fixed</td></tr><tr><td>Vertical Spacer</td><td>垂直弹簧</td><td>Spacer</td><td>sizeType为Expanding或Fixed</td></tr></tbody></table><p>这个类不以Q开头，略特殊</p><p>作用：能用来弄居中，或者固定间距</p><h2 id="控件变型" tabindex="-1"><a class="header-anchor" href="#控件变型"><span>控件变型</span></a></h2><ul><li>在设计界面中，一些控件可以相互转换，如： <ul><li>QWidget、QFrame、QGroupBox、QTabWidget、QStackedWidget、QToolBox 这六个容器类可以互相转换（该操作可逆）</li><li>QHBoxLayout、QVBoxLayout、QGridLayout、QFormLayout 这四个布局类可以转换为上面的六个容器（该操作不可逆）。而容器类比布局类的功能更多、应该是上位替代</li><li>QPushButton、QCheckBox、QRadioBox、QToolBox、QCommandLinkBox 这些控件可以互相转换</li></ul></li><li>总结 <ul><li>应该在设计界面的控件盒中，分为同一类的可以互相转换（QSpacer那个是同一个类，也不例外）</li></ul></li><li>选用 <ul><li>简单的仅为切割布局的用Layout布局类，且可以随时变型为Widget，而复杂的用Widget</li></ul></li></ul>`,52),i=[d];function o(l,r){return e(),a("div",null,i)}const u=t(s,[["render",o],["__file","01. 布局类.html.vue"]]),h=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/01.%20Widget/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB/01.%20%E5%B8%83%E5%B1%80%E7%B1%BB.html","title":"Qt","lang":"zh-CN","frontmatter":{"description":"Qt 目录 布局类 多窗口布局 《Qt5开发及实例》P56 Containers，容器（QWidget继承树系列） 继承树 继承树 普通控件 Widget Widget常用属性 基本窗口类QWidget，可进行水平、垂直、栅格布局 sizePolicy属性下的垂直和水平策略，可选Preferred（自动撑大）、Fixed（固定大小） Widget与La...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/04.%20Project/Platform/Multi/QT%EF%BC%88Cpp%EF%BC%89/02.%20QtGUI%E7%B1%BB/01.%20Widget/02.%20%E6%8E%A7%E4%BB%B6%E7%B1%BB/01.%20%E5%B8%83%E5%B1%80%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Qt"}],["meta",{"property":"og:description","content":"Qt 目录 布局类 多窗口布局 《Qt5开发及实例》P56 Containers，容器（QWidget继承树系列） 继承树 继承树 普通控件 Widget Widget常用属性 基本窗口类QWidget，可进行水平、垂直、栅格布局 sizePolicy属性下的垂直和水平策略，可选Preferred（自动撑大）、Fixed（固定大小） Widget与La..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Qt","slug":"qt","link":"#qt","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"布局类","slug":"布局类","link":"#布局类","children":[{"level":2,"title":"Containers，容器（QWidget继承树系列）","slug":"containers-容器-qwidget继承树系列","link":"#containers-容器-qwidget继承树系列","children":[{"level":3,"title":"继承树","slug":"继承树","link":"#继承树","children":[]},{"level":3,"title":"普通控件 Widget","slug":"普通控件-widget","link":"#普通控件-widget","children":[{"level":4,"title":"Widget与Layout的区别","slug":"widget与layout的区别","link":"#widget与layout的区别","children":[]},{"level":4,"title":"Widget的Layout属性","slug":"widget的layout属性","link":"#widget的layout属性","children":[]},{"level":4,"title":"QT中setLayout无效的问题","slug":"qt中setlayout无效的问题","link":"#qt中setlayout无效的问题","children":[]}]},{"level":3,"title":"铆接部件  QDockWidget（浮靠窗口）（可有多个）","slug":"铆接部件-qdockwidget-浮靠窗口-可有多个","link":"#铆接部件-qdockwidget-浮靠窗口-可有多个","children":[]},{"level":3,"title":"堆栈窗体 QStackedWidget","slug":"堆栈窗体-qstackedwidget","link":"#堆栈窗体-qstackedwidget","children":[]},{"level":3,"title":"分割窗口 QSplitter（设计界面里没有）","slug":"分割窗口-qsplitter-设计界面里没有","link":"#分割窗口-qsplitter-设计界面里没有","children":[]},{"level":3,"title":"编辑框/帧 QFrame（设计界面里没有）","slug":"编辑框-帧-qframe-设计界面里没有","link":"#编辑框-帧-qframe-设计界面里没有","children":[]}]},{"level":2,"title":"Layouts，基本布局","slug":"layouts-基本布局","link":"#layouts-基本布局","children":[{"level":3,"title":"继承树","slug":"继承树-1","link":"#继承树-1","children":[]},{"level":3,"title":"加弹簧","slug":"加弹簧","link":"#加弹簧","children":[]},{"level":3,"title":"一般用法","slug":"一般用法","link":"#一般用法","children":[]}]},{"level":2,"title":"Spacers，弹簧","slug":"spacers-弹簧","link":"#spacers-弹簧","children":[{"level":3,"title":"继承树","slug":"继承树-2","link":"#继承树-2","children":[]},{"level":3,"title":"简概","slug":"简概","link":"#简概","children":[]}]},{"level":2,"title":"控件变型","slug":"控件变型","link":"#控件变型","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.2,"words":1261},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/04. Project/Platform/Multi/QT（Cpp）/02. QtGUI类/01. Widget/02. 控件类/01. 布局类.md","autoDesc":true}');export{u as comp,h as data};
