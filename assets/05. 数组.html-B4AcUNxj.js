import{_ as n,c as a,e as i,o as e}from"./app-Dnpl954R.js";const l={};function p(t,s){return e(),a("div",null,s[0]||(s[0]=[i(`<h1 id="computersystems" tabindex="-1"><a class="header-anchor" href="#computersystems"><span>ComputerSystems</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h1><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串"><span>字符串</span></a></h2><h2 id="如何更优雅的打印字符串" tabindex="-1"><a class="header-anchor" href="#如何更优雅的打印字符串"><span>如何更优雅的打印字符串</span></a></h2><p>需求：给定一段字符串，打印出来</p><p>方法：</p><p>数据源：ds (数据段寄存器) + si (源索引寄存器)，每取出一个字符si就+1 输出：es (扩展段寄存器) + di (目标索引寄存器)，其中es保存显存的地址 = 0xb800，每写入一个自负di就+1 通过循环依次取字符和输出字符 中续：BL待写入，BH字符属性</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>section code align=16 vstart=0x7c00</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mov si, SayHello	; 将字符串放在源索引寄存器（si而已16位，这里只是放个地址，SayHello是地址）</span></span>
<span class="line"><span>xor di, di			; 将di置为0</span></span>
<span class="line"><span>call PrintString	; 调用函数</span></span>
<span class="line"><span>mov si, SayByeBye	; 将字符串放在源索引寄存器</span></span>
<span class="line"><span>call PrintString	; 调用函数</span></span>
<span class="line"><span>jmp End</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PrintString:		; 函数</span></span>
<span class="line"><span>	.setup:			; 标志位</span></span>
<span class="line"><span>	mov ax, 0xb800	; 显卡内存，要输出的位置</span></span>
<span class="line"><span>	mov es, ax		; 扩展段寄存器</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	mov bh, 0x07	; 设置字符属性</span></span>
<span class="line"><span>	mov cx, 0xffff	; 字符串长度（循环次数）</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	.printchar:			; 循环体</span></span>
<span class="line"><span>        mov bl, [ds:si]	; 取第一个字符到bl寄存器，并移动指针</span></span>
<span class="line"><span>        inc si			; -</span></span>
<span class="line"><span>        mov [es:di], bl	; 写入到显存，并移动指针</span></span>
<span class="line"><span>        inc di			; -</span></span>
<span class="line"><span>        mov [es:di], bh	; -</span></span>
<span class="line"><span>        inc di			; -</span></span>
<span class="line"><span>        or bl, 0x00		; 判断是否循环结束</span></span>
<span class="line"><span>        jz .return		; 若是则跳出循环</span></span>
<span class="line"><span>	loop .printchar</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	.return:		; 标志位</span></span>
<span class="line"><span>ret					; 函数结束</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SayHello db &#39;Hi there,I am Codeing Master!&#39;		; 相当于以0x00结尾的变量</span></span>
<span class="line"><span>		db 0x00</span></span>
<span class="line"><span>SayByeBye db &#39;I think you can handle it, bye!&#39;	; 相当于以0x00结尾的变量</span></span>
<span class="line"><span>		db 0x00</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>End: jmp End</span></span>
<span class="line"><span>times 510-($-$$) db 0</span></span>
<span class="line"><span>	db 0x55, 0xaa</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>; 输出：Hi there,I am Codeing Master!I think you can handle it, bye!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>程序里比较多的Magic Number，即魔法数</p><p>equ改良代码：</p><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" data-title="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>NUL equ 0x00			; 空</span></span>
<span class="line"><span>SETCHAR equ 0x07		; 设置字符属性</span></span>
<span class="line"><span>VIDEOMEM equ 0xb800		; 显卡内存</span></span>
<span class="line"><span>STRINGLEN equ 0xffff	; 字符串长度（循环次数）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>section code align=16 vstart=0x7c00</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mov si, SayHello	; 将字符串放在源索引寄存器（si而已16位，这里只是放个地址，SayHello是地址）</span></span>
<span class="line"><span>xor di, di			; 将di置为0</span></span>
<span class="line"><span>call PrintString	; 调用函数</span></span>
<span class="line"><span>mov si, SayByeBye	; 将字符串放在源索引寄存器</span></span>
<span class="line"><span>call PrintString	; 调用函数</span></span>
<span class="line"><span>jmp End</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PrintString:		; 函数</span></span>
<span class="line"><span>	.setup:			; 标志位</span></span>
<span class="line"><span>	mov ax, VIDEOMEM; 显卡内存，要输出的位置</span></span>
<span class="line"><span>	mov es, ax		; 扩展段寄存器</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	mov bh, SETCHAR	; 设置字符属性</span></span>
<span class="line"><span>	mov cx, STRINGLEN; 字符串长度（循环次数）</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	.printchar:			; 循环体</span></span>
<span class="line"><span>        mov bl, [ds:si]	; 取第一个字符到bl寄存器，并移动指针</span></span>
<span class="line"><span>        inc si			; -</span></span>
<span class="line"><span>        mov [es:di], bl	; 写入到显存，并移动指针</span></span>
<span class="line"><span>        inc di			; -</span></span>
<span class="line"><span>        mov [es:di], bh	; -</span></span>
<span class="line"><span>        inc di			; -</span></span>
<span class="line"><span>        or bl, NUL		; 判断是否循环结束</span></span>
<span class="line"><span>        jz .return		; 若是则跳出循环</span></span>
<span class="line"><span>	loop .printchar</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	.return:		; 标志位</span></span>
<span class="line"><span>ret					; 函数结束</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SayHello db &#39;Hi there,I am Codeing Master!&#39;		; 相当于以0x00结尾的变量</span></span>
<span class="line"><span>		db NUL</span></span>
<span class="line"><span>SayByeBye db &#39;I think you can handle it, bye!&#39;	; 相当于以0x00结尾的变量</span></span>
<span class="line"><span>		db NUL</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>End: jmp End</span></span>
<span class="line"><span>times 510-($-$$) db 0</span></span>
<span class="line"><span>	db 0x55, 0xaa</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>; 输出：Hi there,I am Codeing Master!I think you can handle it, bye!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const c=n(l,[["render",p],["__file","05. 数组.html.vue"]]),r=JSON.parse(`{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/02.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8C%87%E4%BB%A4/03.%20%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4/05.%20%E6%95%B0%E7%BB%84.html","title":"ComputerSystems","lang":"zh-CN","frontmatter":{"description":"ComputerSystems 目录 数组 字符串 如何更优雅的打印字符串 需求：给定一段字符串，打印出来 方法： 数据源：ds (数据段寄存器) + si (源索引寄存器)，每取出一个字符si就+1 输出：es (扩展段寄存器) + di (目标索引寄存器)，其中es保存显存的地址 = 0xb800，每写入一个自负di就+1 通过循环依次取字符和输出...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/02.%20Theory/Computer/02.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8C%87%E4%BB%A4/03.%20%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4/05.%20%E6%95%B0%E7%BB%84.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"ComputerSystems"}],["meta",{"property":"og:description","content":"ComputerSystems 目录 数组 字符串 如何更优雅的打印字符串 需求：给定一段字符串，打印出来 方法： 数据源：ds (数据段寄存器) + si (源索引寄存器)，每取出一个字符si就+1 输出：es (扩展段寄存器) + di (目标索引寄存器)，其中es保存显存的地址 = 0xb800，每写入一个自负di就+1 通过循环依次取字符和输出..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ComputerSystems\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"ComputerSystems","slug":"computersystems","link":"#computersystems","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"数组","slug":"数组","link":"#数组","children":[{"level":2,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":2,"title":"如何更优雅的打印字符串","slug":"如何更优雅的打印字符串","link":"#如何更优雅的打印字符串","children":[]}]}],"git":{},"readingTime":{"minutes":2.39,"words":716},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/02. 计算机指令/03. 汇编指令/05. 数组.md","excerpt":"\\n<h1>目录</h1>\\n<h1>数组</h1>\\n<h2>字符串</h2>\\n<h2>如何更优雅的打印字符串</h2>\\n<p>需求：给定一段字符串，打印出来</p>\\n<p>方法：</p>\\n<p>数据源：ds (数据段寄存器) + si (源索引寄存器)，每取出一个字符si就+1\\n输出：es (扩展段寄存器) + di (目标索引寄存器)，其中es保存显存的地址 = 0xb800，每写入一个自负di就+1\\n通过循环依次取字符和输出字符\\n中续：BL待写入，BH字符属性</p>\\n<div class=\\"language-assembly line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"assembly\\" data-title=\\"assembly\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>section code align=16 vstart=0x7c00</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>mov si, SayHello\\t; 将字符串放在源索引寄存器（si而已16位，这里只是放个地址，SayHello是地址）</span></span>\\n<span class=\\"line\\"><span>xor di, di\\t\\t\\t; 将di置为0</span></span>\\n<span class=\\"line\\"><span>call PrintString\\t; 调用函数</span></span>\\n<span class=\\"line\\"><span>mov si, SayByeBye\\t; 将字符串放在源索引寄存器</span></span>\\n<span class=\\"line\\"><span>call PrintString\\t; 调用函数</span></span>\\n<span class=\\"line\\"><span>jmp End</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>PrintString:\\t\\t; 函数</span></span>\\n<span class=\\"line\\"><span>\\t.setup:\\t\\t\\t; 标志位</span></span>\\n<span class=\\"line\\"><span>\\tmov ax, 0xb800\\t; 显卡内存，要输出的位置</span></span>\\n<span class=\\"line\\"><span>\\tmov es, ax\\t\\t; 扩展段寄存器</span></span>\\n<span class=\\"line\\"><span>\\t</span></span>\\n<span class=\\"line\\"><span>\\tmov bh, 0x07\\t; 设置字符属性</span></span>\\n<span class=\\"line\\"><span>\\tmov cx, 0xffff\\t; 字符串长度（循环次数）</span></span>\\n<span class=\\"line\\"><span>\\t</span></span>\\n<span class=\\"line\\"><span>\\t.printchar:\\t\\t\\t; 循环体</span></span>\\n<span class=\\"line\\"><span>        mov bl, [ds:si]\\t; 取第一个字符到bl寄存器，并移动指针</span></span>\\n<span class=\\"line\\"><span>        inc si\\t\\t\\t; -</span></span>\\n<span class=\\"line\\"><span>        mov [es:di], bl\\t; 写入到显存，并移动指针</span></span>\\n<span class=\\"line\\"><span>        inc di\\t\\t\\t; -</span></span>\\n<span class=\\"line\\"><span>        mov [es:di], bh\\t; -</span></span>\\n<span class=\\"line\\"><span>        inc di\\t\\t\\t; -</span></span>\\n<span class=\\"line\\"><span>        or bl, 0x00\\t\\t; 判断是否循环结束</span></span>\\n<span class=\\"line\\"><span>        jz .return\\t\\t; 若是则跳出循环</span></span>\\n<span class=\\"line\\"><span>\\tloop .printchar</span></span>\\n<span class=\\"line\\"><span>\\t</span></span>\\n<span class=\\"line\\"><span>\\t.return:\\t\\t; 标志位</span></span>\\n<span class=\\"line\\"><span>ret\\t\\t\\t\\t\\t; 函数结束</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>SayHello db 'Hi there,I am Codeing Master!'\\t\\t; 相当于以0x00结尾的变量</span></span>\\n<span class=\\"line\\"><span>\\t\\tdb 0x00</span></span>\\n<span class=\\"line\\"><span>SayByeBye db 'I think you can handle it, bye!'\\t; 相当于以0x00结尾的变量</span></span>\\n<span class=\\"line\\"><span>\\t\\tdb 0x00</span></span>\\n<span class=\\"line\\"><span>\\t</span></span>\\n<span class=\\"line\\"><span>End: jmp End</span></span>\\n<span class=\\"line\\"><span>times 510-($-$$) db 0</span></span>\\n<span class=\\"line\\"><span>\\tdb 0x55, 0xaa</span></span>\\n<span class=\\"line\\"><span>\\t</span></span>\\n<span class=\\"line\\"><span>; 输出：Hi there,I am Codeing Master!I think you can handle it, bye!</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/02. 计算机指令/03. 汇编指令/05. 数组.md","value":{"title":"05. 数组","path":"MdNote_Public/01. DesignAndDevelop/Develop/02. Theory/Computer/02. 计算机指令/03. 汇编指令/05. 数组.md","outlink":[],"backlink":[]}}],"links":[]}}}`);export{c as comp,r as data};
