import{_ as n,c as a,e,o as t}from"./app-Bin8OjZ-.js";const l={};function p(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="github-ssh-key" tabindex="-1"><a class="header-anchor" href="#github-ssh-key"><span>Github SSH Key</span></a></h1><h2 id="检查是否生成过" tabindex="-1"><a class="header-anchor" href="#检查是否生成过"><span>检查是否生成过</span></a></h2><p>在开始菜单中打开git下的git bash（当然，在其他目录下打开git bash也是一样的），然后执行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-al</span> ~/.ssh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果能进入到.ssh文件目录下 ，则证明，之前生成过.ssh秘钥，可以直接使用里面的秘钥（看有无 id_rsa.pub 文件）</p><p>注意：这里的 .ssh 目录实际位置在：<code>C:\\Users\\用户名\\.ssh</code></p><h2 id="生成本地-key" tabindex="-1"><a class="header-anchor" href="#生成本地-key"><span>生成本地 Key</span></a></h2><blockquote><h4 id="先配置" tabindex="-1"><a class="header-anchor" href="#先配置"><span>先配置</span></a></h4></blockquote><p>如果不能进入到.ssh文件目录下，则：</p><p>检测下自己之前有没有配置：</p><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code>git config user<span class="token punctuation">.</span>name 和 git config user<span class="token punctuation">.</span>email（直接分别输入这两个命令）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果之前没有创建，则执行以下命令：</p><div class="language-verilog line-numbers-mode" data-ext="verilog" data-title="verilog"><pre class="language-verilog"><code>git <span class="token keyword">config</span> –global user<span class="token punctuation">.</span>name ‘xxxxx’ 
git <span class="token keyword">config</span> –global user<span class="token punctuation">.</span>email ‘xxx@xx<span class="token punctuation">.</span>xxx’
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时会完善 .ssh/config 文件</p><blockquote><h4 id="然后生成秘钥" tabindex="-1"><a class="header-anchor" href="#然后生成秘钥"><span>然后生成秘钥</span></a></h4></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> ‘上面的邮箱’                             <span class="token comment"># 执行完这个后敲三次回车</span>
Enter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/c/Users/A/.ssh/id_rsa<span class="token punctuation">)</span>: <span class="token comment"># &lt;== 密钥文件默认存放位置，按Enter即可</span>
Enter passphrase <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span>:					  <span class="token comment"># &lt;== 输入密钥锁码，或直接按 Enter 留空</span>
Enter same passphrase again:                                  <span class="token comment"># &lt;== 再输入一遍密钥锁码，继续 Enter为空</span>

Your identification has been saved <span class="token keyword">in</span> /root/.ssh/id_rsa.      <span class="token comment"># &lt;== 生成的私钥</span>
Your public key has been saved <span class="token keyword">in</span> /root/.ssh/id_rsa.pub.      <span class="token comment"># &lt;== 生成的公钥</span>
The key fingerprint is:
SHA256:K1qy928tkk1FUuzQtlZK+poeS67vIgPvHw9lQ+KNuZ4 root@localhost.localdomain
The key&#39;s randomart image is:
+---<span class="token punctuation">[</span>RSA <span class="token number">2048</span><span class="token punctuation">]</span>----+
<span class="token operator">|</span>           +.    <span class="token operator">|</span>
<span class="token operator">|</span>          o * <span class="token builtin class-name">.</span>  <span class="token operator">|</span>
<span class="token operator">|</span>        <span class="token builtin class-name">.</span> .O +   <span class="token operator">|</span>
<span class="token operator">|</span>       <span class="token builtin class-name">.</span> *. *    <span class="token operator">|</span>
<span class="token operator">|</span>        S <span class="token operator">=</span>+     <span class="token operator">|</span>
<span class="token operator">|</span>    <span class="token builtin class-name">.</span>    <span class="token operator">=</span><span class="token punctuation">..</span>.    <span class="token operator">|</span>
<span class="token operator">|</span>    .oo <span class="token operator">=</span>+o+     <span class="token operator">|</span>
<span class="token operator">|</span>     <span class="token operator">==</span>o+B*o.    <span class="token operator">|</span>
<span class="token operator">|</span>    oo.<span class="token operator">=</span>EXO.     <span class="token operator">|</span>
+----<span class="token punctuation">[</span>SHA256<span class="token punctuation">]</span>-----+

$ <span class="token function">ls</span> <span class="token parameter variable">-al</span> ~/.ssh												  <span class="token comment"># (可选) 检查下新增的文件</span>
total <span class="token number">27</span>
drwxr-xr-x <span class="token number">1</span> A <span class="token number">197121</span>    <span class="token number">0</span> <span class="token number">10</span>月 <span class="token number">24</span> <span class="token number">21</span>:40 ./
drwxr-xr-x <span class="token number">1</span> A <span class="token number">197121</span>    <span class="token number">0</span> <span class="token number">10</span>月 <span class="token number">17</span> <span class="token number">21</span>:43 <span class="token punctuation">..</span>/
-rw-r--r-- <span class="token number">1</span> A <span class="token number">197121</span>   <span class="token number">52</span>  <span class="token number">7</span>月 <span class="token number">27</span> 08:59 config
-rw-r--r-- <span class="token number">1</span> A <span class="token number">197121</span> <span class="token number">2602</span> <span class="token number">10</span>月 <span class="token number">24</span> <span class="token number">21</span>:40 id_rsa               <span class="token comment"># 私有秘钥</span>
-rw-r--r-- <span class="token number">1</span> A <span class="token number">197121</span>  <span class="token number">570</span> <span class="token number">10</span>月 <span class="token number">24</span> <span class="token number">21</span>:40 id_rsa.pub           <span class="token comment"># 公有密钥</span>
-rw-r--r-- <span class="token number">1</span> A <span class="token number">197121</span>  <span class="token number">359</span>  <span class="token number">7</span>月 <span class="token number">25</span> 00:07 known_hosts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>补充一下命令的参数解释：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">-t</span> 指定密钥类型，默认是 rsa ，可以省略。
<span class="token parameter variable">-C</span> 设置注释文字，比如邮箱。
<span class="token parameter variable">-f</span> 指定密钥文件存储文件名。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="github中注册-key" tabindex="-1"><a class="header-anchor" href="#github中注册-key"><span>Github中注册 Key</span></a></h2><p>如果想登陆远端，则需要将rsa.pub里的秘钥添加到远端。</p><p>首先，去.ssh目录下找到 id_rsa.pub 这个文件夹打开复制全部内容。</p><p>接着：</p><ol><li>登录GitHub，进入你的Settings</li><li>会看到左边这些目录，点击SSH and GPG keys会看到左边这些目录，点击SSH and GPG keys</li><li>点击Add SSH key</li><li>再弹出窗口，输入你的GitHub密码，点击确认按钮。</li><li>到此，就大功告成了。</li></ol>`,23)]))}const r=n(l,[["render",p],["__file","SSH Key.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/05.%20%E5%88%86%E5%8F%91%E7%AE%A1%E7%90%86/%E7%89%88%E6%9C%AC%E4%B8%8E%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/Git/SSH%20Key.html","title":"Github SSH Key","lang":"zh-CN","frontmatter":{"description":"Github SSH Key 检查是否生成过 在开始菜单中打开git下的git bash（当然，在其他目录下打开git bash也是一样的），然后执行 如果能进入到.ssh文件目录下 ，则证明，之前生成过.ssh秘钥，可以直接使用里面的秘钥（看有无 id_rsa.pub 文件） 注意：这里的 .ssh 目录实际位置在：C:\\\\Users\\\\用户名\\\\.ssh...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/03.%20Tools/02.%20%E7%AE%A1%E7%90%86%E5%B1%82/05.%20%E5%88%86%E5%8F%91%E7%AE%A1%E7%90%86/%E7%89%88%E6%9C%AC%E4%B8%8E%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/Git/SSH%20Key.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Github SSH Key"}],["meta",{"property":"og:description","content":"Github SSH Key 检查是否生成过 在开始菜单中打开git下的git bash（当然，在其他目录下打开git bash也是一样的），然后执行 如果能进入到.ssh文件目录下 ，则证明，之前生成过.ssh秘钥，可以直接使用里面的秘钥（看有无 id_rsa.pub 文件） 注意：这里的 .ssh 目录实际位置在：C:\\\\Users\\\\用户名\\\\.ssh..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Github SSH Key\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Github SSH Key","slug":"github-ssh-key","link":"#github-ssh-key","children":[{"level":2,"title":"检查是否生成过","slug":"检查是否生成过","link":"#检查是否生成过","children":[]},{"level":2,"title":"生成本地 Key","slug":"生成本地-key","link":"#生成本地-key","children":[]},{"level":2,"title":"Github中注册 Key","slug":"github中注册-key","link":"#github中注册-key","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.06,"words":618},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/05. 分发管理/版本与分支管理/Git/SSH Key.md","excerpt":"\\n<h2>检查是否生成过</h2>\\n<p>在开始菜单中打开git下的git bash（当然，在其他目录下打开git bash也是一样的），然后执行</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">ls</span> <span class=\\"token parameter variable\\">-al</span> ~/.ssh\\n</code></pre></div><p>如果能进入到.ssh文件目录下 ，则证明，之前生成过.ssh秘钥，可以直接使用里面的秘钥（看有无 id_rsa.pub 文件）</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/05. 分发管理/版本与分支管理/Git/SSH Key.md","value":{"title":"SSH Key","path":"MdNote_Public/01. DesignAndDevelop/Develop/03. Tools/02. 管理层/05. 分发管理/版本与分支管理/Git/SSH Key.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,c as data};
