import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e}from"./app-CKlzH9Ze.js";const l={},i=e(`<h1 id="【扩展】个人补充-未" tabindex="-1"><a class="header-anchor" href="#【扩展】个人补充-未"><span>【扩展】个人补充（未）</span></a></h1><h2 id="目录实验" tabindex="-1"><a class="header-anchor" href="#目录实验"><span>目录实验</span></a></h2><p>该章节是Linc个人追加的</p><h3 id="和-路径" tabindex="-1"><a class="header-anchor" href="#和-路径"><span><code>.</code> 和 <code>..</code> 路径</span></a></h3><p>我可以认为：</p><ol><li>每个文件夹都一定包含这两个文件夹：<code>.</code> 和 <code>..</code> 文件夹 <ul><li>哪怕 <code>/</code> 路径也有 <code>..</code> 文件夹，不过cd过去会返回自身</li><li>哪怕 <code>.</code> 和 <code>..</code> 也满足该项</li></ul></li><li>这两个文件夹是特殊的 <ul><li><p>是隐藏文件（<code>ls</code> 不显示 <code>.</code> 和 <code>..</code>，<code>ls -a</code> 显示）</p></li><li><p>操作权限受限</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Linux</span>
$ <span class="token function">rm</span> <span class="token builtin class-name">.</span>
rm: 无法删除 <span class="token string">&#39;.&#39;</span><span class="token builtin class-name">:</span> 是一个目录
$ <span class="token function">rm</span> <span class="token parameter variable">-r</span> <span class="token builtin class-name">.</span>
rm: 拒绝删除 <span class="token string">&#39;.&#39;</span> 或 <span class="token string">&#39;..&#39;</span> 目录: 跳过 <span class="token string">&#39;.&#39;</span>
<span class="token comment"># 至于创建等其他操作同理，可能报错，也可能通过但是没有结果</span>

<span class="token comment"># Windows</span>
<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">.</span><span class="token variable">\`</span></span> 可以作为文件/文件夹名的一部分，但不能出现在名字的最后
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h2 id="命令实验" tabindex="-1"><a class="header-anchor" href="#命令实验"><span>命令实验</span></a></h2><h3 id="vim特殊用法" tabindex="-1"><a class="header-anchor" href="#vim特殊用法"><span>vim特殊用法</span></a></h3><p>前面提到一点：可以用vim打开文件夹（用cat只能打开文件，无法打开文件夹）</p><h3 id="硬件类" tabindex="-1"><a class="header-anchor" href="#硬件类"><span>硬件类</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ lspci
$ lshw
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="磁盘类" tabindex="-1"><a class="header-anchor" href="#磁盘类"><span>磁盘类</span></a></h3><p>Linux 磁盘管理常用三个命令为 df、du 和 fdisk。</p><ul><li><strong>df</strong>（英文全称：disk free）：列出文件系统的整体磁盘使用量</li><li><strong>du</strong>（英文全称：disk used）：检查磁盘空间使用量</li><li><strong>fdisk</strong>：用于磁盘分区</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">df</span>		<span class="token comment"># 用于查看磁盘使用情况，包括磁盘的总容量、已用空间和可用空间等信息</span>
文件系统          1K的块     已用      可用 已用% 挂载点
tmpfs            <span class="token number">1624804</span>     <span class="token number">2244</span>   <span class="token number">1622560</span>    <span class="token number">1</span>% /run
/dev/sda5      <span class="token number">121451184</span> <span class="token number">14408264</span> <span class="token number">100827396</span>   <span class="token number">13</span>% /
tmpfs            <span class="token number">8124020</span>        <span class="token number">0</span>   <span class="token number">8124020</span>    <span class="token number">0</span>% /dev/shm
tmpfs               <span class="token number">5120</span>        <span class="token number">4</span>      <span class="token number">5116</span>    <span class="token number">1</span>% /run/lock
/dev/sda2         <span class="token number">524252</span>     <span class="token number">6220</span>    <span class="token number">518032</span>    <span class="token number">2</span>% /boot/efi
tmpfs            <span class="token number">1624804</span>      <span class="token number">120</span>   <span class="token number">1624684</span>    <span class="token number">1</span>% /run/user/1000
$ <span class="token function">df</span> <span class="token parameter variable">-i</span>
文件系统        Inodes  已用I   可用I 已用I% 挂载点
tmpfs          <span class="token number">2031005</span>   <span class="token number">1477</span> <span class="token number">2029528</span>     <span class="token number">1</span>% /run
/dev/sda5      <span class="token number">7749632</span> <span class="token number">246105</span> <span class="token number">7503527</span>     <span class="token number">4</span>% /
tmpfs          <span class="token number">2031005</span>      <span class="token number">1</span> <span class="token number">2031004</span>     <span class="token number">1</span>% /dev/shm
tmpfs          <span class="token number">2031005</span>      <span class="token number">4</span> <span class="token number">2031001</span>     <span class="token number">1</span>% /run/lock
/dev/sda2            <span class="token number">0</span>      <span class="token number">0</span>       <span class="token number">0</span>      - /boot/efi
tmpfs           <span class="token number">406201</span>    <span class="token number">159</span>  <span class="token number">406042</span>     <span class="token number">1</span>% /run/user/1000
$ <span class="token function">df</span> <span class="token parameter variable">-h</span>

$ <span class="token function">du</span> <span class="token parameter variable">-sh</span> /path/to/directory

$ <span class="token function">fdisk</span> <span class="token parameter variable">-l</span>	<span class="token comment"># 用于列出系统中的块设备（包括硬盘和分区）以及其相关信息，如设备名称、大小、挂载点等</span>

$ lsblk		<span class="token comment"># 用于显示块设备的信息，包括硬盘和其它设备。可以显示设备的名称、大小、类型等信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件类" tabindex="-1"><a class="header-anchor" href="#文件类"><span>文件类</span></a></h3><h3 id="inode-块类" tabindex="-1"><a class="header-anchor" href="#inode-块类"><span>inode/块类</span></a></h3><p>inode和块的作用：</p><ol><li>创建新文件时分配inode：用户在创建一个新文件时，Linux 内核会通过 inode 的位图找到空闲可用的 inode，并进行分配</li><li>存储数据时分配块：要存储数据时，会通过块的位图找到空闲的块，并分配</li></ol><p>以下命令都能看到inode号</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">stat</span> <span class="token punctuation">[</span>FileName<span class="token punctuation">]</span>		<span class="token comment"># 列出文件大小，文件所占的块数，块的大小，主设备号和次设备号，inode number，链接数，访问权限，uid,gid,atime,mtime,ctime</span>
  文件：<span class="token string">&quot;go&quot;</span>
  大小：3657      	块：8          IO 块：4096   普通文件
设备：802h/2050d	Inode：13137033    硬链接：1
权限：<span class="token punctuation">(</span>0775/-rwxrwxr-x<span class="token punctuation">)</span>  Uid：<span class="token punctuation">(</span> <span class="token number">1000</span>/ruanyang<span class="token punctuation">)</span>   Gid：<span class="token punctuation">(</span> <span class="token number">1000</span>/ruanyang<span class="token punctuation">)</span>
最近访问：2016-07-27 <span class="token number">19</span>:12:39.792720377 +0800
最近更改：2016-07-27 <span class="token number">19</span>:11:35.608719535 +0800
最近改动：2016-07-27 <span class="token number">19</span>:11:35.632719536 +0800
创建时间：-

$ <span class="token function">df</span> <span class="token parameter variable">-i</span>					<span class="token comment"># -i可以看到indoe总数/已用数</span>
						<span class="token comment"># -lk可以看到1K块的总数/已用数</span>
						<span class="token comment"># 如果想要查看每个inode节点的大小，可以使用命令：sudo dumpe2fs -h /dev/hda | grep &quot;Inode size&quot;。</span>
文件系统        Inodes  已用I   可用I 已用I% 挂载点
tmpfs          <span class="token number">2031005</span>   <span class="token number">1477</span> <span class="token number">2029528</span>     <span class="token number">1</span>% /run
/dev/sda5      <span class="token number">7749632</span> <span class="token number">246105</span> <span class="token number">7503527</span>     <span class="token number">4</span>% /
tmpfs          <span class="token number">2031005</span>      <span class="token number">1</span> <span class="token number">2031004</span>     <span class="token number">1</span>% /dev/shm
tmpfs          <span class="token number">2031005</span>      <span class="token number">4</span> <span class="token number">2031001</span>     <span class="token number">1</span>% /run/lock
/dev/sda2            <span class="token number">0</span>      <span class="token number">0</span>       <span class="token number">0</span>      - /boot/efi
tmpfs           <span class="token number">406201</span>    <span class="token number">159</span>  <span class="token number">406042</span>     <span class="token number">1</span>% /run/user/1000

$ <span class="token function">ls</span> <span class="token parameter variable">-ai</span>				<span class="token comment"># -i可以查看inode号</span>
						<span class="token comment"># -a是显示隐藏文件</span>
<span class="token number">4718594</span> <span class="token builtin class-name">.</span>              <span class="token number">4718612</span> Documents         <span class="token number">4718595</span> .profile
<span class="token number">4718593</span> <span class="token punctuation">..</span>             <span class="token number">4718609</span> Downloads         <span class="token number">4718611</span> Public
<span class="token number">4718676</span> .bash_history  <span class="token number">4718604</span> .local            <span class="token number">4718722</span> snap
<span class="token number">4718596</span> .bash_logout   <span class="token number">4721772</span> .mozilla          <span class="token number">4721617</span> .sogouinput
<span class="token number">4718597</span> .bashrc        <span class="token number">4718613</span> Music             <span class="token number">4719850</span> .sudo_as_admin_successful
<span class="token number">4718598</span> .cache         <span class="token number">4718891</span> .pam_environment  <span class="token number">4718610</span> Templates
<span class="token number">4718599</span> .config        <span class="token number">4718614</span> Pictures          <span class="token number">4721742</span> .thunderbird
<span class="token number">4721717</span> .dbus          <span class="token number">4719899</span> .pki              <span class="token number">4718615</span> Videos
<span class="token number">4718608</span> Desktop        <span class="token number">4721725</span> .presage          <span class="token number">4721934</span> .xinputrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="【总结】捋一下包含关系" tabindex="-1"><a class="header-anchor" href="#【总结】捋一下包含关系"><span>【总结】捋一下包含关系</span></a></h2><ul><li>块 / 逻辑块 / 数据块 / 文件块 = <ul><li>1 * 4KB = 8 * 512KB = 8扇区</li></ul></li><li>一个文件/文件夹 包含： <ul><li>1 * inode</li><li>1 * 目录项</li><li>n * 数据块</li></ul></li><li>磁盘 (Ext2) <ul><li>(/1) <ul><li>n * 盘片 &gt; 2 * 盘面 &gt; n * 磁道 &gt; n * 扇区</li></ul></li><li>(/2) <ul><li>1 * 1K引导块</li><li>n * 块组 <ul><li>(/1) <ul><li>1 * 超级块</li><li>1 * 块组描述符</li><li>1 * 数据位图</li><li>1 * inode 位图</li><li>n * inode 列表</li><li>n * 数据块</li></ul></li><li>(/2) <ul><li>n * 文件</li></ul></li></ul></li></ul></li></ul></li></ul><p>寻址方式</p><ul><li>盘片盘面-磁道-扇区 寻址。直觉上更合理，但由于磁头的物理构造，不用这个（例如你磁头最后才向下接触磁碟，自然是最后才去定位盘面）</li><li>柱面-磁头-扇区 (Cylinder-Head-Sector, CHS) 寻址。1. 寻址时先驱动磁头臂旋转 (磁道s) 2. 控制其中一个磁头(盘片盘面) 3. 扇区 (让磁碟旋转)</li><li>逻辑块 (Logical Block Addressing, LBA) 寻址</li></ul>`,25),t=[i];function p(c,o){return s(),a("div",null,t)}const u=n(l,[["render",p],["__file","个人补充.html.vue"]]),m=JSON.parse(`{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E7%BA%BF%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%89%88/%E3%80%8A%E5%B0%8F%E6%9E%97coding_%E5%9B%BE%E8%A7%A3%E7%B3%BB%E5%88%97%E3%80%8B/01.%20%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F/07.%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E4%B8%AA%E4%BA%BA%E8%A1%A5%E5%85%85.html","title":"【扩展】个人补充（未）","lang":"zh-CN","frontmatter":{"description":"【扩展】个人补充（未） 目录实验 该章节是Linc个人追加的 . 和 .. 路径 我可以认为： 每个文件夹都一定包含这两个文件夹：. 和 .. 文件夹 哪怕 / 路径也有 .. 文件夹，不过cd过去会返回自身 哪怕 . 和 .. 也满足该项 这两个文件夹是特殊的 是隐藏文件（ls 不显示 . 和 ..，ls -a 显示） 操作权限受限 命令实验 vim...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/02.%20Theory/Computer/03.%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%20-%20%E7%BA%BF%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%89%88/%E3%80%8A%E5%B0%8F%E6%9E%97coding_%E5%9B%BE%E8%A7%A3%E7%B3%BB%E5%88%97%E3%80%8B/01.%20%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F/07.%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E4%B8%AA%E4%BA%BA%E8%A1%A5%E5%85%85.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"【扩展】个人补充（未）"}],["meta",{"property":"og:description","content":"【扩展】个人补充（未） 目录实验 该章节是Linc个人追加的 . 和 .. 路径 我可以认为： 每个文件夹都一定包含这两个文件夹：. 和 .. 文件夹 哪怕 / 路径也有 .. 文件夹，不过cd过去会返回自身 哪怕 . 和 .. 也满足该项 这两个文件夹是特殊的 是隐藏文件（ls 不显示 . 和 ..，ls -a 显示） 操作权限受限 命令实验 vim..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【扩展】个人补充（未）\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"【扩展】个人补充（未）","slug":"【扩展】个人补充-未","link":"#【扩展】个人补充-未","children":[{"level":2,"title":"目录实验","slug":"目录实验","link":"#目录实验","children":[{"level":3,"title":". 和 .. 路径","slug":"和-路径","link":"#和-路径","children":[]}]},{"level":2,"title":"命令实验","slug":"命令实验","link":"#命令实验","children":[{"level":3,"title":"vim特殊用法","slug":"vim特殊用法","link":"#vim特殊用法","children":[]},{"level":3,"title":"硬件类","slug":"硬件类","link":"#硬件类","children":[]},{"level":3,"title":"磁盘类","slug":"磁盘类","link":"#磁盘类","children":[]},{"level":3,"title":"文件类","slug":"文件类","link":"#文件类","children":[]},{"level":3,"title":"inode/块类","slug":"inode-块类","link":"#inode-块类","children":[]}]},{"level":2,"title":"【总结】捋一下包含关系","slug":"【总结】捋一下包含关系","link":"#【总结】捋一下包含关系","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.79,"words":1138},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/02. Theory/Computer/03. 计算机系统 - 线性学习版/《小林coding_图解系列》/01. 图解系统/07. 文件系统/个人补充.md","excerpt":"\\n<h2>目录实验</h2>\\n<p>该章节是Linc个人追加的</p>\\n<h3><code>.</code> 和 <code>..</code> 路径</h3>\\n<p>我可以认为：</p>\\n<ol>\\n<li>每个文件夹都一定包含这两个文件夹：<code>.</code> 和 <code>..</code> 文件夹\\n<ul>\\n<li>哪怕 <code>/</code> 路径也有 <code>..</code> 文件夹，不过cd过去会返回自身</li>\\n<li>哪怕 <code>.</code> 和 <code>..</code> 也满足该项</li>\\n</ul>\\n</li>\\n<li>这两个文件夹是特殊的\\n<ul>\\n<li>\\n<p>是隐藏文件（<code>ls</code> 不显示 <code>.</code> 和 <code>..</code>，<code>ls -a</code> 显示）</p>\\n</li>\\n<li>\\n<p>操作权限受限</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># Linux</span>\\n$ <span class=\\"token function\\">rm</span> <span class=\\"token builtin class-name\\">.</span>\\nrm: 无法删除 <span class=\\"token string\\">'.'</span><span class=\\"token builtin class-name\\">:</span> 是一个目录\\n$ <span class=\\"token function\\">rm</span> <span class=\\"token parameter variable\\">-r</span> <span class=\\"token builtin class-name\\">.</span>\\nrm: 拒绝删除 <span class=\\"token string\\">'.'</span> 或 <span class=\\"token string\\">'..'</span> 目录: 跳过 <span class=\\"token string\\">'.'</span>\\n<span class=\\"token comment\\"># 至于创建等其他操作同理，可能报错，也可能通过但是没有结果</span>\\n\\n<span class=\\"token comment\\"># Windows</span>\\n<span class=\\"token variable\\"><span class=\\"token variable\\">\`</span><span class=\\"token builtin class-name\\">.</span><span class=\\"token variable\\">\`</span></span> 可以作为文件/文件夹名的一部分，但不能出现在名字的最后\\n</code></pre></div></li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}`);export{u as comp,m as data};
