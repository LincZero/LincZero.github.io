import{_ as l,c as i,e as n,o as t}from"./app-CcegWvWz.js";const o={};function a(r,e){return t(),i("div",null,e[0]||(e[0]=[n('<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><p>[toc]</p><h1 id="语言起步" tabindex="-1"><a class="header-anchor" href="#语言起步"><span>语言起步</span></a></h1><h2 id="学习资料" tabindex="-1"><a class="header-anchor" href="#学习资料"><span>学习资料</span></a></h2><h3 id="进度笔记" tabindex="-1"><a class="header-anchor" href="#进度笔记"><span>进度笔记</span></a></h3><ul><li>Python官网手册编写（<strong>主要参考</strong>） <ul><li>跳着看</li></ul></li></ul><p>看完了的：</p><ul><li>《Python编程入门（第三版）Toby Donaldson著》 <ul><li>进度：看完了</li><li>书评：大学用书，书薄、很浅</li></ul></li><li>《Python编程 从入门到实践》 <ul><li>进度：看完了教程，实战篇没看。书送给堂弟了</li><li>书评：简单入门，但不是很全，内容较浅。其中有很多东西都没有涉及到 <ul><li>比如：python的类成员是实例共享还是创建副本、异步await、多线程等</li><li>没讲单一副本的类变量、也没讲私有方法和属性啊，太简略了</li></ul></li></ul></li></ul><h3 id="文档资源" tabindex="-1"><a class="header-anchor" href="#文档资源"><span>文档资源</span></a></h3><blockquote><h4 id="网站文档" tabindex="-1"><a class="header-anchor" href="#网站文档"><span>网站文档</span></a></h4></blockquote><ul><li><a href="https://www.python.org/" target="_blank" rel="noopener noreferrer">官网 - en</a></li><li>手册 <ul><li><a href="https://docs.python.org/zh-cn/3/" target="_blank" rel="noopener noreferrer">官网文档 - 中文版</a>（<a href="https://docs.python.org/3/" target="_blank" rel="noopener noreferrer">英文版</a>）</li><li><a href="https://www.runoob.com/manual/pythontutorial3/docs/html/" target="_blank" rel="noopener noreferrer">菜鸟 - 官网手册</a>（和官网文档是一样的，但：排版更好看、单页面应用、多了全局大纲但少了二级以上的大纲目录）</li><li><a href="https://cloud.tencent.com/developer/doc/1198" target="_blank" rel="noopener noreferrer">腾讯云 - 手册</a>（含Tkinter）</li></ul></li><li><a href="https://www.runoob.com/python/python-tutorial.html" target="_blank" rel="noopener noreferrer">菜鸟 - 教程 - py2</a></li><li><a href="https://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="noopener noreferrer">菜鸟 - 教程 -py3</a></li><li><a href="https://www.runoob.com/w3cnote/google-python-styleguide.html" target="_blank" rel="noopener noreferrer">菜鸟 - 编码规范</a></li><li><a href="https://docs.python.org/zh-cn/3/glossary.html" target="_blank" rel="noopener noreferrer">官网文档 - 术语对照表</a></li></ul><blockquote><h4 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h4></blockquote><ul><li>IDLE中F1自带chm文档，不过是全英的</li></ul><blockquote><h4 id="优质博客文章收藏" tabindex="-1"><a class="header-anchor" href="#优质博客文章收藏"><span>优质博客文章收藏</span></a></h4></blockquote><ul><li><a href="http://www.ruanyifeng.com/blog/2019/11/python-asyncio.html" target="_blank" rel="noopener noreferrer">【阮一峰】Python 异步编程入门</a></li><li><a href="http://c.biancheng.net/python/thread/" target="_blank" rel="noopener noreferrer">【C语言中文网】Python并发编程（多线程和多进程编程）</a></li></ul><h3 id="学习用书" tabindex="-1"><a class="header-anchor" href="#学习用书"><span>学习用书</span></a></h3><p>其实更推荐直接去看官网文档，<s>深入学习不推荐看书</s> (划掉，后两本挺深入的)</p><p>下面的书大致按从浅到深排</p><ul><li>**《Python编程入门（第三版）》**Toby Donaldson著 翻译书 <ul><li>进度：看完了</li><li>简评：大学被迫学习用书，书薄、很浅、是我见过的内容最少的Python书了</li></ul></li><li>**《Python编程 从入门到实践》**Eric Matthes著 袁国忠译 <ul><li>图灵系列丛书</li><li>进度：看完了教程，实战篇没看</li><li>优点：浅，适合入门，有三个项目</li><li>缺点：入门的部分比较浅，涉及面不广，其中有很多东西都没有说，太简略了<br> 比如：python的类成员是实例共享还是创建副本、异步await、多线程等<br> 没讲单一副本的类变量、也没讲私有方法和属性啊</li></ul></li><li><strong>《Python基础教程（第3版）》</strong>[挪] Magnus Lie Hetland著 袁国忠 译 <ul><li>图灵系列丛书</li><li>进度：无，只看目录</li><li>优点 <ul><li>实战项目多，项目部分有足足10个</li><li>深度适中</li></ul></li></ul></li><li>**《Python学习手册（第4版）》**Mark Lutz著 李军 刘红伟译 <ul><li>O&#39;REILLY系列丛书</li><li>进度：无，只看目录</li><li>优点： <ul><li>非常深！并且不会只教你怎么用，还会告诉你为什么，原理是什么。而且规范性好<br> 如果之前有过C或其他语言基础的看这个或者会更好<br> 比如有：解释器原理、OOP概念、多重继承</li><li>很全！还有运算符重载、迭代器生成器、静态方法、装饰器、元类等</li></ul></li><li>缺点 <ul><li>我有的那个电子书的目录向导做得不是很好，emmm我有两本，好像另一本的大纲更好</li><li>没有实战项目</li></ul></li></ul></li><li>**《Python Cookbook（第三版）》**熊能 <ul><li>进度：无，只看目录</li><li>作者自己在序章中说：这本书不适合 Python 的初学者</li><li>优点 <ul><li>好像是中国人写的，不是翻译本</li><li>很全！有：元编程、并发编程、测试、C语言扩展等内容</li></ul></li></ul></li></ul><h2 id="语言特点" tabindex="-1"><a class="header-anchor" href="#语言特点"><span>语言特点</span></a></h2><ul><li>语言 <ul><li>语言的名字来自于 BBC 的 “Monty Python’s Flying Cirecus” 节目，和爬行类动物没有任何关系</li></ul></li><li>特点 <ul><li>解释型语言，无需编译和链接</li><li>解释器可以交互的使用，这使得试验语言的特性、编写临时程序或在自底向上的程序开发中测试方法非常容易</li><li></li></ul></li><li>优点 <ul><li>易于使用</li><li>紧凑和可读。用 Python 编写的程序通常比同样的 C、C++ 或 Java 程序更短小，这是因为以下几个原因: <ul><li>高级数据结构使你可以在一条语句中表达复杂的操作；</li><li>语句组使用缩进代替开始和结束大括号来组织；</li><li>变量或参数无需声明。</li></ul></li><li>提供了比 C 更多的错误检查</li><li>内置支持高级的数据结构类型，例如：灵活的数组和字典</li></ul></li><li><em>可扩展</em><ul><li>如果你会 C 语言编程便可以轻易地为解释器添加内置函数或模块</li><li>可以将 Python 解释器集成进某个 C 应用程序，并把它当作那个程序的扩展或命令行语言</li></ul></li></ul><h2 id="语言书写风格" tabindex="-1"><a class="header-anchor" href="#语言书写风格"><span>语言书写风格</span></a></h2><ul><li>程序结构风格：缩进风格</li><li>Python之禅：<code>import this</code></li><li>代码规范：<code>PEP8</code></li></ul><p>一些风格</p><ul><li>命名规范 <ul><li>类名：大驼峰命名法</li><li>实例名和模块名：下划线命名法</li></ul></li><li>空行 <ul><li>类中使用一个空行分割方法</li><li>模块中使用两个空行分割类</li><li>文件尾使用一个空行</li></ul></li></ul><h2 id="环境安装" tabindex="-1"><a class="header-anchor" href="#环境安装"><span>环境安装</span></a></h2><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h3><table><thead><tr><th>步骤</th><th>描述</th></tr></thead><tbody><tr><td>安装</td><td>大多数Linux计算机中都默认安装了Python，几乎不用安装</td></tr><tr><td>检查python2版本</td><td>终端执行<code>python</code></td></tr><tr><td>检查python3版本</td><td>终端执行<code>python3</code></td></tr><tr><td>安装文本编辑器</td><td>终端执行<code>sudo apt-get install geany</code></td></tr></tbody></table><h3 id="os-x" tabindex="-1"><a class="header-anchor" href="#os-x"><span>OS X</span></a></h3><p>略</p><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h3><table><thead><tr><th>步骤</th><th>描述</th></tr></thead><tbody><tr><td>安装</td><td>官网下载并安装：http://python.org/downloads/</td></tr><tr><td>终端中使用python</td><td>cmd执行<code>python</code></td></tr><tr><td>安装文本编辑器</td><td>Python自带<code>IDLE</code>（<em>Integrated Development and Learning Environment</em>）<br>该书介绍<code>Geany</code>，但我没用过</td></tr></tbody></table><h2 id="解释器与交互" tabindex="-1"><a class="header-anchor" href="#解释器与交互"><span>解释器与交互</span></a></h2><h3 id="调用解释器" tabindex="-1"><a class="header-anchor" href="#调用解释器"><span>调用解释器</span></a></h3><p>这点解释性语言特有，编译性语言没有</p><p>调用Python解释器的几种方法</p><ul><li>cmd输入<code>python</code>并回车，进入python模式。按<code>ctrl+z</code>或输出<code>exit()</code>或<code>quit()</code>退出解释器（Linux、Winodws等均可用）</li><li>使用安装python时自带的<code>IDEL</code></li><li>额外安装<code>Anaconda</code>并在终端模式输入<code>Jupyter Notebook</code>并回车</li></ul><h3 id="参数传递" tabindex="-1"><a class="header-anchor" href="#参数传递"><span>参数传递</span></a></h3><p>调用解释器时，脚本名和附加参数传入一个名为 <code>sys.argv</code> 的字符串列表。你能够获取这个列表通过执行 <code>import sys</code>，列表的长度大于等于1；</p><ul><li>没有给定脚本和参数时，它至少也有一个元素：<code>sys.argv[0]</code> 此时为空字符串</li><li>脚本名指定为 <code>&#39;-&#39;</code> （表示标准输入）时， <code>sys.argv[0]</code> 被设定为 <code>&#39;-&#39;</code></li><li>使用 <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-c" target="_blank" rel="noopener noreferrer">-c</a> <em>指令</em> 时，<code>sys.argv[0]</code> 被设定为 <code>&#39;-c&#39;</code></li><li>使用 <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-m" target="_blank" rel="noopener noreferrer">-m</a> <em>模块</em> 参数时，<code>sys.argv[0]</code> 被设定为指定模块的全名</li><li><a href="https://docs.python.org/3/using/cmdline.html#cmdoption-c" target="_blank" rel="noopener noreferrer">-c</a> <em>指令</em> 或者 <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-m" target="_blank" rel="noopener noreferrer">-m</a> <em>模块</em> 之后的参数不会被 Python 解释器的选项处理机制所截获，而是留在 <code>sys.argv</code> 中，供脚本命令操作</li></ul><h3 id="解释器环境" tabindex="-1"><a class="header-anchor" href="#解释器环境"><span>解释器环境</span></a></h3><p>默认情况下，Python 源文件是 UTF-8 编码。在此编码下，全世界大多数语言的字符可以同时用在字符串、标识符和注释中 — 尽管 Python 标准库仅使用 ASCII 字符做为标识符，这只是任何可移植代码应该遵守的约定。</p><p>你也可以为源文件指定不同的字符编码。为此，在 <code>#!</code> 行（首行）后插入至少一行特殊的注释行来定义源文件的编码:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -*- coding: encoding -*-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如有时会在Linux出现编码失败错误，也可以显式标明使用<code>utf-8</code>进行编码</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># coding=utf-8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h2><p><code>#</code>单行注释</p><p><code>&#39;&#39;&#39;</code>包括多行注释的内容</p>',50)]))}const d=l(o,[["render",a],["__file","01. 编程语言.html.vue"]]),s=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.html","title":"Python","lang":"zh-CN","frontmatter":{"description":"Python 目录 [toc] 语言起步 学习资料 进度笔记 Python官网手册编写（主要参考） 跳着看 看完了的： 《Python编程入门（第三版）Toby Donaldson著》 进度：看完了 书评：大学用书，书薄、很浅 《Python编程 从入门到实践》 进度：看完了教程，实战篇没看。书送给堂弟了 书评：简单入门，但不是很全，内容较浅。其中有很...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/01.%20Language/Python/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python 目录 [toc] 语言起步 学习资料 进度笔记 Python官网手册编写（主要参考） 跳着看 看完了的： 《Python编程入门（第三版）Toby Donaldson著》 进度：看完了 书评：大学用书，书薄、很浅 《Python编程 从入门到实践》 进度：看完了教程，实战篇没看。书送给堂弟了 书评：简单入门，但不是很全，内容较浅。其中有很..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"Python","slug":"python","link":"#python","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"语言起步","slug":"语言起步","link":"#语言起步","children":[{"level":2,"title":"学习资料","slug":"学习资料","link":"#学习资料","children":[{"level":3,"title":"进度笔记","slug":"进度笔记","link":"#进度笔记","children":[]},{"level":3,"title":"文档资源","slug":"文档资源","link":"#文档资源","children":[]},{"level":3,"title":"学习用书","slug":"学习用书","link":"#学习用书","children":[]}]},{"level":2,"title":"语言特点","slug":"语言特点","link":"#语言特点","children":[]},{"level":2,"title":"语言书写风格","slug":"语言书写风格","link":"#语言书写风格","children":[]},{"level":2,"title":"环境安装","slug":"环境安装","link":"#环境安装","children":[{"level":3,"title":"Linux","slug":"linux","link":"#linux","children":[]},{"level":3,"title":"OS X","slug":"os-x","link":"#os-x","children":[]},{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]}]},{"level":2,"title":"解释器与交互","slug":"解释器与交互","link":"#解释器与交互","children":[{"level":3,"title":"调用解释器","slug":"调用解释器","link":"#调用解释器","children":[]},{"level":3,"title":"参数传递","slug":"参数传递","link":"#参数传递","children":[]},{"level":3,"title":"解释器环境","slug":"解释器环境","link":"#解释器环境","children":[]}]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[]}]}],"git":{},"readingTime":{"minutes":6.11,"words":1832},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/01. 编程语言/01. 编程语言.md","excerpt":"\\n<h1>目录</h1>\\n<p>[toc]</p>\\n<h1>语言起步</h1>\\n<h2>学习资料</h2>\\n<h3>进度笔记</h3>\\n<ul>\\n<li>Python官网手册编写（<strong>主要参考</strong>）\\n<ul>\\n<li>跳着看</li>\\n</ul>\\n</li>\\n</ul>\\n<p>看完了的：</p>\\n<ul>\\n<li>《Python编程入门（第三版）Toby Donaldson著》\\n<ul>\\n<li>进度：看完了</li>\\n<li>书评：大学用书，书薄、很浅</li>\\n</ul>\\n</li>\\n<li>《Python编程 从入门到实践》\\n<ul>\\n<li>进度：看完了教程，实战篇没看。书送给堂弟了</li>\\n<li>书评：简单入门，但不是很全，内容较浅。其中有很多东西都没有涉及到\\n<ul>\\n<li>比如：python的类成员是实例共享还是创建副本、异步await、多线程等</li>\\n<li>没讲单一副本的类变量、也没讲私有方法和属性啊，太简略了</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/01. 编程语言/01. 编程语言.md","value":{"title":"01. 编程语言","path":"MdNote_Public/01. DesignAndDevelop/Develop/01. Language/Python/01. 编程语言/01. 编程语言.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,s as data};
