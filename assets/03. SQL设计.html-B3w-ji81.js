import{_ as e,c as i,e as n,o as t}from"./app-Dwsnbiv5.js";const a={};function o(r,l){return t(),i("div",null,l[0]||(l[0]=[n('<h1 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql"><span>MySQL</span></a></h1><h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><h1 id="sql设计" tabindex="-1"><a class="header-anchor" href="#sql设计"><span>SQL设计</span></a></h1><h2 id="数据库设计三范式" tabindex="-1"><a class="header-anchor" href="#数据库设计三范式"><span>数据库设计三范式</span></a></h2><p>设计表的依据。按照三范式设计的表减少数据冗余</p><ul><li>第一范式：任何一张表都应该有主键，且每个字段是原子性的<strong>不能再分</strong>（数据库表中不能出现重复记录） <ul><li>错误举例：不能出现一个联系方式的字段，内容为邮箱+电话</li><li>（隐含规则？：不能使用业务字段作为主键字段）</li></ul></li><li>第二范式：建立在第一范式的基础上，所有非主键字段完全依赖主键，<strong>不能产生部分依赖</strong><ul><li>错误举例：（学生编号PK, 学生姓名, 教师编号PK, 教师姓名），这里教师姓名依赖主键的一部分，即该范式也要求不要使用复合主键</li><li>修改方案：学生表、教师表、学生教师关系表（关系表两个外键）</li></ul></li><li>第三范式：建立在第二范式的基础上，所有非主键字段直接依赖主键，<strong>不能产生传递依赖</strong><ul><li>错误举例：（学生编号PK, 学生姓名, 班级编号, 班级名称），这里班级名称依赖编辑编号再依赖学生编号</li></ul></li><li>NF范式和第四范式？</li></ul><h2 id="一些常见关系的设计" tabindex="-1"><a class="header-anchor" href="#一些常见关系的设计"><span>一些常见关系的设计</span></a></h2><p>一些设计口诀</p><ul><li>多对多，三张表，关系表 两外键（例如 教师x学生）</li><li>一对多，两张表，多的表 加外键（例如 班级x学生）</li><li>一对一，有两种方案（例如 用户表） <ul><li>主键共享：例如用户登录表，用户详细信息表（id为PK+FK）</li><li>外键唯一：例如用户登录表，用户详细信息表（userid为Unique+FK）</li></ul></li></ul><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><p>在实际开发中，以满足客户的需求为主，有的时候会拿冗余换执行速度（没了笛卡尔积）</p>',11)]))}const c=e(a,[["render",o],["__file","03. SQL设计.html.vue"]]),p=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/02.%20MySQL/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/03.%20SQL%E8%AE%BE%E8%AE%A1.html","title":"MySQL","lang":"zh-CN","frontmatter":{"description":"MySQL 目录 SQL设计 数据库设计三范式 设计表的依据。按照三范式设计的表减少数据冗余 第一范式：任何一张表都应该有主键，且每个字段是原子性的不能再分（数据库表中不能出现重复记录） 错误举例：不能出现一个联系方式的字段，内容为邮箱+电话 （隐含规则？：不能使用业务字段作为主键字段） 第二范式：建立在第一范式的基础上，所有非主键字段完全依赖主键，不...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Platform/Web/04.%20%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/02.%20MySQL/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/03.%20SQL%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"MySQL"}],["meta",{"property":"og:description","content":"MySQL 目录 SQL设计 数据库设计三范式 设计表的依据。按照三范式设计的表减少数据冗余 第一范式：任何一张表都应该有主键，且每个字段是原子性的不能再分（数据库表中不能出现重复记录） 错误举例：不能出现一个联系方式的字段，内容为邮箱+电话 （隐含规则？：不能使用业务字段作为主键字段） 第二范式：建立在第一范式的基础上，所有非主键字段完全依赖主键，不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"MySQL","slug":"mysql","link":"#mysql","children":[]},{"level":1,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":1,"title":"SQL设计","slug":"sql设计","link":"#sql设计","children":[{"level":2,"title":"数据库设计三范式","slug":"数据库设计三范式","link":"#数据库设计三范式","children":[]},{"level":2,"title":"一些常见关系的设计","slug":"一些常见关系的设计","link":"#一些常见关系的设计","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]}]}],"git":{},"readingTime":{"minutes":1.54,"words":461},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/02. MySQL/个人总结/03. SQL设计.md","excerpt":"\\n<h1>目录</h1>\\n<h1>SQL设计</h1>\\n<h2>数据库设计三范式</h2>\\n<p>设计表的依据。按照三范式设计的表减少数据冗余</p>\\n<ul>\\n<li>第一范式：任何一张表都应该有主键，且每个字段是原子性的<strong>不能再分</strong>（数据库表中不能出现重复记录）\\n<ul>\\n<li>错误举例：不能出现一个联系方式的字段，内容为邮箱+电话</li>\\n<li>（隐含规则？：不能使用业务字段作为主键字段）</li>\\n</ul>\\n</li>\\n<li>第二范式：建立在第一范式的基础上，所有非主键字段完全依赖主键，<strong>不能产生部分依赖</strong>\\n<ul>\\n<li>错误举例：（学生编号PK, 学生姓名, 教师编号PK, 教师姓名），这里教师姓名依赖主键的一部分，即该范式也要求不要使用复合主键</li>\\n<li>修改方案：学生表、教师表、学生教师关系表（关系表两个外键）</li>\\n</ul>\\n</li>\\n<li>第三范式：建立在第二范式的基础上，所有非主键字段直接依赖主键，<strong>不能产生传递依赖</strong>\\n<ul>\\n<li>错误举例：（学生编号PK, 学生姓名, 班级编号, 班级名称），这里班级名称依赖编辑编号再依赖学生编号</li>\\n</ul>\\n</li>\\n<li>NF范式和第四范式？</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/02. MySQL/个人总结/03. SQL设计.md","value":{"title":"03. SQL设计","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Platform/Web/04. 后端/数据库/02. MySQL/个人总结/03. SQL设计.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{c as comp,p as data};
