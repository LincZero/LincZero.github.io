import{_ as r,e as l,g as n,o as t}from"./app-EuS-Ookm.js";const o="/assets/vuepress-architecture-overview-BDDRn3q3.png",i="/assets/vuepress-core-process-BRxIOBHJ.png",p={};function s(a,e){return t(),l("div",null,e[0]||(e[0]=[n('<h1 id="架构" tabindex="-1"><a class="header-anchor" href="#架构"><span>架构</span></a></h1><h2 id="概览" tabindex="-1"><a class="header-anchor" href="#概览"><span>概览</span></a></h2><p><img src="'+o+'" alt="vuepress-architecture-overview" loading="lazy"></p><p>上图展示了 VuePress 的简要架构：</p><p>首先是四个模块，Node端和Client端各两个：</p><ul><li>Node <ul><li>VuePress App</li><li>Bundler</li></ul></li><li>Client <ul><li>Temp Files</li><li>Vue App</li></ul></li></ul><p>他们的关系：</p><ul><li>Node App 会生成临时文件，包括页面、路由等。</li><li>Bundler 会将 Client App 和临时文件一起进行打包，就像处理一个普通的 Vue SPA 一样。</li></ul><p>作为开发者，你必须要意识到 VuePress 分为两个主要部分： <strong>Node App</strong> 和 <strong>Client App</strong> ，这一点对于开发插件和主题来说都十分重要。</p><ul><li>插件或者主题的入口文件会在 Node App 中被加载。</li><li>客户端文件会在 Client App 中被加载，也就是会被 Bundler 处理。比如组件、客户端配置文件等。</li></ul><h2 id="核心流程与-hooks" tabindex="-1"><a class="header-anchor" href="#核心流程与-hooks"><span>核心流程与 Hooks</span></a></h2><p><img src="'+i+'" alt="vuepress-core-process" loading="lazy"></p><p>上图展示了 VuePress 的核心流程以及 <a href="https://vuepress.github.io/zh/reference/plugin-api.html" target="_blank" rel="noopener noreferrer">插件 API</a> 的 Hooks ：</p><ol><li>init 阶段：</li></ol><ul><li>主题和插件会被加载。这意味着插件需要在初始化之前使用。</li><li>由于我们要使用 markdown-it 来解析 Markdown 文件，因此需要在加载页面文件之前创建 markdown-it 实例： <ul><li><a href="https://vuepress.github.io/zh/reference/plugin-api.html#extendsmarkdownoptions" target="_blank" rel="noopener noreferrer">extendsMarkdownOptions</a> Hook 会被调用，用以创建 markdown-it 实例。</li><li><a href="https://vuepress.github.io/zh/reference/plugin-api.html#extendsmarkdown" target="_blank" rel="noopener noreferrer">extendsMarkdown</a> Hook 会被调用，用以扩展 markdown-it 实例。</li></ul></li><li>页面文件会被加载： <ul><li><a href="https://vuepress.github.io/zh/reference/plugin-api.html#extendspageoptions" target="_blank" rel="noopener noreferrer">extendsPageOptions</a> Hook 会被调用，用以创建页面。</li><li><a href="https://vuepress.github.io/zh/reference/plugin-api.html#extendspage" target="_blank" rel="noopener noreferrer">extendsPage</a> Hook 会被调用，用以扩展页面对象。</li></ul></li></ul><ol start="2"><li>prepare 阶段：</li></ol><ul><li>临时文件会被生成，因此所有和客户端文件相关的 Hooks 会在此处调用。</li></ul><ol start="3"><li>dev / build 阶段：</li></ol><ul><li>Bundler 会被加载： <ul><li><a href="https://vuepress.github.io/zh/reference/plugin-api.html#extendsbundleroptions" target="_blank" rel="noopener noreferrer">extendsBundlerOptions</a> Hook 会被调用，用以生成 Bundler 的配置。</li><li><a href="https://vuepress.github.io/zh/reference/plugin-api.html#alias" target="_blank" rel="noopener noreferrer">alias</a> Hook 和 <a href="https://vuepress.github.io/zh/reference/plugin-api.html#define" target="_blank" rel="noopener noreferrer">define</a> Hook 会被用在 Bundler 的配置中，所以它们会在此处调用。</li></ul></li></ul>',19)]))}const d=r(p,[["render",s],["__file","01. 架构.html.vue"]]),c=JSON.parse('{"path":"/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/03.%20%E6%B7%B1%E5%85%A5/01.%20%E6%9E%B6%E6%9E%84.html","title":"架构","lang":"zh-CN","frontmatter":{"description":"架构 概览 vuepress-architecture-overview 上图展示了 VuePress 的简要架构： 首先是四个模块，Node端和Client端各两个： Node VuePress App Bundler Client Temp Files Vue App 他们的关系： Node App 会生成临时文件，包括页面、路由等。 Bundle...","head":[["meta",{"property":"og:url","content":"https://LincZero.github.io/MdNote_Public/01.%20DesignAndDevelop/Develop/04.%20Project/Type/Doc/MarkdwonAbout/01.%20Soft%20And%20Frame/VuePress2%20(Vue3)/%E5%AE%98%E7%BD%91%E6%96%87%E6%A1%A3/03.%20%E6%B7%B1%E5%85%A5/01.%20%E6%9E%B6%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"架构"}],["meta",{"property":"og:description","content":"架构 概览 vuepress-architecture-overview 上图展示了 VuePress 的简要架构： 首先是四个模块，Node端和Client端各两个： Node VuePress App Bundler Client Temp Files Vue App 他们的关系： Node App 会生成临时文件，包括页面、路由等。 Bundle..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"架构\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.56,"words":467},"filePathRelative":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/03. 深入/01. 架构.md","excerpt":"\\n<h2>概览</h2>\\n<p></p>\\n<p>上图展示了 VuePress 的简要架构：</p>\\n<p>首先是四个模块，Node端和Client端各两个：</p>\\n<ul>\\n<li>Node\\n<ul>\\n<li>VuePress App</li>\\n<li>Bundler</li>\\n</ul>\\n</li>\\n<li>Client\\n<ul>\\n<li>Temp Files</li>\\n<li>Vue App</li>\\n</ul>\\n</li>\\n</ul>\\n<p>他们的关系：</p>\\n<ul>\\n<li>Node App 会生成临时文件，包括页面、路由等。</li>\\n<li>Bundler 会将 Client App 和临时文件一起进行打包，就像处理一个普通的 Vue SPA 一样。</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/03. 深入/01. 架构.md","value":{"title":"01. 架构","path":"MdNote_Public/01. DesignAndDevelop/Develop/04. Project/Type/Doc/MarkdwonAbout/01. Soft And Frame/VuePress2 (Vue3)/官网文档/03. 深入/01. 架构.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{d as comp,c as data};
