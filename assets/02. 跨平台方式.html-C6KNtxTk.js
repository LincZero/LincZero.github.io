import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as r,a as n}from"./app-5ajJQ-aM.js";const s={},t=n(`<h1 id="跨平台方式" tabindex="-1"><a class="header-anchor" href="#跨平台方式"><span>跨平台方式</span></a></h1><p><mark><strong>（先看编译详解）</strong></mark></p><p>运行流程</p><ul><li>编程：.java .c .py</li><li>编译：将上面的编程代码转化为机器语言</li><li>运行：机器执行机器语言</li></ul><p>三种编译运行方式</p><ul><li>编译型</li><li>解释型</li><li>混合型（半编译半解释/编译解释型）</li></ul><p>不同语言的跨平台原理</p><ul><li><p>C/C++源代码（编译型）</p><ul><li><p><strong>Write Once Run Anywhere（一次编写，到处编译）</strong></p></li><li><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR
c/c++源代码 <span class="token arrow operator">--&gt;</span> Arm平台编译器 <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">整体翻译</span><span class="token arrow operator">--&gt;</span></span> 0011_二进制机器指令 <span class="token arrow operator">--&gt;</span> 手机运行
c/c++源代码 <span class="token arrow operator">--&gt;</span> x86平台编译器 <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">整体翻译</span><span class="token arrow operator">--&gt;</span></span> 0101_二进制机器指令 <span class="token arrow operator">--&gt;</span> 电脑运行
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>Python源代码（解释型）</p><ul><li><p><strong>Write Once Run Anywhere（一次编写，到处运行）</strong></p></li><li><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR
Python源代码 <span class="token arrow operator">--&gt;</span> Arm平台编译器 <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">按行翻译</span><span class="token arrow operator">--&gt;</span></span> 0011_arm平台
Python源代码 <span class="token arrow operator">--&gt;</span> x86平台编译器 <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">按行翻译</span><span class="token arrow operator">--&gt;</span></span> 0101_x86平台
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>Java源代码（混合型）</p><ul><li><p><strong>Write Once Run Anywhere（一次编译，到处运行）</strong></p></li><li><p>通过虚拟机实现的，Java语言运行在虚拟机而非操作系统里。只要针对不同的操作系统安装不同的虚拟机即可</p></li><li><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR
Java源代码 <span class="token arrow operator">--&gt;</span> 二进制字节码<span class="token text string">[.class二进制字节码]</span>
二进制字节码<span class="token arrow operator">--&gt;</span> Arm平台执行器 <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">翻译</span><span class="token arrow operator">--&gt;</span></span> 虚拟机1 <span class="token arrow operator">--&gt;</span> 0011_Arm处理器电脑
二进制字节码 <span class="token arrow operator">--&gt;</span> x86平台执行器 <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">翻译</span><span class="token arrow operator">--&gt;</span></span> 虚拟机2 <span class="token arrow operator">--&gt;</span> 0101_x86处理器电脑
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul>`,8),o=[t];function l(p,i){return e(),r("div",null,o)}const m=a(s,[["render",l],["__file","02. 跨平台方式.html.vue"]]),u=JSON.parse('{"path":"/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Different/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/02.%20%E8%B7%A8%E5%B9%B3%E5%8F%B0%E6%96%B9%E5%BC%8F.html","title":"跨平台方式","lang":"zh-CN","frontmatter":{"description":"跨平台方式 （先看编译详解） 运行流程 编程：.java .c .py 编译：将上面的编程代码转化为机器语言 运行：机器执行机器语言 三种编译运行方式 编译型 解释型 混合型（半编译半解释/编译解释型） 不同语言的跨平台原理 C/C++源代码（编译型） Write Once Run Anywhere（一次编写，到处编译） Python源代码（解释型） ...","head":[["meta",{"property":"og:url","content":"http://192.168.0.101:8080/MdNote_Public/01.%20%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%94%9F%E4%BA%A7/Develop/01.%20Language/Different/01.%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/02.%20%E8%B7%A8%E5%B9%B3%E5%8F%B0%E6%96%B9%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Linc 的小站"}],["meta",{"property":"og:title","content":"跨平台方式"}],["meta",{"property":"og:description","content":"跨平台方式 （先看编译详解） 运行流程 编程：.java .c .py 编译：将上面的编程代码转化为机器语言 运行：机器执行机器语言 三种编译运行方式 编译型 解释型 混合型（半编译半解释/编译解释型） 不同语言的跨平台原理 C/C++源代码（编译型） Write Once Run Anywhere（一次编写，到处编译） Python源代码（解释型） ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincZero"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"跨平台方式\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincZero\\",\\"url\\":\\"https://github.com/LincZero/\\"}]}"]]},"headers":[{"level":1,"title":"跨平台方式","slug":"跨平台方式","link":"#跨平台方式","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.16,"words":348},"filePathRelative":"MdNote_Public/01. 设计开发与数据生产/Develop/01. Language/Different/01. 编程语言/02. 跨平台方式.md","autoDesc":true}');export{m as comp,u as data};
